{"version":3,"file":"main.js","mappings":"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","sources":["./projects/reactome-cytoscape-style/src/lib/properties-utils.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/diagram-iterator/diagram-iterator.component.ts","./src/app/diagram-iterator/diagram-iterator.component.html","./src/app/diagram/diagram.component.ts","./src/app/diagram/diagram.component.html","./src/app/guard/legacy.guard.ts","./src/app/interactors/common/overlay-resource.ts","./src/app/interactors/custom-interactor-dialog/custom-interactor-dialog.component.ts","./src/app/interactors/custom-interactor-dialog/custom-interactor-dialog.component.html","./src/app/interactors/layout/interactors-layout.ts","./src/app/interactors/model/interactor-entity.model.ts","./src/app/interactors/services/interactor.service.ts","./src/app/services/analysis.service.ts","./src/app/services/dark.service.ts","./src/app/services/diagram-state.service.ts","./src/app/services/diagram.service.ts","./src/app/services/utils.ts","./src/environments/environment.development.ts","./src/main.ts","./projects/reactome-cytoscape-style/src/lib/drawer/shape/gene-shape.ts","./projects/reactome-cytoscape-style/src/lib/drawer/shape/molecule-shape.ts","./projects/reactome-cytoscape-style/src/lib/drawer/shape/protein-shape.ts","./projects/reactome-cytoscape-style/src/lib/drawer/shape/rna-shape.ts","./projects/reactome-cytoscape-style/src/lib/drawer/shape/gee-shape.ts","./projects/reactome-cytoscape-style/src/lib/drawer/shape/complex-shape.ts","./projects/reactome-cytoscape-style/src/lib/drawer/shape/entity-sets-shape.ts","./projects/reactome-cytoscape-style/src/lib/drawer/shape/cell-shape.ts","./projects/reactome-cytoscape-style/src/lib/drawer/shape/interacting-pathway-shape.ts","./projects/reactome-cytoscape-style/src/lib/drawer/shape/disease-interactor-shape.ts","./projects/reactome-cytoscape-style/src/lib/drawer/shape/sub-pathway-shape.ts","./projects/reactome-cytoscape-style/src/lib/drawer/image-builder.ts","./projects/reactome-cytoscape-style/src/lib/properties.ts","./projects/reactome-cytoscape-style/src/lib/model/reactome-event.model.ts","./projects/reactome-cytoscape-style/src/lib/interactivity.ts","./projects/reactome-cytoscape-style/src/lib/style.ts","./projects/reactome-cytoscape-style/src/public-api.ts","./projects/reactome-cytoscape-style/src/reactome-cytoscape-style.ts"],"sourcesContent":["import {Properties} from \"./properties\";\n\nexport type Provider<T> = () => T;\n\nexport type Property<T> = T | Provider<T>;\n\n/**\n * This is a guard function to check if a property is a Provider function, or a direct value\n *\n * @param property The value to check\n * @return true if is a Provider function\n */\nexport function isProvider<T>(property: Property<T>): property is Provider<T> {\n  return (property as Provider<T>).apply !== undefined;\n}\n\n/**\n * This function extracts the value from a property, and if the property is a Provider<T>, it calls the property function to get the actual value.\n *\n * @param property A value of type Property<T>.\n */\nexport function extract<T>(property: Property<T>): T {\n  return isProvider(property) ? property() : property;\n}\n\nexport type PropertiesType = {\n  [k: string]: Property<any>\n}\n\nexport type Defaultable<T, K extends keyof T = never> = T & {\n  setDefault<KA extends keyof T, VA extends T[KA]>(key: KA, defaultValue: VA): Defaultable<T, K | KA>;\n} & {\n  [P in K]-?: T[P];\n}\n\n\nexport function defaultable<T>(object: T): Defaultable<T> {\n  const defaultable = (object) as Defaultable<T>;\n\n  defaultable.setDefault = function <K extends keyof T, KA extends keyof T, VA extends T[KA]>(this: Defaultable<T, K>, key: KA, defaultValue: VA): Defaultable<T, K | KA> {\n    if (!object[key]) object[key] = defaultValue;\n    return defaultable as Defaultable<T, K | KA>;\n  };\n\n  return defaultable;\n}\n\nexport const propertyExtractor = (properties: Properties) => <G extends keyof Properties, K extends keyof Properties[G]>(group: G, key: K) => properties[group][key]\nexport const propertyMapper = (properties: Properties) => <G extends keyof Properties, K extends keyof Properties[G], T extends Properties[G][K] extends Property<infer X> ? X : never, M extends (t: T) => any>(group: G, key: K, mapper: M) => mapper(extract(properties[group][key]))\n\n\n","import {RouterModule, Routes} from \"@angular/router\";\nimport {NgModule} from \"@angular/core\";\nimport {DiagramComponent} from \"./diagram/diagram.component\";\nimport {DiagramIteratorComponent} from \"./diagram-iterator/diagram-iterator.component\";\nimport {legacyGuard} from \"./guard/legacy.guard\";\n\nexport const routes: Routes = [\n  {path: 'iterate', component: DiagramIteratorComponent},\n  {path: 'iterate/:id', component: DiagramIteratorComponent, },\n  {path: ':id', component: DiagramComponent},\n  {path: '**', component: DiagramComponent,  canActivate: [legacyGuard], runGuardsAndResolvers: 'always'}\n]\n\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, {bindToComponentInputs: true})],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import {Component} from '@angular/core';\n\n@Component({\n  selector: 'cr-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'PathwayBrowser'\n}\n","<router-outlet></router-outlet>\n","import {NgModule} from '@angular/core';\nimport {BrowserModule} from '@angular/platform-browser';\n\nimport {AppComponent} from './app.component';\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\nimport {CommonModule} from \"@angular/common\";\nimport {HttpClientModule} from \"@angular/common/http\";\nimport {DiagramComponent} from './diagram/diagram.component';\nimport {RouterOutlet} from \"@angular/router\";\nimport {AppRoutingModule} from \"./app-routing.module\";\nimport {BrowserAnimationsModule, NoopAnimationsModule} from '@angular/platform-browser/animations';\nimport {MatButtonModule} from \"@angular/material/button\";\nimport {MatSlideToggleModule} from \"@angular/material/slide-toggle\";\nimport {CdkDrag, CdkDragHandle} from \"@angular/cdk/drag-drop\";\nimport {DiagramIteratorComponent} from './diagram-iterator/diagram-iterator.component';\nimport {MatInputModule} from \"@angular/material/input\";\nimport {MatSelectModule} from \"@angular/material/select\";\nimport {MatProgressSpinnerModule} from \"@angular/material/progress-spinner\";\nimport {CustomInteractorDialogComponent } from './interactors/custom-interactor-dialog/custom-interactor-dialog.component';\nimport {MatDialogModule} from \"@angular/material/dialog\";\nimport {MatTabsModule} from \"@angular/material/tabs\";\nimport {MatCheckboxModule} from \"@angular/material/checkbox\";\nimport {MatRadioModule} from \"@angular/material/radio\";\nimport {NgxMatFileInputModule} from \"@angular-material-components/file-input\";\nimport {MatIconModule} from \"@angular/material/icon\";\nimport {MatListModule} from \"@angular/material/list\";\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    DiagramComponent,\n    DiagramIteratorComponent,\n    CustomInteractorDialogComponent\n  ],\n    imports: [\n        BrowserModule,\n        FormsModule,\n        CommonModule,\n        HttpClientModule,\n        RouterOutlet,\n        AppRoutingModule,\n        // NoopAnimationsModule,\n        MatButtonModule,\n        MatSlideToggleModule,\n        CdkDragHandle,\n        CdkDrag,\n        MatInputModule,\n        MatSelectModule,\n        ReactiveFormsModule,\n        MatProgressSpinnerModule,\n        BrowserAnimationsModule,\n        MatDialogModule,\n        MatTabsModule,\n        MatCheckboxModule,\n        MatRadioModule,\n        NgxMatFileInputModule,\n        MatIconModule,\n        MatListModule\n    ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","import {AfterViewInit, Component, ViewChild} from '@angular/core';\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {DiagramComponent} from \"../diagram/diagram.component\";\nimport {combineLatest} from \"rxjs\";\n\n@Component({\n  selector: 'cr-diagram-iterator',\n  templateUrl: './diagram-iterator.component.html',\n  styleUrls: ['./diagram-iterator.component.scss']\n})\nexport class DiagramIteratorComponent implements AfterViewInit {\n\n  @ViewChild('diagram')\n  diagram!: DiagramComponent;\n\n  diagramId: string = '';\n\n  diagramIndex: number = 0;\n  diagramIds: string[] = [];\n\n  constructor(private route: ActivatedRoute, private client: HttpClient, private router: Router) {\n  }\n\n  ngAfterViewInit(): void {\n    combineLatest([\n      this.route.params,\n      this.client.get('/assets/data/diagrams-dev-no-ehld.txt', {responseType: \"text\"})\n    ]).subscribe(([params, diagrams]) => {\n      this.diagramIds = diagrams.split('\\n').filter(s => s.length !== 0);\n      this.diagramId = this.diagramIds[0];\n    })\n  }\n\n  next() {\n    this.diagramIndex++;\n    if (this.diagramIndex > this.diagramIds.length - 1) this.diagramIndex = 0;\n    this.diagramId = this.diagramIds[this.diagramIndex];\n  }\n  previous() {\n    this.diagramIndex--;\n    if (this.diagramIndex < 0) this.diagramIndex = this.diagramIds.length - 1;\n    this.diagramId = this.diagramIds[this.diagramIndex];\n  }\n\n}\n","<div (keydown.arrowLeft)=\"previous()\" (keydown.arrowRight)=\"next()\">\n  <cr-diagram #diagram [id]=\"diagramId\"></cr-diagram>\n\n  <button mat-raised-button (click)=\"previous()\">Previous</button>\n  <mat-form-field>\n    <mat-label>Diagram ID</mat-label>\n    <input matInput placeholder=\"R-HSA-XXXXXXXX\" [(ngModel)]=\"diagramId\">\n  </mat-form-field>\n  <button mat-raised-button (click)=\"next()\">Next</button>\n\n</div>\n\n\n","import {\n  AfterViewInit,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  Input,\n  OnChanges,\n  Output,\n  SimpleChanges,\n  ViewChild\n} from '@angular/core';\nimport {DiagramService} from \"../services/diagram.service\";\nimport cytoscape from \"cytoscape\";\nimport {Interactivity, ReactomeEvent, ReactomeEventTypes, Style} from \"reactome-cytoscape-style\";\nimport {DarkService} from \"../services/dark.service\";\nimport {InteractorService} from \"../interactors/services/interactor.service\";\nimport {delay, distinctUntilChanged, filter, forkJoin, Observable, share, Subject, take, tap} from \"rxjs\";\nimport {PsicquicResource, Resource} from \"../interactors/model/interactor-entity.model\";\nimport {MatSelect} from \"@angular/material/select\";\nimport {FormControl} from \"@angular/forms\";\nimport {DiagramStateService} from \"../services/diagram-state.service\";\nimport {UntilDestroy} from \"@ngneat/until-destroy\";\nimport {MatDialog} from \"@angular/material/dialog\";\nimport {\n  CustomInteractorDialogComponent\n} from \"../interactors/custom-interactor-dialog/custom-interactor-dialog.component\";\nimport {ResourceType} from \"../interactors/common/overlay-resource\";\nimport {extract} from \"../../../projects/reactome-cytoscape-style/src/lib/properties-utils\";\nimport {AnalysisService, Examples} from \"../services/analysis.service\";\nimport {Graph} from \"../model/graph.model\";\nimport {isDefined} from \"../services/utils\";\nimport {Analysis} from \"../model/analysis.model\";\nimport {Router} from \"@angular/router\";\n\nimport {brewer, Scale, scale} from \"chroma-js\";\nimport {group, style} from \"@angular/animations\";\nimport {MatFormField} from \"@angular/material/form-field\";\n\ntype Palette = keyof typeof brewer;\n\ntype PaletteGroup = 'sequential' | 'diverging' | 'continuous';\n\n// type PaletteSummary = { name: Palette, scale: Scale, gradient: string };\n\nexport class PaletteSummary {\n  private readonly _scale: Scale;\n  scale: Scale;\n  gradient: string;\n\n  constructor(private name: Palette) {\n    this._scale = scale(name).mode('oklab')\n    this.scale = this._scale\n    this.gradient = `linear-gradient(to right in oklab, ${brewer[this.name].join(', ')})`\n  }\n\n  classes(n: number) {\n    if (n > 0) {\n      this.scale = this._scale.classes(n)\n      this.gradient = `linear-gradient(to right in oklab, ${this.scale.colors(n).map((c, i) => `${c} ${i / n * 100}%, ${c} ${(i + 1) / n * 100}%`).join(', ')})`\n    } else {\n      this.scale = this._scale\n      this.gradient = `linear-gradient(to right in oklab, ${brewer[this.name].join(', ')})`\n    }\n  }\n\n  domain(min: number, max: number) {\n    this.scale = this.scale.domain([min, max])\n  }\n}\n\n@UntilDestroy({checkProperties: true})\n@Component({\n  selector: 'cr-diagram',\n  templateUrl: './diagram.component.html',\n  styleUrls: ['./diagram.component.scss']\n})\nexport class DiagramComponent implements AfterViewInit, OnChanges {\n  title = 'pathway-browser';\n  @ViewChild('cytoscape') cytoscapeContainer?: ElementRef<HTMLDivElement>;\n  @ViewChild('cytoscapeCompare') compareContainer?: ElementRef<HTMLDivElement>;\n  @ViewChild('legend') legendContainer?: ElementRef<HTMLDivElement>;\n  @ViewChild('psicquicSelect') psicquicSelect?: MatSelect;\n\n  comparing: boolean = false;\n  fit = true;\n  psicquicResources: PsicquicResource[] = []\n  selectedPsicquicResource = new FormControl();\n  isDataFromPsicquicLoading: boolean = false;\n  resourceTokens: Resource[] = [];\n  readonly ResourceType = ResourceType;\n\n\n  palettes: { name: PaletteGroup, palettes: Palette[], valid: boolean }[] = [\n    {\n      name: 'sequential', valid: false, palettes: [\n        'Greys', 'Purples', 'Blues', 'Greens', 'Oranges', 'Reds',\n        'BuPu', 'RdPu', 'PuRd',\n        'GnBu', 'YlGnBu', 'PuBu', 'PuBuGn',\n        'BuGn', 'YlGn',\n        'YlOrBr', 'OrRd', 'YlOrRd'\n      ]\n    },\n    {name: 'diverging', valid: true, palettes: ['RdYlGn', 'RdYlBu', 'RdGy', 'RdBu', 'PuOr', 'PRGn', 'PiYG', 'BrBG']},\n    {name: 'continuous', valid: false, palettes: ['Spectral', 'Viridis']},\n  ]\n\n\n  constructor(private diagram: DiagramService,\n              public dark: DarkService,\n              private interactorsService: InteractorService,\n              private state: DiagramStateService,\n              public dialog: MatDialog,\n              private cdr: ChangeDetectorRef,\n              private analysis: AnalysisService,\n              private router: Router) {\n  }\n\n  cy!: cytoscape.Core;\n  reactomeStyle!: Style;\n  cyCompare!: cytoscape.Core;\n  reactomeStyleCompare!: Style;\n  legend!: cytoscape.Core;\n\n  cys: cytoscape.Core[] = [];\n\n  paletteOptions: Map<Palette, PaletteSummary> = new Map(Object.keys(brewer)\n    .filter(name => name.toLowerCase() !== name)\n    .map(name => ([name as Palette, new PaletteSummary(name as Palette)])));\n\n  palette: PaletteSummary = this.paletteOptions.get('RdBu')!;\n\n\n  @Input('id') diagramId: string = '';\n\n  ngOnChanges(changes: SimpleChanges): void {\n    console.log(this.paletteOptions)\n    if (changes['diagramId']) this.loadDiagram();\n  }\n\n\n  ngAfterViewInit(): void {\n    this.dark.$dark.subscribe(this.updateStyle.bind(this))\n\n    const container = this.cytoscapeContainer!.nativeElement;\n    const compareContainer = this.compareContainer!.nativeElement;\n    const legendContainer = this.legendContainer!.nativeElement;\n\n    Object.values(ReactomeEventTypes).forEach((type) => {\n      container.addEventListener(type, (e) => this._reactomeEvents$.next(e as ReactomeEvent))\n      compareContainer.addEventListener(type, (e) => this._reactomeEvents$.next(e as ReactomeEvent))\n      legendContainer.addEventListener(type, (e) => this._reactomeEvents$.next(e as ReactomeEvent))\n    })\n\n    this.reactomeStyle = new Style(container);\n\n    this.underlayPadding = extract(this.reactomeStyle.properties.shadow.padding)\n\n    this.diagram.getLegend()\n      .subscribe(legend => {\n        this.legend = cytoscape({\n          container: legendContainer,\n          elements: legend,\n          style: this.reactomeStyle?.getStyleSheet(),\n          layout: {name: \"preset\"},\n          boxSelectionEnabled: false\n        });\n        this.reactomeStyle?.bindToCytoscape(this.legend);\n\n        this.legend.zoomingEnabled(false);\n        this.legend.panningEnabled(false);\n        this.legend.minZoom(0)\n        const bb = this.legend.elements().boundingBox();\n        // this.ratio = bb.w / bb.h;\n      });\n\n    this.loadDiagram();\n\n    this.getPsicquicResources();\n  }\n\n  loadDiagram() {\n    if (!this.cytoscapeContainer) return;\n\n    const container = this.cytoscapeContainer!.nativeElement;\n\n    this.diagram.getDiagram(this.diagramId)\n      .subscribe(elements => {\n        this.comparing = elements.nodes.some(node => node.data['isFadeOut']) || elements.edges.some(edge => edge.data['isFadeOut'])\n        this.cy = cytoscape({\n          container: container,\n          elements: elements,\n          style: this.reactomeStyle?.getStyleSheet(),\n          layout: {name: \"preset\"},\n        });\n        this.cys[0] = this.cy;\n        this.reactomeStyle.bindToCytoscape(this.cy);\n        this.reactomeStyle.clearCache();\n        this.cy.on('dblclick', '.Pathway', (e) => this.router.navigate([e.target.data('graph.stId')], {queryParamsHandling: \"preserve\"}))\n\n        this.loadCompare(elements, container);\n\n        this.stateToDiagram();\n      })\n  }\n\n  private initialiseReplaceElements() {\n    if (this.comparing)\n      this.cy.batch(() => {\n        this.cy.elements('[!isBackground]').style('visibility', 'hidden')\n        this.cy.edges('.shadow').style('underlay-padding', 0)\n        this.lastIndex = 0;\n        this.updateReplacementVisibility();\n        this.cy.elements('.Compartment').style('visibility', 'visible')\n      })\n  }\n\n  private loadCompare(elements: cytoscape.ElementsDefinition, container: HTMLDivElement) {\n    const getPosition = (e: cytoscape.SingularElementArgument) => e.is('.Shadow') ? e.data('triggerPosition') : e.boundingBox().x1;\n    if (this.comparing) {\n      this.cy.elements('[!isBackground]').style('visibility', 'hidden')\n      this.replacedElements = this.cy!\n        .elements('[?replacedBy]')\n        .add('[?isCrossed]')\n        .sort((a, b) => getPosition(a) - getPosition(b))\n        .style('visibility', 'hidden')\n        .toArray();\n\n      this.replacedElementsPosition = this.replacedElements.map(getPosition);\n\n\n      this.cy.on('add', e => {\n        const addedElement = e.target;\n        if (addedElement.data('replacedBy') || addedElement.data('isCrossed')) {\n          const x = getPosition(addedElement);\n          let index = this.replacedElementsPosition.findIndex(x1 => x1 >= x);\n          if (index === -1) index = this.replacedElements.length;\n\n          this.replacedElements.splice(index, 0, addedElement);\n          this.replacedElementsPosition.splice(index, 0, x);\n          addedElement.style('visibility', 'hidden');\n        }\n      })\n\n      this.cy.on('remove', e => {\n        const removedElement = e.target;\n        const index = this.replacedElements.indexOf(removedElement);\n        if (index > -1) {\n          this.replacedElements.splice(index, 1);\n          this.replacedElementsPosition.splice(index, 1);\n        }\n      })\n\n      const compareContainer = this.compareContainer!.nativeElement;\n      this.cyCompare = cytoscape({\n        container: compareContainer,\n        elements: elements,\n        style: this.reactomeStyle?.getStyleSheet(),\n        layout: {name: \"preset\"},\n      });\n      this.cys[1] = this.cyCompare;\n\n\n      this.cyCompare.elements('[?isFadeOut]').remove();\n      this.cyCompare.elements('.Compartment').remove();\n      this.cy!.nodes('.crossed').removeClass('crossed');\n\n      this.cyCompare!.on('viewport', () => this.syncViewports(this.cyCompare, compareContainer, this.cy, container))\n      this.cy!.on('viewport', () => this.syncViewports(this.cy, container, this.cyCompare, compareContainer))\n\n      this.reactomeStyleCompare = new Style(compareContainer);\n      this.reactomeStyleCompare?.bindToCytoscape(this.cyCompare);\n      this.cyCompare.minZoom(this.cy!.minZoom())\n      this.cyCompare.maxZoom(this.cy!.maxZoom())\n\n      setTimeout(() => {\n        this.syncViewports(this.cy!, container, this.cyCompare, compareContainer)\n        this.initialiseReplaceElements();\n      })\n    }\n  }\n\n  readonly classRegex = /class:(\\w+)([!.]drug)?/\n\n  getElements(tokens: (string | number)[], cy: cytoscape.Core): cytoscape.CollectionArgument {\n    let elements: cytoscape.Collection;\n\n    elements = cy.collection()\n    tokens.forEach(token => {\n      if (typeof token === 'string') {\n        if (token.startsWith('R-')) {\n          elements = elements.or(`[graph.stId=\"${token}\"]`)\n        } else {\n          const matchArray = token.match(this.classRegex);\n          if (matchArray) {\n            const [_, clazz, drug] = matchArray;\n            if (drug === '.drug') { // Drug physical entity\n              elements = elements.or(`.${clazz}`).and('.drug');\n            } else if (drug === '!drug') { // Non drug physical entity\n              elements = elements.or(`.${clazz}`).not('.drug');\n            } else { // Reactions\n              elements = elements.or(`.${clazz}`);\n              elements = elements.or(elements.nodes('.reaction').connectedEdges());\n            }\n          } else {\n            elements = elements.or(`[acc=\"${token}\"]`)\n          }\n        }\n      } else {\n        elements = elements.or(`[acc=\"${token}\"]`).or(`[reactomeId=\"${token}\"]`)\n      }\n    });\n    return elements;\n  }\n\n  select(tokens: (string | number)[], cy: cytoscape.Core): cytoscape.CollectionArgument {\n    let selected = this.getElements(tokens, cy);\n    selected.select();\n    if (\"connectedNodes\" in selected) {\n      selected = selected.add(selected.connectedNodes());\n    }\n\n    if (this.fit) {\n      cy.fit(selected, 100)\n      this.fit = false;\n    }\n\n    return selected;\n  }\n\n  flag(accs: (string | number)[], cy: cytoscape.Core): cytoscape.CollectionArgument {\n    return this.flagElements(this.getElements(accs, cy), cy)\n  }\n\n  flagElements(toFlag: cytoscape.CollectionArgument, cy: cytoscape.Core): cytoscape.CollectionArgument {\n    const shadowNodes = cy.nodes('.Shadow');\n    const shadowEdges = cy.edges('[?color]');\n    const trivials = cy.elements('.trivial');\n\n    if (toFlag.nonempty()) {\n      cy.batch(() => {\n        this.setSubPathwayVisibility(false, cy);\n        cy.elements().removeClass('flag')\n        toFlag.addClass('flag')\n          .edges().style({'underlay-opacity': 1})\n      })\n\n      return toFlag\n    } else {\n      cy.batch(() => {\n        this.setSubPathwayVisibility(true, cy);\n        cy.elements().removeClass('flag');\n      })\n\n      return cy.collection()\n    }\n  }\n\n  setSubPathwayVisibility(visible: boolean, cy: cytoscape.Core) {\n    const shadowNodes = cy.nodes('.Shadow');\n    const shadowEdges = cy.edges('[?color]');\n    const trivials = cy.elements('.trivial');\n\n    if (visible) {\n      shadowNodes.style({opacity: 1})\n      trivials.style({opacity: 1})\n      shadowEdges.addClass('shadow')\n      cy.on('zoom', cy.data('reactome').interactivity.onZoom.shadow)\n      cy.data('reactome').interactivity.onZoom.shadow()\n    } else {\n      shadowNodes.style({opacity: 0})\n      shadowEdges.removeClass('shadow')\n      cy.off('zoom', cy.data('reactome').interactivity.onZoom.shadow)\n      trivials.style({opacity: 1})\n      cy.edges().style({'underlay-opacity': 0})\n    }\n  }\n\n\n  applyEvent(event: ReactomeEvent, affectedElements: cytoscape.NodeCollection | cytoscape.EdgeCollection) {\n    switch (event.type) {\n      case ReactomeEventTypes.hover:\n        affectedElements.addClass('hover');\n        break;\n      case ReactomeEventTypes.leave:\n        affectedElements.removeClass('hover');\n        break;\n      case ReactomeEventTypes.select:\n        affectedElements.select();\n        break;\n      case ReactomeEventTypes.unselect:\n        affectedElements.unselect();\n        break;\n    }\n  }\n\n\n  ratio = 0.384;\n\n  replacedElements!: cytoscape.SingularElementArgument[];\n  replacedElementsPosition: number[] = [];\n\n  lastIndex = 0;\n  underlayPadding = 0;\n\n  private updateReplacementVisibility() {\n\n    // // Calculate the position of the element that is to the right of the separation\n\n    const extent = this.cyCompare!.extent();\n    let limitIndex = this.replacedElementsPosition.findIndex(x1 => x1 >= extent.x1);\n    if (limitIndex === -1) limitIndex = this.replacedElements.length;\n\n    /// Alternative calculation. In theory more optimised, but seems worse when console is opened for some reason\n\n    // const currentPos = this.cyCompare!.extent().x1;\n    // let limitIndex = this.lastIndex;\n    // let i = this.lastIndex;\n    // if (currentPos > this.lastPosition) { // Dragging to the right\n    //   while (i >= 0 && this.replacedElementsPosition[i] < currentPos) i++;\n    //   limitIndex = i;\n    // } else if (currentPos < this.lastPosition) { // Dragging to the left\n    //   do i--;\n    //   while (i < this.replacedElementsPosition.length  && this.replacedElementsPosition[i] >= currentPos)\n    //   limitIndex = i+1;\n    // }\n    //\n    // this.lastPosition = currentPos;\n    // ---------\n\n    if (this.lastIndex !== limitIndex) {\n      // If at least one element is switched from left to right\n      if (limitIndex < this.lastIndex) this.replacedElements.slice(limitIndex, this.lastIndex)\n        .map(e => e.style('visibility', 'hidden')) // Hide the range of elements\n        .filter(e => e.is('.Shadow')) // And if it is an shadow\n        .forEach(shadow => shadow.data('edges').style('underlay-padding', 0)) // Hide as well the associated reaction underlay\n      // If at least one element is switched from right to left\n      if (limitIndex > this.lastIndex) this.replacedElements.slice(this.lastIndex, limitIndex)\n        .map(e => e.style('visibility', 'visible')) // Show the range of elements\n        .filter(e => e.is('.Shadow')) // And if it is an shadow\n        .forEach(shadow => shadow.data('edges').style('underlay-padding', this.underlayPadding)) // Show as well the associated reaction underlay\n    }\n    this.lastIndex = limitIndex\n  }\n\n  syncing = false;\n  syncViewports = (source: cytoscape.Core, sourceContainer: HTMLElement, target: cytoscape.Core, targetContainer: HTMLElement) => {\n    if (this.syncing) return;\n    this.syncing = true;\n    this.updateReplacementVisibility();\n\n    const position = {...source.pan()};\n    const sourceX = sourceContainer.getBoundingClientRect().x;\n    const targetX = targetContainer.getBoundingClientRect().x;\n    position.x += sourceX - targetX;\n    target.viewport({\n      zoom: source.zoom(),\n      pan: position,\n    })\n    this.syncing = false;\n  };\n\n\n  getInteractors(resource: string) {\n    const isCustom = this.interactorsService.isCustomResource(resource, this.psicquicResources)\n    const isPsicquic = this.psicquicResources.filter(pr => pr.name != ResourceType.STATIC).some(r => r.name === this.state.get('overlay'))\n    this.cys.forEach(cy => {\n      if (!resource) return;\n\n      if (!isPsicquic) {\n        this.selectedPsicquicResource.reset();\n      }\n\n      if (!isCustom) {\n        this.interactorsService.getInteractorData(cy, resource).subscribe(interactors => {\n          this.interactorsService.addInteractorOccurrenceNode(interactors, cy, resource);\n          this.initialiseReplaceElements(); // Avoid floating occurrence nodes when in compare mode\n        });\n      }\n      this.state.set('overlay', resource)\n    })\n  }\n\n  getPsicquicResources() {\n    this.interactorsService.getPsicquicResources().subscribe(resources => {\n      this.psicquicResources = resources;\n    });\n  }\n\n  onPsicquicResourceChange(selectedResource: string) {\n    this.isDataFromPsicquicLoading = true;\n    this.interactorsService.getInteractorData(this.cy, selectedResource).subscribe(interactors => {\n      this.interactorsService.addInteractorOccurrenceNode(interactors, this.cy, selectedResource)\n      this.isDataFromPsicquicLoading = false;\n      this.psicquicSelect?.close();\n      this.state.set('overlay', selectedResource)\n    })\n  }\n\n  openCustomInteractorDialog() {\n    const dialogRef = this.dialog.open(CustomInteractorDialogComponent, {\n      data: {cy: this.cy},\n      restoreFocus: false // Deselect button when closing\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      const resource = dialogRef.componentInstance.resource\n      if (resource.token) {\n        this.resourceTokens!.push(resource)\n        this.state.set('overlay', resource.token.summary.token)\n      }\n      this.cdr.detectChanges();\n    })\n  }\n\n  deleteResource(resource: Resource) {\n    const index = this.resourceTokens!.indexOf(resource);\n    if (index !== -1) {\n      this.resourceTokens!.splice(index, 1);\n      this.cy.elements(`[resource = '${resource.token?.summary.token}']`).remove();\n    }\n  }\n\n  onCustomResourceChange(resource: Resource) {\n    this.interactorsService.sendPostRequest(resource.token!, this.cy).subscribe((result) => {\n      this.cys.forEach(cy => {\n        this.interactorsService.addInteractorOccurrenceNode(result.interactors, cy, result.interactors.resource);\n        this.state.set('overlay', resource.token!.summary.token);\n      })\n    })\n  }\n\n  isSelected(resource: Resource): boolean {\n    return this.resourceTokens!.includes(resource);\n  }\n\n  private loadAnalysis(token: string | null) {\n    console.log(token, this.diagramId)\n    if (!token || !this.diagramId) {\n      this.cys.forEach(cy => {\n        cy.batch(() => {\n          cy.nodes().removeData('exp');\n          cy.edges('[?color]').style({\n            'underlay-padding': extract(this.reactomeStyle.properties.shadow.padding)\n          });\n          cy.nodes('.Shadow').style({\n            'font-size': extract(this.reactomeStyle.properties.shadow.fontSize),\n            'text-outline-width': extract(this.reactomeStyle.properties.shadow.fontPadding)\n          })\n        })\n      });\n      return\n    }\n\n    forkJoin({\n      entities: this.analysis.foundEntities(this.diagramId, token),\n      pathways: this.analysis.pathwaysResults(this.cy.nodes('.Pathway').map(p => p.data('reactomeId')), token),\n      result: this.analysis.result$.pipe(filter(isDefined), take(1))\n    }).subscribe(({entities, result, pathways}) => {\n      // TODO Make switching profile work without reloading whole data\n      const analysisProfile = this.state.get('analysisProfile');\n      let analysisIndex = analysisProfile ? entities.expNames.indexOf(analysisProfile) : 0;\n      if (analysisIndex === -1) analysisIndex = 0;\n\n      let analysisEntityMap = new Map<string, number>(entities.entities.flatMap(entity =>\n        entity.mapsTo\n          .flatMap(diagramEntity => diagramEntity.ids)\n          .map(id => [id, entity.exp[analysisIndex] || 1]))\n      )\n      console.log(analysisEntityMap)\n\n      let analysisPathwayMap = new Map<number, Analysis.Pathway['entities']>(pathways.map(p => [p.dbId, p.entities]));\n\n      console.log(analysisPathwayMap)\n\n      const normalize = (x: number, min: number, max: number) => (x - min) / (max - min)\n\n      this.cys.forEach(cy => {\n        cy.batch(() => {\n          const style: Style = cy.data('reactome');\n          const min = style.properties.analysis.min = result.expression.min || 0;\n          const max = style.properties.analysis.max = result.expression.max || 1;\n\n          const hasExpression = result.summary.type !== 'OVERREPRESENTATION';\n\n\n          cy.nodes('.PhysicalEntity').forEach(node => {\n            const leaves: Graph.Node[] = node.data('graph.leaves');\n            const exp = leaves\n              .map(leaf => analysisEntityMap.get(leaf.identifier))\n              .sort((a, b) => a !== undefined ? (b !== undefined ? a - b : -1) : 1);\n\n            console.log(node.data('reactomeId'), leaves, exp)\n\n            // if (hasExpression) exp = exp.map(e => e !== undefined ? 1 - e : undefined);\n            node.data('exp', exp);\n          })\n          cy.nodes('.Pathway').forEach(node => {\n            const dbId: number = node.data('reactomeId');\n            const pathwayData = analysisPathwayMap.get(dbId);\n            if (!pathwayData) {\n              node.data('exp', [undefined]);\n            } else {\n              console.log(dbId, normalize(pathwayData.exp[analysisIndex] || 1 - pathwayData.pValue, min, max))\n              node.data('exp', [\n                [pathwayData.exp[analysisIndex] || 1 - pathwayData.pValue, pathwayData.found],\n                [undefined, pathwayData.total - pathwayData.found]\n              ])\n            }\n          })\n\n          cy.edges('[?color]').style({'underlay-padding': 8});\n          cy.nodes('.Shadow').style({\n            'font-size': extract(style.properties.shadow.fontSize) / 2,\n            'text-outline-width': extract(style.properties.shadow.fontPadding) / 2\n          })\n\n          const validGroups: Set<PaletteGroup> = new Set();\n          if (result.summary.type === 'GSA_REGULATION') {\n            validGroups.add('diverging')\n          } else if (result.summary.type === 'EXPRESSION') {\n            validGroups.add('diverging')\n            validGroups.add('sequential')\n            validGroups.add('continuous')\n          } else if (result.summary.type === 'OVERREPRESENTATION') {\n            validGroups.add('sequential')\n          }\n\n          for (let summary of this.paletteOptions.values()) {\n            summary.classes(result.summary.type === 'GSA_REGULATION' ? 5 : 0);\n            summary.domain(min, max);\n          }\n\n          this.palettes.forEach(group => group.valid = validGroups.has(group.name))\n          this.palette = this.paletteOptions.get(hasExpression ? 'RdBu' : 'GnBu')!;\n          this.reactomeStyle.loadAnalysis(cy, this.palette.scale);\n        })\n      })\n\n    })\n  }\n\n  changePalette() {\n    console.log(this.palette)\n    if (this.palette) this.reactomeStyle.loadAnalysis(this.cy, this.palette.scale);\n  }\n\n  updateStyle() {\n    this.cy ? setTimeout(() => this.reactomeStyle?.update(this.cy), 5) : null;\n    this.cyCompare ? setTimeout(() => this.reactomeStyle?.update(this.cyCompare), 5) : null;\n    this.legend ? setTimeout(() => this.reactomeStyle?.update(this.legend), 5) : null;\n  }\n\n  compareDragging = false;\n\n  dragStart() {\n    this.compareDragging = true;\n  }\n\n  dragEnd() {\n    this.compareDragging = false;\n  }\n\n  dragMove($event: MouseEvent, compareContainer: HTMLDivElement) {\n    if (!this.compareDragging) return;\n    compareContainer.style['left'] = $event.x + 'px';\n    this.cyCompare.resize()\n    this.syncViewports(this.cy!, this.cytoscapeContainer!.nativeElement, this.cyCompare!, this.compareContainer!.nativeElement);\n  }\n\n  updateLegend() {\n    this.legend.resize()\n    this.legend.panningEnabled(true)\n    this.legend.zoomingEnabled(true)\n    this.legend.fit(this.legend.elements(), 2)\n    this.legend.panningEnabled(false)\n    this.legend.zoomingEnabled(false)\n  }\n\n  // ----- Event Syncing -----\n  private _reactomeEvents$: Subject<ReactomeEvent> = new Subject<ReactomeEvent>();\n\n  private _ignore = false;\n\n  @Output()\n  public reactomeEvents$: Observable<ReactomeEvent> = this._reactomeEvents$.asObservable().pipe(\n    distinctUntilChanged((prev, current) => prev.type === current.type && prev.detail.reactomeId === current.detail.reactomeId),\n    tap(e => console.log(e.type, e.detail, e.detail.element.data(), e.detail.cy.container()?.id)),\n    filter(() => !this._ignore),\n    share()\n  );\n\n  flagging = this.state.onChange.flag$.subscribe((value) => this.cys.forEach(cy => this.flag(value, cy)))\n  selecting = this.state.onChange.select$.subscribe((value) => this.cys.forEach(cy => this.select(value, cy)))\n  interactoring = this.state.onChange.overlay$.subscribe((value) => this.getInteractors(value));\n  analysing = this.state.onChange.analysis$.subscribe((value) => this.loadAnalysis(value));\n\n\n  // stateToDiagramSub = this.state.state$.subscribe(() => this.stateToDiagram());\n\n  private stateToDiagram() {\n    for (let cy of this.cys) {\n      this.flag(this.state.get('flag'), cy);\n      this.select(this.state.get(\"select\"), cy);\n    }\n    this.getInteractors(this.state.get(\"overlay\"));\n    this.loadAnalysis(this.state.get('analysis'))\n  }\n\n  compareBackgroundSync = this.reactomeEvents$.pipe(\n    filter(() => this.comparing),\n    filter((e) => e.detail.cy !== this.legend)\n  ).subscribe(event => {\n    const src = event.detail.cy;\n    const tgt = src === this.cy ? this.cyCompare : this.cy;\n\n    let replacedBy = event.detail.element.data('replacedBy');\n    replacedBy = replacedBy || event.detail.element.data('replacement');\n    replacedBy = replacedBy || (event.detail.element.data('isBackground') && !event.detail.element.data('isFadeOut') && event.detail.element.data('id'));\n\n    if (!replacedBy) return;\n\n    let replacements = tgt.getElementById(replacedBy);\n    if (event.detail.type === 'reaction') {\n      replacements = replacements.add(tgt.elements(`[reactionId=${replacedBy}]`))\n    }\n\n    this.applyEvent(event, replacements)\n  });\n\n\n  interactorOpeningHandling = this.reactomeEvents$\n    .pipe(\n      filter((e) => e.detail.cy !== this.legend),\n      filter(e => [ReactomeEventTypes.open, ReactomeEventTypes.close].includes(e.type as ReactomeEventTypes)),\n      filter(e => e.detail.type === 'Interactor'),\n    ).subscribe(e => {\n        [this.reactomeStyle, this.reactomeStyleCompare]\n          .filter(s => s !== undefined && e.detail.cy === s.cy)\n          .forEach(style => {\n              const occurrenceNode = e.detail.element.nodes()[0];\n\n              if (e.type === ReactomeEventTypes.open)\n                this.interactorsService.addInteractorNodes(occurrenceNode, style.cy!);\n              else\n                this.interactorsService.removeInteractorNodes(occurrenceNode);\n\n              style.interactivity.updateProteins();\n              style.interactivity.triggerZoom();\n            }\n          )\n\n        if (this.comparing) {\n          this.initialiseReplaceElements();\n        }\n      }\n    );\n\n  diagram2legend = this.reactomeEvents$.pipe(\n    filter((e) => e.detail.cy !== this.legend),\n  ).subscribe(event => {\n    const classes = event.detail.element.classes();\n    let matchingElement: cytoscape.NodeCollection | cytoscape.EdgeCollection = this.legend.elements(`.${classes[0]}`);\n\n    if (event.detail.type === 'PhysicalEntity') {\n      if (classes.includes('drug')) matchingElement = matchingElement.nodes('.drug')\n      else matchingElement = matchingElement.not('.drug')\n    } else if (event.detail.type === 'reaction') {\n      const reaction = event.detail.element.nodes('.reaction');\n      matchingElement = this.legend.nodes(`.${reaction.classes()[0]}`).first()\n      matchingElement = matchingElement.add(matchingElement.connectedEdges())\n    }\n\n    this._ignore = true;\n    this.applyEvent(event, matchingElement);\n    this._ignore = false;\n  });\n\n  diagramSelect2state = this.reactomeEvents$.pipe(\n    filter((e) => e.detail.cy !== this.legend),\n    delay(0)\n  ).subscribe(e => {\n      if (e.type !== ReactomeEventTypes.select) return;\n      let elements: cytoscape.NodeSingular = e.detail.element;\n      if (e.detail.type === 'reaction') {\n        elements = e.detail.cy.elements('node.reaction:selected')\n      }\n      const reactomeIds = elements.map(el => el.data('graph.stId'));\n      this.state.set('select', reactomeIds)\n    }\n  );\n\n  legend2state = this.reactomeEvents$.pipe(\n    filter((e) => e.detail.cy === this.legend),\n    filter(() => !this._ignore),\n  ).subscribe((e) => {\n    const event = e as ReactomeEvent;\n    const classes = event.detail.element.classes();\n    for (let cy of [this.cy, this.cyCompare].filter(isDefined)) {\n      let matchingElement: cytoscape.NodeCollection | cytoscape.EdgeCollection = cy.elements(`.${classes[0]}`);\n\n      // TODO move everything to use state\n\n      if (event.detail.type === 'PhysicalEntity' || event.detail.type === 'Pathway') {\n        if (classes.includes('drug')) matchingElement = matchingElement.nodes('.drug')\n        else matchingElement = matchingElement.not('.drug')\n      } else if (event.detail.type === 'reaction') {\n        const reaction = event.detail.element.nodes('.reaction');\n        matchingElement = this.cy.nodes(`.${reaction.classes()[0]}`)\n        matchingElement = matchingElement.add(matchingElement.connectedEdges())\n      }\n\n      switch (event.type) {\n        case ReactomeEventTypes.select:\n          this.state.set('flag', ['class:' + classes[0] + (event.detail.type === 'reaction' ? '' : ((classes.includes('drug') ? '.' : '!') + 'drug'))])\n          break;\n        case ReactomeEventTypes.unselect:\n          this.state.set('flag', []);\n          break;\n        case ReactomeEventTypes.hover:\n          matchingElement.addClass('hover')\n          break;\n        case ReactomeEventTypes.leave:\n          matchingElement.removeClass('hover')\n          break;\n      }\n    }\n  });\n\n  logProteins() {\n    console.debug(new Set(this.cy.nodes(\".Protein\").map(node => node.data(\"acc\") || node.data(\"iAcc\"))))\n  }\n\n  analyse(example: Examples) {\n    this.analysis.example(example).subscribe();\n  }\n\n  protected readonly style = style;\n  protected readonly brewer = brewer;\n  protected readonly MatFormField = MatFormField;\n  protected readonly group = group;\n}\n","<div class=\"variables\" [class.dark]=\"dark.isDark\" #container>\n\n  <div id=\"cytoscape\" #cytoscape></div>\n  <div id=\"disease-container\" class=\"drag-container\" #compareContainer [style.display]=\"comparing ? 'flex': 'none'\">\n    <div id=\"handle-limits\" (mouseup)=\"dragEnd()\" (mouseleave)=\"dragEnd()\"\n         (mousemove)=\"dragMove($event, compareContainer)\" [class.active]=\"compareDragging\">\n      <span id=\"disease-handle\" class=\"drag-handle\" (mousedown)=\"dragStart()\"></span>\n    </div>\n\n    <div id=\"cytoscape-compare\" #cytoscapeCompare class=\"drag-content\"></div>\n  </div>\n\n  <div id=\"legend-boundary\" [ngStyle]=\"{'--legend-width': ratio  * container.clientHeight + 'px'}\">\n    <div cdkDrag cdkDragLockAxis=\"x\" cdkDragBoundary=\"#legend-boundary\" id=\"legend-container\"\n         (cdkDragMoved)=\"updateLegend()\"\n         [style.height]=\"container.clientHeight + 'px'\">\n      <button id=\"legend-handle\" cdkDragHandle>LEGEND</button>\n      <div id=\"legend\" #legend></div>\n    </div>\n  </div>\n\n\n  <form id=\"controls\">\n    <button mat-raised-button (click)=\"getInteractors(ResourceType.STATIC)\">IntAct</button>\n    <button mat-raised-button (click)=\"getInteractors(ResourceType.DISGENET)\">DisGeNet</button>\n    <button mat-raised-button (click)=\"updateStyle()\">Update Style</button>\n    <button mat-raised-button (click)=\"logProteins()\">Log Proteins</button>\n    <button mat-raised-button (click)=\"analyse('uniprot')\">Uniprot</button>\n    <button mat-raised-button (click)=\"analyse('microarray')\">Microarray</button>\n    <mat-form-field  style=\"width: 200px\" appearance=\"outline\">\n      <mat-label>Palette</mat-label>\n      <mat-select [(value)]=\"palette\" (selectionChange)=\"changePalette()\" [hideSingleSelectionIndicator]=\"true\">\n        <mat-select-trigger>\n          <div class=\"palette\" [style.background]=\"palette.gradient\" style=\"vertical-align: center\">\n          </div>\n        </mat-select-trigger>\n        <ng-container *ngFor=\"let group of palettes \">\n          <mat-optgroup  *ngIf=\"group.valid\" style=\"align-self: center\">\n            <mat-label align=\"center\">{{group.name}}</mat-label>\n            <mat-option *ngFor=\"let palette of group.palettes\" [value]=\"paletteOptions.get(palette)\">\n              <div class=\"palette option-content\" [style.background]=\"paletteOptions.get(palette)?.gradient\"></div>\n            </mat-option>\n          </mat-optgroup>\n        </ng-container>\n\n      </mat-select>\n    </mat-form-field>\n\n    <mat-form-field appearance=\"outline\">\n      <mat-label>PSICQUIC</mat-label>\n      <mat-select #psicquicSelect [formControl]=\"selectedPsicquicResource\" [hideSingleSelectionIndicator]=true\n                  (selectionChange)=\"onPsicquicResourceChange($event.value)\">\n        <mat-select-trigger>{{selectedPsicquicResource.value}}</mat-select-trigger>\n        <mat-option *ngFor=\"let resource of psicquicResources\" [value]=\"resource.name\" [disabled]=\"!resource.active\"\n                    (click)=\"psicquicSelect.open()\">\n          <div class=\"option-content\">\n            <span><i>{{ resource.name }}</i></span>\n            <mat-spinner diameter=\"20\"\n                         *ngIf=\"isDataFromPsicquicLoading && selectedPsicquicResource.value === resource.name\"></mat-spinner>\n          </div>\n        </mat-option>\n      </mat-select>\n    </mat-form-field>\n\n    <button mat-raised-button (click)=\"openCustomInteractorDialog()\">Custom resource</button>\n\n    <mat-slide-toggle [(ngModel)]=\"dark.isDark\" name=\"dark\">Dark mode</mat-slide-toggle>\n    <span>{{ (reactomeEvents$ | async)?.detail?.reactomeId }}</span>\n  </form>\n\n\n  <mat-selection-list style=\"width: 260px\" *ngIf=\"resourceTokens?.length != 0\" [multiple]=\"false\">\n    <mat-list-option color=\"primary\" *ngFor=\"let resourceToken of resourceTokens\" [value]=\"resourceToken\"\n                     [selected]=\"isSelected(resourceToken)\" (click)=\"onCustomResourceChange(resourceToken)\">\n      <div class=\"option-content\">\n        <div>{{ resourceToken.token?.summary?.name }}</div>\n        <button mat-icon-button color=\"primary\" (click)=\"deleteResource(resourceToken)\">\n          <mat-icon>delete</mat-icon>\n        </button>\n      </div>\n    </mat-list-option>\n  </mat-selection-list>\n\n</div>\n","import {CanActivateFn, Params, Router} from '@angular/router';\nimport {inject} from \"@angular/core\";\n\nconst URL_PATTERN = /\\/?(?<id>R-[A-Z]{3}-\\d+)&?(?<params>.*)/;\n\n\nexport const legacyGuard: CanActivateFn = (route, state) => {\n  const router: Router = inject(Router);\n  const {fragment, queryParams} = route;\n  let params = {...queryParams} as Params;\n  let id = 'R-HSA-453279'; // Default routing\n\n  if (fragment) {\n    const match = fragment.match(URL_PATTERN);\n    if (match && match.groups && match.groups['id']) {\n      if (match.groups['id']) {\n        id = match.groups['id'];\n      }\n      if (match.groups['params']) {\n        match.groups['params']\n          .split(\"&\")\n          .map(param => param.split(\"=\"))\n          .forEach(([key, value]) => {\n            params[key] = value || true;\n          })\n      }\n    }\n    return router.navigate([id], {fragment: undefined, queryParams: params})\n  }\n\n  return router.navigate([id]); // Default routing\n};\n","export enum ResourceType {\n  STATIC = 'IntAct',\n  DISGENET = 'DisGeNet',\n  PSICQUIC = 'PSICQUIC',\n  CUSTOM = 'custom'\n}\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {\n  AbstractControl,\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  ValidationErrors,\n  ValidatorFn,\n  Validators\n} from \"@angular/forms\";\nimport {merge} from \"rxjs\";\nimport {takeUntilDestroyed} from \"@angular/core/rxjs-interop\";\nimport {MatTabChangeEvent} from \"@angular/material/tabs\";\nimport {MatRadioChange} from \"@angular/material/radio\";\nimport {InteractorService} from \"../services/interactor.service\";\nimport cytoscape from \"cytoscape\";\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material/dialog\";\nimport {InputCategory, Resource} from \"../model/interactor-entity.model\";\n\n\n@Component({\n  selector: 'cr-custom-interactor-dialog',\n  templateUrl: './custom-interactor-dialog.component.html',\n  styleUrls: ['./custom-interactor-dialog.component.scss']\n})\nexport class CustomInteractorDialogComponent implements OnInit {\n\n  cy!: cytoscape.Core;\n  name = new FormControl('', [Validators.required, Validators.pattern(/^[a-zA-Z_]+[a-zA-Z0-9_]*$/)]);\n  resourceForm!: FormGroup;\n  errorMessage = '';\n  tabId = 'data'; // Default value\n  selectedValue = 'form'; // Default value\n  isDataLoading: boolean = false;\n  resource = new Resource();\n  items = [\n    {'name': 'form', 'content': 'File'},\n    {'name': 'content', 'content': 'Copy & Paste'},\n    {'name': 'url', 'content': 'URL'}]\n\n  constructor(private interactorService: InteractorService, private dialogRef: MatDialogRef<CustomInteractorDialogComponent>, private fb: FormBuilder, @Inject(MAT_DIALOG_DATA) public data: {\n    cy: cytoscape.Core\n  }) {\n    this.resourceForm = this.fb.group({\n      selectedValue: [''],\n      form: [''], // file uploader\n      content: [''],\n      url: [''],\n      psicquicUrl: ['']\n    }, {validators: this.formGroupValidator});\n\n    merge(this.name.statusChanges, this.name.valueChanges)\n      .pipe(takeUntilDestroyed())\n      .subscribe(() => this.updateErrorMessage());\n  }\n\n\n  ngOnInit() {\n    this.cy = this.data.cy;\n  }\n\n  formGroupValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n    const fileValue = control.value.form;\n    const contentValue = control.value.content;\n    const urlValue = control.value.url;\n    const psicquicUrlValue = control.value.psicquicUrl;\n    if (fileValue || contentValue || urlValue || psicquicUrlValue) {\n      return null\n    } else {\n      return {invalid: true};\n    }\n  };\n\n  updateErrorMessage() {\n    if (this.name.hasError('required')) {\n      this.errorMessage = 'You must enter a name';\n    } else if (this.name.hasError('pattern')) {\n      this.errorMessage = 'Name can only contain letters'\n    } else {\n      this.errorMessage = '';\n    }\n  }\n\n  onTabChange($event: MatTabChangeEvent) {\n    this.tabId = $event.tab.ariaLabelledby;\n  }\n\n  onItemChange($event: MatRadioChange) {\n    this.selectedValue = $event.value;\n  }\n\n  onFileChange($event: Event) {\n    const inputElement = $event.target as HTMLInputElement;\n    if (inputElement.files && inputElement.files.length) {\n      const file = inputElement.files[0]; // Single file upload\n      this.resourceForm.patchValue({form: file});\n    }\n  }\n\n  submit() {\n    this.isDataLoading = true;\n    const userInput = this.getInputs();\n    if (userInput) {\n      this.interactorService.getInteractorsFromToken(this.name.value!, userInput.url!, userInput.content!, this.cy).subscribe((result) => {\n        this.interactorService.addInteractorOccurrenceNode(result.interactors, this.cy, result.interactors.resource)\n        this.resource.token =result.token\n        this.isDataLoading = false;\n        this.dialogRef.close();\n      })\n    }\n  }\n\n  private getInputs(): InputCategory {\n    const input = new InputCategory();\n    const formValue = this.resourceForm.value;\n\n    if (this.tabId === 'data') {\n      input.url = this.interactorService.UPLOAD_URL + this.selectedValue;\n      input.content = formValue[this.selectedValue];\n      if (this.selectedValue === this.items[0].name) { // Prepare formdata when file is uploaded\n        input.content = this.prepareFormData(formValue.form)\n      }\n    }\n\n    if (this.tabId === 'psicquic') {\n      input.url = this.interactorService.UPLOAD_PSICQUIC_URL;\n      input.content = formValue.psicquicUrl;\n    }\n    return input\n  }\n\n  private prepareFormData(formControl: string | Blob): FormData {\n    const formData = new FormData();\n    formData.append(\"file\", formControl);\n    return formData;\n  }\n\n}\n","<h2 mat-dialog-title>Add a new resource</h2>\n<mat-dialog-content>\n  <form [formGroup]=\"resourceForm\">\n    <div>\n      <mat-form-field>\n        <mat-label>Name</mat-label>\n        <input matInput [formControl]=\"name\" (blur)=\"updateErrorMessage()\" required>\n        <mat-error *ngIf=\"resourceForm.get('name')?.invalid\">{{ errorMessage }}</mat-error>\n      </mat-form-field>\n    </div>\n    <mat-tab-group (selectedTabChange)=\"onTabChange($event)\">\n      <mat-tab label=\"Add your data\" aria-labelledby=\"data\">\n        <section>\n          <mat-radio-group (change)=\"onItemChange($event)\">\n            <mat-radio-button class=\"margin\" *ngFor=\"let item of items; let i = index\" [value]=\"item.name\"\n                              [checked]='i===0'>{{ item.content }}\n            </mat-radio-button>\n          </mat-radio-group>\n        </section>\n\n        <mat-form-field *ngIf=\"selectedValue === 'form'\" class=\"full-width\">\n          <ngx-mat-file-input formControlName=\"form\" (change)=\"onFileChange($event)\"  [multiple]=false>\n            <mat-icon ngxMatFileInputIcon>folder</mat-icon>\n          </ngx-mat-file-input>\n          <mat-hint><strong>Upload a file stored locally on your computer.</strong></mat-hint>\n        </mat-form-field>\n\n        <!--        <span>Upload a file stored locally on your computer. Upload a file stored locally on your computer.</span>-->\n        <!--        <div *ngIf=\"label === 'File'\" class=\"full-width\">-->\n        <!--          <button type=\"button\" mat-raised-button (click)=\"fileInput.click()\">Choose File</button>-->\n        <!--          <input hidden (change)=\"onFileSelected($event)\" #fileInput type=\"file\">-->\n        <!--          <span class=\"file-name\">{{ selectedFile?.name }}</span>-->\n        <!--        </div>-->\n\n        <mat-form-field *ngIf=\"selectedValue === 'content'\" class=\"full-width\">\n          <mat-label>Copy & paste your data here</mat-label>\n          <textarea matInput formControlName=\"content\"></textarea>\n          <mat-hint><strong>Copy and paste your data in columns.</strong></mat-hint>\n        </mat-form-field>\n\n        <mat-form-field *ngIf=\"selectedValue === 'url'\" class=\"full-width\">\n          <mat-label>URL</mat-label>\n          <input matInput formControlName='url'>\n          <mat-hint><strong>Upload a publicly accessible data though its URL.</strong></mat-hint>\n        </mat-form-field>\n\n      </mat-tab>\n      <mat-tab label=\"Add your PSICQUIC service\" aria-labelledby=\"psicquic\">\n        <mat-form-field class=\"full-width\">\n          <mat-label>URL</mat-label>\n          <input matInput formControlName=\"psicquicUrl\">\n          <mat-hint><strong>Add your custom PSICQUIC service through its URL.</strong></mat-hint>\n        </mat-form-field>\n      </mat-tab>\n    </mat-tab-group>\n    <mat-dialog-actions align=\"end\">\n      <button mat-flat-button color=\"primary\" mat-dialog-close>Close</button>\n      <button mat-flat-button color=\"primary\"\n              [disabled]=\"resourceForm.invalid && !resourceForm.get('name')?.invalid\"\n              type=\"submit\" (click)=\"submit()\">\n        <div class=\"button-row\">\n          Submit\n          <mat-spinner class=\"spinner-color\" diameter=\"20\" *ngIf=\"isDataLoading\"></mat-spinner>\n        </div>\n      </button>\n    </mat-dialog-actions>\n  </form>\n</mat-dialog-content>\n","\nimport {NodeSingular} from \"cytoscape\";\nimport {Interactor} from \"../model/interactor-entity.model\";\n\nexport interface Position {\n  x: number;\n  y: number;\n}\n\nexport interface Segment {\n  from: Position;\n  to: Position;\n}\n\n\nclass InteractorsLayout {\n\n  public static MAX_INTERACTORS = 18\n  public static BOX_WIDTH = 45;\n  public static BOX_HEIGHT = 20;\n  public static SEPARATION = Math.round(this.BOX_HEIGHT * 1.5);\n  public static MIN_HEIGHT = 2 * (2 * this.BOX_HEIGHT + this.SEPARATION);\n  public static MIN_WIDTH = 2 * (2 * this.BOX_WIDTH + this.SEPARATION);\n\n  constructor() {\n  }\n\n  public static getNumberOfInteractorsToDraw(interactors: Interactor[]) {\n    if (interactors == null) return 0;\n    return Math.min(interactors.length, InteractorsLayout.MAX_INTERACTORS);\n  }\n\n  public getSegmentOrigin(edgeIndex: number, center: Position, width: number, height: number): Position {\n    edgeIndex = edgeIndex % 4;\n    return {\n      x: center.x + (width / 2) * (edgeIndex === 1 || edgeIndex === 2 ? 1 : -1),\n      y: center.y + (height / 2) * (edgeIndex > 1 ? 1 : -1)\n    }\n  }\n\n  public getCentre(minX: number, maxX: number, minY: number, maxY: number): Position {\n    return {\n      x: minX + (maxX - minX) / 2.0,\n      y: minY + (maxY - minY) / 2.0\n    }\n  }\n\n  public interpolateInLayout(segment: Segment, pos: number, totalPositions: number): Position {\n    const r = pos / totalPositions;\n    return {\n      x: segment.from.x + r * (segment.to.x - segment.from.x),\n      y: segment.from.y + r * (segment.to.y - segment.from.y)\n    }\n  }\n\n  public getPosition(targetNode: NodeSingular, interactorIndex: number, numberToDraw: number) {\n\n    const centerPosition: { x: number, y: number } = targetNode.data('entity').position()\n    const lp = LayoutParameter.calculate(numberToDraw);\n\n    let edgeNodes = lp.nodeOnTop;\n    let nodeCount = 0;\n    let prevNodeCount = 0;\n    let edgeIndex;\n    const nodePerEdges = [lp.nodeOnTop, lp.nodeOnRight, lp.nodeOnBottom, lp.nodeOnLeft];\n\n    for (edgeIndex = 0; edgeIndex < nodePerEdges.length; edgeIndex++) {\n      edgeNodes = nodePerEdges[edgeIndex];\n      prevNodeCount = nodeCount;\n      nodeCount += edgeNodes - 1;\n      if (interactorIndex < nodeCount) {\n        break;\n      }\n    }\n\n    const edgePos = interactorIndex - prevNodeCount;\n    const pos = this.interpolateInLayout(\n      // new Segment(\n      {\n        from: this.getSegmentOrigin(edgeIndex, centerPosition, lp.width, lp.height),\n        to: this.getSegmentOrigin(edgeIndex + 1, centerPosition, lp.width, lp.height)\n      },\n      //  ),\n      edgePos,\n      edgeNodes - 1\n    );\n\n    const minX = pos.x - InteractorsLayout.BOX_WIDTH;\n    const maxX = pos.x + InteractorsLayout.BOX_WIDTH;\n    const minY = pos.y - InteractorsLayout.BOX_HEIGHT;\n    const maxY = pos.y + InteractorsLayout.BOX_HEIGHT;\n\n    return this.getCentre(minX, maxX, minY, maxY)\n  }\n}\n\nclass LayoutParameter {\n  constructor(\n    public nodeOnLeft: number,\n    public nodeOnRight: number,\n    public nodeOnTop: number,\n    public nodeOnBottom: number,\n    public width: number,\n    public height: number\n  ) {\n  }\n\n  static calculate(n: number): LayoutParameter {\n    const rationalNodePerEdge = n / 4 + 1;\n    const baseNodePerEdge = Math.floor(rationalNodePerEdge);\n    const remaining = Math.round((rationalNodePerEdge - baseNodePerEdge) * 4);\n\n    const nodeOnLeft = baseNodePerEdge + (remaining > 0 ? 1 : 0);\n    const nodeOnRight = baseNodePerEdge + (remaining > 1 ? 1 : 0);\n    const nodeOnTop = baseNodePerEdge + (remaining > 2 ? 1 : 0);\n    const nodeOnBottom = baseNodePerEdge;\n\n    const height = Math.max((2 * InteractorsLayout.BOX_HEIGHT + InteractorsLayout.SEPARATION) * (nodeOnLeft - 1), InteractorsLayout.MIN_HEIGHT);\n    const width = Math.max((2 * InteractorsLayout.BOX_WIDTH + InteractorsLayout.SEPARATION) * (nodeOnTop - 1), InteractorsLayout.MIN_WIDTH);\n\n    return new LayoutParameter(nodeOnLeft, nodeOnRight, nodeOnTop, nodeOnBottom, width, height);\n  }\n}\n\nexport default InteractorsLayout;\n","import cytoscape from \"cytoscape\";\n\nexport interface InteractorEntity {\n  acc: string;\n  count: number;\n  interactors: Interactor[] | null;\n}\n\nexport interface Interactor {\n  acc: string;\n  accURL: string;\n  alias: string;\n  evidences: number;\n  evidencesURL: string;\n  id: number;\n  score: number;\n  type: string;\n  existingNodes?: cytoscape.NodeCollection\n}\n\n\nexport interface Interactors {\n  entities: InteractorEntity[];\n  resource: string; //STATIC, DisGeNet PSICQUIC resource (e.g. IntAct, MINT, etc) or Custom resource\n}\n\nexport interface PsicquicResource{\n  name: string;\n  soapURL: string;\n  restURL: string;\n  active: boolean\n}\n\n\nexport interface InteractorToken{\n  summary: Summary;\n  warningMessage: string;\n}\n\ninterface Summary {\n  token:string;\n  interactors: number;\n  interactions: number;\n  fileName: string;\n  name: string\n}\n\nexport class InputCategory {\n  url: string | undefined\n  content: string | FormData | undefined\n}\n\nexport class Resource {\n  token: InteractorToken | undefined;\n}\n\n","import {Injectable} from \"@angular/core\";\nimport {HttpClient, HttpHeaders, HttpParams} from \"@angular/common/http\";\nimport cytoscape, {NodeCollection, NodeSingular} from \"cytoscape\";\nimport {map, Observable, switchMap} from \"rxjs\";\nimport {Interactor, Interactors, InteractorToken, PsicquicResource} from \"../model/interactor-entity.model\";\n\n\nimport InteractorsLayout from \"../layout/interactors-layout\";\nimport {DiagramService} from \"../../services/diagram.service\";\nimport {ResourceType} from \"../common/overlay-resource\";\nimport {environment} from \"../../../environments/environment\";\n\n@Injectable({\n  providedIn: 'root',\n})\n\nexport class InteractorService {\n\n  private PREFIX_INTERACTOR = `${environment.host}/ContentService/interactors/`;\n  private PREFIX_DISEASE = `${environment.host}/overlays/disgenet/`;\n\n  private STATIC_URL = this.PREFIX_INTERACTOR + 'static/molecules/details';\n  private PSICQUIC_RESOURCE_URL = this.PREFIX_INTERACTOR + 'psicquic/resources/'\n  private PSICQUIC_URL = this.PREFIX_INTERACTOR + 'psicquic/molecules/';\n  public UPLOAD_URL = this.PREFIX_INTERACTOR + 'upload/tuple/';\n  public UPLOAD_PSICQUIC_URL = this.PREFIX_INTERACTOR + 'upload/psicquic/url';\n  private TOKEN_URL = this.PREFIX_INTERACTOR + 'token/';\n\n  private DISGENET_URL = this.PREFIX_DISEASE + 'findByGenes';\n\n  private readonly DEFAULT_INTERACTOR_WIDTH = 100;\n  private readonly DEFAULT_DISGENET_WIDTH = 250\n  private readonly INTERACTOR_PADDING = 20;\n  private readonly CHAR_WIDTH = 10;\n  private readonly CHAR_HEIGHT = 12;\n  private readonly GENE_DECORATION_HEIGHT = 20;\n\n\n  identifiers: string = '';\n  cyToSelectedResource = new Map<cytoscape.Core, string>();\n\n\n  constructor(private http: HttpClient, private diagramService: DiagramService) {\n  }\n\n  private getAllIdentifiers(cy: cytoscape.Core): void {\n    this.identifiers = this.getIdentifiersFromGraph(cy);\n  }\n\n  private updateIdentifiersIfNeeded(cy: cytoscape.Core): void {\n    if (!this.identifiers) {\n      this.getAllIdentifiers(cy);\n    }\n  }\n\n  public getIdentifiersFromGraph(cy: cytoscape.Core) {\n    const graphNodes = cy?.nodes(`[graph]`);\n    const result: string[] = [];\n\n    graphNodes?.forEach(entity => {\n      const schemaClass = entity.data(\"graph\").schemaClass;\n      if (schemaClass === \"EntityWithAccessionedSequence\" || schemaClass === \"SimpleEntity\") {\n        result.push(entity.data(\"acc\"));\n      }\n    });\n\n    // Concatenate elements from the set values into a single string\n    return [...new Set(result)].join(',')\n\n  }\n\n  public getInteractorData(cy: cytoscape.Core, resource: string): Observable<Interactors> {\n    this.updateIdentifiersIfNeeded(cy);\n    let url;\n    if (resource === ResourceType.STATIC) {\n      url = this.STATIC_URL;\n    } else if (resource === ResourceType.DISGENET) {\n      url = this.DISGENET_URL;\n    } else {\n      url = this.PSICQUIC_URL + resource.toLowerCase() + '/details'\n    }\n\n    return this.http.post<Interactors>(url, this.identifiers, {\n      headers: new HttpHeaders({'Content-Type': 'text/plain'})\n    });\n  }\n\n\n  public addInteractorOccurrenceNode(interactors: Interactors, cy: cytoscape.Core, resource: string) {\n    if (this.cyToSelectedResource.has(cy) && this.cyToSelectedResource.get(cy) !== resource) {\n      const previousResource = this.cyToSelectedResource.get(cy);\n      cy.elements(`[resource='${previousResource}']`).remove();\n      this.createInteractorOccurrenceNode(interactors, cy, resource);\n      this.cyToSelectedResource.set(cy, resource);\n    } else if (!this.cyToSelectedResource.has(cy)) {\n      this.createInteractorOccurrenceNode(interactors, cy, resource);\n      this.cyToSelectedResource.set(cy, resource);\n    }\n  }\n\n  public createInteractorOccurrenceNode(interactors: Interactors, cy: cytoscape.Core, resource: string) {\n    const classes = resource === ResourceType.DISGENET ? ['InteractorOccurrences', 'disease'] : ['InteractorOccurrences'];\n\n    if (interactors.entities === undefined) return;\n\n    interactors.entities\n      .filter(interactorEntity => interactorEntity.count > 0)\n      .forEach(interactorEntity => {\n\n        const entities = cy?.nodes(`[acc = '${interactorEntity.acc}']`);\n        entities?.forEach(entityNode => {\n\n          const pos = {...entityNode.position()};\n          pos.x += entityNode.width() / 2;\n          pos.y -= entityNode.height() / 2;\n\n          const id = entityNode.id() + '-occ' + '-' + resource.toLowerCase();\n\n          if (!entityNode.classes().includes('Modification')) {\n            const occurrenceNode = cy?.add({\n              data: {\n                ...entityNode.data(),\n                id: id,\n                displayName: interactorEntity.count,\n                entity: entityNode,\n                interactors: interactorEntity.interactors,\n                resource: resource\n              },\n              classes: classes,\n              pannable: true,\n              grabbable: false,\n              position: pos\n            });\n\n            entityNode.data('occurrence', occurrenceNode);\n          }\n\n        });\n      });\n  }\n\n  public removeInteractorNodes(occurrenceNode: cytoscape.NodeSingular) {\n    const entityNode = occurrenceNode.data('entity');\n    const interactors = entityNode.closedNeighborhood('node.Interactor');\n\n    entityNode.connectedEdges('.Interactor').remove();\n    interactors.forEach((interactor: cytoscape.NodeSingular) => {\n      if (interactor.connectedEdges().empty()) {\n        interactor.remove()\n      }\n    })\n  }\n\n  public addInteractorNodes(occurrenceNode: cytoscape.NodeSingular, cy: cytoscape.Core) {\n    const interactorsData = occurrenceNode.data('interactors');\n    const resource = occurrenceNode.data('resource')\n    InteractorsLayout.BOX_WIDTH = resource === ResourceType.DISGENET ? this.DEFAULT_DISGENET_WIDTH / 2 : this.DEFAULT_INTERACTOR_WIDTH / 2;\n    const numberToAdd = InteractorsLayout.getNumberOfInteractorsToDraw(interactorsData)\n    const [dynamicInteractors, existingInteractors] = this.getAllInteractors(interactorsData, cy, numberToAdd);\n    const allNodes: Interactor[] = [...dynamicInteractors, ...existingInteractors];\n    cy.batch(() => {\n\n      const nodes = this.createInteractorNodes(dynamicInteractors, occurrenceNode, cy, dynamicInteractors.length, resource);\n      this.createInteractorEdges(allNodes, occurrenceNode, cy, resource);\n\n      this.displayInteractors(nodes, cy);\n    })\n  }\n\n  public getAllInteractors(interactorsData: Interactor[], cy: cytoscape.Core, numberToAdd: number) {\n    const dynamicInteractors = [];\n    const existingInteractors = [];\n    // get interactors to draw with a provided a number, collect existing interactors for creating edge\n    for (const interactor of interactorsData) {\n      const diagramNodes = cy?.nodes(`.PhysicalEntity[acc = '${interactor.acc}']`);\n\n      if (!diagramNodes || diagramNodes.length === 0) {\n        dynamicInteractors.push(interactor);\n      } else {\n        interactor.existingNodes = diagramNodes;\n        existingInteractors.push(interactor);\n      }\n    }\n\n    return [dynamicInteractors.slice(0, numberToAdd), existingInteractors];\n  }\n\n  public createInteractorNodes(interactorsData: Interactor[], targetNode: NodeSingular, cy: cytoscape.Core, numberToAdd: number, resource: string) {\n    const interactorNodes: cytoscape.NodeDefinition[] = [];\n    const interactorLayout = new InteractorsLayout();\n\n    interactorsData.forEach((interactor: Interactor, index: number) => {\n      const position = interactorLayout.getPosition(targetNode, index, numberToAdd)\n      const displayName = interactor.alias ? interactor.alias : interactor.acc;\n      const defaultType = ['Protein', 'PhysicalEntity'] // Default interactor type for custom resource when there is no type data provided\n      const classes = resource === ResourceType.DISGENET ? ['PhysicalEntity', 'Interactor', 'disease'] : [...this.diagramService.nodeTypeMap.get(interactor.type) || defaultType, 'Interactor'];\n      let width = resource === ResourceType.DISGENET ? this.DEFAULT_DISGENET_WIDTH : this.DEFAULT_INTERACTOR_WIDTH;\n      let height = this.CHAR_HEIGHT + 2 * this.INTERACTOR_PADDING;\n      if (interactor.type === 'Gene') height += this.GENE_DECORATION_HEIGHT;\n\n      const id = 'interactor-' + interactor.acc;\n      interactorNodes.push({\n        data: {\n          ...targetNode.data(),\n          id: id,\n          displayName: displayName.replace(/([/,:;-])/g, \"$1\\u200b\"),\n          html: this.diagramService.getStructureVideoHtml({id, type: interactor.type}, width, height, interactor.acc),\n          width: width,\n          height: height,\n          accURL: interactor.accURL,\n          score: interactor.score,\n          evidences: interactor.evidences,\n          evidenceURLs: interactor.evidencesURL,\n          resource: resource\n        },\n        classes: classes,\n        position: position,\n        selectable: false\n      })\n    })\n    return cy?.add(interactorNodes)\n  }\n\n\n  public createInteractorEdges(interactorsData: Interactor[], occurrenceNode: NodeSingular, cy: cytoscape.Core | undefined, resource: string) {\n    if (!cy) return\n\n    const resourceClass = resource === ResourceType.DISGENET ? ['Interactor', 'disease'] : ['Interactor'];\n\n    const interactorEdges: cytoscape.EdgeDefinition[] = [];\n    interactorsData.forEach((interactor: Interactor) => {\n      const entity = occurrenceNode.data('entity');\n      const targetNodes = interactor.existingNodes ? interactor.existingNodes : [cy.getElementById('interactor-' + interactor.acc)];\n      targetNodes.forEach(targetNode => {\n        interactorEdges.push({\n          data: {\n            ...targetNode.data(),\n            id: interactor.acc + '-' + entity.id(),\n            source: entity.id(),\n            target: targetNode.id(),\n            edgeToTarget: occurrenceNode.id(),\n            evidenceURLs: interactor.evidencesURL,\n            resource: resource\n          },\n          classes: resourceClass,\n          selectable: false\n        })\n      })\n\n    })\n    cy?.add(interactorEdges)\n  }\n\n  public displayInteractors(interactorsToDisplay: NodeCollection, cy: cytoscape.Core) {\n\n    let layoutOptions: cytoscape.LayoutOptions = {\n      name: 'preset',\n      fit: false\n    }\n    interactorsToDisplay.layout(layoutOptions).run();\n  }\n\n\n  public removeInteractorEdges(targetNode: cytoscape.NodeSingular, cy: cytoscape.Core) {\n    const edgesToRemove = cy.edges(`[edgeToTarget = '${targetNode.id()}']`);\n    edgesToRemove.remove();\n  }\n\n  public getPsicquicResources(): Observable<PsicquicResource[]> {\n    return this.http.get<PsicquicResource[]>(this.PSICQUIC_RESOURCE_URL, {\n      headers: new HttpHeaders({'Content-Type': 'application/json;charset=UTF-8'})\n    });\n  }\n\n  public getInteractorToken(name: string, url: string, body: string | FormData) {\n    return this.http.post<InteractorToken>(url, body, {\n      params: new HttpParams().set('name', name),\n    })\n  }\n\n\n  public getInteractorsWithToken(name: string, url: string, body: string | FormData, cy: cytoscape.Core): Observable<{\n    token: InteractorToken,\n    interactors: Interactors\n  }> {\n    this.updateIdentifiersIfNeeded(cy);\n    return this.getInteractorToken(name, url, body).pipe(\n      switchMap(token => {\n        return this.http.post<Interactors>(this.TOKEN_URL + token.summary.token, this.identifiers, {\n          headers: new HttpHeaders({'Content-Type': 'text/plain'})\n        }).pipe(\n          map((interactors) => ({token: token, interactors: interactors}))\n        );\n      })\n    );\n  }\n\n  public getInteractorsFromToken(name: string, url: string, body: string | FormData, cy: cytoscape.Core): Observable<{\n    token: InteractorToken,\n    interactors: Interactors\n  }> {\n    this.updateIdentifiersIfNeeded(cy);\n    return this.getInteractorToken(name, url, body).pipe(\n      switchMap(token => this.sendPostRequest(token, cy))\n    );\n  }\n\n  public sendPostRequest(token: InteractorToken, cy: cytoscape.Core): Observable<{\n    token: InteractorToken,\n    interactors: Interactors\n  }> {\n    this.updateIdentifiersIfNeeded(cy);\n    return this.http.post<Interactors>(this.TOKEN_URL + token.summary.token, this.identifiers, {\n      headers: new HttpHeaders({'Content-Type': 'text/plain'})\n    }).pipe(\n      map((interactors) => ({token: token, interactors: interactors}))\n    );\n  }\n\n  public isCustomResource(resource: string, psiResource: PsicquicResource[]) {\n    const isFromPSICQUIC = psiResource.filter(pr => pr.name != ResourceType.STATIC).some(r => r.name === resource)\n    return resource != ResourceType.STATIC && resource != ResourceType.DISGENET && !isFromPSICQUIC;\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {catchError, distinctUntilChanged, map, Observable, of, switchMap, tap} from \"rxjs\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {environment} from \"../../environments/environment\";\nimport {Analysis} from \"../model/analysis.model\";\nimport {DiagramStateService} from \"./diagram-state.service\";\n\nexport type Examples = 'uniprot' | 'microarray';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AnalysisService {\n\n  result?: Analysis.Result;\n\n  result$ = this.state.state$.pipe(\n    map(state => state.analysis.value),\n    distinctUntilChanged(),\n    switchMap(token =>\n      token !== null ?\n        (\n          token === this.result?.summary.token ?\n            of(this.result) : // Same token as cache => use cache\n            this.loadAnalysis(token) // Different token than cache => load result\n        ) :\n        of(undefined) // No tokens => No results\n    )\n  )\n\n  constructor(private http: HttpClient, private state: DiagramStateService) {\n  }\n\n  analyse(data: string, params?: Partial<Analysis.Parameters>): Observable<Analysis.Result> {\n    return this.http.post<Analysis.Result>(`${environment.host}/AnalysisService/identifiers/projection`, data, {params}).pipe(\n      tap(result => this.result = result),\n      tap(result => this.state.set('analysis', result.summary.token)),\n    )\n  }\n\n  loadAnalysis(token?: string, params?: Partial<Analysis.Parameters>): Observable<Analysis.Result> {\n    console.log('load analysis')\n    return this.http.get<Analysis.Result>(`${environment.host}/AnalysisService/token/${token || this.state.get('analysis')}`, {params}).pipe(\n      tap(result => this.result = result)\n    )\n  }\n\n  foundEntities(pathway: string, token?: string, resource: Analysis.Resource = 'TOTAL'): Observable<Analysis.FoundEntities> {\n    return this.http.get<Analysis.FoundEntities>(`${environment.host}/AnalysisService/token/${token || this.state.get('analysis')}/found/all/${pathway}`, {\n      params: {\n        resource\n      }\n    }).pipe(\n      catchError(() => of({\n        pathway,\n        foundEntities: 0,\n        foundInteractors:0,\n        expNames: [],\n        entities: [],\n        interactors:[],\n        resources: [resource]\n      }))\n    )\n  }\n\n  pathwaysResults(pathwayIds: number[], token?: string, resource: Analysis.Resource = 'TOTAL'): Observable<Analysis.Pathway[]> {\n    if (pathwayIds.length === 0) return of([]);\n    return this.http.post<Analysis.Pathway[]>(`${environment.host}/AnalysisService/token/${token || this.state.get('analysis')}/filter/pathways`, pathwayIds.join(','), {\n      params:{resource}\n    }).pipe(\n      catchError(() => of([]))\n    )\n  }\n\n  example(name: Examples): Observable<Analysis.Result> {\n    return this.http.get(`assets/data/analysis-examples/${name}.tsv`, {responseType: 'text'}).pipe(\n      switchMap(example => this.analyse(example))\n    )\n  }\n\n\n}\n","import {Injectable} from '@angular/core';\nimport {BehaviorSubject} from \"rxjs\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DarkService {\n\n  private _body: HTMLBodyElement | null;\n  private _isDark: boolean = false;\n\n  private readonly $_dark = new BehaviorSubject(this._isDark);\n  public readonly $dark = this.$_dark.asObservable();\n\n  constructor() {\n    this._body = document.querySelector('body');\n\n    // Update theme if other tabs are changing it\n    // window.addEventListener('storage', (e) => {\n    //   if (e.key === 'is-dark') this.isDark = JSON.parse(e.newValue || 'false');\n    // });\n\n    const localValue = localStorage.getItem('is-dark');\n    if (localValue) this.isDark = JSON.parse(localValue);\n    else if (window.matchMedia('(prefers-color-scheme)').media !== 'not all') {\n      this.isDark = window.matchMedia('(prefers-color-scheme: dark)').matches;\n    }\n  }\n\n  get isDark(): boolean {\n    return this._isDark;\n  }\n\n  set isDark(value: boolean) {\n    this._isDark = value;\n    localStorage.setItem('is-dark', JSON.stringify(value));\n    if (value) this._body?.classList.add('dark');\n    else this._body?.classList.remove('dark');\n    this.$_dark.next(this._isDark);\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {BehaviorSubject, distinctUntilChanged, map, Observable, tap} from \"rxjs\";\nimport {isArray, isBoolean} from \"lodash\";\n\n\nexport interface UrlParam<T> {\n  value: T\n  otherTokens?: string[]\n}\n\nexport type State = {\n  [token: string]: UrlParam<any>\n  select: UrlParam<(string | number)[]>\n  flag: UrlParam<(string | number)[]>\n  flagInteractors: UrlParam<boolean>\n  overlay: UrlParam<string>\n  analysis: UrlParam<string | null>\n  analysisProfile: UrlParam<string | null>\n};\n\ntype ObservableState = { [K in keyof State as `${K & string}$`]: Observable<State[K]['value']> };\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DiagramStateService {\n\n  private propagate = false;\n\n\n  private state: State = {\n    select: {otherTokens: ['SEL'], value: []},\n    flag: {otherTokens: ['FLG'], value: []},\n    flagInteractors: {otherTokens: ['FLGINT'], value: false},\n    overlay: {value: ''},\n    analysis: {value: null, otherTokens: ['ANALYSIS']},\n    analysisProfile: {value: null},\n  };\n\n  private _state$ = new BehaviorSubject<State>(this.state);\n  public state$ = this._state$.asObservable();\n  public onChange: ObservableState = Object.keys(this.state)\n    .reduce((properties, prop: keyof State) => {\n      properties[`${prop}$`] = this.state$.pipe(\n        map(state => state[prop].value),\n        distinctUntilChanged((v1, v2) => v1?.toString() === v2?.toString()),\n        tap(v => console.log(`${prop} has been updated to ${v}`)),\n        // share()\n      )\n      return properties;\n    }, {} as ObservableState);\n\n  constructor(route: ActivatedRoute, private router: Router) {\n    route.queryParamMap.subscribe(params => {\n      for (const mainToken in this.state) {\n        const param = this.state[mainToken];\n        const tokens: string[] = [mainToken, ...param.otherTokens || []];\n        const token = tokens.find(token => params.has(token));\n        if (token) {\n          const formerValue = param.value;\n          if (isArray(param.value)) {\n            const rawValue = params.get(token)!;\n            param.value = rawValue.split(',').map(v => v.charAt(0).match(/d/) ? parseInt(v) : v);\n          } else if (isBoolean(param.value)) {\n            param.value = params.get(token) === 'true';\n          } else {\n            param.value = params.get(token)!;\n          }\n        }\n      }\n      if (this.propagate) this._state$.next(this.state);\n    })\n  }\n\n  get<T extends keyof State>(token: T): State[T]['value'] {\n    return this.state[token].value\n  }\n\n  set<T extends keyof State>(token: T, value: State[T][\"value\"], propagate = true): void {\n    this.state[token].value = value;\n    this.propagate = propagate;\n    this.onPropertyModified();\n  }\n\n  // TODO make unselect remove select from state\n  onPropertyModified() {\n    return this.router.navigate([], {\n      queryParams: {\n        ...Object.entries(this.state)\n          .filter(([token, param]) => param.value && param.value.length !== 0)\n          .reduce((acc, [token, param]) => ({\n            ...acc,\n            [token]: Array.isArray(param.value) ? param.value.join(',') : param.value\n          }), {})\n      }\n    })\n  }\n\n\n}\n","import {Injectable} from '@angular/core';\nimport {catchError, forkJoin, map, Observable, of, switchMap, tap} from \"rxjs\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {Diagram, Edge, Node, NodeConnector, Position, Prop, Rectangle} from \"../model/diagram.model\";\nimport {Graph} from \"../model/graph.model\";\nimport Reactome, {Style} from \"reactome-cytoscape-style\";\nimport legend from \"../../assets/json/legend.json\"\nimport {array} from \"vectorious\";\n\nimport cytoscape from \"cytoscape\";\nimport cytoscapeFcose, {FcoseLayoutOptions} from \"cytoscape-fcose\";\nimport NodeDefinition = Reactome.Types.NodeDefinition;\nimport ReactionDefinition = Reactome.Types.ReactionDefinition;\nimport EdgeTypeDefinition = Reactome.Types.EdgeTypeDefinition;\nimport {environment} from \"../../environments/environment\";\n\ncytoscape.use(cytoscapeFcose)\n\n\ntype RelativePosition = { distances: number[], weights: number[] };\n\nconst posToStr = (edge: Edge, pos: Position) => `${edge.id}-${pos.x},${pos.y}`\n\nconst pointToStr = (point: Position) => `${point.x};${point.y}`;\n\nconst scale = <T extends Position | number>(pos: T, scale = 2): T => {\n  if (typeof pos === 'number') return pos * scale as T\n  return {\n    x: pos.x * scale,\n    y: pos.y * scale\n  } as T\n}\n\nconst equal = (pos1: Position, pos2: Position) => pos1.x === pos2.x && pos1.y === pos2.y;\n\nconst avg = (positions: Position[]): Position => {\n  const sum = {x: 0, y: 0};\n  positions.forEach(pos => {\n    sum.x += pos.x;\n    sum.y += pos.y;\n  });\n  sum.x /= positions.length;\n  sum.y /= positions.length;\n  return sum;\n}\nconst squaredDist = (pos1: Position, pos2: Position) => {\n  return Math.pow(pos2.x - pos1.x, 2) + Math.pow(pos2.y - pos1.y, 2)\n}\n\nconst dist = (pos1: Position, pos2: Position) => Math.sqrt(squaredDist(pos1, pos2))\n\nconst closestToAverage = (positions: Position[]): Position => {\n  const average = avg(positions);\n  let closest = positions[0];\n  let min = squaredDist(closest, average);\n  for (let i = 1; i < positions.length; i++) {\n    const pos = positions[i];\n    const dist = squaredDist(pos, average);\n    if (dist < min) {\n      min = dist;\n      closest = pos\n    }\n  }\n  return closest;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DiagramService {\n\n  extraLine: Map<string, Position> = new Map<string, Position>();\n  reverseExtraLine: Map<string, Position> = new Map<string, Position>();\n\n  constructor(private http: HttpClient) {\n  }\n\n  nodeTypeMap = new Map<string, NodeDefinition>([\n      ['Gene', ['Gene', 'PhysicalEntity']],\n      ['RNA', ['RNA', 'PhysicalEntity']],\n      ['Protein', ['Protein', 'PhysicalEntity']],\n      ['Entity', ['GenomeEncodedEntity', 'PhysicalEntity']],\n      ['Complex', ['Complex', 'PhysicalEntity']],\n      ['EntitySet', ['EntitySet', 'PhysicalEntity']],\n      ['Chemical', ['Molecule', 'PhysicalEntity']],\n      ['Cell', ['Cell', 'PhysicalEntity']],\n\n      ['ProteinDrug', ['Protein', 'PhysicalEntity', 'drug']],\n      ['ComplexDrug', ['Complex', 'PhysicalEntity', 'drug']],\n      ['ChemicalDrug', ['Molecule', 'PhysicalEntity', 'drug']],\n      ['EntitySetDrug', ['EntitySet', 'PhysicalEntity', 'drug']],\n\n      ['ProcessNode', ['SUB', 'Pathway']],\n      ['EncapsulatedNode', ['Interacting', 'Pathway']]\n    ]\n  )\n\n  reactionTypeMap = new Map<string | undefined, ReactionDefinition>([\n      [undefined, ['transition', 'reaction']],\n      ['transition', ['transition', 'reaction']],\n      ['Transition', ['transition', 'reaction']],\n      ['Process', ['transition', 'reaction']],\n\n      ['binding', ['association', 'reaction']],\n      ['Association', ['association', 'reaction']],\n\n      ['dissociation', ['dissociation', 'reaction']],\n      ['Dissociation', ['dissociation', 'reaction']],\n\n      ['omitted', ['omitted', 'reaction']],\n      ['Omitted Process', ['omitted', 'reaction']],\n\n      ['uncertain', ['uncertain', 'reaction']],\n      ['Uncertain Process', ['uncertain', 'reaction']],\n    ]\n  )\n\n  edgeTypeMap = new Map<string, EdgeTypeDefinition>([\n      ['INPUT', ['consumption', 'incoming', 'reaction']],\n      ['ACTIVATOR', ['positive-regulation', 'incoming', 'reaction']],\n      ['REQUIRED', ['positive-regulation', 'incoming', 'reaction']],\n      ['INHIBITOR', ['negative-regulation', 'incoming', 'reaction']],\n      ['CATALYST', ['catalysis', 'incoming', 'reaction']],\n      ['OUTPUT', ['production', 'outgoing', 'reaction']],\n    ]\n  )\n\n  edgeTypeToStr = new Map<string, string>([\n      ['INPUT', '-'],\n      ['ACTIVATOR', '+'],\n      ['REQUIRED', '+>'],\n      ['INHIBITOR', '|'],\n      ['CATALYST', 'o'],\n      ['OUTPUT', '>'],\n    ]\n  )\n\n\n  linkClassMap = new Map<string, EdgeTypeDefinition>([\n    ['EntitySetAndMemberLink', ['set-to-member', 'incoming']],\n    ['EntitySetAndEntitySetLink', ['set-to-member', 'incoming']],\n    ['Interaction', ['production', 'outgoing']],\n    ['FlowLine', ['production', 'outgoing']]\n  ])\n\n\n  random(min: number, max: number) {\n    return Math.floor((Math.random()) * (max - min + 1)) + min;\n  }\n\n  pick<T>(values: T[]): T {\n    return values[this.random(0, values.length - 1)];\n  }\n\n  private readonly COMPARTMENT_SHIFT = 35;\n\n  public getLegend(): Observable<cytoscape.ElementsDefinition> {\n    return of(legend)\n  }\n\n  public getNormalPathway(id: string): Observable<string> {\n    return this.http.get(`https://dev.reactome.org/ContentService/data/query/${id}/normalPathway`, {responseType: \"text\"}).pipe(\n      map(data => data.split('\\t')[0])\n    )\n  }\n\n  public getDiagram(id: number | string): Observable<cytoscape.ElementsDefinition> {\n    return forkJoin({\n      diagram: this.http.get<Diagram>(`${environment.host}/download/current/diagram/${id}.json`),\n      graph: this.http.get<Graph.Data>(`${environment.host}/download/current/diagram/${id}.graph.json`)\n    }).pipe(\n      tap(({diagram, graph}) => console.log('Normal diagram:', diagram, 'Normal graph', graph)),\n      switchMap(({diagram, graph}) => {\n        if (diagram.forNormalDraw !== undefined && !diagram.forNormalDraw) {\n          return this.getNormalPathway(diagram.stableId).pipe(\n            switchMap(normalPathwayId => forkJoin({\n              normalDiagram: this.http.get<Diagram>(`${environment.host}/download/current/diagram/${normalPathwayId}.json`),\n              normalGraph: this.http.get<Graph.Data>(`${environment.host}/download/current/diagram/${normalPathwayId}.graph.json`)\n            })),\n            tap(({\n                   normalGraph,\n                   normalDiagram\n                 }) => console.log('Normal diagram:', normalGraph, 'Normal graph', normalDiagram)),\n            map(({normalGraph, normalDiagram}) => {\n              graph.nodes.push(...normalGraph.nodes);\n              graph.edges.push(...normalGraph.edges);\n              if (normalDiagram.shadows) {\n                normalDiagram.shadows.forEach(shadow => shadow.isFadeOut = true);\n                diagram.shadows = diagram.shadows || [];\n                diagram.shadows.push(...normalDiagram.shadows);\n\n                graph.subpathways = graph.subpathways || [];\n                graph.subpathways.push(...normalGraph.subpathways);\n              }\n              return {diagram, graph};\n            }),\n            catchError(err => of({diagram, graph}))\n          )\n        } else {\n          return of({diagram, graph});\n        }\n      }),\n      tap((mergedResponse) => console.log('All responses:', mergedResponse)),\n      map(({diagram, graph}) => {\n\n        console.log(\"edge.reactionType\", new Set(diagram.edges.flatMap(edge => edge.reactionType)))\n        console.log(\"node.connectors.types\", new Set(diagram.nodes.flatMap(node => node.connectors.flatMap(con => con.type))))\n        console.log(\"node.renderableClass\", new Set(diagram.nodes.flatMap(node => node.renderableClass)))\n        console.log(\"links.renderableClass\", new Set(diagram.links.flatMap(link => link.renderableClass)))\n        console.log(\"shadow.renderableClass\", new Set(diagram.shadows.flatMap(shadow => shadow.renderableClass)))\n\n        const idToEdges = new Map<number, Edge>(diagram.edges.map(edge => [edge.id, edge]));\n        const idToNodes = new Map<number, Node>(diagram.nodes.map(node => [node.id, node]));\n        const reactomeIdToEdge = new Map<number, Edge>(\n          [\n            // ...diagram.nodes.map(node => [node.reactomeId, node]),\n            ...diagram.edges.map(edge => [edge.reactomeId, edge])\n          ] as [number, Edge][]\n        );\n\n        const edgeIds = new Map<string, number>();\n        const forwardArray = diagram.edges.flatMap(edge => edge.segments.map(segment => [posToStr(edge, scale(segment.from)), scale(segment.to)])) as [string, Position][];\n        this.extraLine = new Map<string, Position>(forwardArray);\n        console.assert(forwardArray.length === this.extraLine.size, \"Some edge diagram have been lost because 2 segments are starting from the same point\")\n\n        const backwardArray = diagram.edges.flatMap(edge => edge.segments.map(segment => [posToStr(edge, scale(segment.to)), scale(segment.from)])) as [string, Position][];\n        this.reverseExtraLine = new Map<string, Position>(backwardArray);\n        console.assert(backwardArray.length == this.reverseExtraLine.size, \"Some edge diagram have been lost because 2 segments are ending at the same point\")\n\n\n        const subpathwayIds = new Set<number>(diagram.shadows.map((shadow) => shadow.reactomeId))\n\n        const eventIdToSubPathwayId = new Map<number, number>(graph.subpathways?.flatMap(subpathway => subpathway.events\n          .map(event => [event, subpathway.dbId])\n          .filter(entry => subpathwayIds.has(entry[1]))) as [number, number][] || [])\n\n        const subpathwayIdToEventIds = new Map<number, number[]>(graph.subpathways?.map(subpathway => [subpathway.dbId, subpathway.events]));\n\n        // create a node id - graph node mapping\n        const dbIdToGraphNode = new Map<number, Graph.Node>(graph.nodes.map(node => ([node.dbId, node]) || []))\n        const mappingList: [number, Graph.Node][] = graph.nodes.flatMap(node => {\n          if (node.children && node.children.length === 1) { // Consider homomer complex like their constituents for interactors\n            return node.diagramIds?.map(id => [id, dbIdToGraphNode.get(node.children[0])])\n              .filter(entry => entry[1] !== undefined) as [number, Graph.Node][]\n          } else {\n            return node.diagramIds?.map(id => [id, node]) as [number, Graph.Node][]\n          }\n        }).filter(entry => entry !== undefined);\n\n        const idToGraphNodes = new Map([...mappingList]);\n        const idToGraphEdges = new Map(graph.edges.map(edge => [edge.dbId, edge]));\n\n        const getLeaves = (node: Graph.Node, leaves: Set<Graph.Node>) => {\n          if (node.leaves && node.leaves.length > 0) {\n            node.leaves.forEach(leave => leaves.add(leave));\n          } else {\n            if (node.children && node.children.length > 0)\n              node.children.forEach(child => getLeaves(dbIdToGraphNode.get(child)!, leaves))\n            else\n              leaves.add(node);\n          }\n        }\n\n        idToGraphNodes.forEach(node => {\n          let leaves = new Set<Graph.Node>();\n          getLeaves(node, leaves);\n          node.leaves = [...leaves];\n        })\n\n        const dbIdToGraphEdge = new Map<number, Graph.Edge>(graph.edges.map(edge => ([edge.dbId, edge]) || []))\n\n        const hasFadeOut = diagram.nodes.some(node => node.isFadeOut);\n        const normalNodes = diagram.nodes.filter(node => node.isFadeOut);\n        const specialNodes = diagram.nodes.filter(node => !node.isFadeOut);\n        const posToNormalNode = new Map(normalNodes.map(node => [pointToStr(node.position), node]));\n        const posToSpecialNode = new Map(specialNodes.map(node => [pointToStr(node.position), node]));\n\n        const normalEdges = diagram.edges.filter(edge => edge.isFadeOut);\n        const specialEdges = diagram.edges.filter(edge => !edge.isFadeOut);\n        const posToNormalEdge = new Map(normalEdges.map(edge => [pointToStr(edge.position), edge]));\n        const posToSpecialEdge = new Map(specialEdges.map(edge => [pointToStr(edge.position), edge]));\n\n        //compartment nodes\n        const compartmentNodes: cytoscape.NodeDefinition[] = diagram?.compartments.flatMap(item => {\n          const propToRects = (prop: Prop): { [p: string]: number } => ({\n            left: scale(prop.x),\n            top: scale(prop.y),\n            right: scale(prop.x + prop.width),\n            bottom: scale(prop.x + prop.height),\n          })\n\n          let innerCR = 10;\n          let outerCR\n          if (item.insets) {\n            const rects = [propToRects(item.prop), propToRects(item.insets)]\n            outerCR = Object.keys(rects[0]).reduce((smallest, key) => Math.min(smallest, Math.abs(rects[0][key] - rects[1][key])), Number.MAX_SAFE_INTEGER);\n            outerCR = innerCR + Math.min(outerCR, 100)\n          }\n\n          const layers: cytoscape.NodeDefinition[] = [\n            {\n              data: {\n                id: item.id + '-outer',\n                displayName: item.displayName,\n                textX: scale(item.textPosition.x - (item.prop.x + item.prop.width)) + this.COMPARTMENT_SHIFT,\n                textY: scale(item.textPosition.y - (item.prop.y + item.prop.height)) + this.COMPARTMENT_SHIFT,\n                width: scale(item.prop.width),\n                height: scale(item.prop.height),\n                radius: outerCR\n              },\n              classes: ['Compartment', 'outer'],\n              position: scale(item.position),\n              selectable: false,\n            }\n          ];\n\n          if (item.insets) {\n            layers.push({\n              data: {\n                id: item.id + '-inner',\n                width: scale(item.insets.width),\n                height: scale(item.insets.height),\n                radius: innerCR\n              },\n              classes: ['Compartment', 'inner'],\n              position: scale({x: item.insets.x + item.insets.width / 2, y: item.insets.y + item.insets.height / 2}),\n              selectable: false,\n            })\n          }\n          return layers;\n        });\n\n        const replacementMap = new Map<string, string>();\n\n        //reaction nodes\n        const reactionNodes: cytoscape.NodeDefinition[] = diagram?.edges.map(item => {\n          let replacement, replacedBy;\n          if (item.isFadeOut) {\n            replacedBy = posToSpecialEdge.get(pointToStr(item.position))?.id.toString() || specialEdges.find(edge => squaredDist(scale(edge.position), scale(item.position)) < 5 ** 2)?.id.toString();\n            if (replacedBy) {\n              replacementMap.set(item.id.toString(), replacedBy)\n              replacementMap.set(replacedBy, item.id.toString())\n            }\n          }\n          if (!item.isFadeOut) {\n            replacement = posToNormalEdge.get(pointToStr(item.position))?.id.toString() || normalEdges.find(edge => squaredDist(scale(edge.position), scale(item.position)) < 5 ** 2)?.id.toString();\n          }\n          return ({\n            data: {\n              id: item.id + '',\n              // displayName: item.displayName,\n              inputs: item.inputs,\n              output: item.outputs,\n              isFadeOut: item.isFadeOut,\n              isBackground: item.isFadeOut,\n              reactomeId: item.reactomeId,\n              reactionId: item.id,\n              graph: idToGraphEdges.get(item.reactomeId),\n              replacement, replacedBy\n            },\n            classes: this.reactionTypeMap.get(item.reactionType),\n            position: scale(item.position)\n          });\n        });\n\n\n        //entity nodes\n        const entityNodes: cytoscape.NodeDefinition[] = diagram?.nodes.flatMap(item => {\n          const classes = [...this.nodeTypeMap.get(item.renderableClass)!] || [item.renderableClass.toLowerCase()];\n          let replacedBy: string | undefined;\n          let replacement: string | undefined;\n          if (item.isDisease) classes.push('disease');\n          if (item.isCrossed) classes.push('crossed');\n          if (item.trivial) classes.push('trivial');\n          if (item.needDashedBorder) classes.push('loss-of-function');\n          if (item.isFadeOut) {\n            replacedBy = posToSpecialNode.get(pointToStr(item.position))?.id.toString()\n            if (!replacedBy) {\n              replacedBy = specialNodes.find(node => overlapLimited(item, node, 0.8))?.id.toString();\n            }\n            if (replacedBy) {\n              replacementMap.set(item.id.toString(), replacedBy)\n              replacementMap.set(replacedBy, item.id.toString())\n            }\n          }\n          if (!item.isFadeOut) replacement = posToNormalNode.get(pointToStr(item.position))?.id.toString() //|| normalNodes.find(node => overlap(item, node))?.id.toString();\n          if (classes.some(clazz => clazz === 'RNA')) item.prop.height -= 10;\n          if (classes.some(clazz => clazz === 'Cell')) item.prop.height /= 2;\n\n          const isBackground = item.isFadeOut || classes.some(clazz => clazz === 'Pathway') || item.connectors.some(connector => connector.isFadeOut);\n          item.isBackground = isBackground;\n          let html = undefined;\n          let width = scale(item.prop.width);\n          let height = scale(item.prop.height);\n          let preferredId = idToGraphNodes.get(item.id)?.identifier;\n          if (classes.some(clazz => clazz === 'Protein')) {\n            html = this.getStructureVideoHtml({...item, type: 'Protein'}, width, height, preferredId);\n          } else if (classes.some(clazz => clazz === 'Molecule')) {\n            html = `<img src=\"https://www.ebi.ac.uk/chebi/displayImage.do?defaultImage=true&chebiId=${preferredId}&dimensions=1080&transbg=true\" style=\"max-width: ${width / 2 - 4}px; max-height:${height}px\" alt=\"\">`;\n          }\n          if (isBackground && !item.isFadeOut) {\n            replacementMap.set(item.id.toString(), item.id.toString())\n          }\n          const isFadeOut = !item.isCrossed && item.isFadeOut;\n          const nodes: cytoscape.NodeDefinition[] = [\n            {\n              data: {\n                id: item.id + '',\n                reactomeId: item.reactomeId,\n                displayName: item.displayName.replace(/([/,:;-])/g, \"$1\\u200b\"),\n                height: height,\n                width: width,\n                graph: idToGraphNodes.get(item.id),\n                acc: preferredId,\n                html,\n                isFadeOut,\n                isBackground,\n                replacement,\n                replacedBy\n              },\n              classes: classes,\n              position: scale(item.position)\n            }\n          ];\n          if (item.nodeAttachments) {\n            nodes.push(...item.nodeAttachments.map(ptm => ({\n              data: {\n                id: item.id + '-' + ptm.reactomeId,\n                reactomeId: ptm.reactomeId,\n                nodeId: item.id,\n                nodeReactomeId: item.reactomeId,\n                displayName: ptm.label,\n                height: scale(ptm.shape.b.y - ptm.shape.a.y),\n                width: scale(ptm.shape.b.x - ptm.shape.a.x),\n                isFadeOut,\n                isBackground,\n                replacement,\n                replacedBy\n              },\n              classes: \"Modification\",\n              position: scale(ptm.shape.centre)\n            })))\n          }\n          return nodes\n        });\n\n        //sub pathways\n        const shadowNodes: cytoscape.NodeDefinition[] = diagram?.shadows.map(item => {\n          return {\n            data: {\n              id: item.id + '',\n              displayName: item.displayName,\n              height: scale(item.prop.height),\n              width: scale(item.prop.width),\n              reactomeId: item.reactomeId,\n              isFadeOut: item.isFadeOut,\n              replacedBy: item.isFadeOut,\n              triggerPosition: scale(item.maxX)\n            },\n            classes: ['Shadow'],\n            position: closestToAverage(subpathwayIdToEventIds.get(item.reactomeId)!.map(reactionId => reactomeIdToEdge.get(reactionId)!).map(edge => scale(edge!.position)))\n          }\n        });\n\n        avoidOverlap(shadowNodes);\n\n        const T = 4;\n        const ARROW_MULT = 1.5;\n        const EDGE_MARGIN = 6;\n        const REACTION_RADIUS = 3 * T;\n        const MIN_DIST = EDGE_MARGIN;\n\n\n        /**\n         * iterate nodes connectors to get all edges information based on the connector type.\n         *\n         */\n        const edges: cytoscape.EdgeDefinition[] =\n          diagram.nodes.flatMap(node => {\n              return node.connectors.map(connector => {\n                const reaction = idToEdges.get(connector.edgeId)!;\n\n                const reactionP = scale(reaction.position);\n                const nodeP = scale(node.position);\n\n                const [source, target] = connector.type !== 'OUTPUT' ?\n                  [node, reaction] :\n                  [reaction, node];\n\n                const sourceP = scale(source.position);\n                const targetP = scale(target.position);\n\n                let points = connector.segments\n                  .flatMap((segment, i) => i === 0 ? [segment.from, segment.to] : [segment.to])\n                  .map(pos => scale(pos));\n                if (connector.type === 'OUTPUT') points.reverse();\n                if (points.length === 0) points.push(reactionP);\n\n                this.addEdgeInfo(reaction, points, 'backward', sourceP);\n                this.addEdgeInfo(reaction, points, 'forward', targetP);\n\n                let [from, to] = [points.shift()!, points.pop()!]\n                from = from ?? nodeP; // Quick fix to avoid problem with reaction without visible outputs like R-HSA-2424252 in R-HSA-1474244\n                to = to ?? reactionP; // Quick fix to avoid problem with reaction without visible outputs like R-HSA-2424252 in R-HSA-1474244\n                if (connector.type === 'CATALYST') {\n                  to = scale(connector.endShape.centre);\n                }\n\n                // points = addRoundness(from, to, points);\n                const relatives = this.absoluteToRelative(from, to, points);\n\n                const classes = [...this.edgeTypeMap.get(connector.type)!];\n                if (reaction.isDisease) classes.push('disease');\n                if (node.trivial) classes.push('trivial');\n                if (eventIdToSubPathwayId.has(reaction.reactomeId)) classes.push('shadow');\n\n                let d = dist(from, to);\n                if (equal(from, reactionP) || equal(to, reactionP)) d -= REACTION_RADIUS;\n                if (classes.includes('positive-regulation') || classes.includes('catalysis') || classes.includes('production')) d -= ARROW_MULT * T;\n                // console.assert(d > MIN_DIST, `The edge between reaction: R-HSA-${reaction.reactomeId} and entity: R-HSA-${node.reactomeId} in pathway ${id} has a visible length of ${d} which is shorter than ${MIN_DIST}`)\n                console.assert(d > MIN_DIST, `${id}\\t${diagram.displayName}\\t${hasFadeOut}\\tR-HSA-${reaction.reactomeId}\\tR-HSA-${node.reactomeId}\\thttps://release.reactome.org/PathwayBrowser/#/${id}&SEL=R-HSA-${reaction.reactomeId}&FLG=R-HSA-${node.reactomeId}\\thttps://reactome-pwp.github.io/PathwayBrowser/${id}?select=${reaction.reactomeId}&flag=${node.reactomeId}`)\n\n                let replacement, replacedBy;\n                if (connector.isFadeOut) {\n                  // First case: same node is used both special and normal context\n                  // replacedBy = node.connectors.find(otherConnector => otherConnector !== connector && !otherConnector.isFadeOut && samePoint(idToEdges.get(otherConnector.edgeId)!.position, reaction.position))?.edgeId;\n                  // Second case: different nodes are used between special and normal context\n                  // replacedBy = replacedBy || (posToSpecialNode.get(pointToStr(node.position)) && posToSpecialEdge.get(pointToStr(reaction.position)))?.id;\n\n                  replacedBy = replacementMap.get(node.id.toString()) && replacementMap.get(reaction.id.toString())\n                }\n                if (!connector.isFadeOut) {\n                  // First case: same node is used both special and normal context\n                  replacement = node.connectors.find(otherConnector => otherConnector !== connector && otherConnector.isFadeOut && samePoint(idToEdges.get(otherConnector.edgeId)!.position, reaction.position))?.edgeId;\n                  // console.log(\"Reaction edge\", replacement)\n\n                  // Second case: different nodes are used between special and normal context\n                  replacement = replacement || (posToNormalNode.get(pointToStr(node.position)) && posToNormalEdge.get(pointToStr(reaction.position)))?.id;\n                  // console.log(\"Reaction edge\", replacement)\n\n                }\n                const edge: cytoscape.EdgeDefinition = {\n                  data: {\n                    id: this.getEdgeId(source, connector, target, edgeIds),\n                    graph: dbIdToGraphEdge.get(reaction.reactomeId),\n                    source: source.id + '',\n                    target: target.id + '',\n                    stoichiometry: connector.stoichiometry.value,\n                    weights: relatives.weights.join(\" \"),\n                    distances: relatives.distances.join(\" \"),\n                    sourceEndpoint: this.endpoint(sourceP, from),\n                    targetEndpoint: this.endpoint(targetP, to),\n                    pathway: eventIdToSubPathwayId.get(reaction.reactomeId),\n                    reactomeId: reaction.reactomeId,\n                    reactionId: reaction.id,\n                    isFadeOut: reaction.isFadeOut,\n                    isBackground: reaction.isFadeOut,\n                    replacedBy, replacement\n                  },\n                  classes: classes\n                };\n                return edge\n              });\n            }\n          );\n\n        const linkEdges: cytoscape.EdgeDefinition[] = diagram.links\n          ?.filter(link => !link.renderableClass.includes('EntitySet') || link.inputs[0].id !== link.outputs[0].id)\n          ?.map(link => {\n              const source = idToNodes.get(link.inputs[0].id)!;\n              const target = idToNodes.get(link.outputs[0].id)!;\n\n              const sourceP = scale(source.position);\n              const targetP = scale(target.position);\n\n              let points = link.segments\n                .flatMap((segment, i) => i === 0 ? [segment.from, segment.to] : [segment.to])\n                .map(pos => scale(pos));\n\n              let [from, to] = [points.shift()!, points.pop()!]\n              from = from ?? sourceP; // Quick fix to avoid problem with reaction without visible outputs like R-HSA-2424252 in R-HSA-1474244\n              to = to ?? targetP; // Quick fix to avoid problem with reaction without visible outputs like R-HSA-2424252 in R-HSA-1474244\n\n              // points = addRoundness(from, to, points);\n              const relatives = this.absoluteToRelative(from, to, points);\n\n              const classes = [...this.linkClassMap.get(link.renderableClass)!];\n              if (link.isDisease) classes.push('disease');\n              const isBackground = link.isFadeOut ||\n                idToNodes.get(link.inputs[0].id)?.isBackground &&\n                idToNodes.get(link.outputs[0].id)?.isBackground;\n\n              return {\n                data: {\n                  id: link.id + '',\n                  source: link.inputs[0].id + '',\n                  target: link.outputs[0].id + '',\n                  weights: relatives.weights.join(\" \"),\n                  distances: relatives.distances.join(\" \"),\n                  sourceEndpoint: this.endpoint(sourceP, from),\n                  targetEndpoint: this.endpoint(targetP, to),\n                  isFadeOut: link.isFadeOut,\n                  isBackground: isBackground\n                },\n                classes: classes,\n                selectable: false\n              }\n            }\n          )\n\n        return {\n          nodes: [...compartmentNodes, ...reactionNodes, ...entityNodes, ...shadowNodes],\n          edges: [...edges, ...linkEdges]\n        };\n      }),\n      tap((output) => console.log('Output:', output)),\n    )\n\n  }\n\n  getStructureVideoHtml(item: {\n    id: string | number,\n    type: string\n  }, width: number, height: number, uniprotId: string | undefined) {\n    if (item.type === 'Protein')\n      return `<video loop id=\"video-${item.id}\" width=\"${width + 10}\" height=\"${height + 10}\"  preload=\"none\">\n                <source src=\"${environment.s3}/structures/${uniprotId}.mov\" type=\"video/quicktime\">\n                <source src=\"${environment.s3}/structures/${uniprotId}.webm\" type=\"video/webm\">\n              </video>`;\n    return undefined;\n  }\n\n  private getEdgeId(source: Edge | Node, connector: NodeConnector, target: Edge | Node, edgeIds: Map<string, number>) {\n    let edgeId = `${source.id} --${this.edgeTypeToStr.get(connector.type)} ${target.id}`;\n\n    if (edgeIds.has(edgeId)) {\n      let count = edgeIds.get(edgeId)!;\n      edgeIds.set(edgeId, count++);\n      edgeId += ` (${count})`;\n      console.warn('Conflicting edge id: ', edgeId)\n    } else {\n      edgeIds.set(edgeId, 0)\n    }\n    return edgeId;\n  }\n\n  private addEdgeInfo(edge: Edge, points: Position[], direction: 'forward' | 'backward', stop: Position) {\n    const stopPos = posToStr(edge, stop);\n    if (direction === 'forward') {\n      const map = this.extraLine;\n      let pos = posToStr(edge, points.at(-1)!)\n      while (map.has(pos) && pos !== stopPos) {\n        points.push(map.get(pos)!)\n        pos = posToStr(edge, points.at(-1)!)\n      }\n    } else {\n      const map = this.reverseExtraLine;\n      let pos = posToStr(edge, points.at(0)!)\n      while (map.has(pos) && pos !== stopPos) {\n        points.unshift(map.get(pos)!)\n        pos = posToStr(edge, points.at(0)!)\n      }\n    }\n  }\n\n  private endpoint(source: Position, point: Position): string {\n    return `${point.x - source.x} ${point.y - source.y}`\n  }\n\n\n  /**\n   * Use Matrix power to convert points from an absolute coordinate system to an edge relative system\n   *\n   * Visually explained by https://youtu.be/kYB8IZa5AuE?si=vJKi-MUv2dCRQ5oA<br>\n   * Short version ==> https://math.stackexchange.com/q/1855051/683621\n   * @param source Position position of the edge source:  {x:number, y:number}\n   * @param target Position position of the edge target:  {x:number, y:number}\n   * @param toConvert Array of Position to convert to the edge-relative system\n   * @return The points converted to relative coordinates {distances: number[], weights: number[]}\n   */\n  private absoluteToRelative(source: Position, target: Position, toConvert: Position[]): RelativePosition {\n    const relatives: RelativePosition = {distances: [], weights: []};\n    if (toConvert.length === 0) return relatives;\n\n    const mainVector = array([target.x - source.x, target.y - source.y]); // Edge vector\n    const orthoVector = array([-mainVector.y, mainVector.x]) // Perpendicular vector\n      .normalize(); //Normalized to have the distance expressed in pixels https://math.stackexchange.com/a/413235/683621\n    let transform = array([\n      [mainVector.x, mainVector.y],\n      [orthoVector.x, orthoVector.y],\n    ]).inv(); // Should always be invertible if the ortho vector is indeed perpendicular\n\n    for (let coord of toConvert) {\n      const absolute = array([[coord.x - source.x, coord.y - source.y]]);\n      const relative = absolute.multiply(transform);\n      relatives.weights.push(relative.get(0, 0))\n      relatives.distances.push(relative.get(0, 1))\n    }\n    return relatives;\n  }\n\n  public randomNetwork(): Observable<cytoscape.ElementsDefinition> {\n    const amount = 100;\n    const peTypes = ['Protein', 'EntitySet', 'GenomeEncodedEntity', 'RNA', 'Gene', 'Complex', 'Molecule'];\n    // const peTypes = ['Gene'];\n    const reactionTypes = ['association', 'dissociation', 'transition', 'uncertain', 'omitted'];\n\n    const physicalEntities: cytoscape.NodeDefinition[] = Array.from({length: amount}, (x, i) => {\n      const clazz = this.pick(peTypes);\n      return {\n        group: 'nodes',\n        data: {\n          id: i.toString(),\n          width: this.random(150, 300),\n          height: this.random(50, 150),\n          displayName: clazz,\n          parent: 'Compartment'\n        },\n        classes: [clazz, \"PhysicalEntity\", this.pick([\"drug\", \"\", \"\"])]\n      };\n    });\n\n    const reactions: cytoscape.NodeDefinition[] = physicalEntities.map((node, i) =>\n      ({\n        group: 'nodes',\n        data: {\n          id: `${i}-react`,\n          parent: 'Compartment'\n        },\n        classes: [this.pick(reactionTypes), 'reaction']\n      })\n    );\n\n    const nodes: cytoscape.NodeDefinition[] = physicalEntities.flatMap((node, i) =>\n      [node, reactions[i]]\n    );\n\n\n    const inOut: cytoscape.EdgeDefinition[] = physicalEntities.flatMap((node, i) => [\n      {\n        group: 'edges',\n        data: {\n          source: `${i}`,\n          target: `${i}-react`,\n          stoichiometry: this.pick([undefined, -1, 0, 1, 2])\n        },\n        classes: ['consumption']\n      },\n      {\n        group: 'edges',\n        data: {\n          source: `${i}-react`,\n          target: `${(i + 1) % amount}`,\n          stoichiometry: this.pick([undefined, -1, 0, 1, 2])\n        },\n\n        classes: ['production']\n      },\n    ])\n\n    const additionalIn: cytoscape.EdgeDefinition[] = Array.from({length: amount / 4}).map(() => ({\n      group: 'edges',\n      data: {\n        source: this.pick(physicalEntities).data.id!,\n        target: this.pick(reactions).data.id!,\n      },\n      classes: this.pick(['catalysis', 'positive-regulation', 'negative-regulation', 'set-to-member'])\n    }));\n\n\n    const edges: cytoscape.EdgeDefinition[] = [...inOut, ...additionalIn];\n\n    return of({ // list of graph elements to start with\n      nodes: [\n        {\n          data: {id: 'Compartment'},\n          classes: ['Compartment'],\n          pannable: true,\n          grabbable: false,\n          selectable: false\n        },\n        ...nodes\n      ]\n      , edges\n    })\n  }\n}\n\nfunction samePoint(p1: Position, p2: Position) {\n  return p1.x === p2.x && p1.y === p2.y\n}\n\nfunction overlapLimited(nodeA: Node, nodeB: Node, limit: number = 0.8): boolean {\n  if (nodeA.position.x === nodeB.position.x && nodeA.position.y === nodeB.position.y) return true;\n  const rectA = getRect(nodeA), rectB = getRect(nodeB);\n  const o: Rectangle = {\n    left: Math.max(rectA.left, rectB.left),\n    right: Math.min(rectA.right, rectB.right),\n    top: Math.max(rectA.top, rectB.top),\n    bottom: Math.min(rectA.bottom, rectB.bottom)\n  }\n  return (o.left < o.right && o.top < o.bottom) && ((area(o) / area(rectA)) > limit);\n}\n\nfunction overlap(nodeA: Node, nodeB: Node): boolean {\n  if (nodeA.position.x === nodeB.position.x && nodeA.position.y === nodeB.position.y) return true;\n  const rectA = getRect(nodeA), rectB = getRect(nodeB);\n  return Math.max(rectA.left, rectB.left) < Math.min(rectA.right, rectB.right)\n    && Math.max(rectA.top, rectB.top) < Math.min(rectA.bottom, rectB.bottom);\n}\n\nfunction area(rect: Rectangle) {\n  return (rect.right - rect.left) * (rect.bottom - rect.top)\n}\n\nfunction getRect(node: Node): Rectangle {\n  if (node.rect) return node.rect\n  const halfWidth = node.prop.width / 2;\n  const halfHeight = node.prop.height / 2;\n  node.rect = {\n    left: node.position.x - halfWidth,\n    right: node.position.x + halfWidth,\n    top: node.position.y - halfHeight,\n    bottom: node.position.y + halfHeight,\n  }\n  return node.rect;\n}\n\n/**\n * Create a temporary cytoscape session to apply a layout to the nodes in order to avoid them to overlap each others\n */\nfunction avoidOverlap(definitions: cytoscape.NodeDefinition[]) {\n  const container = document.createElement(\"div\");\n\n  const style = new Style(container, {});\n  const cy = cytoscape({\n    container: container,\n    style: style.getStyleSheet(),\n    elements: definitions,\n    layout: {name: 'preset'}\n  });\n\n  const nodes = cy.nodes();\n  nodes.forEach(node => {\n    const bb = node.boundingBox({includeLabels: true, includeNodes: false});\n    node.style({width: bb.w, height: bb.h})\n  })\n\n  const layout = nodes.layout({\n    name: 'fcose',\n    nodeRepulsion: 15,\n    animate: false,\n    fit: true,\n    packComponents: false,\n    randomize: false,\n    tile: false,\n  } as FcoseLayoutOptions);\n  layout.run()\n\n  definitions.forEach(def => def.position = cy.getElementById(def.data.id!).position());\n\n  cy.destroy()\n  container.remove()\n}\n","export function isDefined<T>(value: T | undefined | null): value is T {\n  return value !== undefined && value !== null\n}\n","export const environment = {\n  production: false,\n  host: \"https://dev.reactome.org\",\n  s3: \"https://s3.amazonaws.com/download.reactome.org\"\n};\n","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\n\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","import {extract} from \"../../properties-utils\";\nimport {DrawerProvider} from \"../types\";\n\n\nexport const gene: DrawerProvider = (properties, {\n  width,\n  height,\n  drug,\n  interactor,\n  disease,\n  lossOfFunction\n}) => {\n  const t = extract(properties.global.thickness);\n  const dHeight = extract(properties.gene.decorationHeight);\n  const dWidth = extract(properties.gene.decorationExtraWidth);\n  const headSize = extract(properties.gene.arrowHeadSize);\n  const radius = extract(properties.gene.arrowRadius);\n  const fill = extract(properties.gene.fill);\n  const stroke = interactor ? extract(properties.interactor.fill) : disease ? extract(properties.global.negativeContrast) : null;\n  const select = extract(properties.global.selectNode);\n  const hover = extract(properties.global.hoverNode);\n  const flag = extract(properties.global.flag);\n  const hh = Math.sqrt(Math.pow(headSize, 2) * 3 / 4)\n\n  const halfWidth = width / 2;\n\n  const r = extract(properties.gene.borderRadius);\n  const oR = r + t;\n  const iR = r - t;\n  const t_2 = t / 2;\n  const t2 = t * 2;\n  return {\n    background: {\n      \"background-image\": `\n          <path fill=\"${fill}\" class=\"gradient\" stroke-linecap=\"round\" transform=\"translate(${t_2} ${t_2})\"\n      ${stroke ? `stroke=\"${stroke}\" stroke-width=\"${t}\"` : ''}\n      ${lossOfFunction ? `stroke-dasharray=\"${t} ${t2}\"` : ''}  d=\"\n            M ${0} ${dHeight}\n            H ${width}\n            v ${height - dHeight - radius}\n            a ${radius} ${radius} 0 0 1 -${radius} ${radius}\n            H ${radius}\n            a ${radius} ${radius} 0 0 1 -${radius} -${radius}\n            Z\n          \"/>`,\n      \"bounds-expansion\": t_2,\n      \"background-clip\": \"none\",\n      \"background-image-containment\": \"over\",\n      \"background-position-x\": -t / 2,\n      \"background-position-y\": -t / 2,\n      \"background-width\": width + t,\n      \"background-height\": height + t,\n      requireGradient: true\n    },\n    decorators: [\n      {\n        \"background-image\": `\n          <path fill=\"none\" stroke=\"${fill}\" stroke-width=\"${t}\"  d=\"\n            M ${halfWidth} ${dHeight + 2 * t}\n            v -${dHeight - radius - (headSize + t) / 2 + 2 * t}\n            a ${radius} ${radius} 0 0 1 ${radius} -${radius}\n            h ${halfWidth - t - radius + dWidth}\n          \"/>\n            <path fill=\"${fill}\" stroke=\"${fill}\" stroke-width=\"${t}\" stroke-linejoin=\"round\"  d=\"\n            M ${width - hh - t_2 + dWidth} ${headSize / 2 + t_2}\n            v -${headSize / 2}\n            l ${hh} ${headSize / 2}\n            l -${hh} ${headSize / 2}\n            v -${headSize / 2}\n            z\n          \"/>`,\n        \"background-position-y\": -t / 2,\n        \"bounds-expansion\": dHeight,\n        \"background-height\": dHeight + 1.5 * t,\n        \"background-width\": width + dWidth,\n        \"background-clip\": \"none\",\n        \"background-image-containment\": \"over\",\n      }\n    ],\n    hover: {\n      \"background-image\": `<rect x=\"0\" y=\"0\" width=\"${width}\" height=\"${2 * t}\" fill=\"${hover}\"/>`,\n      \"background-position-y\": dHeight - t,\n      \"bounds-expansion\": t,\n      \"background-clip\": \"none\",\n      \"background-image-containment\": \"over\",\n      \"background-height\": 2 * t,\n    },\n    select: {\n      \"background-image\": `\n          <path fill=\"${select}\" stroke-linejoin=\"round\" stroke-linecap=\"round\"  d=\"\n            M 0 0\n            a ${oR} ${oR} 0 0 0 ${oR} ${oR}\n            h ${width - 2 * oR}\n            a ${oR} ${oR} 0 0 0 ${oR} -${oR}\n            a ${oR} ${iR} 0 0 1 -${oR} ${iR}\n            h -${width - 2 * oR}\n            a ${oR} ${iR} 0 0 1 -${oR} -${iR}\n            Z\"/>\n`,\n      \"background-position-y\": height - r,\n      \"bounds-expansion\": t,\n      \"background-clip\": \"none\",\n      \"background-image-containment\": \"over\",\n      \"background-height\": oR,\n    },\n    flag: {\n      \"background-image\": `\n       <path fill=\"${flag}\" d=\"\n       M 0 0\n       H ${width + 4 * t}\n       V ${height - dHeight - r + t}\n       a ${oR + t} ${oR} 0 0 1 -${oR + t} ${oR}\n       H ${oR + t}\n       a ${oR + t} ${oR} 0 0 1 -${oR + t} -${oR}\n       Z\n       \"/>\n`,\n      \"background-position-x\": -2 * t,\n      \"background-position-y\": dHeight - t,\n      \"bounds-expansion\": 2 * t,\n      \"background-clip\": \"none\",\n      \"background-image-containment\": \"over\",\n      \"background-width\": width + 4 * t,\n      \"background-height\": height + 2 * t - dHeight,\n    },\n    // analysis: {\n    //   \"background-image\": `${gradient}\n    //       <path fill=\"url(#gradient)\" transform=\"translate(${t_2} ${t_2})\"\n    //       d=\"\n    //         M ${0} ${dHeight}\n    //         H ${width}\n    //         v ${height - dHeight - radius}\n    //         a ${radius} ${radius} 0 0 1 -${radius} ${radius}\n    //         H ${radius}\n    //         a ${radius} ${radius} 0 0 1 -${radius} -${radius}\n    //         Z\n    //       \"/>`,\n    //   \"bounds-expansion\": t_2,\n    //   \"background-clip\": \"none\",\n    //   \"background-image-containment\": \"over\",\n    //   \"background-position-x\": -t / 2,\n    //   \"background-position-y\": -t / 2,\n    //   \"background-width\": width + t,\n    //   \"background-height\": height + t,\n    // }\n  }\n}\n\n\n","import {extract} from \"../../properties-utils\";\nimport {DrawerProvider} from \"../types\";\n\nexport const molecule: DrawerProvider = (properties, {width, height, drug, interactor}) => {\n  const select = extract(properties.global.selectNode);\n  const hover = extract(properties.global.hoverNode);\n  const flag = extract(properties.global.flag);\n  const thick = extract(properties.global.thickness);\n  const stroke = !interactor ? (\n    !drug ?\n      extract(properties.molecule.stroke) :\n      extract(properties.molecule.drug)\n  ) : extract(properties.interactor.fill);\n  const fill = extract(properties.molecule.fill);\n\n  const ht = thick / 2;\n  const halfHeight = height / 2;\n  const oR = halfHeight + thick;\n  const iR = halfHeight - thick;\n  const oRx = Math.min(oR, width / 2)\n  return {\n    hover: {\n      \"background-image\": `\n          <path fill=\"${hover}\" stroke-linejoin=\"round\" stroke-linecap=\"round\"  d=\"\n            M 0 ${oR}\n            a ${oRx} ${oR} 0 0 1 ${oRx} -${oR}\n            h ${width - 2 * oRx + thick}\n            a ${oRx} ${oR} 0 0 1 ${oRx} ${oR}\n            a ${oRx} ${iR} 0 0 0 -${oRx} -${iR}\n            h -${width - 2 * oRx + thick}\n            a ${oRx} ${iR} 0 0 0 -${oRx} ${iR}\n            Z\"/>\n`,\n      \"background-position-y\": -thick,\n      \"background-position-x\": -thick / 2,\n      \"bounds-expansion\": thick,\n      \"background-clip\": \"none\",\n      \"background-image-containment\": \"over\",\n      \"background-height\": oR,\n      \"background-width\": width + thick,\n    },\n    select: {\n      \"background-image\": `\n          <path fill=\"${select}\" stroke-linejoin=\"round\" stroke-linecap=\"round\"  d=\"\n            M 0 0\n            a ${oRx} ${oR} 0 0 0 ${oRx} ${oR}\n            h ${width - 2 * oRx + thick}\n            a ${oRx} ${oR} 0 0 0 ${oRx} -${oR}\n            a ${oRx} ${iR} 0 0 1 -${oRx} ${iR}\n            h -${width - 2 * oRx + thick}\n            a ${oRx} ${iR} 0 0 1 -${oRx} -${iR}\n            Z\"/>\n`,\n      \"background-position-y\": halfHeight,\n      \"background-position-x\": -thick / 2,\n      \"bounds-expansion\": thick,\n      \"background-clip\": \"none\",\n      \"background-image-containment\": \"over\",\n      \"background-height\": oR,\n      \"background-width\": width + thick,\n    },\n    flag: {\n      \"background-image\": `\n<rect width=\"${width + 4 * thick}\" height=\"${height + 2 * thick}\" rx=\"${oR + 2 * thick}\" ry=\"${oR}\" fill=\"${flag}\"/>\n<rect x=\"${2 * thick}\" y=\"${thick}\" width=\"${width}\" height=\"${height}\" rx=\"${oR}\" fill=\"${fill}\" stroke=\"${stroke}\" stroke-width=\"${thick}\"/>\n`,\n      \"background-position-x\": -2 * thick,\n      \"background-position-y\": -thick,\n      \"bounds-expansion\": 2 * thick,\n      \"background-clip\": \"none\",\n      \"background-image-containment\": \"over\",\n      \"background-width\": width + 4 * thick,\n      \"background-height\": height + 2 * thick,\n    },\n    analysis: {\n      \"background-image\": `<rect fill=\"url(#gradient)\" width=\"${width}\" height=\"${height}\" rx=\"${halfHeight}\" stroke-width=\"${thick}\" stroke=\"${stroke}\"/>`,\n      requireGradient: true\n    }\n  }\n}\n\n\n","import {extract} from \"../../properties-utils\";\nimport {DrawerProvider} from \"../types\";\n\nexport const protein: DrawerProvider = (properties, {width, height, drug}) => {\n  const fill = extract(properties.protein.fill);\n  const select = extract(properties.global.selectNode);\n  const hover = extract(properties.global.hoverNode);\n  const flag = extract(properties.global.flag);\n  const thick = extract(properties.global.thickness);\n  const radius = extract(properties.protein.radius);\n\n  const oR = radius + thick;\n  const iR = radius - thick;\n\n  return {\n    hover: {\n      \"background-image\": `\n          <path fill=\"${hover}\" stroke-linejoin=\"round\" stroke-linecap=\"round\"  d=\"\n            M 0 ${oR}\n            a ${oR} ${oR} 0 0 1 ${oR} -${oR}\n            h ${width - 2 * oR}\n            a ${oR} ${oR} 0 0 1 ${oR} ${oR}\n            a ${oR} ${iR} 0 0 0 -${oR} -${iR}\n            h -${width - 2 * oR}\n            a ${oR} ${iR} 0 0 0 -${oR} ${iR}\n            Z\"/>\n`,\n      \"background-position-y\": -thick,\n      \"bounds-expansion\": thick,\n      \"background-clip\": \"none\",\n      \"background-image-containment\": \"over\",\n      \"background-height\": oR,\n    },\n    select: {\n      \"background-image\": `\n          <path fill=\"${select}\" stroke-linejoin=\"round\" stroke-linecap=\"round\"  d=\"\n            M 0 0\n            a ${oR} ${oR} 0 0 0 ${oR} ${oR}\n            h ${width - 2 * oR}\n            a ${oR} ${oR} 0 0 0 ${oR} -${oR}\n            a ${oR} ${iR} 0 0 1 -${oR} ${iR}\n            h -${width - 2 * oR}\n            a ${oR} ${iR} 0 0 1 -${oR} -${iR}\n            Z\"/>\n`,\n      \"background-position-y\": height - radius,\n      \"bounds-expansion\": thick,\n      \"background-clip\": \"none\",\n      \"background-image-containment\": \"over\",\n      \"background-height\": oR,\n    },\n    flag: {\n      \"background-image\": `\n<rect width=\"${width + 4 * thick}\" height=\"${height + 2 * thick}\" rx=\"${oR }\"  fill=\"${flag}\"/>\n<rect x=\"${2*thick}\" y=\"${thick}\" width=\"${width}\" height=\"${height}\" rx=\"${radius}\" fill=\"${fill}\"/>\n`,\n      \"background-position-x\": -2 * thick,\n      \"background-position-y\": -thick,\n      \"bounds-expansion\": 2 * thick,\n      \"background-clip\": \"none\",\n      \"background-image-containment\": \"over\",\n      \"background-width\": width + 4 * thick,\n      \"background-height\": height + 2 * thick,\n    },\n    analysis: {\n      \"background-image\": `<rect width=\"${width}\" height=\"${height}\" class=\"gradient\" rx=\"${radius}\"/>`,\n      requireGradient: true\n    }\n  }\n}\n\n\n","import {extract} from \"../../properties-utils\";\nimport {DrawerProvider} from \"../types\";\n\n\nexport const rna: DrawerProvider = (properties, {width, height}) => {\n  const thick = extract(properties.global.thickness);\n  const select = extract(properties.global.selectNode);\n  const hover = extract(properties.global.hoverNode);\n  const flag = extract(properties.global.flag);\n  const fill = extract(properties.rna.fill);\n\n  const r = extract(properties.rna.radius);\n  const oR = r + thick;\n  const iR = r - thick;\n  return {\n    hover: {\n      \"background-image\": `<rect x=\"0\" y=\"0\" width=\"${width}\" height=\"${2 * thick}\" fill=\"${hover}\"/>`,\n      \"background-position-y\": -thick,\n      \"bounds-expansion\": thick,\n      \"background-clip\": \"none\",\n      \"background-image-containment\": \"over\",\n      \"background-height\": 2 * thick,\n    },\n    select: {\n      \"background-image\": `\n          <path fill=\"${select}\" stroke-linejoin=\"round\" stroke-linecap=\"round\"  d=\"\n            M 0 0\n            a ${oR} ${oR} 0 0 0 ${oR} ${oR}\n            h ${width - 2 * oR}\n            a ${oR} ${oR} 0 0 0 ${oR} -${oR}\n            a ${oR} ${iR} 0 0 1 -${oR} ${iR}\n            h -${width - 2 * oR}\n            a ${oR} ${iR} 0 0 1 -${oR} -${iR}\n            Z\"/>\n`,\n      \"background-position-y\": height - r,\n      \"bounds-expansion\": thick,\n      \"background-clip\": \"none\",\n      \"background-image-containment\": \"over\",\n      \"background-height\": oR,\n    },\n    flag: {\n      \"background-image\": `\n       <path fill=\"${flag}\" d=\"\n       M 0 0\n       H ${width + 4 * thick}\n       V ${height - r + thick}\n       a ${oR + thick} ${oR} 0 0 1 -${oR + thick} ${oR}\n       H ${oR + thick}\n       a ${oR + thick} ${oR} 0 0 1 -${oR + thick} -${oR}\n       Z\n       \"/>\n       <path fill=\"${fill}\" d=\"\n       M ${2 * thick} ${thick}\n       H ${width + 2 * thick}\n       V ${height - r + thick}\n       a ${r} ${r} 0 0 1 -${r} ${r}\n       H ${r + 2 * thick}\n       a ${r} ${r} 0 0 1 -${r} -${r}\n       Z\"/>\n`,\n      \"background-position-x\": -2 * thick,\n      \"background-position-y\": -thick,\n      \"bounds-expansion\": 2 * thick,\n      \"background-clip\": \"none\",\n      \"background-image-containment\": \"over\",\n      \"background-width\": width + 4 * thick,\n      \"background-height\": height + 2 * thick,\n    },\n    analysis: {\n      \"background-image\": `\n       <path class=\"gradient\" d=\"\n       M 0 0\n       H ${width}\n       V ${height - r }\n       a ${r} ${r} 0 0 1 -${r} ${r}\n       H ${r}\n       a ${r} ${r} 0 0 1 -${r} -${r}\n       Z\"/>`,\n      requireGradient: true\n    }\n  }\n}\n\n\n","import {extract} from \"../../properties-utils\";\nimport {DrawerProvider} from \"../types\";\n\nexport const genomeEncodedEntity: DrawerProvider = (properties, {\n  width,\n  height,\n  drug,\n  disease,\n  interactor,\n  lossOfFunction\n}) => {\n  const fill = !drug ?\n    extract(properties.complex.fill) :\n    extract(properties.genomeEncodedEntity.drug);\n  const select = extract(properties.global.selectNode);\n  const hover = extract(properties.global.hoverNode);\n  const flag = extract(properties.global.flag);\n  const t = extract(properties.global.thickness);\n  const t_2 = t / 2;\n  const bottomR = extract(properties.genomeEncodedEntity.bottomRadius);\n  const stroke = !interactor ? !disease ? null : extract(properties.global.negativeContrast) : extract(properties.interactor.fill);\n\n  const topR = Math.min(extract(properties.genomeEncodedEntity.topRadius), height - bottomR, width / 2 - t);\n  const v = height - bottomR - topR;\n\n  const topOR = topR + t;\n  const topIR = topR - t;\n\n  const bottomOR = bottomR + t;\n  const bottomIR = bottomR - t;\n\n\n  return {\n    background: {\n      \"background-image\": `\n      <path fill=\"${fill}\" class=\"gradient\" stroke-linecap=\"round\" transform=\"translate(${t_2} ${t_2})\"\n      ${stroke ? `stroke=\"${stroke}\" stroke-width=\"${t}\"` : ''}\n      ${lossOfFunction ? `stroke-dasharray=\"${t} ${t * 2}\"` : ''}\n      d=\"\n      M ${topR} 0\n      H ${width - topR}\n      a ${topR} ${topR} 0 0 1 ${topR} ${topR}\n      v ${v}\n      a ${bottomR} ${bottomR} 0 0 1 -${bottomR} ${bottomR}\n      H ${bottomR}\n      a ${bottomR} ${bottomR} 0 0 1 -${bottomR} -${bottomR}\n      v -${v}\n      a ${topR} ${topR} 0 0 1 ${topR} -${topR}\n      Z\n      \"/>\n      `,\n      \"bounds-expansion\": t / 2,\n      \"background-clip\": \"none\",\n      \"background-image-containment\": \"over\",\n      \"background-position-x\": -t_2,\n      \"background-position-y\": -t_2,\n      \"background-width\": width + t,\n      \"background-height\": height + t,\n    requireGradient: true\n    },\n    hover: {\n      \"background-image\": `\n          <path fill=\"${hover}\" stroke-linejoin=\"round\" stroke-linecap=\"round\"  d=\"\n            M 0 ${topOR}\n            a ${topOR} ${topOR} 0 0 1 ${topOR} -${topOR}\n            h ${width - 2 * topOR}\n            a ${topOR} ${topOR} 0 0 1 ${topOR} ${topOR}\n            a ${topOR} ${topIR} 0 0 0 -${topOR} -${topIR}\n            h -${width - 2 * topOR}\n            a ${topOR} ${topIR} 0 0 0 -${topOR} ${topIR}\n            Z\"/>\n`,\n      \"background-position-y\": -t,\n      \"bounds-expansion\": t,\n      \"background-clip\": \"none\",\n      \"background-image-containment\": \"over\",\n      \"background-height\": topOR,\n    },\n    select: {\n      \"background-image\": `\n          <path fill=\"${select}\" stroke-linejoin=\"round\" stroke-linecap=\"round\"  d=\"\n            M 0 0\n            a ${bottomOR} ${bottomOR} 0 0 0 ${bottomOR} ${bottomOR}\n            h ${width - 2 * bottomOR}\n            a ${bottomOR} ${bottomOR} 0 0 0 ${bottomOR} -${bottomOR}\n            a ${bottomOR} ${bottomIR} 0 0 1 -${bottomOR} ${bottomIR}\n            h -${width - 2 * bottomOR}\n            a ${bottomOR} ${bottomIR} 0 0 1 -${bottomOR} -${bottomIR}\n            Z\"/>\n`,\n      \"background-position-y\": height - bottomR,\n      \"bounds-expansion\": t,\n      \"background-clip\": \"none\",\n      \"background-image-containment\": \"over\",\n      \"background-height\": bottomOR,\n    },\n    flag: {\n      \"background-image\": `\n      <path fill=\"${flag}\" d=\"\n      M ${topOR} 0\n      H ${width + 3 * t - topOR}\n      a ${topOR + t} ${topOR} 0 0 1 ${topOR + t} ${topOR}\n      v ${v}\n      a ${bottomOR + t} ${bottomOR} 0 0 1 -${bottomOR + t} ${bottomOR}\n      H ${bottomOR + t}\n      a ${bottomOR + t} ${bottomOR} 0 0 1 -${bottomOR + t} -${bottomOR}\n      v -${v}\n      a ${topOR + t} ${topOR} 0 0 1 ${topOR + t} -${topOR}\n      Z\n      \"/>\n`,\n      \"background-position-x\": -2 * t,\n      \"background-position-y\": -t,\n      \"bounds-expansion\": 2 * t,\n      \"background-clip\": \"none\",\n      \"background-image-containment\": \"over\",\n      \"background-width\": width + 4 * t,\n      \"background-height\": height + 2 * t,\n    }\n  }\n}\n\n\n","import {extract} from \"../../properties-utils\";\nimport {DrawerProvider} from \"../types\";\n\n\nexport const complex: DrawerProvider = (properties, {\n  width,\n  height,\n  drug,\n  disease,\n  interactor,\n  lossOfFunction\n}) => {\n  const select = extract(properties.global.selectNode);\n  const hover = extract(properties.global.hoverNode);\n  const flag = extract(properties.global.flag);\n\n  const t = extract(properties.global.thickness);\n  const cut = extract(properties.complex.cut);\n  const fill = !drug ?\n    interactor ? extract(properties.interactor.fill) : extract(properties.complex.fill) :\n    extract(properties.complex.drug);\n\n  const stroke = !disease ? extract(properties.complex.stroke) : extract(properties.global.negativeContrast);\n\n  const cut2 = cut * 2;\n  const t2 = t * 2;\n  const v = height - cut2 - 2 * t2; // Vertical\n\n  const delta = 0;\n  const stateHeight = height / 2 + t;\n\n  const defs = `<defs>\n  <path id=\"octogon\" d=\"\n      M ${cut + t2 + delta} ${t2}\n      H ${width - cut - t2 - delta}\n      l ${cut} ${cut}\n      v ${v}\n      l -${cut} ${cut}\n      H ${cut + t2 + delta}\n      l -${cut} -${cut}\n      v -${v}\n      l  ${cut} -${cut}\n      Z\n      \"/>\n  </defs>`;\n  return {\n    background: {\n      \"background-image\": `\n      ${defs}\n      <use href=\"#octogon\" fill=\"${fill}\" stroke=\"${fill}\" stroke-width=\"${2 * t2}\" stroke-linejoin=\"round\"/>\n`\n    },\n    hover: {\n      \"background-image\": `\n      <path stroke=\"${hover}\" fill=\"none\" stroke-width=\"${2 * t2}\" stroke-linejoin=\"round\" d=\"\n      M ${t2} ${stateHeight}\n      v -${v / 2}\n      l ${cut} -${cut + t}\n      H ${width - cut - t2}\n      l ${cut} ${cut + t}\n      v ${v / 2}\n      \" />\n      `,\n      \"background-position-y\": -t,\n      \"background-height\": stateHeight,\n      \"background-clip\": \"none\",\n      \"bounds-expansion\": t\n    },\n    select: {\n      \"background-image\": `\n      <path stroke=\"${select}\" fill=\"none\" stroke-width=\"${2 * t2}\" stroke-linejoin=\"round\" d=\"\n      M ${t2} ${0}\n      v ${v / 2}\n      l ${cut} ${cut + t}\n      H ${width - cut - t2}\n      l ${cut} -${cut + t}\n      v -${v / 2}\n      \" />\n      `,\n      \"background-position-y\": height / 2,\n      \"background-height\": stateHeight,\n      \"background-clip\": \"none\",\n      \"bounds-expansion\": t\n    },\n    flag: {\n      \"background-image\": `\n<path id=\"octogon\" d=\"\n      M ${width / 2} ${3 * t}\n      H ${width - cut - delta}\n      l ${cut + t} ${cut}\n      v ${v}\n      l -${cut + t} ${cut}\n      H ${cut + delta + 2 * t2}\n      l -${cut + t} -${cut}\n      v -${v}\n      l  ${cut + t} -${cut}\n      Z\n      \" stroke=\"${flag}\" stroke-width=\"${3 * t2}\" stroke-linejoin=\"round\"/>\n`,\n      \"background-position-x\": -2 * t,\n      \"background-position-y\": -t,\n      \"bounds-expansion\": 2 * t,\n      \"background-clip\": \"none\",\n      \"background-image-containment\": \"over\",\n      \"background-width\": width + 4 * t,\n      \"background-height\": height + 2 * t,\n    },\n    decorators: [\n      {\n        \"background-image\": `\n         ${defs}\n         <use href=\"#octogon\" fill=\"none\" stroke=\"${stroke}\" stroke-width=\"${t2}\" stroke-linejoin=\"round\" ${lossOfFunction ? `stroke-dasharray=\"${t2}\"` : ''} />\n         <use href=\"#octogon\" fill=\"${fill}\" class=\"gradient\"/>\n         `,\n        requireGradient: true\n      }\n    ],\n  }\n}\n\n","import {extract} from \"../../properties-utils\";\nimport {DrawerProvider} from \"../types\";\n\n\nexport const entitySet: DrawerProvider = (properties, {\n  width,\n  height,\n  drug,\n  disease,\n  lossOfFunction,\n  interactor\n}) => {\n  const select = extract(properties.global.selectNode);\n  const hover = extract(properties.global.hoverNode);\n  const flag = extract(properties.global.flag);\n\n  const t = extract(properties.global.thickness);\n  let r = extract(properties.entitySet.radius);\n\n  if (2 * r > height / 2 - t) {\n\n    r = height / 4 - (t / 2);\n  }\n\n  width += 2 * r;\n\n  const fill =\n    !interactor ?\n      !drug ?\n        extract(properties.entitySet.fill) :\n        extract(properties.entitySet.drug)\n      : extract(properties.interactor.fill);\n  const stroke = !disease ?\n    extract(properties.entitySet.stroke) :\n    extract(properties.global.negativeContrast);\n\n  const r2 = r * 2;\n  const t2 = t * 2;\n  const v = height / 2 - r2 - t; // Vertical\n  const stateHeight = height / 2 + t;\n  const bracesOffset = r2 + t2;\n\n  let realDashLength = width;\n\n  if (lossOfFunction) {\n    const hidingLength = width - 2 * bracesOffset;\n    const idealDashLength = t2;\n    const dashNumber = Math.round((hidingLength / idealDashLength + 1) / 2);\n    realDashLength = hidingLength / (2 * dashNumber - 1);\n  }\n\n\n  const defs = `<defs>\n   <path id=\"curly\" d=\"\n       M ${r2 + t} ${t}\n       H ${width - r2 - t}\n       a ${r} ${r} 0 0 1 ${r} ${r}\n\n       v ${v}\n       a ${r} ${r} 0 0 0 ${r} ${r}\n       a ${r} ${r} 0 0 0 -${r} ${r}\n       v ${v}\n\n       a ${r} ${r} 0 0 1 -${r} ${r}\n       H ${r2 + t}\n       a ${r} ${r} 0 0 1 -${r} -${r}\n\n       v -${v}\n       a ${r} ${r} 0 0 0 -${r} -${r}\n       a ${r} ${r} 0 0 0 ${r} -${r}\n       v -${v}\n\n       a ${r} ${r} 0 0 1 ${r} -${r}\n       Z\n       \"/>\n   <clipPath id=\"inside\">\n     <use href=\"#curly\"/>\n   </clipPath>\n </defs>`;\n\n  const t1_5 = t * 1.5;\n  return {\n    background: {\n      \"background-image\": `\n       ${defs}\n       <use href=\"#curly\" fill=\"${fill}\" stroke=\"${fill}\" stroke-width=\"${t2}\" stroke-linejoin=\"round\"/>\n       `,\n      \"background-position-x\": -r,\n      \"background-width\": width + 2 * r,\n      \"background-clip\": \"none\",\n      \"bounds-expansion\": 2 * t,\n    },\n    hover: {\n      \"background-image\": `\n       <path stroke=\"${hover}\" stroke-width=\"${t2}\" fill=\"none\" stroke-linejoin=\"round\" d=\"\n         M ${r + t} ${stateHeight + r}\n         a ${r} ${r} 0 0 0 -${r} -${r}\n         a ${r} ${r} 0 0 0 ${r} -${r}\n         v -${v}\n         a ${r} ${r + t} 0 0 1 ${r} -${r + t}\n         H ${width - r2 - t}\n         a ${r} ${r + t} 0 0 1 ${r} ${r + t}\n         v ${v}\n         a ${r} ${r} 0 0 0 ${r} ${r}\n         a ${r} ${r} 0 0 0 -${r} ${r}\n       \"/>`,\n      \"background-position-x\": -r,\n      \"background-width\": width + 2 * r,\n\n      \"background-clip\": \"none\",\n      \"bounds-expansion\": 2 * t,\n\n      \"background-position-y\": -t,\n      \"background-height\": stateHeight\n    },\n    select: {\n      \"background-image\": `\n       <path stroke=\"${select}\" stroke-width=\"${t2}\" fill=\"none\" stroke-linejoin=\"round\" d=\"\n         M ${r + t} ${-r}\n         a ${r} ${r} 0 0 1 -${r} ${r}\n         a ${r} ${r} 0 0 1 ${r} ${r}\n         v ${v}\n         a ${r} ${r + t} 0 0 0 ${r} ${r + t}\n         H ${width - r2 - t}\n         a ${r} ${r + t} 0 0 0 ${r} -${r + t}\n         v -${v}\n         a ${r} ${r} 0 0 1 ${r} -${r}\n         a ${r} ${r} 0 0 1 -${r} -${r}\n       \"/>`,\n      \"background-position-x\": -r,\n      \"background-width\": width + 2 * r,\n\n      \"background-clip\": \"none\",\n      \"bounds-expansion\": 2 * t,\n\n      \"background-position-y\": height / 2,\n      \"background-height\": stateHeight\n    },\n    flag: {\n      \"background-image\": `\n<rect width=\"${width}\" height=\"${height + 2 * t}\" rx=\"${r + 3 * t}\" ry=\"${r + t2}\" fill=\"${flag}\"/>\n`,\n      \"background-position-x\": -2 * t,\n      \"background-position-y\": -t,\n      \"bounds-expansion\": 2 * t,\n      \"background-clip\": \"none\",\n      \"background-image-containment\": \"over\",\n      \"background-width\": width,\n      \"background-height\": height + 2 * t,\n    },\n    decorators: [\n      {\n        \"background-image\": `\n       ${defs}\n       <mask id=\"myMask\">\n         <rect fill=\"white\" x=\"0\" y=\"0\" width=\"${width}\" height=\"${height}\"/>\n         <rect fill=\"black\" x=\"${bracesOffset}\" y=\"${0}\" width=\"${width - 2 * bracesOffset}\" height=\"${height}\"/>\n       </mask>\n       <use href=\"#curly\" fill=\"none\" stroke=\"${stroke}\" stroke-width=\"${t2}\" clip-path=\"url(#inside)\" mask=\"url(#myMask)\"/>\n`,\n        \"background-position-x\": -r,\n        \"bounds-expansion\": r,\n        \"background-clip\": \"none\",\n        \"background-width\": width + 2 * r,\n      },\n    ],\n    analysis: {\n      'background-image': `<rect x=\"${r * 1.5}\" y=\"${t}\" width=\"${width - 2 * r * 1.5}\" rx=\"${r}\" height=\"${height - t2}\" class=\"gradient\"/>`,\n      \"background-position-x\": -r,\n      \"background-width\": width + 2 * r,\n      \"background-clip\": \"none\",\n      \"bounds-expansion\": 2 * t,\n      requireGradient: true\n    }\n    // analysis: {\n    //   'background-image': `${defs}${gradient}\n    //   <use href=\"#curly\" fill=\"url(#gradient)\" clip-path=\"url(#inside)\"/>\n    //   <mask id=\"myMask\">\n    //      <rect fill=\"white\" x=\"0\" y=\"0\" width=\"${width}\" height=\"${height}\"/>\n    //      <rect fill=\"black\" x=\"${bracesOffset}\" y=\"${0}\" width=\"${width - 2 * bracesOffset}\" height=\"${height}\"/>\n    //    </mask>\n    //    <use href=\"#curly\" fill=\"none\" stroke=\"${stroke}\" stroke-width=\"${t2}\" clip-path=\"url(#inside)\" mask=\"url(#myMask)\"/>`,\n    //   \"background-position-x\": -r,\n    //   \"bounds-expansion\": r,\n    //   \"background-clip\": \"none\",\n    //   \"background-width\": width + 2 * r,\n    // }\n  }\n}\n","import {extract} from \"../../properties-utils\";\nimport {DrawerProvider} from \"../types\";\n\nexport const cell: DrawerProvider = (properties, {width, height}) => {\n  const select = extract(properties.global.selectNode);\n  const hover = extract(properties.global.hoverNode);\n  const flag = extract(properties.global.flag);\n  const thick = extract(properties.global.thickness);\n  const cellThick = extract(properties.cell.thickness);\n  const stroke = extract(properties.cell.stroke)\n  const fill = extract(properties.cell.fill);\n\n  const ht = thick / 2;\n  const halfHeight = height / 2;\n  const oR = halfHeight + thick;\n  const iR = halfHeight - thick;\n  const oRx = Math.min(oR, width / 2)\n  return {\n    background: {\n      \"background-image\": `\n      <rect x=\"${ht}\" y=\"${ht}\" width=\"${width - thick}\" height=\"${height - thick}\" rx=\"${halfHeight}\" stroke=\"${fill}\" fill=\"${stroke}\" stroke-width=\"${thick}\"/>\n      <rect x=\"${ht + cellThick}\" y=\"${2 * thick}\" width=\"${width - 2 * cellThick - thick}\" height=\"${height - 4 * thick}\" ry=\"${halfHeight}\" rx=\"${halfHeight - cellThick}\" fill=\"${fill}\" class=\"gradient\" stroke-width=\"0\"/>\n      `,\n      requireGradient: true\n    },\n    hover: {\n      \"background-image\": `\n          <path fill=\"${hover}\" stroke-linejoin=\"round\" stroke-linecap=\"round\"  d=\"\n            M 0 ${oR}\n            a ${oRx} ${oR} 0 0 1 ${oRx} -${oR}\n            h ${width - 2 * oRx}\n            a ${oRx} ${oR} 0 0 1 ${oRx} ${oR}\n            a ${oRx} ${iR} 0 0 0 -${oRx} -${iR}\n            h -${width - 2 * oRx}\n            a ${oRx} ${iR} 0 0 0 -${oRx} ${iR}\n            Z\"/>\n`,\n      \"background-position-y\": -thick,\n      \"bounds-expansion\": thick,\n      \"background-clip\": \"none\",\n      \"background-image-containment\": \"over\",\n      \"background-height\": oR,\n    },\n    select: {\n      \"background-image\": `\n          <path fill=\"${select}\" stroke-linejoin=\"round\" stroke-linecap=\"round\"  d=\"\n            M 0 0\n            a ${oRx} ${oR} 0 0 0 ${oRx} ${oR}\n            h ${width - 2 * oRx}\n            a ${oRx} ${oR} 0 0 0 ${oRx} -${oR}\n            a ${oRx} ${iR} 0 0 1 -${oRx} ${iR}\n            h -${width - 2 * oRx}\n            a ${oRx} ${iR} 0 0 1 -${oRx} -${iR}\n            Z\"/>\n`,\n      \"background-position-y\": halfHeight,\n      \"bounds-expansion\": thick,\n      \"background-clip\": \"none\",\n      \"background-image-containment\": \"over\",\n      \"background-height\": oR,\n    },\n    flag: {\n      \"background-image\": `\n<rect width=\"${width + 4 * thick}\" height=\"${height + 2 * thick}\" rx=\"${oR + 2 * thick}\" ry=\"${oR}\" fill=\"${flag}\"/>\n`,\n      \"background-position-x\": -2 * thick,\n      \"background-position-y\": -thick,\n      \"bounds-expansion\": 2 * thick,\n      \"background-clip\": \"none\",\n      \"background-image-containment\": \"over\",\n      \"background-width\": width + 4 * thick,\n      \"background-height\": height + 2 * thick,\n    },\n    // analysis: {\n    //   'background-image': `${gradient}<rect x=\"${ht + cellThick}\" y=\"${2 * thick}\" width=\"${width - 2 * cellThick - thick}\" height=\"${height - 4 * thick}\" ry=\"${halfHeight}\" rx=\"${halfHeight - cellThick}\" fill=\"url(#gradient)\" stroke-width=\"0\"/>`\n    // }\n  }\n}\n\n\n","import {DrawerProvider} from \"../types\";\nimport {extract} from \"../../properties-utils\";\n\n\nexport const interactingPathway: DrawerProvider = (properties, {width, height, drug}) => {\n  const select = extract(properties.global.selectNode);\n  const hover = extract(properties.global.hoverNode);\n  const flag = extract(properties.global.flag);\n  const thick = extract(properties.global.thickness);\n\n  let realWidth = width;\n  const t = 3 * thick;\n  return {\n    hover: {\n      \"background-image\": `<rect fill=\"${hover}\" width=\"${width}\" height=\"${t}\"/>`,\n      \"background-width\": width,\n      \"background-height\": t,\n    },\n    select: {\n      \"background-image\": `<rect fill=\"${select}\" width=\"${width}\" height=\"${t}\"/>`,\n      \"background-position-y\": height - t,\n      \"background-width\": width,\n      \"background-height\": t,\n    },\n    flag: {\n      \"background-image\": `\n<rect fill=\"${flag}\" width=\"${t}\" height=\"${height}\"/>\n<rect fill=\"${flag}\" width=\"${t}\" height=\"${height}\" x=\"${realWidth + t}\"/>\n`,\n      \"background-width\": realWidth + 4 * t,\n      \"background-position-x\": -t,\n      \"background-height\": height,\n      \"bounds-expansion\": 2 * t,\n      \"background-clip\": \"none\",\n      \"background-image-containment\": \"over\",\n    },\n    analysis: {\n      \"background-image\": `<rect class=\"gradient\" x=\"${t}\" y=\"${t}\" width=\"${width - 2 * t}\" height=\"${height - 2 * t}\"/>`,\n      requireGradient: true\n    }\n  }\n}\n\n","import {extract} from \"../../properties-utils\";\nimport {DrawerProvider} from \"../types\";\n\nexport const diseaseInteractor: DrawerProvider = (properties, {width, height, drug, disease, interactor}) => {\n\n  const hover = extract(properties.global.hoverNode);\n  const select = extract(properties.global.selectNode);\n  const fill = extract(properties.global.negative);\n  const t = extract(properties.global.thickness);\n  const decorationWidth = extract(properties.interactor.decorationWidth);\n  const t4 = t * 4\n  const t2 = t * 2;\n  const h = height / 2 + t2;\n  const midH = height / 2;\n\n  return {\n    decorators: [\n      {\n        \"background-image\": `\n      <path fill=\"${fill}\" stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-width=\"${t4}\" stroke=\"${fill}\"  d=\"\n      M ${t2} ${midH}\n      L ${decorationWidth + t2} ${t2}\n      H ${width - (decorationWidth + t2)}\n      L ${width - t2} ${midH}\n      L ${width - (decorationWidth + t2)} ${height - t2}\n      H ${decorationWidth + t2}\n      Z\n      \" />\n      `,\n      }\n    ],\n\n    hover: {\n      \"background-image\": `\n      <path stroke=\"${hover}\" stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-width=\"${t4}\" d=\"\n      M ${t2} ${midH + t2}\n      L ${decorationWidth + t2} ${t2}\n      H ${width - (decorationWidth + t2)}\n      L ${width - t2} ${midH + t2}\n      Z\n      \" />\n      `,\n      \"background-position-y\": -t2,\n      \"background-height\": h,\n      \"background-clip\": \"none\",\n      \"bounds-expansion\": t2,\n      \"background-image-containment\": \"over\",\n    },\n\n    select: {\n      \"background-image\": `\n      <path stroke=\"${select}\" stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-width=\"${t4}\" d=\"\n      M ${t2} 0\n      L ${decorationWidth + t2} ${midH}\n      H ${width - (decorationWidth + t2)}\n      L ${width - t2} 0\n      Z\n      \" />\n      `,\n      \"background-position-y\": midH,\n      \"background-height\": h,\n      \"background-clip\": \"none\",\n      \"bounds-expansion\": t2,\n      \"background-image-containment\": \"over\",\n    }\n\n  }\n}\n\n\n","import {extract} from \"../../properties-utils\";\nimport {DrawerProvider} from \"../types\";\n\nexport const subPathway: DrawerProvider = (properties, {width, height, disease}) => {\n  const select = extract(properties.global.selectNode);\n  const hover = extract(properties.global.hoverNode);\n  const flag = extract(properties.global.flag);\n  const thick = extract(properties.global.thickness) * 3;\n  const stroke = !disease ?\n    extract(properties.pathway.stroke) :\n    extract(properties.global.negativeContrast);\n\n  const halfHeight = height / 2;\n  const oR = halfHeight;\n  const iR = halfHeight - thick;\n  const oRx = Math.min(oR, width / 2)\n  return {\n    hover: {\n      \"background-image\": `\n          <path fill=\"${hover}\" stroke-linejoin=\"round\" stroke-linecap=\"round\"  d=\"\n            M 0 ${oR}\n            a ${oRx} ${oR} 0 0 1 ${oRx} -${oR}\n            h ${width - 2 * oRx}\n            a ${oRx} ${oR} 0 0 1 ${oRx} ${oR}\n            a ${oRx} ${iR} 0 0 0 -${oRx} -${iR}\n            h -${width - 2 * oRx}\n            a ${oRx} ${iR} 0 0 0 -${oRx} ${iR}\n            Z\"/>\n`,\n      \"background-clip\": \"none\",\n      \"background-image-containment\": \"over\",\n      \"background-height\": oR,\n    },\n    select: {\n      \"background-image\": `\n          <path fill=\"${select}\" stroke-linejoin=\"round\" stroke-linecap=\"round\"  d=\"\n            M 0 0\n            a ${oRx} ${oR} 0 0 0 ${oRx} ${oR}\n            h ${width - 2 * oRx}\n            a ${oRx} ${oR} 0 0 0 ${oRx} -${oR}\n            a ${oRx} ${iR} 0 0 1 -${oRx} ${iR}\n            h -${width - 2 * oRx}\n            a ${oRx} ${iR} 0 0 1 -${oRx} -${iR}\n            Z\"/>\n`,\n      \"background-position-y\": halfHeight,\n      \"background-clip\": \"none\",\n      \"background-image-containment\": \"over\",\n      \"background-height\": oR,\n    },\n    flag: {\n      \"background-image\": `\n<rect width=\"${width + 2 * thick}\" height=\"${height}\" rx=\"${oR + thick}\" ry=\"${oR}\" fill=\"${flag}\"/>\n`,\n      \"background-position-x\": -thick,\n      \"bounds-expansion\": 2 * thick,\n      \"background-clip\": \"none\",\n      \"background-image-containment\": \"over\",\n      \"background-width\": width + 2 * thick,\n    },\n    analysis: {\n      \"background-image\": `<rect class=\"gradient\" x=\"${thick}\" y=\"${thick}\" width=\"${width - 2 * thick}\" height=\"${height - 2 * thick}\" rx=\"${(height - 2 * thick) / 2}\"/>`,\n      requireGradient: true\n    }\n  }\n}\n\n\n","import cytoscape from \"cytoscape\";\nimport {gene} from \"./shape/gene-shape\";\nimport {isArray, isNumber, memoize} from \"lodash\";\nimport {molecule} from \"./shape/molecule-shape\";\nimport {protein} from \"./shape/protein-shape\";\nimport {rna} from \"./shape/rna-shape\";\nimport {genomeEncodedEntity} from \"./shape/gee-shape\";\nimport {complex} from \"./shape/complex-shape\";\nimport {entitySet} from \"./shape/entity-sets-shape\";\nimport {cell} from \"./shape/cell-shape\";\nimport {interactingPathway} from \"./shape/interacting-pathway-shape\";\nimport {diseaseInteractor} from \"./shape/disease-interactor-shape\";\n\nimport {subPathway} from \"./shape/sub-pathway-shape\";\nimport {extract} from \"../properties-utils\";\nimport {Node} from \"../types\";\nimport {Aggregated, DrawerParameters, DrawerProvider, Image, Memo} from \"./types\";\nimport {Properties} from \"../properties\";\nimport {Style} from \"../style\";\nimport chroma from \"chroma-js\";\n\n\nexport const imageBuilder = (properties: Properties, style: Style) => memoize(\n  (node: cytoscape.NodeSingular): Aggregated<Image> => {\n    // console.time(`build-image-${node.id()}`)\n    let layers: Image[] = [];\n    const clazz = node.classes().find(clazz => classToDrawers.has(clazz as Node)) as Node\n    if (!clazz) return aggregate(layers, defaultBg);\n\n    const provider = classToDrawers.get(clazz)!;\n    const exps = node.data('exp');\n    const drawerParams: DrawerParameters = {\n      id: node.id(),\n      width: node.data(\"width\"),\n      height: node.data(\"height\"),\n      drug: node.hasClass('drug'),\n      disease: node.hasClass('disease'),\n      interactor: node.hasClass('Interactor'),\n      crossed: node.hasClass('crossed'),\n      lossOfFunction: node.hasClass('loss-of-function')\n    };\n\n\n    const drawer = provider(properties, drawerParams);\n\n    if (node.hasClass('flag') && drawer.flag) layers.push(drawer.flag);\n\n    if (drawer.background) layers.push(drawer.background);\n\n    if (exps && drawer.analysis) layers.push(drawer.analysis);\n\n    if (node.selected() && drawer.select) layers.push(drawer.select);\n\n    if (node.hasClass('hover') && drawer.hover) layers.push(drawer.hover);\n\n    if (drawer.decorators) layers.push(...drawer.decorators);\n\n    if (drawerParams.drug) {\n      layers.push(RX(properties, drawerParams, clazz));\n    }\n\n    if (node.classes().includes('Pathway')) {\n      layers.push(Pathway(properties, drawerParams));\n    }\n\n    if (drawerParams.crossed) layers.push(CROSS(properties, drawerParams));\n\n    const gradient = expToGradient(node.id(), exps, properties, style.currentPalette)\n\n    // Convert raw HTML to string encoded images\n    layers = layers\n      .map(l => {\n        if (l.requireGradient && gradient) l[\"background-image\"] = addGradient(l[\"background-image\"] as string, gradient);\n        return l;\n      })\n      .map(l => ({\n          ...l,\n          \"background-image\": svgStr(l[\"background-image\"] as string,\n            isNumber(l[\"background-width\"]) ? l[\"background-width\"] : drawerParams.width,\n            isNumber(l[\"background-height\"]) ? l[\"background-height\"] : drawerParams.height\n          )\n        })\n      );\n\n    const aggregated = aggregate(layers, defaultBg);\n    aggregated['bounds-expansion'] = [Math.max(...aggregated['bounds-expansion'] as number[], 0)]\n\n    // console.timeEnd(`build-image-${node.id()}`)\n    return aggregated;\n  }, node => `${node.id()}-${node.classes().toString()}-s:${node.selected()}`\n)\n\nconst defaultBg: Image = {\n  \"background-image\": \"\",\n  \"background-position-x\": \"0\",\n  \"background-position-y\": \"0\",\n  \"background-offset-x\": \"0\",\n  \"background-offset-y\": \"0\",\n  \"background-width\": \"100%\",\n  \"background-height\": \"100%\",\n  \"background-fit\": \"none\",\n  \"background-clip\": \"none\",\n  \"background-image-opacity\": 1,\n  \"background-image-containment\": \"over\",\n  \"background-image-smoothing\": \"yes\",\n  \"background-height-relative-to\": \"inner\",\n  \"background-width-relative-to\": \"inner\",\n  \"background-repeat\": \"no-repeat\",\n  \"background-image-crossorigin\": \"anonymous\",\n  \"bounds-expansion\": 0\n}\n\nfunction addGradient(svgText: string, gradient: string): string {\n  return `<style>.gradient{fill: url(#gradient)}</style>${gradient}${svgText}`;\n}\n\nfunction _expToGradient(id: string, exps: (number | [number, number] | undefined)[], properties: Properties, palette: chroma.Scale): string | undefined {\n  if (!exps) return;\n  // console.time('exp-to-gradient')\n  const stops: { start: number, stop: number, color: string, exp: number | undefined, width: number }[] = [];\n  const size = exps.reduce((l: number, e) => e !== undefined && isArray(e) ? l + e[1] : l + 1, 0);\n  const delta = 1 / size;\n  const notFoundColor = extract(properties.analysis.notFound);\n  exps.forEach((exp, i) => {\n    const p = stops.length - 1;\n    if (stops.length !== 0 && stops[p].exp === exp) {\n      stops[p].stop += delta;\n      stops[p].width += delta;\n    } else {\n      if (isArray(exp)) {\n        stops.push({\n          start: stops[p]?.stop || 0,\n          stop: (stops[p]?.stop || 0) + delta * exp[1],\n          width: delta * exp[1],\n          color: exp[0] !== undefined ? palette(exp[0]).hex() : notFoundColor,\n          exp: exp[0]\n        })\n        // console.log(stops, exps)\n\n      } else {\n        stops.push({\n          start: stops[p]?.stop || 0,\n          stop: (stops[p]?.stop || 0) + delta,\n          color: exp !== undefined ? palette(exp).hex() : notFoundColor,\n          width: delta,\n          exp: exp\n        })\n      }\n    }\n  })\n\n  const pattern = '<defs><pattern id=\"gradient\" patternUnits=\"objectBoundingBox\" width=\"1\" height=\"1\" viewBox=\"0 0 1 1\" preserveAspectRatio=\"none\">' +\n    stops\n      .map((stop, i) => `<rect fill=\"${stop.color}\" x=\"${stop.start}\" height=\"1\" width=\"${stop.width + 0.01}\"/>`)\n      .join('') +\n    '</pattern></defs>';\n\n  // const gradient = '<defs><linearGradient id=\"gradient\">' +\n  //     stops\n  //         .map(stop => `<stop stop-color=\"${stop.color}\" offset=\"${stop.start}\"/><stop stop-color=\"${stop.color}\" offset=\"${stop.stop}\"/>`)\n  //         .join('') +\n  //     '</linearGradient></defs>'\n  // console.timeEnd('exp-to-gradient')\n\n  // console.log(exps)\n  return pattern\n}\n\nconst expToGradient = memoize(_expToGradient, (id) => id)\n\nexport const resetGradients = () => expToGradient.cache.clear!()\n\nfunction svg(svgStr: string, width = 100, height = 100) {\n  // const cleanedStr = svgStr.replaceAll(/  {2,}|\\n/g, \" \"); // TODO examine performance impact\n  return `<?xml version=\"1.0\" encoding=\"UTF-8\"?><!DOCTYPE svg><svg xmlns='http://www.w3.org/2000/svg' version='1.1' width='${width}' height='${height}'>${svgStr}</svg>`;\n}\n\nfunction svgStr(svgText: string, viewPortWidth: number, viewPortHeight: number) {\n  return 'data:image/svg+xml;utf8,' + encodeURIComponent(svg(svgText, viewPortWidth, viewPortHeight));\n}\n\n\nconst dim = (properties: Properties, {id}: DrawerParameters) => id;\nconst classToDrawers = new Map<Node, Memo<DrawerProvider>>([\n  [\"Protein\", memoize(protein, dim)],\n  [\"GenomeEncodedEntity\", memoize(genomeEncodedEntity, dim)],\n  [\"RNA\", memoize(rna, dim)],\n  [\"Gene\", memoize(gene, dim)],\n  [\"Molecule\", memoize(molecule, dim)],\n  [\"Complex\", memoize(complex, dim)],\n  [\"EntitySet\", memoize(entitySet, dim)],\n  [\"Cell\", memoize(cell, dim)],\n  [\"Interacting\", memoize(interactingPathway, dim)],\n  [\"SUB\", memoize(subPathway, dim)],\n  [\"Interactor\", memoize(diseaseInteractor, dim)]\n]);\n\nexport function clearDrawersCache() {\n  for (let value of classToDrawers.values()) {\n    value.cache.clear!()\n  }\n  OMMITED_ICON.cache.clear!();\n}\n\nfunction aggregate<T extends Object, K extends keyof T>(toAggregate: T[], defaultValue: T): Aggregated<T> {\n  const aggregate: Aggregated<T> = {} as Aggregated<T>;\n  //@ts-ignore\n  const keys = new Set<K>(Object.keys(defaultValue));\n  keys.forEach(key => aggregate[key] = toAggregate.map(t => t[key] || defaultValue[key]));\n  return aggregate;\n}\n\nconst RX = (properties: Properties, {height}: DrawerParameters, clazz: Node): Image => {\n  const t = extract(properties.global.thickness);\n  const color = clazz !== 'Molecule' ?\n    extract(properties.global.onPrimary) :\n    extract(properties.molecule.drug);\n  const x = (clazz !== 'EntitySet' ? 0 : extract(properties.entitySet.radius)) + 3 * t;\n\n  return {\n    \"background-image\": `\n      <path style=\"transform: scale(2)\" fill=\"${color}\" stroke-width=\"0.4\" stroke=\"${color}\" d=\"M3.2 4C3.3 4 3.4 4 3.6 4L6.75 8.81L5.7 10.15C5.7 10.15 5.53985 10.3884 5.31824 10.6092C5.00434 10.922 4.6582 11.3 4.28711 11.3C4.19141 11.3 4.2 11.3 4.1 11.3V11.5H6.4V11.3C6.2 11.3 6 11.3 5.9 11.2C5.8 11.1 5.8 11 5.8 10.9C5.8 10.6301 5.9 10.5547 6.16055 10.226L7 9.2L7.65291 10.226C7.82889 10.5025 8 10.7344 8 10.9C8 11.0656 7.90095 11.3 7.65291 11.3C7.55291 11.3 7.6 11.3 7.4 11.3V11.5H10.2V11.3C9.9 11.3 9.7 11.2 9.5 11C9.24121 10.7412 9 10.5 8.6 10L7.6 8.5L8.48711 7.35309C8.55228 7.28792 8.61656 7.21558 8.68081 7.13924C9.09787 6.6437 9.64859 6 10.2 6.01309V5.81309H7.8V6.01309C8 6.01309 8.2 6.01309 8.3 6.01309C8.45586 6.01309 8.6 6.20329 8.6 6.31309C8.6 6.62136 8.43963 6.81922 8.2462 7.03337L7.3 8.1L4.5 3.9C5.1 3.8 5.4 3.61 5.7 3.31C6 3.01 6.2 2.6 6.2 2.2C6.2 1.8 6.08711 1.47 5.78711 1.17C5.52798 0.910875 5.3 0.8 5 0.7C4.6 0.6 4.1 0.5 3.4 0.5H1V0.7H1.2C1.82201 0.7 2 1.14292 2 1.7V6C2 6.59634 2 6.9 1.2 6.9H1V7.1H3.8V6.9H3.6C2.9041 6.9 2.9 6.61047 2.9 6V4H3H3.2ZM3 3.7C3 3.7 3 3.7 2.9 3.7L2.88711 1C3.18711 0.9 3.4 0.9 3.6 0.9C4.47782 0.9 5 1.42405 5 2.3C5 3.40743 4.15401 3.7 3.2 3.7H3Z\"/>\n    `,\n    \"background-position-x\": x,\n    \"background-position-y\": (height / 2 - 11) + 'px',\n    \"background-width\": 22,\n    \"background-height\": 24,\n  };\n\n}\n\nconst Pathway = (properties: Properties, {height, disease}: DrawerParameters): Image => {\n  const t = extract(properties.global.thickness);\n  const color = !disease ?\n    extract(properties.global.onPrimary) :\n    extract(properties.global.negativeContrast);\n\n  let x = 5 * t;\n\n  return {\n    \"background-image\": `\n      <path style=\"transform: scale(1.5)\" fill=\"${color}\" stroke-width=\"0.4\" stroke=\"${color}\" d=\"M19.6864 21.0381C19.0364 21.0381 18.4531 20.8508 17.9364 20.4761C17.4197 20.1008 17.0614 19.6214 16.8614 19.0381H11.6864C10.5864 19.0381 9.64473 18.6464 8.8614 17.8631C8.07807 17.0798 7.6864 16.1381 7.6864 15.0381C7.6864 13.9381 8.07807 12.9964 8.8614 12.2131C9.64473 11.4298 10.5864 11.0381 11.6864 11.0381H13.6864C14.2364 11.0381 14.7074 10.8421 15.0994 10.4501C15.4907 10.0588 15.6864 9.58809 15.6864 9.03809C15.6864 8.48809 15.4907 8.01709 15.0994 7.62509C14.7074 7.23375 14.2364 7.03809 13.6864 7.03809H8.5114C8.29473 7.62142 7.9324 8.10075 7.4244 8.47609C6.91573 8.85075 6.3364 9.03809 5.6864 9.03809C4.85307 9.03809 4.14473 8.74642 3.5614 8.16309C2.97807 7.57975 2.6864 6.87142 2.6864 6.03809C2.6864 5.20475 2.97807 4.49642 3.5614 3.91309C4.14473 3.32975 4.85307 3.03809 5.6864 3.03809C6.3364 3.03809 6.91573 3.22542 7.4244 3.60009C7.9324 3.97542 8.29473 4.45475 8.5114 5.03809H13.6864C14.7864 5.03809 15.7281 5.42975 16.5114 6.21309C17.2947 6.99642 17.6864 7.93809 17.6864 9.03809C17.6864 10.1381 17.2947 11.0798 16.5114 11.8631C15.7281 12.6464 14.7864 13.0381 13.6864 13.0381H11.6864C11.1364 13.0381 10.6657 13.2338 10.2744 13.6251C9.8824 14.0171 9.6864 14.4881 9.6864 15.0381C9.6864 15.5881 9.8824 16.0591 10.2744 16.4511C10.6657 16.8424 11.1364 17.0381 11.6864 17.0381H16.8614C17.0781 16.4548 17.4407 15.9754 17.9494 15.6001C18.4574 15.2254 19.0364 15.0381 19.6864 15.0381C20.5197 15.0381 21.2281 15.3298 21.8114 15.9131C22.3947 16.4964 22.6864 17.2048 22.6864 18.0381C22.6864 18.8714 22.3947 19.5798 21.8114 20.1631C21.2281 20.7464 20.5197 21.0381 19.6864 21.0381ZM5.6864 7.03809C5.96973 7.03809 6.2074 6.94242 6.3994 6.75109C6.59073 6.55909 6.6864 6.32142 6.6864 6.03809C6.6864 5.75475 6.59073 5.51709 6.3994 5.32509C6.2074 5.13375 5.96973 5.03809 5.6864 5.03809C5.40307 5.03809 5.1654 5.13375 4.9734 5.32509C4.78207 5.51709 4.6864 5.75475 4.6864 6.03809C4.6864 6.32142 4.78207 6.55909 4.9734 6.75109C5.1654 6.94242 5.40307 7.03809 5.6864 7.03809Z\" />\n    `,\n    \"background-position-x\": x,\n    \"background-position-y\": (height / 2 - 18) + 'px',\n    \"background-width\": 36,\n    \"background-height\": 36,\n  };\n\n}\n\nexport const CROSS = memoize((properties: Properties, {width, height}: DrawerParameters): Image => {\n  const s = extract(properties.global.negative);\n  const t = extract(properties.global.thickness);\n  return {\n    \"background-image\": `<line x1=\"${t}\" y1=\"${t}\" x2=\"${width - t}\" y2=\"${height - t}\" stroke-width=\"${2 * t}\" stroke-linecap=\"round\" stroke=\"${s}\"/><line x1=\"${t}\" y1=\"${height - t}\" x2=\"${width - t}\" y2=\"${t}\" stroke-width=\"${2 * t}\" stroke-linecap=\"round\" stroke=\"${s}\"/>`,\n    \"background-image-opacity\": 1\n  };\n}, (p, {width, height}) => `${width}x${height}`)\n\nexport const OMMITED_ICON = memoize((properties: Properties) => {\n  const s = extract(properties.global.onSurface);\n  return svgStr(`<line x1=\"2.5\" y1=\"3\" x2=\"4.5\" y2=\"7\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke=\"${s}\"/><line x1=\"5.5\" y1=\"3\" x2=\"7.5\" y2=\"7\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke=\"${s}\"/>`, 10, 10)\n}, (p) => '')\n\n","import {defaultable, extract, PropertiesType, Property} from \"./properties-utils\";\n\nexport interface Properties extends PropertiesType {\n  global: {\n    thickness: Property<number>\n    surface: Property<string>\n    onSurface: Property<string>\n    primary: Property<string>\n    onPrimary: Property<string>\n    positive: Property<string>\n    negative: Property<string>\n    negativeContrast: Property<string>\n    selectNode: Property<string>\n    selectEdge: Property<string>\n    hoverNode: Property<string>\n    hoverEdge: Property<string>\n    flag: Property<string>\n  },\n  compartment: {\n    fill: Property<string>\n    opacity: Property<number>\n  }\n  shadow: {\n    luminosity: Property<number>\n    opacity: Property<[number, number][]>\n    labelOpacity: Property<[number, number][]>\n    padding: Property<number>\n    fontSize: Property<number>\n    fontPadding: Property<number>\n  }\n  protein: {\n    fill: Property<string>\n    drug: Property<string>\n    radius: Property<number>\n  }\n  genomeEncodedEntity: {\n    fill: Property<string>\n    drug: Property<string>\n    bottomRadius: Property<number>\n    topRadius: Property<number>\n  }\n  rna: {\n    fill: Property<string>\n    drug: Property<string>\n    radius: Property<number>\n  }\n  gene: {\n    fill: Property<string>\n    decorationHeight: Property<number>\n    decorationExtraWidth: Property<number>\n    arrowHeadSize: Property<number>\n    borderRadius: Property<number>\n    arrowRadius: Property<number>\n  }\n  molecule: {\n    fill: Property<string>\n    stroke: Property<string>\n    drug: Property<string>\n  }\n  entitySet: {\n    fill: Property<string>\n    stroke: Property<string>\n    drug: Property<string>\n    radius: Property<number>\n  }\n  complex: {\n    fill: Property<string>\n    stroke: Property<string>\n    drug: Property<string>\n    cut: Property<number>\n  }\n  cell: {\n    thickness: Property<number>\n    fill: Property<string>\n    stroke: Property<string>\n  }\n  //interacting pathway and sub pathway\n  pathway: {\n    fill: Property<string>\n    stroke: Property<string>\n  }\n  modification: {\n    fill: Property<string>\n  }\n  interactor: {\n    fill: Property<string>\n    stroke: Property<string>\n    decorationWidth: Property<number>\n  }\n  trivial: {\n    opacity: Property<[number, number][]>\n  }\n  structure: {\n    opacity: Property<[number, number][]>\n  }\n  font: {\n    size: Property<number>\n  }\n  analysis :{\n    min: Property<number>\n    max: Property<number>\n    unidirectionalPalette: Property<[number, string][] | string>\n    bidirectionalPalette: Property<[number, string][] | string>\n    notFound: Property<string>\n  }\n  features : {\n    edit: Property<boolean>\n    compare: Property<boolean>\n    interactors: Property<boolean>\n    analysis: Property<boolean>\n  }\n}\n\nexport function setDefaults(properties: UserProperties = {}, css: CSSStyleDeclaration): Properties {\n  const global: Properties['global'] = defaultable(properties.global || {})\n    .setDefault('thickness', 4)\n    .setDefault('surface', () => css.getPropertyValue('--surface') || '#F6FEFF')\n    .setDefault('onSurface', () => css.getPropertyValue('--on-surface') || '#001F24')\n    .setDefault('primary', () => css.getPropertyValue('--primary') || '#006782')\n    .setDefault('onPrimary', () => css.getPropertyValue('--on-primary') || '#FFFFFF')\n    .setDefault('positive', () => css.getPropertyValue('--positive') || '#0C9509')\n    .setDefault('negative', () => css.getPropertyValue('--negative') || '#BA1A1A')\n    .setDefault('negativeContrast', () => css.getPropertyValue('--negative-contrast') || '#ea7d7d')\n    .setDefault('selectNode', () => css.getPropertyValue('--select-node') || '#6EB3E4')\n    .setDefault('selectEdge', () => css.getPropertyValue('--select-edge') || '#0561A6')\n    .setDefault('hoverNode', () => css.getPropertyValue('--hover-node') || '#78E076')\n    .setDefault('hoverEdge', () => css.getPropertyValue('--hover-edge') || '#04B601')\n    .setDefault('flag', () => css.getPropertyValue('--flag') || '#DE75B4')\n\n  const compartment: Properties['compartment'] = defaultable(properties.compartment || {})\n    .setDefault('opacity', () => Number.parseFloat(css.getPropertyValue('--opacity')) || 0.06)\n    .setDefault('fill', () => css.getPropertyValue('--compartment') || '#E5834A')\n\n  const shadow: Properties['shadow'] = defaultable(properties.shadow || {})\n    .setDefault('luminosity', () => Number.parseFloat(css.getPropertyValue('--shadow-luminosity')) || 40)\n    .setDefault('padding', () => Number.parseFloat(css.getPropertyValue('--shadow-padding')) || 20)\n    .setDefault('fontSize', () => Number.parseFloat(css.getPropertyValue('--shadow-font-size')) || 80)\n    .setDefault('fontPadding', () => Number.parseFloat(css.getPropertyValue('--shadow-font-padding')) || 15)\n    .setDefault('opacity', () => {\n      const p = css.getPropertyValue('--shadow-opacity');\n      return p ? JSON.parse(p) : [[20, 20], [40, 0]];\n    })\n    .setDefault('labelOpacity', () => {\n      const p = css.getPropertyValue('--shadow-label-opacity');\n      return p ? JSON.parse(p) : [[20, 100], [40, 0]];\n    })\n\n  const protein: Properties['protein'] = defaultable(properties.protein || {})\n    .setDefault('fill', () => css.getPropertyValue('--primary-contrast-1') || '#001F29')\n    .setDefault('drug', () => css.getPropertyValue('--drug-contrast-1') || '#3E001D')\n    .setDefault('radius', 8)\n\n\n  const genomeEncodedEntity: Properties['genomeEncodedEntity'] = defaultable(properties.genomeEncodedEntity || {})\n    .setDefault('fill', () => css.getPropertyValue('--primary-contrast-4') || '#006782')\n    .setDefault('drug', () => css.getPropertyValue('--drug-contrast-4') || '#BB557A')\n    .setDefault('bottomRadius', 6)\n    .setDefault('topRadius', 40)\n\n  const rna: Properties['rna'] = defaultable(properties.rna || {})\n    .setDefault('fill', () => css.getPropertyValue('--primary-contrast-2') || '#003545')\n    .setDefault('drug', () => css.getPropertyValue('--drug-contrast-2') || '#610B33')\n    .setDefault('radius', 8)\n\n  const gene: Properties['gene'] = defaultable(properties.gene || {})\n    .setDefault('decorationHeight', 20)\n    .setDefault('decorationExtraWidth', 17)\n    .setDefault(\"arrowHeadSize\", 10)\n    .setDefault(\"borderRadius\", 8)\n    .setDefault(\"arrowRadius\", 8)\n    .setDefault(\"fill\", () => css.getPropertyValue('--primary-contrast-3') || '#004D62')\n\n  const molecule: Properties['molecule'] = defaultable(properties.molecule || {})\n    .setDefault(\"fill\", () => extract(global.surface))\n    .setDefault(\"stroke\", () => extract(global.onSurface))\n    .setDefault('drug', () => css.getPropertyValue('--drug-contrast-3') || '#9C3D61')\n\n  const complex: Properties['complex'] = defaultable(properties.complex || {})\n    .setDefault(\"cut\", 8)\n    .setDefault(\"fill\", () => css.getPropertyValue('--tertiary-contrast-1') || '#00315C')\n    .setDefault(\"stroke\", () => css.getPropertyValue('--on-tertiary') || '#FFFFFF')\n    .setDefault('drug', () => css.getPropertyValue('--drug-contrast-3') || '#7E2549')\n\n  const entitySet: Properties['entitySet'] = defaultable(properties.entitySet || {})\n    .setDefault(\"radius\", 8)\n    .setDefault(\"fill\", () => css.getPropertyValue('--tertiary-contrast-3') || '#1660A5')\n    .setDefault(\"stroke\", () => css.getPropertyValue('--on-tertiary') || '#FFFFFF')\n    .setDefault('drug', () => css.getPropertyValue('--drug-contrast-4') || '#BB557A')\n\n  const cell: Properties['cell'] = defaultable(properties.cell || {})\n    .setDefault('thickness', () => Number.parseFloat(css.getPropertyValue('--cell-thickness')) || 16)\n    .setDefault(\"fill\", () => css.getPropertyValue('--tertiary-contrast-2') || '#004882')\n    .setDefault(\"stroke\", () => css.getPropertyValue('--on-tertiary') || '#FFFFFF')\n\n  const pathway: Properties['pathway'] = defaultable(properties.pathway || {})\n    .setDefault(\"fill\", () => css.getPropertyValue('--primary-contrast-4') || '#006782')\n    .setDefault(\"stroke\", () => extract(global.onPrimary))\n\n  const modification: Properties['modification'] = defaultable(properties.modification || {})\n    .setDefault(\"fill\", () => css.getPropertyValue('--primary-contrast-2') || '#003545')\n\n  const interactor: Properties['interactor'] = defaultable(properties.interactor || {})\n    .setDefault(\"fill\", () => css.getPropertyValue('--interactor-fill') || '#68297C')\n    .setDefault(\"stroke\", () => css.getPropertyValue('--interactor-stroke') || '#9f5cb5')\n    .setDefault('decorationWidth', () => Number.parseFloat(css.getPropertyValue('--decorationWidth')) || 20)\n\n  const trivial: Properties['trivial'] = defaultable(properties.trivial || {})\n    .setDefault('opacity', () => {\n      const p = css.getPropertyValue('--trivial-opacity');\n      return p ? JSON.parse(p) : [[40, 0], [60, 100]];\n    })\n\n  const structure: Properties['structure'] = defaultable(properties.structure || {})\n    .setDefault('opacity', () => {\n      const p = css.getPropertyValue('--structure-opacity');\n      return p ? JSON.parse(p) : [[130, 0], [150, 100]];\n    })\n\n  const font: Properties['font'] = defaultable(properties.font || {})\n    .setDefault('size', 12)\n\n  const analysis: Properties['analysis'] = defaultable(properties.analysis || {})\n    .setDefault(\"min\",Number.parseFloat(css.getPropertyValue('--analysis-min')) || 0)\n    .setDefault(\"max\",Number.parseFloat(css.getPropertyValue('--analysis-max')) || 1)\n    .setDefault(\"notFound\", css.getPropertyValue('--analysis-not-found') || extract(global.onSurface))\n    .setDefault(\"unidirectionalPalette\", () => {\n      const p = css.getPropertyValue('--analysis-uni-palette');\n      console.error(p, typeof p)\n      return p ? JSON.parse(p) : [\n        [0.000, '#FFFFE0'],\n        [1.000, '#00429D'],\n      ];\n    })\n    .setDefault(\"bidirectionalPalette\", () => {\n      const p = css.getPropertyValue('--analysis-bi-palette');\n      console.error(p, typeof p)\n\n      return p ? JSON.parse(p) : [\n        [0.000, '#93003A'],\n        [0.500, '#FFFFE0'],\n        [1.000, '#00429D'],\n      ];\n    })\n\n  const features: Properties['features'] = defaultable(properties.features || {})\n    .setDefault(\"edit\", false)\n    .setDefault(\"compare\", true)\n    .setDefault(\"analysis\", true)\n    .setDefault(\"interactors\", true);\n\n  return {\n    global,\n    compartment,\n    shadow,\n    protein,\n    genomeEncodedEntity,\n    rna,\n    gene,\n    molecule,\n    complex,\n    entitySet,\n    cell,\n    pathway,\n    modification,\n    interactor,\n    trivial,\n    structure,\n    font,\n    analysis,\n    features\n  }\n}\n\nexport type UserProperties = Partial<{\n  [k in keyof Properties]: Partial<Properties[k]>\n}>\n\n","import cytoscape from \"cytoscape\";\n\nexport interface ReactomeEventTarget {\n  reactomeId: string,\n  type: 'PhysicalEntity' | 'Pathway' | 'reaction' | 'Interactor' | 'Any',\n  element: cytoscape.NodeSingular,\n  cy: cytoscape.Core\n}\n\nexport enum ReactomeEventTypes {\n  hover = 'reactome::hover',\n  leave = 'reactome::leave',\n\n  select = 'reactome::select',\n  unselect = 'reactome::unselect',\n\n  open = 'reactome::open',\n  close = 'reactome::close',\n}\n\nexport class ReactomeEvent extends CustomEvent<ReactomeEventTarget> {\n  constructor(type: ReactomeEventTypes, target: ReactomeEventTarget) {\n    super(type, {detail: target});\n  }\n\n}\n","import cytoscape from \"cytoscape\";\nimport {extract} from \"./properties-utils\";\nimport {Properties} from \"./properties\";\nimport {ReactomeEvent, ReactomeEventTypes} from \"./model/reactome-event.model\";\nimport Layers, {IHTMLLayer, layers, LayersPlugin} from 'cytoscape-layers';\nimport * as _ from \"lodash\";\n\n\ncytoscape.use(Layers)\ntype RenderableHTMLElement = HTMLElement & { render: _.DebouncedFunc<() => void> };\n\nexport class Interactivity {\n\n  isMobile = 'ontouchstart' in document || navigator.maxTouchPoints > 0;\n\n  constructor(private cy: cytoscape.Core, private properties: Properties) {\n    console.log('is mobile', this.isMobile)\n    // @ts-ignore\n    cy.elements().ungrabify().panify();\n    this.initHover(cy);\n    this.initSelect(cy);\n    this.initClick(cy);\n    this.initStructureVideo(cy);\n    this.initStructureMolecule(cy);\n    this.initZoom(cy);\n  }\n\n  expandReaction(reactionNode: cytoscape.NodeCollection) {\n    return reactionNode.connectedEdges().add(reactionNode);\n  }\n\n  applyToReaction = (action: (col: cytoscape.Collection) => void, stateKey: keyof State) => (reactionNode: cytoscape.NodeCollection) => {\n    if (state[stateKey]) return;\n    state[stateKey] = true;\n    action(this.expandReaction(reactionNode));\n    state[stateKey] = false;\n  };\n\n  initHover(cy: cytoscape.Core, mapper = <X>(x: X) => x) {\n    const hoverReaction = this.applyToReaction(col => col.addClass('hover'), 'hovering')\n    const deHoverReaction = this.applyToReaction(col => col.removeClass('hover'), 'deHovering')\n\n\n    const container = cy.container()!;\n    cy\n      .on('mouseover', 'node.PhysicalEntity', e => container.dispatchEvent(new ReactomeEvent(ReactomeEventTypes.hover, {\n        element: e.target,\n        type: \"PhysicalEntity\",\n        reactomeId: e.target.data('reactomeId'),\n        cy\n      })))\n      .on('mouseover', 'node.Pathway', e => container.dispatchEvent(new ReactomeEvent(ReactomeEventTypes.hover, {\n        element: e.target,\n        type: \"Pathway\",\n        reactomeId: e.target.data('reactomeId'),\n        cy\n      })))\n      .on('mouseover', 'node.reaction', e => container.dispatchEvent(new ReactomeEvent(ReactomeEventTypes.hover, {\n        element: e.target,\n        type: \"reaction\",\n        reactomeId: e.target.data('reactomeId'),\n        cy\n      })))\n      .on('mouseover', 'edge.reaction', e => container.dispatchEvent(new ReactomeEvent(ReactomeEventTypes.hover, {\n        element: e.target.connectedNodes('.reaction'),\n        type: \"reaction\",\n        reactomeId: e.target.data('reactomeId'),\n        cy\n      })))\n\n      .on('mouseout', 'node.PhysicalEntity', e => container.dispatchEvent(new ReactomeEvent(ReactomeEventTypes.leave, {\n        element: e.target,\n        type: \"PhysicalEntity\",\n        reactomeId: e.target.data('reactomeId'),\n        cy\n      })))\n      .on('mouseout', 'node.Pathway', e => container.dispatchEvent(new ReactomeEvent(ReactomeEventTypes.leave, {\n        element: e.target,\n        type: \"Pathway\",\n        reactomeId: e.target.data('reactomeId'),\n        cy\n      })))\n      .on('mouseout', 'node.reaction', e => container.dispatchEvent(new ReactomeEvent(ReactomeEventTypes.leave, {\n        element: e.target,\n        type: \"reaction\",\n        reactomeId: e.target.data('reactomeId'),\n        cy\n      })))\n      .on('mouseout', 'edge.reaction', e => container.dispatchEvent(new ReactomeEvent(ReactomeEventTypes.leave, {\n        element: e.target.connectedNodes('.reaction'),\n        type: \"reaction\",\n        reactomeId: e.target.data('reactomeId'),\n        cy\n      })))\n\n      .on('mouseover', 'node', e => mapper(e.target).addClass('hover'))\n      .on('mouseout', 'node', e => mapper(e.target).removeClass('hover'))\n\n      .on('mouseover', 'node.reaction', e => hoverReaction(mapper(e.target)))\n      .on('mouseout', 'node.reaction', e => deHoverReaction(mapper(e.target)))\n\n      .on('mouseover', 'edge', e => {\n        const mapped = mapper(e.target);\n        if (mapped !== e.target) console.log(mapped, mapped.connectedNodes('.reaction'))\n\n        hoverReaction(mapped.connectedNodes('.reaction'))\n      })\n      .on('mouseout', 'edge', e => deHoverReaction(mapper(e.target).connectedNodes('.reaction')))\n\n      .on('mouseover', 'node.Modification', e => mapper(cy.nodes(`#${e.target.data('nodeId')}`)).addClass('hover'))\n      .on('mouseout', 'node.Modification', e => mapper(cy.nodes(`#${e.target.data('nodeId')}`)).removeClass('hover'))\n\n      .on('mouseover', 'edge.Interactor', e => mapper(cy.edges(`#${e.target.data('id')}`)).addClass('hover'))\n      .on('mouseout', 'edge.Interactor', e => mapper(cy.edges(`#${e.target.data('id')}`)).removeClass('hover'))\n  }\n\n  initSelect(cy: cytoscape.Core, mapper = <X>(x: X) => x) {\n    const selectReaction = this.applyToReaction(col => col.select(), 'selecting')\n    const container = cy.container()!;\n\n    cy\n      .on('select', 'node.PhysicalEntity', e => container.dispatchEvent(new ReactomeEvent(ReactomeEventTypes.select, {\n        element: e.target,\n        type: \"PhysicalEntity\",\n        reactomeId: e.target.data('reactomeId'),\n        cy\n      })))\n      .on('select', 'node.Pathway', e => container.dispatchEvent(new ReactomeEvent(ReactomeEventTypes.select, {\n        element: e.target,\n        type: \"Pathway\",\n        reactomeId: e.target.data('reactomeId'),\n        cy\n      })))\n      .on('select', 'node.reaction', e => container.dispatchEvent(new ReactomeEvent(ReactomeEventTypes.select, {\n        element: e.target,\n        type: \"reaction\",\n        reactomeId: e.target.data('reactomeId'),\n        cy\n      })))\n      .on('select', 'edge.reaction', e => container.dispatchEvent(new ReactomeEvent(ReactomeEventTypes.select, {\n        element: e.target.connectedNodes('.reaction'),\n        type: \"reaction\",\n        reactomeId: e.target.data('reactomeId'),\n        cy\n      })))\n\n      .on('unselect', 'node.PhysicalEntity', e => container.dispatchEvent(new ReactomeEvent(ReactomeEventTypes.unselect, {\n        element: e.target,\n        type: \"PhysicalEntity\",\n        reactomeId: e.target.data('reactomeId'),\n        cy\n      })))\n      .on('unselect', 'node.Pathway', e => container.dispatchEvent(new ReactomeEvent(ReactomeEventTypes.unselect, {\n        element: e.target,\n        type: \"Pathway\",\n        reactomeId: e.target.data('reactomeId'),\n        cy\n      })))\n      .on('unselect', 'node.reaction', e => container.dispatchEvent(new ReactomeEvent(ReactomeEventTypes.unselect, {\n        element: e.target,\n        type: \"reaction\",\n        reactomeId: e.target.data('reactomeId'),\n        cy\n      })))\n      .on('unselect', 'edge.reaction', e => container.dispatchEvent(new ReactomeEvent(ReactomeEventTypes.unselect, {\n        element: e.target.connectedNodes('.reaction'),\n        type: \"reaction\",\n        reactomeId: e.target.data('reactomeId'),\n        cy\n      })))\n\n      .on('select', 'edge', e => selectReaction(mapper(e.target).connectedNodes('.reaction')))\n      .on('unselect', 'edge', () => selectReaction(\n        mapper(cy.edges(':selected').connectedNodes('.reaction')\n          .add(cy.nodes('.reaction:selected')))\n      )) // Avoid single element selection when double-clicking\n\n      .on('select', 'node.reaction', event => selectReaction(mapper(event.target)))\n      .on('select', 'node.Modification', e => mapper(cy.nodes(`#${e.target.data('nodeId')}`)).select())\n\n  }\n\n  initClick(cy: cytoscape.Core) {\n    const container = cy.container()!;\n\n    cy\n      .on('click', 'node.InteractorOccurrences', e => {\n        const openClass = 'opened';\n        let eventType = !e.target.hasClass(openClass) ? ReactomeEventTypes.open : ReactomeEventTypes.close;\n        e.target.toggleClass(openClass);\n        container.dispatchEvent(new ReactomeEvent(eventType, {\n          element: e.target,\n          type: \"Interactor\",\n          reactomeId: e.target.data('reactomeId'),\n          cy\n        }))\n      })\n\n      .on('click', '.Interactor', e => {\n        const prop = e.target.isNode() ? 'accURL' : 'evidenceURLs';\n        const url = e.target.data(prop);\n        if (url) window.open(url);\n      })\n      .on('click', '.DiseaseInteractor', e => {\n        const prop = e.target.isNode() ? 'accURL' : 'evidenceURLs';\n        const url = e.target.data(prop);\n        if (url) window.open(url);\n      })\n\n    // .on('click', e => {\n    //   const openClass = 'opened';\n    //   let eventType = !e.target.hasClass(openClass) ? ReactomeEventTypes.open : ReactomeEventTypes.close;\n    //   e.target.toggleClass(openClass);\n    //   container.dispatchEvent(new ReactomeEvent(eventType, {\n    //     element: e.target,\n    //     type: \"Any\",\n    //     reactomeId: e.target.data('reactomeId'),\n    //     cy\n    //   }))\n    // });\n  }\n\n  private videoLayer?: IHTMLLayer;\n\n\n  initStructureVideo(cy: cytoscape.Core) {\n    const layersPlugin: LayersPlugin = layers(cy);\n    this.videoLayer = layersPlugin.append('html');\n    if (this.videoLayer) this.videoLayer.node.style.opacity = '0';\n    layersPlugin.renderPerNode(\n      this.videoLayer!,\n      (elem: HTMLElement) => {\n        (elem as RenderableHTMLElement).render()\n      },\n      {\n        init: (elem: RenderableHTMLElement, node: cytoscape.NodeSingular) => {\n          const name = node.data('displayName');\n\n          elem.innerHTML = node.data('html') || '';\n          elem.style.display = \"flex\";\n          const video = elem.children[0] as HTMLVideoElement;\n\n          elem.render = _.throttle(() => {\n              if (isElementInViewport(elem)) {\n                // console.log('rendering', name)\n                if (this.videoLayer?.node.style.opacity !== '0' && video.readyState === video.HAVE_NOTHING && video.networkState === video.NETWORK_IDLE) {\n                  video.classList.add('loading');\n                  video.oncanplay = e => video.classList.remove('loading')\n                  video.load();\n                }\n                elem.style.visibility = node.visible() ? 'visible' : 'hidden';\n              }\n\n            }, 500\n          );\n        },\n        transform: `translate(-70%, -50%)`,\n        position: 'center',\n        uniqueElements: false,\n        checkBounds: false, // Need false otherwise destroy nodes when out of view\n        selector: '.Protein',\n        updateOn: \"render\", // Need render to call display whenever we move\n        queryEachTime: false,\n      }\n    );\n\n    this.videoLayer?.node.classList.add('video')\n    const handler = (action: (video: HTMLVideoElement) => void) => async (event: cytoscape.EventObject) => {\n      const videoId = event.target.id();\n      const videoElement = this.videoLayer?.node.querySelector(`#video-${videoId}`) as HTMLVideoElement;\n      if (videoElement && videoElement.readyState >= videoElement.HAVE_ENOUGH_DATA) {\n        action(videoElement)\n      }\n    };\n    if (this.isMobile) {\n      this.cy\n        .on('select', 'node.Protein', handler(v => v.play()))\n        .on('unselect', 'node.Protein', handler(v => v.pause()))\n    } else {\n      this.cy\n        .on('mouseover', 'node.Protein', handler(v => v.play()))\n        .on('mouseout', 'node.Protein', handler(v => v.pause()));\n    }\n\n  }\n\n  private moleculeLayer?: IHTMLLayer;\n\n  initStructureMolecule(cy: cytoscape.Core) {\n    // @ts-ignore\n    const layers: LayersPlugin = cy.layers();\n\n    this.moleculeLayer = layers.append('html');\n    this.moleculeLayer.node.classList.add('molecule')\n\n    layers.renderPerNode(\n      this.moleculeLayer,\n      (elem: HTMLElement, node: cytoscape.NodeSingular) => {\n        elem.style.visibility = node.visible() ? 'visible' : 'hidden';\n      },\n      {\n        init: (elem: HTMLElement, node: cytoscape.NodeSingular) => {\n          elem.innerHTML = node.data('html') || '';\n          elem.style.display = \"flex\"\n        },\n        transform: `translate(-100%, -50%)`,\n        position: 'center',\n        uniqueElements: true,\n        checkBounds: false,\n        selector: '.Molecule',\n        queryEachTime: false,\n      }\n    );\n  }\n\n  onZoom: {\n    [name: string]: (e?: cytoscape.EventObjectCore) => void\n    shadow: (e?: cytoscape.EventObjectCore) => void;\n    protein: (e?: cytoscape.EventObjectCore) => void;\n  } = {\n    shadow: () => undefined,\n    protein: () => undefined,\n  };\n\n  triggerZoom() {\n    Object.values(this.onZoom).forEach(onZoom => onZoom())\n  }\n\n  proteins!: cytoscape.NodeCollection;\n\n  updateProteins() {\n    this.proteins = this.cy.nodes('.Protein')\n      .or('.Molecule');\n  }\n\n  initZoom(cy: cytoscape.Core) {\n    const shadows = cy.edges('[?pathway]');\n    const shadowLabels = cy.nodes('.Shadow');\n    const trivial = cy.elements('.trivial');\n    this.updateProteins();\n\n    cy.minZoom(Math.min(cy.zoom(), extract(this.properties.shadow.labelOpacity)[0][0] / 100));\n    cy.maxZoom(15);\n\n    let baseFontSize = extract(this.properties.font.size);\n    const structureOpacityArray = extract(this.properties.structure.opacity)\n    const zoomStart = structureOpacityArray[0][0];\n    const zoomEnd = structureOpacityArray[structureOpacityArray.length - 1][0]\n\n\n    this.onZoom.shadow = () => {\n      const zoomLevel = cy.zoom();\n      const z = zoomLevel * 100;\n      const shadowLabelOpacity = this.interpolate(z, extract(this.properties.shadow.labelOpacity).map(v => this.p(...v))) / 100;\n      const trivialOpacity = this.interpolate(z, extract(this.properties.trivial.opacity).map(v => this.p(...v))) / 100;\n      const shadowOpacity = this.interpolate(z, extract(this.properties.shadow.opacity).map(v => this.p(...v))) / 100;\n      shadows.style({\n        'underlay-opacity': shadowOpacity\n      });\n      shadowLabels.style({\n        'text-opacity': shadowLabelOpacity\n      });\n      trivial.style({\n        'opacity': trivialOpacity,\n        'underlay-opacity': Math.min(shadowOpacity, trivialOpacity)\n      });\n    }\n\n    this.onZoom.protein = () => {\n      const zoomLevel = cy.zoom();\n      const z = zoomLevel * 100;\n      const videoOpacity = this.interpolate(z, extract(this.properties.structure.opacity).map(v => this.p(...v))) / 100;\n\n      const maxWidth = this.interpolate(z, [this.p(zoomStart, 100), this.p(zoomEnd, 50)]);\n      this.margin = this.interpolate(z, [this.p(zoomStart, 0), this.p(zoomEnd, 0.25)]);\n      const fontSize = this.interpolate(z, [this.p(zoomStart, baseFontSize), this.p(zoomEnd, baseFontSize / 2)]);\n      this.proteins.style(\n        {\n          'font-size': fontSize,\n          'text-margin-x': (n: cytoscape.NodeSingular) => this.margin * n.data(\"width\"),\n          'text-max-width': maxWidth + \"%\",\n        })\n\n      if (this.videoLayer) this.videoLayer.node.style.opacity = videoOpacity + '';\n      if (this.moleculeLayer) this.moleculeLayer.node.style.opacity = videoOpacity + '';\n    };\n\n    cy.on('zoom', this.onZoom.shadow);\n    cy.on('zoom', this.onZoom.protein);\n\n    this.triggerZoom()\n  }\n\n  margin = 0;\n\n  p(x: number, y: number): P {\n    return new P(x, y)\n  }\n\n  interpolate(x: number, points: P[]): number {\n    if (x < points.at(0)!.x) return points.at(0)!.y;\n    if (x > points.at(-1)!.x) return points.at(-1)!.y;\n    for (let i = 0; i + 1 < points.length; i++) {\n      let y = this.lerp(x, points[i], points[i + 1])\n      if (y) return y;\n    }\n    console.assert(false, \"Should not arrive here\")\n    return 0;\n  }\n\n  /**\n   * Linear interpolation as described in https://en.wikipedia.org/wiki/Linear_interpolation\n   * @param x : number number to determine corresponding value\n   * @param p0 : P lower bound point for the linear interpolation\n   * @param p1 : P upper bound point for the linear interpolation\n   */\n  lerp(x: number, p0: P, p1: P): number | undefined {\n    if (x < p0.x || x > p1.x) return undefined;\n    return (p0.y * (p1.x - x) + p1.y * (x - p0.x)) / (p1.x - p0.x);\n  }\n}\n\ninterface State {\n  [k: string]: boolean\n}\n\nconst state: State = {\n  selecting: false,\n  hovering: false,\n  deHovering: false\n}\n\nclass P extends Array<number> {\n  constructor(x: number, y: number) {\n    super(x, y);\n  }\n\n  get x() {\n    return this[0]\n  }\n\n  get y() {\n    return this[1]\n  }\n}\n\n\nfunction isElementInViewport(el: HTMLElement) {\n  let rect = el.getBoundingClientRect();\n  return (\n    rect.top >= 0 &&\n    rect.left >= 0 &&\n    rect.bottom <= (window.innerHeight || document.documentElement.clientHeight) &&\n    rect.right <= (window.innerWidth || document.documentElement.clientWidth)\n  );\n}\n\n\n","import cytoscape from \"cytoscape\";\nimport {clearDrawersCache, imageBuilder, OMMITED_ICON, resetGradients} from \"./drawer/image-builder\";\nimport {extract, propertyExtractor, propertyMapper} from \"./properties-utils\";\n\nimport {Properties, setDefaults, UserProperties} from \"./properties\";\nimport {Interactivity} from \"./interactivity\";\nimport chroma, {Scale} from \"chroma-js\";\n\n\nexport class Style {\n  public css: CSSStyleDeclaration;\n  public properties: Properties;\n  public currentPalette!: Scale;\n  public cy?: cytoscape.Core;\n  private readonly imageBuilder;\n  private readonly p;\n  private readonly pm;\n  public interactivity!: Interactivity;\n\n  constructor(container: HTMLElement, properties: UserProperties = {}) {\n    this.css = getComputedStyle(container);\n    this.properties = setDefaults(properties, this.css);\n    this.imageBuilder = imageBuilder(this.properties, this);\n    this.p = propertyExtractor(this.properties);\n    this.pm = propertyMapper(this.properties);\n  }\n\n  bindToCytoscape(cy: cytoscape.Core) {\n    this.cy = cy;\n    cy.data('reactome', this);\n    this.interactivity = new Interactivity(cy, this.properties);\n    this.initSubPathwayColors()\n  }\n\n  initSubPathwayColors() {\n    const subPathways = this.cy?.nodes('.Shadow');\n    if (!subPathways) return;\n    const dH = 360 / subPathways.length;\n\n    subPathways.forEach((subPathway, i) => {\n      const edges = this.cy!.edges(`[pathway=${subPathway.data('reactomeId')}]`);\n      subPathway.data('edges', edges);\n\n      const color = chroma.hsl(dH * i, 1,extract(this.properties.shadow.luminosity) / 100);\n      console.log(`hsl(${dH * i} 100 ${extract(this.properties.shadow.luminosity)})`, color, color.hex())\n      const hex = color.hex();\n      subPathway.data('color', hex);\n      edges.forEach(edge => {\n        edge.data('color', hex)\n      });\n    })\n  }\n\n\n  getStyleSheet(): cytoscape.Stylesheet[] {\n    return [\n      {\n        selector: \"*\",\n        style: {\n          \"font-family\": \"Roboto\",\n          \"font-weight\": 600,\n          \"z-index\": 1\n        }\n      },\n      {\n        selector: 'node.Compartment',\n        style: {\n          \"shape\": \"round-rectangle\",\n          \"width\": 'data(width)',\n          \"height\": 'data(height)',\n\n          \"border-style\": 'double',\n\n          \"z-index\": 0,\n          \"z-compound-depth\": \"bottom\",\n          \"overlay-opacity\": 0,\n\n          \"color\": this.p('compartment', 'fill'),\n          \"border-color\": this.p('compartment', 'fill'),\n          \"background-color\": this.p('compartment', 'fill'),\n          \"background-opacity\": this.p('compartment', 'opacity'),\n          \"border-width\": this.pm('global', 'thickness', t => 3 * t)\n        }\n      },\n      {\n        selector: 'node.Compartment.inner, node.Compartment.outer',\n        style: {\n          \"border-style\": 'solid',\n          \"border-width\": this.p('global', 'thickness')\n        }\n      },\n      {\n        selector: 'node.Compartment.outer',\n        style: {\n          'label': 'data(displayName)',\n          \"text-opacity\": 1,\n          \"text-valign\": \"bottom\",\n          \"text-halign\": \"right\",\n          // @ts-ignore\n          \"text-margin-x\": \"data(textX)\",\n          // @ts-ignore\n          \"text-margin-y\": \"data(textY)\",\n        }\n      },\n      {\n        selector: 'node[?radius]',\n        style: {\n          // @ts-ignore\n          'corner-radius': 'data(radius)'\n        }\n      },\n      {\n        selector: 'node.Shadow',\n        style: {\n          'label': 'data(displayName)',\n          \"font-size\": this.p('shadow', 'fontSize'),\n          \"background-opacity\": 0,\n          \"shape\": \"rectangle\",\n          \"text-valign\": \"center\",\n          \"text-halign\": \"center\",\n          \"text-outline-color\": this.p('global', 'surface'),\n          \"text-outline-width\": this.p('shadow', 'fontPadding'),\n          \"text-wrap\": 'wrap',\n          \"text-max-width\": \"data(width)\",\n        }\n      },\n      {\n        selector: 'node.Shadow[?color]',\n        style: {\n          \"color\": 'data(color)',\n        }\n      },\n      {\n        selector: 'node.drug',\n        style: {\n          \"text-max-width\": (node: cytoscape.NodeSingular) => (node.width() - 44) + 'px',\n          \"text-margin-x\": 4,\n          \"font-style\": \"italic\"\n        }\n      }, {\n        selector: 'node.PhysicalEntity, node.Pathway, node.Modification, node.Interactor',\n        style: {\n          'font-size': this.p('font', 'size'),\n          'text-margin-x': 0,\n          'label': 'data(displayName)',\n          'width': 'data(width)',\n          'height': 'data(height)',\n          \"background-fit\": \"none\",\n          \"text-halign\": 'center',\n          \"text-valign\": 'center',\n          \"text-wrap\": 'wrap',\n          \"text-max-width\": (node: cytoscape.NodeSingular) => node.data('width') + 'px',\n          // @ts-ignore\n          \"background-image-smoothing\": \"no no no no no no no no\",\n\n          // @ts-ignore\n          \"background-image\": node => this.imageBuilder(node)[\"background-image\"],\n          // @ts-ignore\n          \"background-position-y\": node => this.imageBuilder(node)[\"background-position-y\"] || 0,\n          // @ts-ignore\n          \"background-position-x\": node => this.imageBuilder(node)[\"background-position-x\"] || 0,\n          // @ts-ignore\n          \"background-height\": node => this.imageBuilder(node)[\"background-height\"] || '100%',\n          // @ts-ignore\n          \"background-width\": node => this.imageBuilder(node)[\"background-width\"] || '100%',\n          // @ts-ignore\n          \"background-clip\": node => this.imageBuilder(node)[\"background-clip\"] || 'node',\n          // @ts-ignore\n          \"background-image-containment\": node => this.imageBuilder(node)[\"background-image-containment\"] || 'inside',\n          // @ts-ignore\n          \"background-image-opacity\": node => this.imageBuilder(node)[\"background-image-opacity\"] || 1,\n          // @ts-ignore\n          \"bounds-expansion\": node => this.imageBuilder(node)[\"bounds-expansion\"][0] || 0,\n          'color': this.p('global', 'onPrimary'),\n        }\n      },\n\n      {\n        selector: 'node.InteractorOccurrences',\n        style: {\n          'label': 'data(displayName)',\n          'color': this.p('global', 'surface'),\n          \"shape\": \"ellipse\",\n          \"text-valign\": \"center\",\n          \"text-halign\": \"center\",\n          \"text-wrap\": 'wrap',\n          \"background-color\": this.p('interactor', 'fill')\n        }\n      },\n      {\n        selector: 'node.InteractorOccurrences.disease',\n        style: {\n          \"background-color\": this.p('global', 'negative')\n        }\n      },\n      {\n        selector: 'node.InteractorOccurrences.hover',\n        style: {\n          \"border-width\": this.pm('global', 'thickness', t => t * 1),\n          \"border-color\": this.p('global', 'hoverNode'),\n        }\n      },\n      {\n        selector: 'node.InteractorOccurrences.select',\n        style: {\n          \"border-width\": this.pm('global', 'thickness', t => t * 1),\n          \"border-color\": this.p('global', 'selectNode'),\n        }\n      },\n      {\n        selector: 'node.Interactor',\n        style: {\n          \"label\": \"data(displayName)\",\n          \"font-family\": \"Roboto Mono, monospace\",\n          // \"border-color\": this.p('interactor', 'stroke'),\n          \"border-width\": this.p('global', 'thickness'),\n          \"text-wrap\": \"ellipsis\",\n          \"border-color\": this.p('interactor', 'fill'),\n          //@ts-ignore\n          \"border-position\": 'inside'\n        }\n      },\n\n      {\n        selector: 'node.PhysicalEntity.disease',\n        style: {\n          \"border-color\": this.p('global', 'negativeContrast'),\n          \"color\": this.p('global', 'negativeContrast'),\n          \"border-width\": this.p('global', 'thickness'),\n        }\n      },\n\n      {\n        selector: 'node.Interactor.disease',\n        style: {\n          \"shape\": \"round-hexagon\",\n          \"background-color\": this.p('global', 'negative'),\n          \"background-opacity\": 0,\n          \"border-width\": 0,\n          \"font-family\": \"Roboto Mono, monospace\",\n          \"color\": this.p('global', 'onPrimary'),\n          \"text-wrap\": \"ellipsis\",\n          \"text-max-width\": (node: cytoscape.NodeSingular) => (node.width() - 40) + 'px',\n        }\n      },\n      {\n        selector: 'node.Protein',\n        style: {\n          \"shape\": \"round-rectangle\",\n          \"background-color\": this.p('protein', 'fill')\n        }\n      }, {\n        selector: 'node.Protein.drug',\n        style: {\n          \"background-color\": this.p('protein', 'drug')\n        }\n      }, {\n        selector: 'node.GenomeEncodedEntity',\n        style: {\n          \"shape\": \"round-rectangle\",\n          \"background-opacity\": 0,\n          \"background-color\": this.p('genomeEncodedEntity', 'fill'),\n          \"text-margin-y\": this.pm('genomeEncodedEntity', 'topRadius', r => r / 10),\n          \"border-width\": 0 // Avoid disease border\n        }\n      }, {\n        selector: 'node.RNA',\n        style: {\n          \"shape\": \"bottom-round-rectangle\",\n          \"background-color\": this.p('rna', 'fill'),\n        }\n      }, {\n        selector: 'node.RNA.drug',\n        style: {\n          \"background-color\": this.p('rna', 'drug'),\n        }\n      }, {\n        selector: 'node.Gene',\n        style: {\n          \"shape\": \"bottom-round-rectangle\",\n          \"background-opacity\": 0,\n          \"background-color\": this.p('gene', 'fill'),\n          \"bounds-expansion\": this.p('gene', 'decorationExtraWidth'),\n          \"text-margin-y\": this.pm('gene', 'decorationHeight', h => h / 2),\n          \"border-width\": 0 // Avoid disease border\n        }\n      }, {\n        selector: 'node.Molecule',\n        style: {\n          \"shape\": 'round-rectangle',\n          \"color\": this.p(\"molecule\", 'stroke'),\n          \"background-color\": this.p(\"molecule\", 'fill'),\n          \"border-color\": this.p(\"molecule\", 'stroke'),\n          \"border-width\": this.p(\"global\", 'thickness'),\n          // @ts-ignore\n          \"corner-radius\": (node: cytoscape.NodeSingular) => Math.min(node.data('width'), node.data('height')) / 2,\n        }\n      }, {\n        selector: 'node.Molecule.drug',\n        style: {\n          \"color\": this.p(\"molecule\", 'drug'),\n          \"border-color\": this.p(\"molecule\", 'drug'),\n        }\n      }, {\n        selector: 'node.Molecule.Interactor',\n        style: {\n          \"border-color\": this.p(\"interactor\", 'fill'),\n        }\n      }, {\n        selector: 'node.EntitySet',\n        style: {\n          \"background-opacity\": 0,\n          \"shape\": \"round-rectangle\",\n          \"border-width\": 0, // Avoid disease border\n          \"text-max-width\": (node: cytoscape.NodeSingular) =>\n            this.pm('global', 'thickness', t =>\n              this.pm('entitySet', 'radius', r => `${node.width() - 2 * r - 6 * t}px`\n              )\n            )\n        }\n      }, {\n        selector: 'node.EntitySet.drug',\n        style: {\n          \"text-max-width\": (node: cytoscape.NodeSingular) =>\n            this.pm('global', 'thickness', t =>\n              this.pm('entitySet', 'radius', r => `${node.width() - 2 * r - 6 * t - 44}px`\n              )\n            )\n        }\n      }, {\n        selector: 'node.Complex',\n        style: {\n          \"shape\": \"cut-rectangle\",\n          \"text-max-width\": (node: cytoscape.NodeSingular) => this.pm('global', 'thickness', t => (node.width() - t * 6) + 'px'),\n          \"background-opacity\": 0,\n          \"border-width\": 0, // Avoid disease border\n\n          // \"background-color\": this.p(\"complex\", 'fill'),\n          // \"width\": (node: cytoscape.NodeSingular) => this.pm('global', 'thickness', t => node.data('width') -  2 * t) ,\n          // \"height\": (node: cytoscape.NodeSingular) => this.pm('global', 'thickness', t => node.data('height') -  2 * t) ,\n          // // @ts-ignore\n          // \"corner-radius\": this.pm('complex', 'cut', c => c),\n          // \"outline-width\":  this.p('global', 'thickness'),\n          // \"outline-color\":  this.p('complex', 'fill'),\n          // \"outline-offset\":  this.pm('global', 'thickness', t => - t),\n          // \"outline-opacity\":  1,\n          //\n          // // \"border-position\": 'inside',\n          // \"border-join\": 'round',\n          // \"border-color\": this.p('complex', 'stroke'),\n          // \"border-width\": this.p('global', 'thickness'),\n        }\n      }, {\n        selector: 'node.Complex.drug',\n        style: {\n          \"text-margin-x\": 4,\n          \"text-max-width\": (node: cytoscape.NodeSingular) => this.pm('global', 'thickness', t => (node.width() - t * 6 - 44) + 'px')\n        }\n      }, {\n        selector: 'node.Cell',\n        style: {\n          \"background-opacity\": 0,\n          \"shape\": \"round-rectangle\",\n          // @ts-ignore\n          \"corner-radius\": 999999,\n          \"border-width\": 0, // Avoid disease border\n\n          \"text-max-width\": (node: cytoscape.NodeSingular) =>\n            this.pm('global', 'thickness', t => this.pm('cell', 'thickness', ct => (node.width() - t * 2 - ct * 2) + 'px'))\n        }\n      },\n      {\n        selector: 'node.Pathway',\n        style: {\n          \"background-color\": this.p('pathway', 'fill'),\n          \"text-margin-x\": 18,\n          \"border-color\": this.p('pathway', 'stroke'),\n          // @ts-ignore\n          \"border-position\": \"inside\",\n          \"border-width\": this.pm('global', 'thickness', t => 3 * t),\n        }\n      },\n      {\n        selector: 'node.Interacting.Pathway',\n        style: {\n          \"shape\": \"rectangle\",\n          \"text-max-width\": (node: cytoscape.NodeSingular) =>\n            this.pm('global', 'thickness', t => `${node.width() - (6 * t + 36) * 2}px`\n            ),\n        }\n      },\n      {\n        selector: 'node.SUB.Pathway',\n        style: {\n          //@ts-ignore\n          \"corner-radius\": 99999,\n          \"shape\": 'round-rectangle',\n          \"text-max-width\": (node: cytoscape.NodeSingular) =>\n            this.pm('global', 'thickness', t => `${node.width() - (6 * t + 36) * 2}px`\n            ),\n        }\n      }, {\n        selector: 'node.Pathway.disease',\n        style: {\n          \"border-color\": this.p('global', 'negativeContrast'),\n          \"color\": this.p('global', 'negativeContrast'),\n        }\n      }, {\n        selector: 'node.Modification',\n        style: {\n          \"background-color\": this.p('modification', 'fill'),\n          \"shape\": 'round-rectangle'\n        }\n      },\n\n\n      {\n        selector: 'node.reaction',\n        style: {\n          \"width\": this.pm('global', 'thickness', t => t * 6),\n          \"height\": this.pm('global', 'thickness', t => t * 6),\n          \"shape\": \"round-rectangle\",\n          \"text-halign\": \"center\",\n          \"text-valign\": \"center\",\n          \"border-width\": this.p('global', 'thickness'),\n          \"border-color\": this.p('global', 'onSurface'),\n          \"color\": this.p('global', 'onSurface'),\n          \"background-color\": this.p('global', 'surface'),\n        }\n      }, {\n        selector: 'node.reaction[?displayName]',\n        style: {\n          \"label\": \"data(displayName)\",\n          \"font-weight\": 400,\n          \"text-valign\": \"top\",\n          \"text-margin-y\": -5,\n        }\n      }, {\n        selector: 'node.reaction.hover',\n        style: {\n          \"border-width\": this.pm('global', 'thickness', t => t * 1),\n          \"border-color\": this.p('global', 'hoverEdge'),\n        }\n      }, {\n        selector: 'node.reaction:selected',\n        style: {\n          \"border-width\": this.pm('global', 'thickness', t => t * 1.5),\n          \"border-color\": this.p('global', 'selectEdge'),\n        }\n      }, {\n        selector: 'node.reaction.flag',\n        style: {\n          // @ts-ignore\n          \"outline-width\": this.pm('global', 'thickness', t => t * 1.5),\n          \"outline-color\": this.p('global', 'flag'),\n        }\n      }, {\n        selector: 'node.association',\n        style: {\n          \"shape\": \"ellipse\",\n          \"background-color\": this.p('global', 'onSurface'),\n        }\n      }, {\n        selector: 'node.dissociation',\n        style: {\n          \"shape\": \"ellipse\",\n          \"border-style\": \"double\",\n          \"border-width\": this.pm('global', 'thickness', t => 3 * t)\n        }\n      }, {\n        selector: 'node.uncertain',\n        style: {\n          \"label\": \"?\",\n          \"text-valign\": \"center\",\n          \"text-margin-y\": 0,\n          \"font-weight\": 600\n        }\n      }, {\n        selector: 'node.omitted',\n        style: {\n          \"background-image\": OMMITED_ICON(this.properties),\n          \"background-fit\": \"cover\",\n          \"background-height\": \"100%\",\n          \"background-width\": \"100%\",\n        }\n      }, {\n        selector: 'node.loss-of-function',\n        style: {\n          \"border-style\": 'dashed',\n          //@ts-ignore\n          \"border-dash-pattern\": this.pm('global', 'thickness', t => [t, t * 2]),\n          \"border-cap\": \"round\"\n        }\n      },\n\n\n      // {\n      //   selector: 'node.RNA.Interactor, node.Protein.Interactor',\n      //   style: {\n      //     \"border-color\": this.p('interactor', 'fill'),\n      //     \"border-width\": this.p('global', 'thickness'),\n      //\n      //   }\n      // },\n      // {\n      //   selector: 'node.Molecule.Interactor',\n      //   style: {\n      //     \"color\": this.p(\"molecule\", 'stroke'),\n      //     \"background-color\": this.p(\"molecule\", 'fill'),\n      //     \"border-color\": this.p(\"interactor\", 'stroke'),\n      //     \"border-width\": this.p(\"global\", 'thickness'),\n      //     // @ts-ignore\n      //     \"corner-radius\": (node: cytoscape.NodeSingular) => Math.min(node.data('width'), node.data('height')) / 2,\n      //   }\n      // },\n\n\n      {\n        selector: 'edge',\n        style: {\n          \"curve-style\": \"straight\",\n          \"line-cap\": \"round\",\n          \"source-endpoint\": \"outside-to-node\",\n          \"arrow-scale\": 1.5,\n\n          'width': this.p('global', 'thickness'),\n          'color': this.p('global', 'onSurface'),\n          'line-color': this.p('global', 'onSurface'),\n          'target-arrow-color': this.p('global', 'onSurface'),\n          'mid-source-arrow-color': this.p('global', 'onSurface'),\n          'mid-target-arrow-color': this.p('global', 'onSurface'),\n          'source-arrow-color': this.p('global', 'onSurface'),\n          // @ts-ignore\n          'source-arrow-width': '100%',\n          // @ts-ignore\n          'target-arrow-width': '100%',\n        }\n      }, {\n        selector: 'edge.disease',\n        style: {\n          \"color\": this.p('global', 'negative'),\n          \"line-color\": this.p('global', 'negative'),\n          \"border-color\": this.p('global', 'negative'),\n          'target-arrow-color': this.p('global', 'negative'),\n          'source-arrow-color': this.p('global', 'negative'),\n        }\n      }, {\n        selector: \"edge.hover\",\n        style: {\n          \"line-color\": this.p('global', 'hoverEdge'),\n          \"width\": this.pm('global', 'thickness', t => t * 1.5),\n          \"arrow-scale\": 1,\n          \"source-arrow-color\": this.p('global', 'hoverEdge'),\n          \"target-arrow-color\": this.p('global', 'hoverEdge'),\n          // @ts-ignore\n          'source-arrow-width': '50%',\n          // @ts-ignore\n          'target-arrow-width': '50%',\n          \"z-index\": 2\n        }\n      }, {\n        selector: \"edge:selected\",\n        style: {\n          \"line-color\": this.p('global', 'selectEdge'),\n          \"width\": this.pm('global', 'thickness', t => t * 2),\n          \"arrow-scale\": 1,\n          \"source-arrow-color\": this.p('global', 'selectEdge'),\n          \"target-arrow-color\": this.p('global', 'selectEdge'),\n          // @ts-ignore\n          'source-arrow-width': '50%',\n          // @ts-ignore\n          'target-arrow-width': '50%',\n          \"z-index\": 3\n        }\n      },\n      {\n        selector: 'edge.consumption',\n        style: {\"target-endpoint\": \"inside-to-node\", \"source-endpoint\": \"outside-to-node\"}\n      }\n      , {\n        selector: 'edge.production',\n        style: {'target-arrow-shape': 'triangle'}\n      }, {\n        selector: 'edge.catalysis',\n        style: {\n          'target-arrow-shape': 'circle',\n          \"target-arrow-fill\": \"hollow\",\n          \"target-arrow-color\": this.p('global', 'positive')\n        }\n      }, {\n        selector: 'edge.positive-regulation',\n        style: {\n          'target-arrow-shape': 'triangle',\n          \"target-arrow-fill\": \"hollow\",\n          \"target-arrow-color\": this.p('global', 'positive')\n        }\n      }, {\n        selector: 'edge.negative-regulation',\n        style: {\n          'target-arrow-shape': 'tee',\n          \"line-cap\": \"butt\",\n          \"source-endpoint\": \"inside-to-node\",\n          \"target-arrow-color\": this.p('global', 'negative')\n        }\n      }, {\n        selector: 'edge.set-to-member',\n        style: {'target-arrow-shape': 'circle', \"line-style\": \"dashed\", \"line-dash-pattern\": [6, 10], \"opacity\": 0.5}\n      }, {\n        selector: 'edge[stoichiometry > 1]',\n        style: {\n          \"text-background-color\": this.p('global', 'surface'),\n          \"text-background-opacity\": 1,\n          \"text-border-width\": this.pm('global', 'thickness', t => t / 2),\n          \"text-border-opacity\": 1,\n          \"text-border-color\": this.p('global', 'onSurface'),\n          \"text-background-shape\": 'roundrectangle',\n          \"text-background-padding\": this.pm('global', 'thickness', t => t + 'px'),\n        }\n      }, {\n        selector: 'edge[stoichiometry > 1].incoming',\n        style: {\n          \"source-label\": \"data(stoichiometry)\",\n          \"source-text-offset\": 30,\n        }\n      }, {\n        selector: 'edge[stoichiometry > 1].outgoing',\n        style: {\n          \"target-label\": \"data(stoichiometry)\",\n          \"target-text-offset\": 35,\n        }\n      }, {\n        selector: \"edge.shadow[?color]\",\n        style: {\n          // @ts-ignore\n          \"underlay-color\": \"data(color)\",\n          \"underlay-padding\": this.p('shadow', 'padding'),\n          \"underlay-opacity\": this.pm('shadow', 'opacity', o => o[0][1] / 100),\n        }\n      }, {\n        selector: \"edge.flag\",\n        style: {\n          // @ts-ignore\n          \"underlay-color\": this.p('global', 'flag'),\n          \"underlay-padding\": 10,\n          \"underlay-opacity\": 1,\n        }\n      }, {\n        selector: \"edge[?weights]\",\n        style: {\n          // @ts-ignore\n          \"curve-style\": \"round-segments\",\n          \"segment-distances\": \"data(distances)\",\n          \"segment-weights\": \"data(weights)\",\n          \"segment-radius\": 30,\n          \"radius-type\": 'influence-radius',\n          // @ts-ignore\n          \"edge-distances\": \"endpoints\",\n        }\n      }, {\n        selector: \"edge[?sourceEndpoint]\",\n        style: {\n          \"source-endpoint\": \"data(sourceEndpoint)\",\n        }\n      }, {\n        selector: \"edge[?targetEndpoint]\",\n        style: {\n          \"target-endpoint\": \"data(targetEndpoint)\",\n        }\n      }, {\n        selector: \"edge[?sourceLabel]\",\n        style: {\n          \"source-label\": \"data(sourceLabel)\",\n          \"source-text-margin-y\": -12,\n          \"font-weight\": 400\n        }\n      }, {\n        selector: \"edge[?label]\",\n        style: {\n          \"label\": \"data(label)\",\n          \"text-margin-y\": 12,\n          \"font-weight\": 400\n        }\n      },\n      {\n        selector: 'edge.Interactor',\n        style: {\n          'line-color': this.p('interactor', 'stroke'),\n          'line-style': 'dashed',\n          'line-dash-pattern': [1, 8]\n        }\n      },\n      {\n        selector: 'edge.Interactor.disease',\n        style: {\n          'line-color': this.p('global', 'negativeContrast'),\n        }\n      },\n      {\n        selector: 'edge.Interactor.hover',\n        style: {\n          \"line-color\": this.p('global', 'hoverEdge')\n        }\n      },\n      {\n        selector: \"edge[?sourceOffset]\",\n        style: {\n          // @ts-ignore\n          \"source-text-offset\": \"data(sourceOffset)\",\n        }\n      },\n      {\n        selector: \"[?labelColor]\",\n        style: {\n          \"color\": (e: cytoscape.EdgeSingular) => extract(this.p('global', e.data(\"labelColor\")))\n        }\n      }, {\n        selector: \"node.debug\",\n        style: {\n          label: \"data(id)\",\n          \"text-outline-width\": 4,\n          \"text-outline-color\": 'black',\n          \"text-outline-opacity\": 1,\n          color: 'white'\n        }\n      },\n      {\n        selector: \"[?exp]\",\n        style: {\n          \"color\": this.p('global', 'surface'),\n          \"text-outline-width\": 2,\n          \"text-outline-color\": this.p('global', 'onSurface'),\n          \"text-outline-opacity\": 1,\n        }\n      },\n      {\n        selector: \"[?exp].Molecule\",\n        style: {\n          \"background-color\": this.p('global', 'onSurface')\n        }\n      },\n\n      {\n        selector: \"node.Legend.Label\",\n        style: {\n          \"label\": \"data(displayName)\",\n          \"text-halign\": \"center\",\n          \"text-valign\": \"center\",\n          \"font-size\": 24,\n          \"font-weight\": 400,\n          \"background-opacity\": 0,\n          \"color\": this.p('global', 'onSurface')\n        }\n      },\n      {\n        selector: \"node.Legend.Placeholder\",\n        style: {\n          \"background-opacity\": 0,\n          \"border-opacity\": 0,\n          width: 20,\n          height: 20,\n          shape: \"rectangle\"\n        }\n      },\n      {\n        selector: \"node.Legend.Placeholder[?displayName]\",\n        style: {\n          \"label\": \"data(displayName)\",\n          \"font-weight\": 400,\n        }\n      },\n      {\n        selector: '.trivial',\n        style: {\n          'opacity': 0,\n        }\n      },\n    ]\n  }\n\n  clearCache() {\n    this.imageBuilder.cache.clear!()\n    clearDrawersCache();\n  }\n\n  update(cy: cytoscape.Core) {\n    this.clearCache();\n    cy.style(this.getStyleSheet());\n    this.initSubPathwayColors();\n    this.interactivity.triggerZoom();\n  }\n\n  loadAnalysis(cy: cytoscape.Core, palette: Scale) {\n\n\n    // const paletteDef: [number, string][] | string = paletteType === 'unidirectional' ? extract(this.properties.analysis.unidirectionalPalette) : extract(this.properties.analysis.bidirectionalPalette);\n\n    // if (typeof paletteDef !== \"string\") {\n    //   this.currentPalette = scale(paletteDef.map(e => e[1]))\n    //     .domain(paletteDef.map(e => e[0]))\n    //     .mode('oklab')\n    // } else {\n      this.currentPalette = palette\n    // }\n\n    this.imageBuilder.cache.clear!();\n    resetGradients()\n    cy.style(this.getStyleSheet());\n  }\n}\n","/*\n * Public API Surface of reactome-cytoscape-style\n */\n\nexport {Style} from './lib/style';\nexport {UserProperties} from './lib/properties';\nexport {Interactivity} from './lib/interactivity';\nexport * as Types from './lib/types';\nexport {ReactomeEvent, ReactomeEventTarget, ReactomeEventTypes} from './lib/model/reactome-event.model';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["isProvider","property","apply","undefined","extract","defaultable","object","setDefault","key","defaultValue","propertyExtractor","properties","group","propertyMapper","mapper","RouterModule","DiagramComponent","DiagramIteratorComponent","legacyGuard","routes","path","component","canActivate","runGuardsAndResolvers","AppRoutingModule","_","_2","_3","forRoot","bindToComponentInputs","imports","i1","exports","AppComponent","constructor","title","selectors","decls","vars","template","AppComponent_Template","rf","ctx","i0","ɵɵelement","BrowserModule","FormsModule","ReactiveFormsModule","CommonModule","HttpClientModule","RouterOutlet","BrowserAnimationsModule","MatButtonModule","MatSlideToggleModule","CdkDrag","CdkDragHandle","MatInputModule","MatSelectModule","MatProgressSpinnerModule","CustomInteractorDialogComponent","MatDialogModule","MatTabsModule","MatCheckboxModule","MatRadioModule","NgxMatFileInputModule","MatIconModule","MatListModule","AppModule","bootstrap","declarations","combineLatest","route","client","router","diagramId","diagramIndex","diagramIds","ngAfterViewInit","params","get","responseType","subscribe","diagrams","split","filter","s","length","next","previous","ɵɵdirectiveInject","ActivatedRoute","i2","HttpClient","Router","viewQuery","DiagramIteratorComponent_Query","ɵɵelementStart","ɵɵlistener","DiagramIteratorComponent_Template_div_keydown_arrowLeft_0_listener","DiagramIteratorComponent_Template_div_keydown_arrowRight_0_listener","DiagramIteratorComponent_Template_button_click_3_listener","ɵɵtext","ɵɵelementEnd","DiagramIteratorComponent_Template_input_ngModelChange_8_listener","$event","DiagramIteratorComponent_Template_button_click_9_listener","ɵɵadvance","ɵɵproperty","cytoscape","ReactomeEventTypes","Style","delay","distinctUntilChanged","forkJoin","share","Subject","take","tap","FormControl","UntilDestroy","ResourceType","isDefined","brewer","scale","style","MatFormField","ctx_r11","paletteOptions","palette_r12","ɵɵstyleProp","tmp_1_0","gradient","ɵɵtemplate","DiagramComponent_ng_container_35_mat_optgroup_1_mat_option_3_Template","ɵɵtextInterpolate","group_r9","name","palettes","ɵɵelementContainerStart","DiagramComponent_ng_container_35_mat_optgroup_1_Template","ɵɵelementContainerEnd","valid","DiagramComponent_mat_option_43_Template_mat_option_click_0_listener","ɵɵrestoreView","_r17","ɵɵnextContext","_r6","ɵɵreference","ɵɵresetView","open","DiagramComponent_mat_option_43_mat_spinner_5_Template","resource_r14","active","ctx_r7","isDataFromPsicquicLoading","selectedPsicquicResource","value","DiagramComponent_mat_selection_list_51_mat_list_option_1_Template_mat_list_option_click_0_listener","restoredCtx","_r21","resourceToken_r19","$implicit","ctx_r20","onCustomResourceChange","DiagramComponent_mat_selection_list_51_mat_list_option_1_Template_button_click_4_listener","ctx_r22","deleteResource","ctx_r18","isSelected","token","summary","DiagramComponent_mat_selection_list_51_mat_list_option_1_Template","ctx_r8","resourceTokens","PaletteSummary","_scale","mode","join","classes","n","colors","map","c","i","domain","min","max","diagram","dark","interactorsService","state","dialog","cdr","analysis","comparing","fit","psicquicResources","cys","Map","Object","keys","toLowerCase","palette","classRegex","ratio","replacedElementsPosition","lastIndex","underlayPadding","syncing","syncViewports","source","sourceContainer","target","targetContainer","updateReplacementVisibility","position","pan","sourceX","getBoundingClientRect","x","targetX","viewport","zoom","compareDragging","_reactomeEvents$","_ignore","reactomeEvents$","asObservable","pipe","prev","current","type","detail","reactomeId","e","console","log","element","data","cy","container","id","flagging","onChange","flag$","forEach","flag","selecting","select$","select","interactoring","overlay$","getInteractors","analysing","analysis$","loadAnalysis","compareBackgroundSync","legend","event","src","tgt","cyCompare","replacedBy","replacements","getElementById","add","elements","applyEvent","interactorOpeningHandling","close","includes","reactomeStyle","reactomeStyleCompare","occurrenceNode","nodes","addInteractorNodes","removeInteractorNodes","interactivity","updateProteins","triggerZoom","initialiseReplaceElements","diagram2legend","matchingElement","not","reaction","first","connectedEdges","diagramSelect2state","reactomeIds","el","set","legend2state","unselect","hover","addClass","leave","removeClass","ngOnChanges","changes","loadDiagram","$dark","updateStyle","bind","cytoscapeContainer","nativeElement","compareContainer","legendContainer","values","addEventListener","shadow","padding","getLegend","getStyleSheet","layout","boxSelectionEnabled","bindToCytoscape","zoomingEnabled","panningEnabled","minZoom","bb","boundingBox","getPsicquicResources","getDiagram","some","node","edges","edge","clearCache","on","navigate","queryParamsHandling","loadCompare","stateToDiagram","batch","getPosition","is","x1","replacedElements","sort","a","b","toArray","addedElement","index","findIndex","splice","removedElement","indexOf","remove","maxZoom","setTimeout","getElements","tokens","collection","startsWith","or","matchArray","match","clazz","drug","and","selected","connectedNodes","accs","flagElements","toFlag","shadowNodes","shadowEdges","trivials","nonempty","setSubPathwayVisibility","visible","opacity","onZoom","off","affectedElements","extent","limitIndex","slice","resource","isCustom","isCustomResource","isPsicquic","pr","STATIC","r","reset","getInteractorData","interactors","addInteractorOccurrenceNode","resources","onPsicquicResourceChange","selectedResource","psicquicSelect","openCustomInteractorDialog","dialogRef","restoreFocus","afterClosed","result","componentInstance","push","detectChanges","sendPostRequest","removeData","fontSize","fontPadding","entities","foundEntities","pathways","pathwaysResults","p","result$","analysisProfile","analysisIndex","expNames","analysisEntityMap","flatMap","entity","mapsTo","diagramEntity","ids","exp","analysisPathwayMap","dbId","normalize","expression","hasExpression","leaves","leaf","identifier","pathwayData","pValue","found","total","validGroups","Set","has","changePalette","update","dragStart","dragEnd","dragMove","resize","updateLegend","logProteins","debug","analyse","example","DiagramService","DarkService","i3","InteractorService","i4","DiagramStateService","i5","MatDialog","ChangeDetectorRef","i6","AnalysisService","i7","DiagramComponent_Query","DiagramComponent_Template_div_mouseup_6_listener","DiagramComponent_Template_div_mouseleave_6_listener","DiagramComponent_Template_div_mousemove_6_listener","_r23","_r2","DiagramComponent_Template_span_mousedown_7_listener","DiagramComponent_Template_div_cdkDragMoved_11_listener","DiagramComponent_Template_button_click_17_listener","DiagramComponent_Template_button_click_19_listener","DISGENET","DiagramComponent_Template_button_click_21_listener","DiagramComponent_Template_button_click_23_listener","DiagramComponent_Template_button_click_25_listener","DiagramComponent_Template_button_click_27_listener","DiagramComponent_Template_mat_select_valueChange_32_listener","DiagramComponent_Template_mat_select_selectionChange_32_listener","DiagramComponent_ng_container_35_Template","DiagramComponent_Template_mat_select_selectionChange_39_listener","DiagramComponent_mat_option_43_Template","DiagramComponent_Template_button_click_44_listener","DiagramComponent_Template_mat_slide_toggle_ngModelChange_46_listener","isDark","DiagramComponent_mat_selection_list_51_Template","ɵɵclassProp","ɵɵpureFunction1","_c4","_r0","clientHeight","tmp_14_0","ɵɵpipeBind1","__decorate","checkProperties","inject","URL_PATTERN","fragment","queryParams","groups","param","Validators","merge","takeUntilDestroyed","MAT_DIALOG_DATA","InputCategory","Resource","ctx_r0","errorMessage","item_r6","i_r7","ɵɵtextInterpolate1","content","CustomInteractorDialogComponent_mat_form_field_15_Template_ngx_mat_file_input_change_1_listener","_r9","onFileChange","interactorService","fb","required","pattern","tabId","selectedValue","isDataLoading","items","formGroupValidator","control","fileValue","form","contentValue","urlValue","url","psicquicUrlValue","psicquicUrl","invalid","resourceForm","validators","statusChanges","valueChanges","updateErrorMessage","ngOnInit","hasError","onTabChange","tab","ariaLabelledby","onItemChange","inputElement","files","file","patchValue","submit","userInput","getInputs","getInteractorsFromToken","input","formValue","UPLOAD_URL","prepareFormData","UPLOAD_PSICQUIC_URL","formControl","formData","FormData","append","MatDialogRef","FormBuilder","consts","CustomInteractorDialogComponent_Template","CustomInteractorDialogComponent_Template_input_blur_8_listener","CustomInteractorDialogComponent_mat_error_9_Template","CustomInteractorDialogComponent_Template_mat_tab_group_selectedTabChange_10_listener","CustomInteractorDialogComponent_Template_mat_radio_group_change_13_listener","CustomInteractorDialogComponent_mat_radio_button_14_Template","CustomInteractorDialogComponent_mat_form_field_15_Template","CustomInteractorDialogComponent_mat_form_field_16_Template","CustomInteractorDialogComponent_mat_form_field_17_Template","CustomInteractorDialogComponent_Template_button_click_29_listener","CustomInteractorDialogComponent_mat_spinner_32_Template","tmp_2_0","tmp_7_0","InteractorsLayout","MAX_INTERACTORS","BOX_WIDTH","BOX_HEIGHT","_4","SEPARATION","Math","round","_5","MIN_HEIGHT","_6","MIN_WIDTH","getNumberOfInteractorsToDraw","getSegmentOrigin","edgeIndex","center","width","height","y","getCentre","minX","maxX","minY","maxY","interpolateInLayout","segment","pos","totalPositions","from","to","targetNode","interactorIndex","numberToDraw","centerPosition","lp","LayoutParameter","calculate","edgeNodes","nodeOnTop","nodeCount","prevNodeCount","nodePerEdges","nodeOnRight","nodeOnBottom","nodeOnLeft","edgePos","rationalNodePerEdge","baseNodePerEdge","floor","remaining","HttpHeaders","HttpParams","switchMap","environment","http","diagramService","PREFIX_INTERACTOR","host","PREFIX_DISEASE","STATIC_URL","PSICQUIC_RESOURCE_URL","PSICQUIC_URL","TOKEN_URL","DISGENET_URL","DEFAULT_INTERACTOR_WIDTH","DEFAULT_DISGENET_WIDTH","INTERACTOR_PADDING","CHAR_WIDTH","CHAR_HEIGHT","GENE_DECORATION_HEIGHT","identifiers","cyToSelectedResource","getAllIdentifiers","getIdentifiersFromGraph","updateIdentifiersIfNeeded","graphNodes","schemaClass","post","headers","previousResource","createInteractorOccurrenceNode","interactorEntity","count","acc","entityNode","displayName","pannable","grabbable","closedNeighborhood","interactor","empty","interactorsData","numberToAdd","dynamicInteractors","existingInteractors","getAllInteractors","allNodes","createInteractorNodes","createInteractorEdges","displayInteractors","diagramNodes","existingNodes","interactorNodes","interactorLayout","alias","defaultType","nodeTypeMap","replace","html","getStructureVideoHtml","accURL","score","evidences","evidenceURLs","evidencesURL","selectable","resourceClass","interactorEdges","targetNodes","edgeToTarget","interactorsToDisplay","layoutOptions","run","removeInteractorEdges","edgesToRemove","getInteractorToken","body","getInteractorsWithToken","psiResource","isFromPSICQUIC","ɵɵinject","factory","ɵfac","providedIn","catchError","of","state$","pathway","foundInteractors","pathwayIds","BehaviorSubject","_isDark","$_dark","_body","document","querySelector","localValue","localStorage","getItem","JSON","parse","window","matchMedia","media","matches","setItem","stringify","classList","isArray","isBoolean","propagate","otherTokens","flagInteractors","overlay","_state$","reduce","prop","v1","v2","toString","v","queryParamMap","mainToken","find","formerValue","rawValue","charAt","parseInt","onPropertyModified","entries","Array","array","cytoscapeFcose","use","posToStr","pointToStr","point","equal","pos1","pos2","avg","positions","sum","squaredDist","pow","dist","sqrt","closestToAverage","average","closest","extraLine","reverseExtraLine","reactionTypeMap","edgeTypeMap","edgeTypeToStr","linkClassMap","COMPARTMENT_SHIFT","random","pick","getNormalPathway","graph","forNormalDraw","stableId","normalPathwayId","normalDiagram","normalGraph","shadows","isFadeOut","subpathways","err","mergedResponse","reactionType","connectors","con","renderableClass","links","link","idToEdges","idToNodes","reactomeIdToEdge","edgeIds","forwardArray","segments","assert","size","backwardArray","subpathwayIds","eventIdToSubPathwayId","subpathway","events","entry","subpathwayIdToEventIds","dbIdToGraphNode","mappingList","children","idToGraphNodes","idToGraphEdges","getLeaves","child","dbIdToGraphEdge","hasFadeOut","normalNodes","specialNodes","posToNormalNode","posToSpecialNode","normalEdges","specialEdges","posToNormalEdge","posToSpecialEdge","compartmentNodes","compartments","item","propToRects","left","top","right","bottom","innerCR","outerCR","insets","rects","smallest","abs","Number","MAX_SAFE_INTEGER","layers","textX","textPosition","textY","radius","replacementMap","reactionNodes","replacement","inputs","output","outputs","isBackground","reactionId","entityNodes","isDisease","isCrossed","trivial","needDashedBorder","overlapLimited","connector","preferredId","nodeAttachments","ptm","nodeId","nodeReactomeId","label","shape","centre","triggerPosition","avoidOverlap","T","ARROW_MULT","EDGE_MARGIN","REACTION_RADIUS","MIN_DIST","edgeId","reactionP","nodeP","sourceP","targetP","points","reverse","addEdgeInfo","shift","pop","endShape","relatives","absoluteToRelative","d","otherConnector","samePoint","getEdgeId","stoichiometry","weights","distances","sourceEndpoint","endpoint","targetEndpoint","linkEdges","uniprotId","s3","warn","direction","stop","stopPos","at","unshift","toConvert","mainVector","orthoVector","transform","inv","coord","absolute","relative","multiply","randomNetwork","amount","peTypes","reactionTypes","physicalEntities","parent","reactions","inOut","additionalIn","p1","p2","nodeA","nodeB","limit","rectA","getRect","rectB","o","area","overlap","rect","halfWidth","halfHeight","definitions","createElement","includeLabels","includeNodes","w","h","nodeRepulsion","animate","packComponents","randomize","tile","def","destroy","production","__NgCli_bootstrap_1","platformBrowser","bootstrapModule","catch","error","gene","disease","lossOfFunction","t","global","thickness","dHeight","decorationHeight","dWidth","decorationExtraWidth","headSize","arrowHeadSize","arrowRadius","fill","stroke","negativeContrast","selectNode","hoverNode","hh","borderRadius","oR","iR","t_2","t2","background","requireGradient","decorators","molecule","thick","ht","oRx","protein","rna","genomeEncodedEntity","complex","bottomR","bottomRadius","topR","topRadius","topOR","topIR","bottomOR","bottomIR","cut","cut2","delta","stateHeight","defs","entitySet","r2","bracesOffset","realDashLength","hidingLength","idealDashLength","dashNumber","t1_5","cell","cellThick","interactingPathway","realWidth","diseaseInteractor","negative","decorationWidth","t4","midH","subPathway","imageBuilder","memoize","classToDrawers","aggregate","defaultBg","provider","exps","drawerParams","hasClass","crossed","drawer","RX","Pathway","CROSS","expToGradient","currentPalette","l","addGradient","svgStr","isNumber","aggregated","svgText","_expToGradient","stops","notFoundColor","notFound","start","color","hex","resetGradients","cache","clear","svg","viewPortWidth","viewPortHeight","encodeURIComponent","dim","clearDrawersCache","OMMITED_ICON","toAggregate","onPrimary","onSurface","setDefaults","css","getPropertyValue","compartment","parseFloat","surface","modification","structure","font","features","ReactomeEvent","CustomEvent","Layers","Interactivity","isMobile","navigator","maxTouchPoints","applyToReaction","action","stateKey","reactionNode","expandReaction","margin","ungrabify","panify","initHover","initSelect","initClick","initStructureVideo","initStructureMolecule","initZoom","hoverReaction","col","deHoverReaction","dispatchEvent","mapped","selectReaction","openClass","eventType","toggleClass","isNode","_this","layersPlugin","videoLayer","renderPerNode","elem","render","init","innerHTML","display","video","throttle","isElementInViewport","readyState","HAVE_NOTHING","networkState","NETWORK_IDLE","oncanplay","load","visibility","uniqueElements","checkBounds","selector","updateOn","queryEachTime","handler","_ref","_asyncToGenerator","videoId","videoElement","HAVE_ENOUGH_DATA","_x","arguments","play","pause","moleculeLayer","proteins","shadowLabels","labelOpacity","baseFontSize","structureOpacityArray","zoomStart","zoomEnd","zoomLevel","z","shadowLabelOpacity","interpolate","trivialOpacity","shadowOpacity","videoOpacity","maxWidth","P","lerp","p0","hovering","deHovering","innerHeight","documentElement","innerWidth","clientWidth","getComputedStyle","pm","initSubPathwayColors","subPathways","dH","chroma","hsl","luminosity","ct"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}