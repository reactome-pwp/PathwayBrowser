{"version":3,"file":"main.js","mappings":";;;;;;;;;;;;;;;;;AAMA;;;;;;AAMM,SAAUA,UAAUA,CAAIC,QAAqB;EACjD,OAAQA,QAAwB,CAACC,KAAK,KAAKC,SAAS;AACtD;AAEA;;;;;AAKM,SAAUC,OAAOA,CAAIH,QAAqB;EAC9C,OAAOD,UAAU,CAACC,QAAQ,CAAC,GAAGA,QAAQ,EAAE,GAAGA,QAAQ;AACrD;AAaM,SAAUI,WAAWA,CAAIC,MAAS;EACtC,MAAMD,WAAW,GAAIC,MAAyB;EAE9CD,WAAW,CAACE,UAAU,GAAG,UAA4FC,GAAO,EAAEC,YAAgB;IAC5I,IAAI,CAACH,MAAM,CAACE,GAAG,CAAC,EAAEF,MAAM,CAACE,GAAG,CAAC,GAAGC,YAAY;IAC5C,OAAOJ,WAAqC;EAC9C,CAAC;EAED,OAAOA,WAAW;AACpB;AAEO,MAAMK,iBAAiB,GAAIC,UAAsB,IAAK,CAA4DC,KAAQ,EAAEJ,GAAM,KAAKG,UAAU,CAACC,KAAK,CAAC,CAACJ,GAAG,CAAC;AAC7J,MAAMK,cAAc,GAAIF,UAAsB,IAAK,CAAuJC,KAAQ,EAAEJ,GAAM,EAAEM,MAAS,KAAKA,MAAM,CAACV,OAAO,CAACO,UAAU,CAACC,KAAK,CAAC,CAACJ,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;AChDnO;AAGkC;AACtC;AACe;AACW;;;AAEpE,MAAMY,MAAM,GAAW,CAC5B;EAACC,IAAI,EAAE,SAAS;EAAEC,SAAS,EAAEN,kGAAwBA;AAAA,CAAC,EACtD;EAACK,IAAI,EAAE,aAAa;EAAEC,SAAS,EAAEN,kGAAwBA;AAAA,CAAC,EAC1D;EAACK,IAAI,EAAE,aAAa;EAAEC,SAAS,EAAEH,sFAAoBA;AAAA,CAAC,EACtD;EAACE,IAAI,EAAE,oBAAoB;EAAEC,SAAS,EAAEJ,2EAAiBA;AAAA,CAAC,EAC1D;EAACG,IAAI,EAAE,KAAK;EAAEC,SAAS,EAAEJ,2EAAiBA;AAAA,CAAC,EAC3C;EAACG,IAAI,EAAE,IAAI;EAAEC,SAAS,EAAEJ,2EAAiB;EAAGK,WAAW,EAAE,CAACN,4DAAW,CAAC;EAAEO,qBAAqB,EAAE;AAAQ,CAAC,CACzG;AAOK,MAAOC,gBAAgB;EAAA,QAAAC,CAAA;qBAAhBD,gBAAgB;EAAA;EAAA,QAAAE,EAAA;UAAhBF;EAAgB;EAAA,QAAAG,EAAA;cAHjBb,yDAAY,CAACc,OAAO,CAACT,MAAM,EAAE;MAACU,qBAAqB,EAAE;IAAI,CAAC,CAAC,EAC3Df,yDAAY;EAAA;;;sHAEXU,gBAAgB;IAAAM,OAAA,GAAAC,yDAAA;IAAAC,OAAA,GAFjBlB,yDAAY;EAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;ACXlB,MAAOmB,YAAY;EAkCvBC,YAAoBC,eAAgC,EAAUC,YAA0B;IAApE,KAAAD,eAAe,GAAfA,eAAe;IAA2B,KAAAC,YAAY,GAAZA,YAAY;IAjC1E,KAAAC,KAAK,GAAG,gBAAgB;IAExB,KAAAC,KAAK,GAAG,CACN;MAACC,IAAI,EAAE,SAAS;MAAEC,KAAK,EAAE;IAAc,CAAC,EACxC;MAACD,IAAI,EAAE,SAAS;MAAEC,KAAK,EAAE;IAAc,CAAC,EACxC;MAACD,IAAI,EAAE,YAAY;MAAEC,KAAK,EAAE;IAAY,CAAC,EACzC;MAACD,IAAI,EAAE,aAAa;MAAEC,KAAK,EAAE;IAAa,CAAC,EAC3C;MAACD,IAAI,EAAE,cAAc;MAAEC,KAAK,EAAE;IAAc,CAAC,EAC7C;MAACD,IAAI,EAAE,SAAS;MAAEC,KAAK,EAAE;IAAS,CAAC,EACnC;MAACD,IAAI,EAAE,UAAU;MAAEC,KAAK,EAAE;IAAU,CAAC,EACrC;MAACD,IAAI,EAAE,YAAY;MAAEC,KAAK,EAAE;IAAY,CAAC,EACzC;MAACD,IAAI,EAAE,MAAM;MAAEC,KAAK,EAAE;IAAM,CAAC,CAC9B;IAED,KAAAC,OAAO,GAAG,CACR;MAACF,IAAI,EAAE,MAAM;MAAEC,KAAK,EAAE;IAAY,CAAC,EACnC;MAACD,IAAI,EAAE,MAAM;MAAEC,KAAK,EAAE;IAAwB,CAAC,EAC/C;MAACD,IAAI,EAAE,MAAM;MAAEC,KAAK,EAAE;IAAkB,CAAC,EACzC;MAACD,IAAI,EAAE,MAAM;MAAEC,KAAK,EAAE;IAAa,CAAC,EACpC;MAACD,IAAI,EAAE,OAAO;MAAEC,KAAK,EAAE;IAA0B,CAAC,EAClD;MAACD,IAAI,EAAE,MAAM;MAAEC,KAAK,EAAE;IAAyB,CAAC,EAChD;MAACD,IAAI,EAAE,MAAM;MAAEC,KAAK,EAAE;IAAe,CAAC,EACtC;MAACD,IAAI,EAAE,MAAM;MAAEC,KAAK,EAAE;IAAc,CAAC,EACrC;MAACD,IAAI,EAAE,OAAO;MAAEC,KAAK,EAAE;IAAc,CAAC,EACtC;MAACD,IAAI,EAAE,MAAM;MAAEC,KAAK,EAAE;IAA4B,CAAC,EACnD;MAACD,IAAI,EAAE,MAAM;MAAEC,KAAK,EAAE;IAAuB,CAAC,EAC9C;MAACD,IAAI,EAAE,OAAO;MAAEC,KAAK,EAAE;IAAmB,CAAC,EAC3C;MAACD,IAAI,EAAE,MAAM;MAAEC,KAAK,EAAE;IAA0B,CAAC,EACjD;MAACD,IAAI,EAAE,MAAM;MAAEC,KAAK,EAAE;IAA2B,CAAC,EAClD;MAACD,IAAI,EAAE,MAAM;MAAEC,KAAK,EAAE;IAAY,CAAC,EACnC;MAACD,IAAI,EAAE,MAAM;MAAEC,KAAK,EAAE;IAAoB,CAAC,CAC5C;IAGC,IAAI,CAACE,SAAS,EAAE;EAClB;EAEAA,SAASA,CAAA;IACP,IAAI,CAACJ,KAAK,CAACK,OAAO,CAACC,IAAI,IAAG;MACxB,IAAI,CAACT,eAAe,CAACU,UAAU,CAACD,IAAI,CAACL,IAAI,EAAE,IAAI,CAACH,YAAY,CAACU,8BAA8B,CAAC,gBAAgBF,IAAI,CAACJ,KAAK,MAAM,CAAC,CAAC;IAChI,CAAC,CAAC;IAEF,IAAI,CAACC,OAAO,CAACE,OAAO,CAACC,IAAI,IAAG;MAC1B,IAAI,CAACT,eAAe,CAACU,UAAU,CAACD,IAAI,CAACL,IAAI,EAAE,IAAI,CAACH,YAAY,CAACU,8BAA8B,CAAC,wBAAwBF,IAAI,CAACJ,KAAK,MAAM,CAAC,CAAC;IACxI,CAAC,CAAC;EACJ;EAAC,QAAAf,CAAA;qBA9CUQ,YAAY,EAAAc,+DAAA,CAAAhB,mEAAA,GAAAgB,+DAAA,CAAAG,mEAAA;EAAA;EAAA,QAAAxB,EAAA;UAAZO,YAAY;IAAAmB,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,QAAA,WAAAC,sBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCTzBV,uDAAA,oBAA+B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACCyB;AAEX;AACmB;AACnB;AACS;AACO;AAChB;AACS;AACuB;AACpB;AACW;AACN;AACyB;AAChC;AACE;AACmB;AAGO;AAC1B;AACJ;AACQ;AACN;AACuB;AACzB;AACA;AACU;AACD;AACW;AACT;AACf;AACI;AACQ;AACN;AAC6B;AAC/B;AACM;AACI;AACV;AACwB;;AAqDvE,MAAOgD,SAAS;EAAA,QAAAtE,CAAA;qBAATsE,SAAS;EAAA;EAAA,QAAArE,EAAA;UAATqE,SAAS;IAAAC,SAAA,GAFR/D,wDAAY;EAAA;EAAA,QAAAN,EAAA;cAlClBiC,qEAAa,EACbC,wDAAW,EACXE,0DAAY,EACZC,mEAAgB,EAEhBxC,iEAAgB;IAChB;IACA4C,sEAAe,EACfC,iFAAoB,EAGpBG,oEAAc,EACdC,sEAAe,EACfX,gEAAmB,EACnBY,yFAAwB,EACxBP,0FAAuB,EACvBS,sEAAe,EACfC,kEAAa,EACbC,0EAAiB,EACjBC,oEAAc,EACdC,2FAAqB,EACrBC,kEAAa,EACbC,kEAAa,EACbC,4EAAkB,EAClBC,2EAAiB,EACjBE,8DAAkB,EAClBC,kEAAa,EACbN,kEAAa,EACbQ,oEAAe,EACfE,kEAAa,EACbC,wEAAgB,EAChBE,kEAAa;EAAA;;;uHAKRC,SAAS;IAAAE,YAAA,GAhDlBhE,wDAAY,EACZgC,wEAAgB,EAChBlD,kGAAwB,EACxB4D,qIAA+B,EAC/BU,oFAAoB,EACpBpE,2EAAiB,EACjBuE,wEAAgB,EAChBE,+FAAuB,EACvBG,wEAAgB,EAChB3E,uFAAoB;IAAAY,OAAA,GAGhB8B,qEAAa,EACbC,wDAAW,EACXE,0DAAY,EACZC,mEAAgB,EAChBE,0DAAY,EACZ1C,iEAAgB;IAChB;IACA4C,sEAAe,EACfC,iFAAoB,EACpBE,kEAAa,EACbD,4DAAO,EACPE,oEAAc,EACdC,sEAAe,EACfX,gEAAmB,EACnBY,yFAAwB,EACxBP,0FAAuB,EACvBS,sEAAe,EACfC,kEAAa,EACbC,0EAAiB,EACjBC,oEAAc,EACdC,2FAAqB,EACrBC,kEAAa,EACbC,kEAAa,EACbC,4EAAkB,EAClBC,2EAAiB,EACjBE,8DAAkB,EAClBC,kEAAa,EACbN,kEAAa,EACbQ,oEAAe,EACfE,kEAAa,EACbC,wEAAgB,EAChBE,kEAAa;EAAA;AAAA;;;;;;;;;;;;;;;;;;;;;ACrF8C;;;;;;;ICAjE/C,4DAAA,WAAgD;IAACA,oDAAA,GAAkC;IAAAA,0DAAA,EAAI;;;;IAAtCA,uDAAA,GAAkC;IAAlCA,gEAAA,MAAA0D,MAAA,CAAAC,GAAA,CAAAC,SAAA,IAAAC,WAAA,KAAkC;;;;;IAGnF7D,4DAAA,WAA8C;IAACA,oDAAA,GAA6B;IAAAA,0DAAA,EAAI;;;;IAAjCA,uDAAA,GAA6B;IAA7BA,gEAAA,MAAA8D,MAAA,CAAAH,GAAA,CAAAI,OAAA,CAAAF,WAAA,KAA6B;;;;;IAC5E7D,4DAAA,WAA8C;IAACA,oDAAA,GAA0B;IAAAA,0DAAA,EAAI;;;;IAA9BA,uDAAA,GAA0B;IAA1BA,gEAAA,MAAAgE,MAAA,CAAAL,GAAA,CAAAI,OAAA,CAAAE,QAAA,KAA0B;;;;;IAR3EjE,4DAAA,UAAiB;IACZA,oDAAA,GAA4D;IAAAA,0DAAA,EAAI;IAEnEA,4DAAA,QAAG;IAAAA,oDAAA,iDAAqC;IAAAA,0DAAA,EAAI;IAC5CA,wDAAA,IAAAmE,mCAAA,eAAuF;IAEvFnE,4DAAA,QAAG;IAAAA,oDAAA,+CAAmC;IAAAA,0DAAA,EAAI;IAC1CA,wDAAA,IAAAoE,mCAAA,eAAgF;IAChFpE,wDAAA,IAAAqE,mCAAA,eAA6E;IAC/ErE,0DAAA,EAAM;;;;IARDA,uDAAA,GAA4D;IAA5DA,gEAAA,KAAAuE,MAAA,CAAAZ,GAAA,CAAAa,IAAA,OAAAD,MAAA,CAAAZ,GAAA,CAAAE,WAAA,OAAAU,MAAA,CAAAZ,GAAA,CAAAc,WAAA,MAA4D;IAGpCzE,uDAAA,GAAmB;IAAnBA,wDAAA,SAAAuE,MAAA,CAAAZ,GAAA,CAAAC,SAAA,CAAmB;IAGnB5D,uDAAA,GAAiB;IAAjBA,wDAAA,SAAAuE,MAAA,CAAAZ,GAAA,CAAAI,OAAA,CAAiB;IACjB/D,uDAAA,GAAiB;IAAjBA,wDAAA,SAAAuE,MAAA,CAAAZ,GAAA,CAAAI,OAAA,CAAiB;;;ADIvC,IAAMjB,gBAAgB,GAAtB,MAAMA,gBAAgB;EAI3B3D,YAAoBwF,YAA0B,EAAUC,KAA0B;IAA9D,KAAAD,YAAY,GAAZA,YAAY;IAAwB,KAAAC,KAAK,GAALA,KAAK;EAC7D;EAEAC,eAAeA,CAAA;IACb,IAAI,CAACF,YAAY,CAACG,YAAY,CAACC,IAAI,CAAC3B,qEAAc,CAAC,IAAI,CAAC,CAAC,CAAC4B,SAAS,CAACC,KAAK,IAAG;MAC1E,IAAI,CAACtB,GAAG,GAAGsB,KAAK;IAClB,CAAC,CAAC;EACJ;EAAC,QAAAvG,CAAA;qBAXUoE,gBAAgB,EAAA9C,+DAAA,CAAAhB,iEAAA,GAAAgB,+DAAA,CAAAG,gFAAA;EAAA;EAAA,QAAAxB,EAAA;UAAhBmE,gBAAgB;IAAAzC,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAA6E,MAAA;IAAA5E,QAAA,WAAA6E,0BAAA3E,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCZ7BV,wDAAA,IAAAsF,+BAAA,kBASM;;;QATAtF,wDAAA,SAAAW,GAAA,CAAAgD,GAAA,CAAS;;;;;;;ADYFb,gBAAgB,GAAAyC,iDAAA,EAD5BpC,mEAAY,EAAE,GACFL,gBAAgB,CAa5B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IGnBK9C,4DAAA,gBAAwE;IAAlDA,wDAAA,mBAAAyF,gEAAA;MAAAzF,2DAAA,CAAA2F,GAAA;MAAA,MAAAC,MAAA,GAAA5F,2DAAA;MAAA,OAASA,yDAAA,CAAA4F,MAAA,CAAAG,aAAA,EAAe;IAAA,EAAC;IAAyB/F,oDAAA,sBAAe;IAAAA,0DAAA,EAAS;;;;;IA0BxFA,4DAAA,qBAAkG;IAChGA,oDAAA,GACA;IAAAA,uDAAA,cACM;IACRA,0DAAA,EAAa;;;;;;IAJsCA,wDAAA,UAAAgG,OAAA,CAAAC,QAAA,CAAAC,cAAA,CAAAC,GAAA,CAAAC,WAAA,EAA8C;IAC/FpG,uDAAA,GACA;IADAA,gEAAA,MAAAoG,WAAA,MACA;IAAoCpG,uDAAA,GAAmE;IAAnEA,yDAAA,gBAAAsG,OAAA,GAAAN,OAAA,CAAAC,QAAA,CAAAC,cAAA,CAAAC,GAAA,CAAAC,WAAA,oBAAAE,OAAA,CAAAC,QAAA,CAAmE;;;;;IAJ3GvG,4DAAA,uBAA6D;IACjCA,oDAAA,GAAgB;IAAAA,0DAAA,EAAY;IACtDA,wDAAA,IAAAwG,wFAAA,yBAIa;IACfxG,0DAAA,EAAe;;;;IANaA,uDAAA,GAAgB;IAAhBA,+DAAA,CAAA0G,QAAA,CAAAlH,IAAA,CAAgB;IACVQ,uDAAA,GAAiB;IAAjBA,wDAAA,YAAA0G,QAAA,CAAAC,QAAA,CAAiB;;;;;IAHrD3G,qEAAA,GAAuD;IACrDA,wDAAA,IAAA6G,2EAAA,2BAOe;IACjB7G,mEAAA,EAAe;;;;IAREA,uDAAA,GAAiB;IAAjBA,wDAAA,SAAA0G,QAAA,CAAAK,KAAA,CAAiB;;;;;;IAVxC/G,qEAAA,GAAsC;IACpCA,4DAAA,yBAAwF;IAC3EA,oDAAA,cAAO;IAAAA,0DAAA,EAAY;IAC9BA,4DAAA,qBACkD;IADtCA,wDAAA,yBAAAgH,gFAAAC,MAAA;MAAAjH,2DAAA,CAAAkH,IAAA;MAAA,MAAAC,OAAA,GAAAnH,2DAAA;MAAA,OAAWA,yDAAA,CAAAmH,OAAA,CAAAlB,QAAA,CAAAmB,OAAA,GAAAH,MAAA,CAAwB;IAAA,EAAP,6BAAAI,oFAAA;MAAArH,2DAAA,CAAAkH,IAAA;MAAAlH,2DAAA;MAAA,MAAAsH,GAAA,GAAAtH,yDAAA;MAAA,OAAoBA,yDAAA,CAAAsH,GAAA,CAAAE,aAAA,EAAuB;IAAA,EAA3C;IAEtCxH,4DAAA,yBAAoB;IAClBA,uDAAA,cACM;IACRA,0DAAA,EAAqB;IACrBA,wDAAA,IAAAyH,4DAAA,2BASe;IAEjBzH,0DAAA,EAAa;IAGjBA,mEAAA,EAAe;;;;IAtB6CA,uDAAA,GAA6B;IAA7BA,wDAAA,8BAA6B;IAEzEA,uDAAA,GAA4B;IAA5BA,wDAAA,UAAAgE,MAAA,CAAAiC,QAAA,CAAAmB,OAAA,CAA4B;IAGfpH,uDAAA,GAA8C;IAA9CA,yDAAA,eAAAgE,MAAA,CAAAiC,QAAA,CAAAmB,OAAA,CAAAb,QAAA,CAA8C;IAGrCvG,uDAAA,GAAoB;IAApBA,wDAAA,YAAAgE,MAAA,CAAAiC,QAAA,CAAAU,QAAA,CAAoB;;;ADnBxD,MAAOxI,oBAAoB;EAK/BgB,YAAmB8G,QAAyB,EAASyB,IAAiB,EAASC,UAA6B;IAAzF,KAAA1B,QAAQ,GAARA,QAAQ;IAA0B,KAAAyB,IAAI,GAAJA,IAAI;IAAsB,KAAAC,UAAU,GAAVA,UAAU;IAH5E,KAAAC,SAAS,GAAW,EAAE;EAInC;EAEA7B,aAAaA,CAAA;IACX,IAAI,CAACE,QAAQ,CAACF,aAAa,EAAE;EAC/B;EAAC,QAAArH,CAAA;qBAVUP,oBAAoB,EAAA6B,+DAAA,CAAAhB,uEAAA,GAAAgB,+DAAA,CAAAG,+DAAA,GAAAH,+DAAA,CAAA+H,uFAAA;EAAA;EAAA,QAAApJ,EAAA;UAApBR,oBAAoB;IAAAkC,SAAA;IAAA4H,MAAA;MAAAL,SAAA;IAAA;IAAAtH,KAAA;IAAAC,IAAA;IAAA6E,MAAA;IAAA5E,QAAA,WAAA0H,8BAAAxH,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCVjCV,4DAAA,aAAuB;QAEiCA,oDAAA,eAAQ;QAAAA,0DAAA,EAAS;QACrEA,4DAAA,wBAAwB;QACAA,wDAAA,mBAAAmI,sDAAA;UAAA,OAASxH,GAAA,CAAAsF,QAAA,CAAAmC,OAAA,CAAiB,SAAS,CAAC,CAAApD,SAAA,EAAY;QAAA,EAAC;QAAChF,oDAAA,cAAO;QAAAA,0DAAA,EAAS;QACxFA,4DAAA,gBAA2E;QAArDA,wDAAA,mBAAAqI,sDAAA;UAAA,OAAS1H,GAAA,CAAAsF,QAAA,CAAAmC,OAAA,CAAiB,YAAY,CAAC,CAAApD,SAAA,EAAY;QAAA,EAAC;QAAChF,oDAAA,iBAAU;QAAAA,0DAAA,EAAS;QAC9FA,wDAAA,KAAAsI,uCAAA,oBAAgG;QAElGtI,0DAAA,EAAW;QACXA,4DAAA,iBAAyD;QAAAA,oDAAA,eAAO;QAAAA,0DAAA,EAAS;QACzEA,4DAAA,yBAA6B;QAC3BA,uDAAA,yBAAuE;QACzEA,0DAAA,EAAW;QAEXA,4DAAA,2BAA4D;QAA1BA,wDAAA,2BAAAuI,yEAAAtB,MAAA;UAAA,OAAAtG,GAAA,CAAA+G,IAAA,CAAAc,MAAA,GAAAvB,MAAA;QAAA,EAAyB;QAACjH,oDAAA,iBAAS;QAAAA,0DAAA,EAAmB;QAMxFA,wDAAA,KAAAyI,6CAAA,0BAuBe;QAGjBzI,0DAAA,EAAM;QACNA,4DAAA,eAA+B;QAC7BA,uDAAA,0BAAmD;QACrDA,0DAAA,EAAM;;;;;;QA/CuBA,uDAAA,GAAwB;QAAxBA,wDAAA,sBAAA0I,GAAA,CAAwB;QAIA1I,uDAAA,GAAqB;QAArBA,wDAAA,SAAAW,GAAA,CAAAsF,QAAA,CAAA0C,MAAA,CAAqB;QAG7C3I,uDAAA,GAA6B;QAA7BA,wDAAA,sBAAA4I,GAAA,CAA6B;QAEtC5I,uDAAA,GAAiB;QAAjBA,wDAAA,OAAAsH,GAAA,CAAAuB,EAAA,CAAiB,QAAAvB,GAAA,CAAAwB,GAAA;QAGD9I,uDAAA,GAAyB;QAAzBA,wDAAA,YAAAW,GAAA,CAAA+G,IAAA,CAAAc,MAAA,CAAyB;QAM5CxI,uDAAA,GAAqB;QAArBA,wDAAA,SAAAW,GAAA,CAAAsF,QAAA,CAAA0C,MAAA,CAAqB;QA4BxB3I,uDAAA,GAAgB;QAAhBA,wDAAA,OAAAW,GAAA,CAAAiH,SAAA,CAAgB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5CG;;;;;;;;;;AAO7B,MAAO5J,wBAAwB;EAUnCmB,YAAoBM,KAAqB,EAAUuJ,MAAkB,EAAUC,MAAc;IAAzE,KAAAxJ,KAAK,GAALA,KAAK;IAA0B,KAAAuJ,MAAM,GAANA,MAAM;IAAsB,KAAAC,MAAM,GAANA,MAAM;IALrF,KAAArB,SAAS,GAAW,EAAE;IAEtB,KAAAsB,YAAY,GAAW,CAAC;IACxB,KAAAC,UAAU,GAAa,EAAE;EAGzB;EAEAtE,eAAeA,CAAA;IACbkE,mDAAa,CAAC,CACZ,IAAI,CAACtJ,KAAK,CAAC2J,MAAM,EACjB,IAAI,CAACJ,MAAM,CAAC7C,GAAG,CAAC,uCAAuC,EAAE;MAACkD,YAAY,EAAE;IAAM,CAAC,CAAC,CACjF,CAAC,CAACrE,SAAS,CAAC,CAAC,CAACoE,MAAM,EAAEE,QAAQ,CAAC,KAAI;MAClC,IAAI,CAACH,UAAU,GAAGG,QAAQ,CAACC,KAAK,CAAC,IAAI,CAAC,CAACC,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACC,MAAM,KAAK,CAAC,CAAC;MAClE,IAAI,CAAC9B,SAAS,GAAG,IAAI,CAACuB,UAAU,CAAC,CAAC,CAAC;IACrC,CAAC,CAAC;EACJ;EAEAQ,IAAIA,CAAA;IACF,IAAI,CAACT,YAAY,EAAE;IACnB,IAAI,IAAI,CAACA,YAAY,GAAG,IAAI,CAACC,UAAU,CAACO,MAAM,GAAG,CAAC,EAAE,IAAI,CAACR,YAAY,GAAG,CAAC;IACzE,IAAI,CAACtB,SAAS,GAAG,IAAI,CAACuB,UAAU,CAAC,IAAI,CAACD,YAAY,CAAC;EACrD;EACAU,QAAQA,CAAA;IACN,IAAI,CAACV,YAAY,EAAE;IACnB,IAAI,IAAI,CAACA,YAAY,GAAG,CAAC,EAAE,IAAI,CAACA,YAAY,GAAG,IAAI,CAACC,UAAU,CAACO,MAAM,GAAG,CAAC;IACzE,IAAI,CAAC9B,SAAS,GAAG,IAAI,CAACuB,UAAU,CAAC,IAAI,CAACD,YAAY,CAAC;EACrD;EAAC,QAAAxK,CAAA;qBAhCUV,wBAAwB,EAAAgC,+DAAA,CAAAhB,2DAAA,GAAAgB,+DAAA,CAAAG,4DAAA,GAAAH,+DAAA,CAAAhB,mDAAA;EAAA;EAAA,QAAAL,EAAA;UAAxBX,wBAAwB;IAAAqC,SAAA;IAAA2J,SAAA,WAAAC,+BAAAvJ,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;;;;;;;;;;;;;QCXrCV,4DAAA,aAA+B;QAC7BA,uDAAA,uBAAmD;QACrDA,0DAAA,EAAM;QAENA,4DAAA,aAAoE;QAA/DA,wDAAA,+BAAAkK,mEAAA;UAAA,OAAqBvJ,GAAA,CAAAiJ,QAAA,EAAU;QAAA,EAAC,gCAAAO,oEAAA;UAAA,OAAuBxJ,GAAA,CAAAgJ,IAAA,EAAM;QAAA,EAA7B;QAEnC3J,4DAAA,gBAA+C;QAArBA,wDAAA,mBAAAoK,0DAAA;UAAA,OAASzJ,GAAA,CAAAiJ,QAAA,EAAU;QAAA,EAAC;QAAC5J,oDAAA,eAAQ;QAAAA,0DAAA,EAAS;QAChEA,4DAAA,qBAAgB;QACHA,oDAAA,iBAAU;QAAAA,0DAAA,EAAY;QACjCA,4DAAA,eAAqE;QAAxBA,wDAAA,2BAAAqK,iEAAApD,MAAA;UAAA,OAAAtG,GAAA,CAAAiH,SAAA,GAAAX,MAAA;QAAA,EAAuB;QAApEjH,0DAAA,EAAqE;QAEvEA,4DAAA,iBAA2C;QAAjBA,wDAAA,mBAAAsK,2DAAA;UAAA,OAAS3J,GAAA,CAAAgJ,IAAA,EAAM;QAAA,EAAC;QAAC3J,oDAAA,YAAI;QAAAA,0DAAA,EAAS;;;QAVnCA,uDAAA,GAAgB;QAAhBA,wDAAA,OAAAW,GAAA,CAAAiH,SAAA,CAAgB;QAQU5H,uDAAA,GAAuB;QAAvBA,wDAAA,YAAAW,GAAA,CAAAiH,SAAA,CAAuB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPtC;AACgD;AAGmB;AAElD;AACyC;AAGhD;AAOX;AACgB;AACS;;;;;;;;;;;;;AASnD,IAAM1G,gBAAgB,GAAtB,MAAMA,gBAAgB;EAU3B/B,YAAoBiM,OAAuB,EACxB1D,IAAiB,EAChB2D,kBAAqC,EACrCzG,KAA0B,EAC1BqB,QAAyB,EACzBhB,KAAmB,EACnBgE,MAAc,EACdxJ,KAAqB;IAPrB,KAAA2L,OAAO,GAAPA,OAAO;IACR,KAAA1D,IAAI,GAAJA,IAAI;IACH,KAAA2D,kBAAkB,GAAlBA,kBAAkB;IAClB,KAAAzG,KAAK,GAALA,KAAK;IACL,KAAAqB,QAAQ,GAARA,QAAQ;IACR,KAAAhB,KAAK,GAALA,KAAK;IACL,KAAAgE,MAAM,GAANA,MAAM;IACN,KAAAxJ,KAAK,GAALA,KAAK;IAhBzB,KAAAH,KAAK,GAAG,iBAAiB;IAMzB,KAAAgM,SAAS,GAAY,KAAK;IAoB1B,KAAAxC,GAAG,GAAqB,EAAE;IAGb,KAAAlB,SAAS,GAAW,EAAE;IAwJ1B,KAAA2D,UAAU,GAAG,wBAAwB;IAoI9C,KAAAC,KAAK,GAAG,KAAK;IAGb,KAAAC,wBAAwB,GAAa,EAAE;IAEvC,KAAAC,SAAS,GAAG,CAAC;IACb,KAAAC,eAAe,GAAG,CAAC;IA0CnB,KAAAC,OAAO,GAAG,KAAK;IACf,KAAAC,aAAa,GAAG,CAACC,MAAsB,EAAEC,eAA4B,EAAEC,MAAsB,EAAEC,eAA4B,KAAI;MAC7H,IAAI,IAAI,CAACL,OAAO,EAAE;MAClB,IAAI,CAACA,OAAO,GAAG,IAAI;MACnB,IAAI,CAACM,2BAA2B,EAAE;MAElC,MAAMC,QAAQ,GAAG;QAAC,GAAGL,MAAM,CAACM,GAAG;MAAE,CAAC;MAClC,MAAMC,OAAO,GAAGN,eAAe,CAACO,qBAAqB,EAAE,CAACC,CAAC;MACzD,MAAMC,OAAO,GAAGP,eAAe,CAACK,qBAAqB,EAAE,CAACC,CAAC;MACzDJ,QAAQ,CAACI,CAAC,IAAIF,OAAO,GAAGG,OAAO;MAC/BR,MAAM,CAACS,QAAQ,CAAC;QACdC,IAAI,EAAEZ,MAAM,CAACY,IAAI,EAAE;QACnBN,GAAG,EAAED;OACN,CAAC;MACF,IAAI,CAACP,OAAO,GAAG,KAAK;IACtB,CAAC;IA0HD,KAAAe,eAAe,GAAG,KAAK;IA0BvB;IACQ,KAAAC,gBAAgB,GAA2B,IAAI9B,yCAAO,EAAiB;IAEvE,KAAA+B,OAAO,GAAG,KAAK;IAShB,KAAAC,eAAe,GAA8B,IAAI,CAACF,gBAAgB,CAACG,YAAY,EAAE,CAAChI,IAAI,CAC3F4F,2DAAoB,CAAC,CAACqC,IAAI,EAAEC,OAAO,KAAKD,IAAI,CAACE,IAAI,KAAKD,OAAO,CAACC,IAAI,IAAIF,IAAI,CAACG,MAAM,CAACC,UAAU,KAAKH,OAAO,CAACE,MAAM,CAACC,UAAU,CAAC;IAC3H;IACA5D,6CAAM,CAAC,MAAM,CAAC,IAAI,CAACqD,OAAO,CAAC,EAC3BhC,4CAAK,EAAE,CACR;IAED,KAAAwC,QAAQ,GAAG,IAAI,CAACzI,KAAK,CAAC0I,QAAQ,CAACC,KAAK,CAACvI,SAAS,CAAEwI,KAAK,IAAK,IAAI,CAACC,eAAe,CAAC,MAAM,IAAI,CAAC3E,GAAG,CAAClJ,OAAO,CAACiJ,EAAE,IAAI,IAAI,CAAC6E,IAAI,CAACF,KAAK,EAAE3E,EAAE,CAAC,CAAC,CAAC,CAAC;IACnI,KAAA8E,SAAS,GAAG,IAAI,CAAC/I,KAAK,CAAC0I,QAAQ,CAACM,OAAO,CAAC5I,SAAS,CAAEwI,KAAK,IAAK,IAAI,CAACC,eAAe,CAAC,MAAM,IAAI,CAAC3E,GAAG,CAAClJ,OAAO,CAACiJ,EAAE,IAAI,IAAI,CAACgF,MAAM,CAACL,KAAK,EAAE3E,EAAE,CAAC,CAAC,CAAC,CAAC;IACxI;IACA,KAAAiF,SAAS,GAAG,IAAI,CAAClJ,KAAK,CAAC0I,QAAQ,CAACS,SAAS,CAAC/I,SAAS,CAAEwI,KAAK,IAAK,IAAI,CAACC,eAAe,CAAC,MAAM,IAAI,CAACO,YAAY,CAACR,KAAK,CAAC,CAAC,CAAC;IAmBpH,KAAAS,qBAAqB,GAAG,IAAI,CAACnB,eAAe,CAAC/H,IAAI,CAC/CyE,6CAAM,CAAC,MAAM,IAAI,CAAC8B,SAAS,CAAC,EAC5B9B,6CAAM,CAAE0E,CAAC,IAAKA,CAAC,CAACf,MAAM,CAACtE,EAAE,KAAK,IAAI,CAACsF,MAAM,CAAC,CAC3C,CAACnJ,SAAS,CAACC,KAAK,IAAG;MAClB,MAAMmJ,GAAG,GAAGnJ,KAAK,CAACkI,MAAM,CAACtE,EAAE;MAC3B,MAAMwF,GAAG,GAAGD,GAAG,KAAK,IAAI,CAACvF,EAAE,GAAG,IAAI,CAACyF,SAAS,GAAG,IAAI,CAACzF,EAAE;MAEtD,IAAI0F,UAAU,GAAGtJ,KAAK,CAACkI,MAAM,CAACqB,OAAO,CAACC,IAAI,CAAC,YAAY,CAAC;MACxDF,UAAU,GAAGA,UAAU,IAAItJ,KAAK,CAACkI,MAAM,CAACqB,OAAO,CAACC,IAAI,CAAC,aAAa,CAAC;MACnEF,UAAU,GAAGA,UAAU,IAAKtJ,KAAK,CAACkI,MAAM,CAACqB,OAAO,CAACC,IAAI,CAAC,cAAc,CAAC,IAAI,CAACxJ,KAAK,CAACkI,MAAM,CAACqB,OAAO,CAACC,IAAI,CAAC,WAAW,CAAC,IAAIxJ,KAAK,CAACkI,MAAM,CAACqB,OAAO,CAACC,IAAI,CAAC,IAAI,CAAE;MAEpJ,IAAI,CAACF,UAAU,EAAE;MAEjB,IAAIG,YAAY,GAAGL,GAAG,CAACM,cAAc,CAACJ,UAAU,CAAC;MACjD,IAAItJ,KAAK,CAACkI,MAAM,CAACD,IAAI,KAAK,UAAU,EAAE;QACpCwB,YAAY,GAAGA,YAAY,CAACE,GAAG,CAACP,GAAG,CAACQ,QAAQ,CAAC,eAAeN,UAAU,GAAG,CAAC,CAAC;;MAG7E,IAAI,CAACO,UAAU,CAAC7J,KAAK,EAAEyJ,YAAY,CAAC;IACtC,CAAC,CAAC;IAGF,KAAAK,yBAAyB,GAAG,IAAI,CAACjC,eAAe,CAC7C/H,IAAI,CACHyE,6CAAM,CAAE0E,CAAC,IAAKA,CAAC,CAACf,MAAM,CAACtE,EAAE,KAAK,IAAI,CAACsF,MAAM,CAAC,EAC1C3E,6CAAM,CAAC0E,CAAC,IAAI,CAAC1D,yEAAkB,CAACwE,IAAI,EAAExE,yEAAkB,CAACyE,KAAK,CAAC,CAACC,QAAQ,CAAChB,CAAC,CAAChB,IAA0B,CAAC,CAAC,EACvG1D,6CAAM,CAAC0E,CAAC,IAAIA,CAAC,CAACf,MAAM,CAACD,IAAI,KAAK,YAAY,CAAC,CAC5C,CAAClI,SAAS,CAACkJ,CAAC,IAAG;MACZ,CAAC,IAAI,CAACiB,aAAa,EAAE,IAAI,CAACC,oBAAoB,CAAC,CAC5C5F,MAAM,CAACC,CAAC,IAAIA,CAAC,KAAKtM,SAAS,IAAI+Q,CAAC,CAACf,MAAM,CAACtE,EAAE,KAAKY,CAAC,CAACZ,EAAE,CAAC,CACpDjJ,OAAO,CAACsL,KAAK,IAAG;QACb,MAAMmE,cAAc,GAAGnB,CAAC,CAACf,MAAM,CAACqB,OAAO,CAACc,KAAK,EAAE,CAAC,CAAC,CAAC;QAElD,IAAIpB,CAAC,CAAChB,IAAI,KAAK1C,yEAAkB,CAACwE,IAAI,EACpC,IAAI,CAAC3D,kBAAkB,CAACkE,kBAAkB,CAACF,cAAc,EAAEnE,KAAK,CAACrC,EAAG,CAAC,CAAC,KAEtE,IAAI,CAACwC,kBAAkB,CAACmE,qBAAqB,CAACH,cAAc,CAAC;QAE/DnE,KAAK,CAACuE,aAAa,CAACC,cAAc,EAAE;QACpCxE,KAAK,CAACuE,aAAa,CAACE,WAAW,EAAE;MACnC,CAAC,CACF;MAEH,IAAI,IAAI,CAACrE,SAAS,EAAE;QAClB,IAAI,CAACsE,yBAAyB,EAAE;;IAEpC,CAAC,CACF;IAEH,KAAAC,cAAc,GAAG,IAAI,CAAC/C,eAAe,CAAC/H,IAAI,CACxCyE,6CAAM,CAAE0E,CAAC,IAAKA,CAAC,CAACf,MAAM,CAACtE,EAAE,KAAK,IAAI,CAACsF,MAAM,CAAC,CAC3C,CAACnJ,SAAS,CAACC,KAAK,IAAG;MAClB,MAAM6K,OAAO,GAAG7K,KAAK,CAACkI,MAAM,CAACqB,OAAO,CAACsB,OAAO,EAAE;MAC9C,IAAIC,eAAe,GAAwD,IAAI,CAAC5B,MAAM,CAACU,QAAQ,CAAC,IAAIiB,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC;MAEjH,IAAI7K,KAAK,CAACkI,MAAM,CAACD,IAAI,KAAK,gBAAgB,EAAE;QAC1C,IAAI4C,OAAO,CAACZ,QAAQ,CAAC,MAAM,CAAC,EAAEa,eAAe,GAAGA,eAAe,CAACT,KAAK,CAAC,OAAO,CAAC,MACzES,eAAe,GAAGA,eAAe,CAACC,GAAG,CAAC,OAAO,CAAC;OACpD,MAAM,IAAI/K,KAAK,CAACkI,MAAM,CAACD,IAAI,KAAK,UAAU,EAAE;QAC3C,MAAM+C,QAAQ,GAAGhL,KAAK,CAACkI,MAAM,CAACqB,OAAO,CAACc,KAAK,CAAC,WAAW,CAAC;QACxDS,eAAe,GAAG,IAAI,CAAC5B,MAAM,CAACmB,KAAK,CAAC,IAAIW,QAAQ,CAACH,OAAO,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAACI,KAAK,EAAE;QACxEH,eAAe,GAAGA,eAAe,CAACnB,GAAG,CAACmB,eAAe,CAACI,cAAc,EAAE,CAAC;;MAGzE,IAAI,CAACtD,OAAO,GAAG,IAAI;MACnB,IAAI,CAACiC,UAAU,CAAC7J,KAAK,EAAE8K,eAAe,CAAC;MACvC,IAAI,CAAClD,OAAO,GAAG,KAAK;IACtB,CAAC,CAAC;IAEF,KAAAuD,mBAAmB,GAAG,IAAI,CAACtD,eAAe,CAAC/H,IAAI,CAC7CyE,6CAAM,CAAE0E,CAAC,IAAKA,CAAC,CAACf,MAAM,CAACtE,EAAE,KAAK,IAAI,CAACsF,MAAM,CAAC,EAC1CzD,4CAAK,CAAC,CAAC,CAAC,CACT,CAAC1F,SAAS,CAACkJ,CAAC,IAAG;MACZ,IAAIA,CAAC,CAAChB,IAAI,KAAK1C,yEAAkB,CAACqD,MAAM,EAAE;MAC1C,IAAIgB,QAAQ,GAA2BX,CAAC,CAACf,MAAM,CAACqB,OAAO;MACvD,IAAIN,CAAC,CAACf,MAAM,CAACD,IAAI,KAAK,UAAU,EAAE;QAChC2B,QAAQ,GAAGX,CAAC,CAACf,MAAM,CAACtE,EAAE,CAACgG,QAAQ,CAAC,wBAAwB,CAAC;;MAE3D,MAAMwB,WAAW,GAAGxB,QAAQ,CAACyB,GAAG,CAACC,EAAE,IAAIA,EAAE,CAAC9B,IAAI,CAAC,YAAY,CAAC,CAAC;MAC7D,IAAI,CAAC7J,KAAK,CAAC4L,GAAG,CAAC,QAAQ,EAAEH,WAAW,CAAC,CAAC,CAAC,CAAC;IAC1C,CAAC,CACF;IAED,KAAAI,YAAY,GAAG,IAAI,CAAC3D,eAAe,CAAC/H,IAAI,CACtCyE,6CAAM,CAAE0E,CAAC,IAAKA,CAAC,CAACf,MAAM,CAACtE,EAAE,KAAK,IAAI,CAACsF,MAAM,CAAC,EAC1C3E,6CAAM,CAAC,MAAM,CAAC,IAAI,CAACqD,OAAO,CAAC,CAC5B,CAAC7H,SAAS,CAAEkJ,CAAC,IAAI;MAChB,MAAMjJ,KAAK,GAAGiJ,CAAkB;MAChC,MAAM4B,OAAO,GAAG7K,KAAK,CAACkI,MAAM,CAACqB,OAAO,CAACsB,OAAO,EAAE;MAC9C,KAAK,IAAIjH,EAAE,IAAI,CAAC,IAAI,CAACA,EAAE,EAAE,IAAI,CAACyF,SAAS,CAAC,CAAC9E,MAAM,CAACwB,sDAAS,CAAC,EAAE;QAC1D,IAAI+E,eAAe,GAAwDlH,EAAE,CAACgG,QAAQ,CAAC,IAAIiB,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC;QAExG;QAEA,IAAI7K,KAAK,CAACkI,MAAM,CAACD,IAAI,KAAK,gBAAgB,IAAIjI,KAAK,CAACkI,MAAM,CAACD,IAAI,KAAK,SAAS,EAAE;UAC7E,IAAI4C,OAAO,CAACZ,QAAQ,CAAC,MAAM,CAAC,EAAEa,eAAe,GAAGA,eAAe,CAACT,KAAK,CAAC,OAAO,CAAC,MACzES,eAAe,GAAGA,eAAe,CAACC,GAAG,CAAC,OAAO,CAAC;SACpD,MAAM,IAAI/K,KAAK,CAACkI,MAAM,CAACD,IAAI,KAAK,UAAU,EAAE;UAC3C,MAAM+C,QAAQ,GAAGhL,KAAK,CAACkI,MAAM,CAACqB,OAAO,CAACc,KAAK,CAAC,WAAW,CAAC;UACxDS,eAAe,GAAG,IAAI,CAAClH,EAAE,CAACyG,KAAK,CAAC,IAAIW,QAAQ,CAACH,OAAO,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;UAC5DC,eAAe,GAAGA,eAAe,CAACnB,GAAG,CAACmB,eAAe,CAACI,cAAc,EAAE,CAAC;;QAGzE,QAAQlL,KAAK,CAACiI,IAAI;UAChB,KAAK1C,yEAAkB,CAACqD,MAAM;YAC5B,IAAI,CAACjJ,KAAK,CAAC4L,GAAG,CAAC,MAAM,EAAE,CAAC,QAAQ,GAAGV,OAAO,CAAC,CAAC,CAAC,IAAI7K,KAAK,CAACkI,MAAM,CAACD,IAAI,KAAK,UAAU,GAAG,EAAE,GAAI,CAAC4C,OAAO,CAACZ,QAAQ,CAAC,MAAM,CAAC,GAAG,GAAG,GAAG,GAAG,IAAI,MAAO,CAAC,CAAC,CAAC;YAC7I;UACF,KAAK1E,yEAAkB,CAACkG,QAAQ;YAC9B,IAAI,CAAC9L,KAAK,CAAC4L,GAAG,CAAC,MAAM,EAAE,EAAE,CAAC;YAC1B;UACF,KAAKhG,yEAAkB,CAACmG,KAAK;YAC3BZ,eAAe,CAACa,QAAQ,CAAC,OAAO,CAAC;YACjC;UACF,KAAKpG,yEAAkB,CAACqG,KAAK;YAC3Bd,eAAe,CAACe,WAAW,CAAC,OAAO,CAAC;YACpC;;;IAGR,CAAC,CAAC;IAUiB,KAAA5F,KAAK,GAAGA,uDAAK;IACb,KAAAD,MAAM,GAAGA,6CAAM;IACf,KAAAE,YAAY,GAAGA,uEAAY;IAC3B,KAAAvN,KAAK,GAAGA,uDAAK;EAtqBhC;EAaAmT,WAAWA,CAACC,OAAsB;IAChC,IAAIA,OAAO,CAAC,WAAW,CAAC,EAAE,IAAI,CAACC,WAAW,EAAE;EAC9C;EAGApM,eAAeA,CAAA;IACb,IAAI,CAAC6C,IAAI,CAACwJ,KAAK,CAAClM,SAAS,CAAC,IAAI,CAACmM,WAAW,CAACC,IAAI,CAAC,IAAI,CAAC,CAAC;IAEtD,MAAMC,SAAS,GAAG,IAAI,CAACC,kBAAmB,CAACC,aAAa;IACxD,MAAMC,gBAAgB,GAAG,IAAI,CAACA,gBAAiB,CAACD,aAAa;IAC7D,MAAME,eAAe,GAAG,IAAI,CAACA,eAAgB,CAACF,aAAa;IAE3DG,MAAM,CAACC,MAAM,CAACnH,yEAAkB,CAAC,CAAC5K,OAAO,CAAEsN,IAAI,IAAI;MACjDmE,SAAS,CAACO,gBAAgB,CAAC1E,IAAI,EAAGgB,CAAC,IAAK,IAAI,CAACtB,gBAAgB,CAACjD,IAAI,CAACuE,CAAkB,CAAC,CAAC;MACvFsD,gBAAgB,CAACI,gBAAgB,CAAC1E,IAAI,EAAGgB,CAAC,IAAK,IAAI,CAACtB,gBAAgB,CAACjD,IAAI,CAACuE,CAAkB,CAAC,CAAC;MAC9FuD,eAAe,CAACG,gBAAgB,CAAC1E,IAAI,EAAGgB,CAAC,IAAK,IAAI,CAACtB,gBAAgB,CAACjD,IAAI,CAACuE,CAAkB,CAAC,CAAC;IAC/F,CAAC,CAAC;IAEF,IAAI,CAACiB,aAAa,GAAG,IAAI1E,4DAAK,CAAC4G,SAAS,CAAC;IAEzC,IAAI,CAAC1F,eAAe,GAAGvO,qGAAO,CAAC,IAAI,CAAC+R,aAAa,CAACxR,UAAU,CAACkU,MAAM,CAACC,OAAO,CAAC;IAE5E,IAAI,CAAC1G,OAAO,CAAC2G,SAAS,EAAE,CACrB/M,SAAS,CAACmJ,MAAM,IAAG;MAClB,IAAI,CAACA,MAAM,GAAG5D,qDAAS,CAAC;QACtB8G,SAAS,EAAEI,eAAe;QAC1B5C,QAAQ,EAAEV,MAAM;QAChBjD,KAAK,EAAE,IAAI,CAACiE,aAAa,EAAE6C,aAAa,EAAE;QAC1CC,MAAM,EAAE;UAACzS,IAAI,EAAE;QAAQ,CAAC;QACxB0S,mBAAmB,EAAE;OACtB,CAAC;MACF,IAAI,CAAC/C,aAAa,EAAEgD,eAAe,CAAC,IAAI,CAAChE,MAAM,CAAC;MAEhD,IAAI,CAACA,MAAM,CAACiE,cAAc,CAAC,KAAK,CAAC;MACjC,IAAI,CAACjE,MAAM,CAACkE,cAAc,CAAC,KAAK,CAAC;MACjC,IAAI,CAAClE,MAAM,CAACmE,OAAO,CAAC,CAAC,CAAC;MACtB,MAAMC,EAAE,GAAG,IAAI,CAACpE,MAAM,CAACU,QAAQ,EAAE,CAAC2D,WAAW,EAAE;MAC/C;IACF,CAAC,CAAC;;IAEJ,IAAI,CAACvB,WAAW,EAAE;EAEpB;EAEAA,WAAWA,CAAA;IACT,IAAI,CAAC,IAAI,CAACK,kBAAkB,EAAE;IAE9B,MAAMD,SAAS,GAAG,IAAI,CAACC,kBAAmB,CAACC,aAAa;IAExD,IAAI,CAACnG,OAAO,CAACqH,UAAU,CAAC,IAAI,CAAC7K,SAAS,CAAC,CACpC5C,SAAS,CAAC6J,QAAQ,IAAG;MACpB,IAAI,CAACvD,SAAS,GAAGuD,QAAQ,CAACS,KAAK,CAACoD,IAAI,CAACC,IAAI,IAAIA,IAAI,CAAClE,IAAI,CAAC,WAAW,CAAC,CAAC,IAAII,QAAQ,CAAC+D,KAAK,CAACF,IAAI,CAACG,IAAI,IAAIA,IAAI,CAACpE,IAAI,CAAC,WAAW,CAAC,CAAC;MAC3H,IAAI,CAAC5F,EAAE,GAAG0B,qDAAS,CAAC;QAClB8G,SAAS,EAAEA,SAAS;QACpBxC,QAAQ,EAAEA,QAAQ;QAClB3D,KAAK,EAAE,IAAI,CAACiE,aAAa,EAAE6C,aAAa,EAAE;QAC1CC,MAAM,EAAE;UAACzS,IAAI,EAAE;QAAQ;OACxB,CAAC;MACF,IAAI,CAACsJ,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,CAACD,EAAE;MACrB,IAAI,CAACsG,aAAa,CAACgD,eAAe,CAAC,IAAI,CAACtJ,EAAE,CAAC;MAC3C,IAAI,CAACsG,aAAa,CAAC2D,UAAU,EAAE;MAC/B,IAAI,CAACjK,EAAE,CAACkK,EAAE,CAAC,UAAU,EAAE,UAAU,EAAG7E,CAAC,IAAK,IAAI,CAACjF,MAAM,CAAC+J,QAAQ,CAAC,CAAC,MAAM9E,CAAC,CAAClC,MAAM,CAACyC,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,EAAE;QAACwE,mBAAmB,EAAE,UAAU;QAAEC,UAAU,EAAE,IAAI,CAACzT;MAAK,CAAC,CAAC,CAAC;MAEjK,IAAI,CAACwF,KAAK,CAACkO,oBAAoB,CAAC,IAAIC,GAAG,CACrC,IAAI,CAACvK,EAAE,EAAEyG,KAAK,CAAC,SAAS,CAAC,CAACgB,GAAG,CAACqC,IAAI,IAAI,CAACA,IAAI,CAAClE,IAAI,CAAC,YAAY,CAAC,EAAEkE,IAAI,CAAClE,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CACrF,CAAC;MAEF,IAAI,CAAC4E,WAAW,CAACxE,QAAQ,EAAEwC,SAAS,CAAC;MAErC,IAAI,CAAC5D,eAAe,CAAE,MAAM,IAAI,CAAC6F,cAAc,EAAE,CAAC;IACpD,CAAC,CAAC;EACN;EAEO1D,yBAAyBA,CAAA;IAC9B,IAAI,IAAI,CAACtE,SAAS,EAChB,IAAI,CAACzC,EAAE,CAAC0K,KAAK,CAAC,MAAK;MACjB,IAAI,CAAC1K,EAAE,CAACgG,QAAQ,CAAC,iBAAiB,CAAC,CAAC3D,KAAK,CAAC,YAAY,EAAE,QAAQ,CAAC;MACjE,IAAI,CAACrC,EAAE,CAAC+J,KAAK,CAAC,SAAS,CAAC,CAAC1H,KAAK,CAAC,kBAAkB,EAAE,CAAC,CAAC;MACrD,IAAI,CAACQ,SAAS,GAAG,CAAC;MAClB,IAAI,CAACQ,2BAA2B,EAAE;MAClC,IAAI,CAACrD,EAAE,CAACgG,QAAQ,CAAC,cAAc,CAAC,CAAC3D,KAAK,CAAC,YAAY,EAAE,SAAS,CAAC;IACjE,CAAC,CAAC;EACN;EAEQmI,WAAWA,CAACxE,QAAsC,EAAEwC,SAAyB;IAEnF,MAAMmC,WAAW,GAAItF,CAAoC,IAAKA,CAAC,CAACuF,EAAE,CAAC,SAAS,CAAC,GAAGvF,CAAC,CAACO,IAAI,CAAC,iBAAiB,CAAC,GAAGP,CAAC,CAACsE,WAAW,EAAE,CAACkB,EAAE;IAC9H,IAAI,IAAI,CAACpI,SAAS,EAAE;MAClB,IAAI,CAACzC,EAAE,CAACgG,QAAQ,CAAC,iBAAiB,CAAC,CAAC3D,KAAK,CAAC,YAAY,EAAE,QAAQ,CAAC;MACjE,IAAI,CAACyI,gBAAgB,GAAG,IAAI,CAAC9K,EAAG,CAC7BgG,QAAQ,CAAC,eAAe,CAAC,CACzBD,GAAG,CAAC,cAAc,CAAC,CACnBgF,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKN,WAAW,CAACK,CAAC,CAAC,GAAGL,WAAW,CAACM,CAAC,CAAC,CAAC,CAC/C5I,KAAK,CAAC,YAAY,EAAE,QAAQ,CAAC,CAC7B6I,OAAO,EAAE;MAEZ,IAAI,CAACtI,wBAAwB,GAAG,IAAI,CAACkI,gBAAgB,CAACrD,GAAG,CAACkD,WAAW,CAAC;MAGtE,IAAI,CAAC3K,EAAE,CAACkK,EAAE,CAAC,KAAK,EAAE7E,CAAC,IAAG;QACpB,MAAM8F,YAAY,GAAG9F,CAAC,CAAClC,MAAM;QAC7B,IAAIgI,YAAY,CAACvF,IAAI,CAAC,YAAY,CAAC,IAAIuF,YAAY,CAACvF,IAAI,CAAC,WAAW,CAAC,EAAE;UACrE,MAAMlC,CAAC,GAAGiH,WAAW,CAACQ,YAAY,CAAC;UACnC,IAAIC,KAAK,GAAG,IAAI,CAACxI,wBAAwB,CAACyI,SAAS,CAACR,EAAE,IAAIA,EAAE,IAAInH,CAAC,CAAC;UAClE,IAAI0H,KAAK,KAAK,CAAC,CAAC,EAAEA,KAAK,GAAG,IAAI,CAACN,gBAAgB,CAACjK,MAAM;UAEtD,IAAI,CAACiK,gBAAgB,CAACQ,MAAM,CAACF,KAAK,EAAE,CAAC,EAAED,YAAY,CAAC;UACpD,IAAI,CAACvI,wBAAwB,CAAC0I,MAAM,CAACF,KAAK,EAAE,CAAC,EAAE1H,CAAC,CAAC;UACjDyH,YAAY,CAAC9I,KAAK,CAAC,YAAY,EAAE,QAAQ,CAAC;;MAE9C,CAAC,CAAC;MAEF,IAAI,CAACrC,EAAE,CAACkK,EAAE,CAAC,QAAQ,EAAE7E,CAAC,IAAG;QACvB,MAAMkG,cAAc,GAAGlG,CAAC,CAAClC,MAAM;QAC/B,MAAMiI,KAAK,GAAG,IAAI,CAACN,gBAAgB,CAACU,OAAO,CAACD,cAAc,CAAC;QAC3D,IAAIH,KAAK,GAAG,CAAC,CAAC,EAAE;UACd,IAAI,CAACN,gBAAgB,CAACQ,MAAM,CAACF,KAAK,EAAE,CAAC,CAAC;UACtC,IAAI,CAACxI,wBAAwB,CAAC0I,MAAM,CAACF,KAAK,EAAE,CAAC,CAAC;;MAElD,CAAC,CAAC;MAEF,MAAMzC,gBAAgB,GAAG,IAAI,CAACA,gBAAiB,CAACD,aAAa;MAC7D,IAAI,CAACjD,SAAS,GAAG/D,qDAAS,CAAC;QACzB8G,SAAS,EAAEG,gBAAgB;QAC3B3C,QAAQ,EAAEA,QAAQ;QAClB3D,KAAK,EAAE,IAAI,CAACiE,aAAa,EAAE6C,aAAa,EAAE;QAC1CC,MAAM,EAAE;UAACzS,IAAI,EAAE;QAAQ;OACxB,CAAC;MACF,IAAI,CAACsJ,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,CAACwF,SAAS;MAG5B,IAAI,CAACA,SAAS,CAACO,QAAQ,CAAC,cAAc,CAAC,CAACyF,MAAM,EAAE;MAChD,IAAI,CAAChG,SAAS,CAACO,QAAQ,CAAC,cAAc,CAAC,CAACyF,MAAM,EAAE;MAChD,IAAI,CAACzL,EAAG,CAACyG,KAAK,CAAC,UAAU,CAAC,CAACwB,WAAW,CAAC,SAAS,CAAC;MAEjD,IAAI,CAACxC,SAAU,CAACyE,EAAE,CAAC,UAAU,EAAE,MAAM,IAAI,CAAClH,aAAa,CAAC,IAAI,CAACyC,SAAS,EAAEkD,gBAAgB,EAAE,IAAI,CAAC3I,EAAE,EAAEwI,SAAS,CAAC,CAAC;MAC9G,IAAI,CAACxI,EAAG,CAACkK,EAAE,CAAC,UAAU,EAAE,MAAM,IAAI,CAAClH,aAAa,CAAC,IAAI,CAAChD,EAAE,EAAEwI,SAAS,EAAE,IAAI,CAAC/C,SAAS,EAAEkD,gBAAgB,CAAC,CAAC;MAEvG,IAAI,CAACpC,oBAAoB,GAAG,IAAI3E,4DAAK,CAAC+G,gBAAgB,CAAC;MACvD,IAAI,CAACpC,oBAAoB,EAAE+C,eAAe,CAAC,IAAI,CAAC7D,SAAS,CAAC;MAC1D,IAAI,CAACA,SAAS,CAACgE,OAAO,CAAC,IAAI,CAACzJ,EAAG,CAACyJ,OAAO,EAAE,CAAC;MAC1C,IAAI,CAAChE,SAAS,CAACiG,OAAO,CAAC,IAAI,CAAC1L,EAAG,CAAC0L,OAAO,EAAE,CAAC;MAE1CC,UAAU,CAAC,MAAK;QACd,IAAI,CAAC3I,aAAa,CAAC,IAAI,CAAChD,EAAG,EAAEwI,SAAS,EAAE,IAAI,CAAC/C,SAAS,EAAEkD,gBAAgB,CAAC;QACzE,IAAI,CAAC5B,yBAAyB,EAAE;MAClC,CAAC,CAAC;;EAEN;EAIA6E,WAAWA,CAACC,MAA2B,EAAE7L,EAAkB;IACzD,IAAIgG,QAA8B;IAElCA,QAAQ,GAAGhG,EAAE,CAAC8L,UAAU,EAAE;IAC1BD,MAAM,CAAC9U,OAAO,CAACgV,KAAK,IAAG;MACrB,IAAI,OAAOA,KAAK,KAAK,QAAQ,EAAE;QAC7B,IAAIA,KAAK,CAACC,UAAU,CAAC,IAAI,CAAC,EAAE;UAC1BhG,QAAQ,GAAGA,QAAQ,CAACiG,EAAE,CAAC,gBAAgBF,KAAK,IAAI,CAAC;UACjD;UACA,IAAI/F,QAAQ,CAACnF,MAAM,KAAK,CAAC,EAAE;YACzB,IAAIqL,sBAAsB,GAAGlG,QAAQ,CAACiG,EAAE,CAAC,eAAe,CAAC;YACzDC,sBAAsB,CAACnV,OAAO,CAACoV,GAAG,IAAG;cACnC,IAAIC,WAAW,GAAGD,GAAG,CAACvG,IAAI,CAAC,aAAa,CAAC;cACzC,IAAIwG,WAAW,CAAC/F,QAAQ,CAAC0F,KAAK,CAAC,EAAE;gBAC/B/F,QAAQ,CAACqG,KAAK,CAACF,GAAG,CAAC;;YAEvB,CAAC,CAAC;;SAEL,MAAM;UACL,MAAMG,UAAU,GAAGP,KAAK,CAACQ,KAAK,CAAC,IAAI,CAAC7J,UAAU,CAAC;UAC/C,IAAI4J,UAAU,EAAE;YACd,MAAM,CAACzW,CAAC,EAAE2W,KAAK,EAAEC,IAAI,CAAC,GAAGH,UAAU;YACnC,IAAIG,IAAI,KAAK,OAAO,EAAE;cAAE;cACtBzG,QAAQ,GAAGA,QAAQ,CAACiG,EAAE,CAAC,IAAIO,KAAK,EAAE,CAAC,CAACE,GAAG,CAAC,OAAO,CAAC;aACjD,MAAM,IAAID,IAAI,KAAK,OAAO,EAAE;cAAE;cAC7BzG,QAAQ,GAAGA,QAAQ,CAACiG,EAAE,CAAC,IAAIO,KAAK,EAAE,CAAC,CAACrF,GAAG,CAAC,OAAO,CAAC;aACjD,MAAM;cAAE;cACPnB,QAAQ,GAAGA,QAAQ,CAACiG,EAAE,CAAC,IAAIO,KAAK,EAAE,CAAC;cACnCxG,QAAQ,GAAGA,QAAQ,CAACiG,EAAE,CAACjG,QAAQ,CAACS,KAAK,CAAC,WAAW,CAAC,CAACa,cAAc,EAAE,CAAC;;WAEvE,MAAM;YACLtB,QAAQ,GAAGA,QAAQ,CAACiG,EAAE,CAAC,SAASF,KAAK,IAAI,CAAC;;;OAG/C,MAAM;QACL/F,QAAQ,GAAGA,QAAQ,CAACiG,EAAE,CAAC,SAASF,KAAK,IAAI,CAAC,CAACE,EAAE,CAAC,gBAAgBF,KAAK,IAAI,CAAC;;IAE5E,CAAC,CAAC;IACF,OAAO/F,QAAQ;EACjB;EAEAhB,MAAMA,CAAC6G,MAAyB,EAAE7L,EAAkB;IAClDA,EAAE,CAACgG,QAAQ,CAAC,WAAW,CAAC,CAAC6B,QAAQ,EAAE;IACnC,IAAI8E,QAAQ,GAAG,IAAI,CAACf,WAAW,CAAC,CAACC,MAAM,CAAC,EAAE7L,EAAE,CAAC;IAC7C2M,QAAQ,CAAC3H,MAAM,EAAE;IACjB,IAAI,gBAAgB,IAAI2H,QAAQ,EAAE;MAChCA,QAAQ,GAAGA,QAAQ,CAAC5G,GAAG,CAAC4G,QAAQ,CAACC,cAAc,EAAE,CAAC;;IAGpD,IAAI,IAAI,CAAC5I,OAAO,EAAE;MAChBhE,EAAE,CAAC6M,OAAO,CAAC;QACTC,GAAG,EAAE;UACHC,IAAI,EAAEJ,QAAQ;UACd1D,OAAO,EAAE;SACV;QACD+D,QAAQ,EAAE,IAAI;QACdC,MAAM,EAAE;OACT,CAAC;;IAGJ,OAAON,QAAQ;EACjB;EAEA9H,IAAIA,CAACqI,IAAyB,EAAElN,EAAkB;IAChD,OAAO,IAAI,CAACmN,YAAY,CAAC,IAAI,CAACvB,WAAW,CAACsB,IAAI,EAAElN,EAAE,CAAC,EAAEA,EAAE,CAAC;EAC1D;EAEAmN,YAAYA,CAACC,MAAoC,EAAEpN,EAAkB;IACnE,MAAMqN,WAAW,GAAGrN,EAAE,CAACyG,KAAK,CAAC,SAAS,CAAC;IACvC,MAAM6G,WAAW,GAAGtN,EAAE,CAAC+J,KAAK,CAAC,UAAU,CAAC;IACxC,MAAMwD,QAAQ,GAAGvN,EAAE,CAACgG,QAAQ,CAAC,UAAU,CAAC;IAExC,IAAIoH,MAAM,CAACI,QAAQ,EAAE,EAAE;MACrBxN,EAAE,CAAC0K,KAAK,CAAC,MAAK;QACZ,IAAI,CAAC+C,uBAAuB,CAAC,KAAK,EAAEzN,EAAE,CAAC;QACvCA,EAAE,CAACgG,QAAQ,EAAE,CAACiC,WAAW,CAAC,MAAM,CAAC;QACjCmF,MAAM,CAACrF,QAAQ,CAAC,MAAM,CAAC,CACpBgC,KAAK,EAAE,CAAC1H,KAAK,CAAC;UAAC,kBAAkB,EAAE;QAAC,CAAC,CAAC;MAC3C,CAAC,CAAC;MAEF,OAAO+K,MAAM;KACd,MAAM;MACLpN,EAAE,CAAC0K,KAAK,CAAC,MAAK;QACZ,IAAI,CAAC+C,uBAAuB,CAAC,IAAI,EAAEzN,EAAE,CAAC;QACtCA,EAAE,CAACgG,QAAQ,EAAE,CAACiC,WAAW,CAAC,MAAM,CAAC;MACnC,CAAC,CAAC;MAEF,OAAOjI,EAAE,CAAC8L,UAAU,EAAE;;EAE1B;EAEA2B,uBAAuBA,CAACC,OAAgB,EAAE1N,EAAkB;IAC1D,MAAMqN,WAAW,GAAGrN,EAAE,CAACyG,KAAK,CAAC,SAAS,CAAC;IACvC,MAAM6G,WAAW,GAAGtN,EAAE,CAAC+J,KAAK,CAAC,UAAU,CAAC;IACxC,MAAMwD,QAAQ,GAAGvN,EAAE,CAACgG,QAAQ,CAAC,UAAU,CAAC;IAExC,IAAI0H,OAAO,EAAE;MACXL,WAAW,CAAChL,KAAK,CAAC;QAACsL,OAAO,EAAE;MAAC,CAAC,CAAC;MAC/BJ,QAAQ,CAAClL,KAAK,CAAC;QAACsL,OAAO,EAAE;MAAC,CAAC,CAAC;MAC5BL,WAAW,CAACvF,QAAQ,CAAC,QAAQ,CAAC;MAC9B/H,EAAE,CAACkK,EAAE,CAAC,MAAM,EAAElK,EAAE,CAAC4F,IAAI,CAAC,UAAU,CAAC,CAACgB,aAAa,CAACgH,MAAM,CAAC5E,MAAM,CAAC;MAC9DhJ,EAAE,CAAC4F,IAAI,CAAC,UAAU,CAAC,CAACgB,aAAa,CAACgH,MAAM,CAAC5E,MAAM,EAAE;KAClD,MAAM;MACLqE,WAAW,CAAChL,KAAK,CAAC;QAACsL,OAAO,EAAE;MAAC,CAAC,CAAC;MAC/BL,WAAW,CAACrF,WAAW,CAAC,QAAQ,CAAC;MACjCjI,EAAE,CAAC6N,GAAG,CAAC,MAAM,EAAE7N,EAAE,CAAC4F,IAAI,CAAC,UAAU,CAAC,CAACgB,aAAa,CAACgH,MAAM,CAAC5E,MAAM,CAAC;MAC/DuE,QAAQ,CAAClL,KAAK,CAAC;QAACsL,OAAO,EAAE;MAAC,CAAC,CAAC;MAC5B3N,EAAE,CAAC+J,KAAK,EAAE,CAAC1H,KAAK,CAAC;QAAC,kBAAkB,EAAE;MAAC,CAAC,CAAC;;EAE7C;EAGA4D,UAAUA,CAAC7J,KAAoB,EAAE0R,gBAAqE;IACpG,QAAQ1R,KAAK,CAACiI,IAAI;MAChB,KAAK1C,yEAAkB,CAACmG,KAAK;QAC3BgG,gBAAgB,CAAC/F,QAAQ,CAAC,OAAO,CAAC;QAClC;MACF,KAAKpG,yEAAkB,CAACqG,KAAK;QAC3B8F,gBAAgB,CAAC7F,WAAW,CAAC,OAAO,CAAC;QACrC;MACF,KAAKtG,yEAAkB,CAACqD,MAAM;QAC5B8I,gBAAgB,CAAC9I,MAAM,EAAE;QACzB;MACF,KAAKrD,yEAAkB,CAACkG,QAAQ;QAC9BiG,gBAAgB,CAACjG,QAAQ,EAAE;QAC3B;;EAEN;EAWQxE,2BAA2BA,CAAA;IAEjC;IAEA,MAAM0K,MAAM,GAAG,IAAI,CAACtI,SAAU,CAACsI,MAAM,EAAE;IACvC,IAAIC,UAAU,GAAG,IAAI,CAACpL,wBAAwB,CAACyI,SAAS,CAACR,EAAE,IAAIA,EAAE,IAAIkD,MAAM,CAAClD,EAAE,CAAC;IAC/E,IAAImD,UAAU,KAAK,CAAC,CAAC,EAAEA,UAAU,GAAG,IAAI,CAAClD,gBAAgB,CAACjK,MAAM;IAEhE;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA,IAAI,IAAI,CAACgC,SAAS,KAAKmL,UAAU,EAAE;MACjC;MACA,IAAIA,UAAU,GAAG,IAAI,CAACnL,SAAS,EAAE,IAAI,CAACiI,gBAAgB,CAACmD,KAAK,CAACD,UAAU,EAAE,IAAI,CAACnL,SAAS,CAAC,CACrF4E,GAAG,CAACpC,CAAC,IAAIA,CAAC,CAAChD,KAAK,CAAC,YAAY,EAAE,QAAQ,CAAC,CAAC,CAAC;MAAA,CAC1C1B,MAAM,CAAC0E,CAAC,IAAIA,CAAC,CAACuF,EAAE,CAAC,SAAS,CAAC,CAAC,CAAC;MAAA,CAC7B7T,OAAO,CAACiS,MAAM,IAAIA,MAAM,CAACpD,IAAI,CAAC,OAAO,CAAC,CAACvD,KAAK,CAAC,kBAAkB,EAAE,CAAC,CAAC,CAAC,EAAC;MACxE;MACA,IAAI2L,UAAU,GAAG,IAAI,CAACnL,SAAS,EAAE,IAAI,CAACiI,gBAAgB,CAACmD,KAAK,CAAC,IAAI,CAACpL,SAAS,EAAEmL,UAAU,CAAC,CACrFvG,GAAG,CAACpC,CAAC,IAAIA,CAAC,CAAChD,KAAK,CAAC,YAAY,EAAE,SAAS,CAAC,CAAC,CAAC;MAAA,CAC3C1B,MAAM,CAAC0E,CAAC,IAAIA,CAAC,CAACuF,EAAE,CAAC,SAAS,CAAC,CAAC,CAAC;MAAA,CAC7B7T,OAAO,CAACiS,MAAM,IAAIA,MAAM,CAACpD,IAAI,CAAC,OAAO,CAAC,CAACvD,KAAK,CAAC,kBAAkB,EAAE,IAAI,CAACS,eAAe,CAAC,CAAC,EAAC;;;IAE7F,IAAI,CAACD,SAAS,GAAGmL,UAAU;EAC7B;EAoBQ7I,YAAYA,CAAC4G,KAAoB;IACvCmC,OAAO,CAACC,GAAG,CAACpC,KAAK,EAAE,IAAI,CAAChN,SAAS,CAAC;IAClC,IAAI,CAACgN,KAAK,IAAI,CAAC,IAAI,CAAChN,SAAS,EAAE;MAC7B,IAAI,CAACkB,GAAG,CAAClJ,OAAO,CAACiJ,EAAE,IAAG;QACpBA,EAAE,CAAC0K,KAAK,CAAC,MAAK;UACZ1K,EAAE,CAACyG,KAAK,EAAE,CAAC2H,UAAU,CAAC,KAAK,CAAC;UAC5BpO,EAAE,CAAC+J,KAAK,CAAC,UAAU,CAAC,CAAC1H,KAAK,CAAC;YACzB,kBAAkB,EAAE9N,qGAAO,CAAC,IAAI,CAAC+R,aAAa,CAACxR,UAAU,CAACkU,MAAM,CAACC,OAAO;WACzE,CAAC;UACFjJ,EAAE,CAACyG,KAAK,CAAC,SAAS,CAAC,CAACpE,KAAK,CAAC;YACxB,WAAW,EAAE9N,qGAAO,CAAC,IAAI,CAAC+R,aAAa,CAACxR,UAAU,CAACkU,MAAM,CAACqF,QAAQ,CAAC;YACnE,oBAAoB,EAAE9Z,qGAAO,CAAC,IAAI,CAAC+R,aAAa,CAACxR,UAAU,CAACkU,MAAM,CAACsF,WAAW;WAC/E,CAAC;QACJ,CAAC,CAAC;MACJ,CAAC,CAAC;MACF,IAAI,CAAChI,aAAa,EAAEnB,YAAY,CAAC,IAAI,CAACnF,EAAE,EAAE,IAAI,CAAC5C,QAAQ,CAACmB,OAAO,CAACgQ,KAAK,CAAC;MACtE;;IAGFxM,+CAAQ,CAAC;MACPyM,QAAQ,EAAE,IAAI,CAACpR,QAAQ,CAACqR,aAAa,CAAC,IAAI,CAAC1P,SAAS,EAAEgN,KAAK,CAAC;MAC5D2C,QAAQ,EAAE,IAAI,CAACtR,QAAQ,CAACuR,eAAe,CAAC,IAAI,CAAC3O,EAAE,CAACyG,KAAK,CAAC,UAAU,CAAC,CAACgB,GAAG,CAACmH,CAAC,IAAIA,CAAC,CAAChJ,IAAI,CAAC,YAAY,CAAC,CAAC,EAAEmG,KAAK,CAAC;MACxGjM,MAAM,EAAE,IAAI,CAAC1C,QAAQ,CAACyR,OAAO,CAAC3S,IAAI,CAACyE,6CAAM,CAACwB,sDAAS,CAAC,EAAED,2CAAI,CAAC,CAAC,CAAC;KAC9D,CAAC,CAAC/F,SAAS,CAAC,CAAC;MAACqS,QAAQ;MAAE1O,MAAM;MAAE4O;IAAQ,CAAC,KAAI;MAC5C;MACA,MAAMI,eAAe,GAAG,IAAI,CAAC/S,KAAK,CAACuB,GAAG,CAAC,iBAAiB,CAAC;MACzD,IAAIyR,aAAa,GAAGD,eAAe,GAAGN,QAAQ,CAACQ,QAAQ,CAACxD,OAAO,CAACsD,eAAe,CAAC,GAAG,CAAC;MACpF,IAAIC,aAAa,KAAK,CAAC,CAAC,EAAEA,aAAa,GAAG,CAAC;MAE3C,IAAIE,iBAAiB,GAAG,IAAI1E,GAAG,CAAiBiE,QAAQ,CAACA,QAAQ,CAACU,OAAO,CAACC,MAAM,IAC9EA,MAAM,CAACC,MAAM,CACVF,OAAO,CAACG,aAAa,IAAIA,aAAa,CAACC,GAAG,CAAC,CAC3C7H,GAAG,CAAC8H,EAAE,IAAI,CAACA,EAAE,EAAEJ,MAAM,CAACK,GAAG,CAACT,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CACpD;MACDb,OAAO,CAACC,GAAG,CAACc,iBAAiB,CAAC;MAE9B,IAAIQ,kBAAkB,GAAG,IAAIlF,GAAG,CAAuCmE,QAAQ,CAACjH,GAAG,CAACmH,CAAC,IAAI,CAACA,CAAC,CAACjT,IAAI,EAAEiT,CAAC,CAACJ,QAAQ,CAAC,CAAC,CAAC;MAE/GN,OAAO,CAACC,GAAG,CAACsB,kBAAkB,CAAC;MAE/B,MAAMC,SAAS,GAAGA,CAAChM,CAAS,EAAEiM,GAAW,EAAEC,GAAW,KAAK,CAAClM,CAAC,GAAGiM,GAAG,KAAKC,GAAG,GAAGD,GAAG,CAAC;MAElF,IAAI,CAAC1P,GAAG,CAAClJ,OAAO,CAACiJ,EAAE,IAAG;QACpBA,EAAE,CAAC0K,KAAK,CAAC,MAAK;UACZ,MAAMrI,KAAK,GAAUrC,EAAE,CAAC4F,IAAI,CAAC,UAAU,CAAC;UACxC,MAAM+J,GAAG,GAAGtN,KAAK,CAACvN,UAAU,CAACsI,QAAQ,CAACuS,GAAG,GAAG7P,MAAM,CAAC+P,UAAU,CAACF,GAAG,IAAI,CAAC;UACtE,MAAMC,GAAG,GAAGvN,KAAK,CAACvN,UAAU,CAACsI,QAAQ,CAACwS,GAAG,GAAG9P,MAAM,CAAC+P,UAAU,CAACD,GAAG,IAAI,CAAC;UAEtE,MAAME,aAAa,GAAGhQ,MAAM,CAACiQ,OAAO,CAAC1L,IAAI,KAAK,oBAAoB;UAGlErE,EAAE,CAACyG,KAAK,CAAC,iBAAiB,CAAC,CAAC1P,OAAO,CAAC+S,IAAI,IAAG;YACzC,MAAMkG,MAAM,GAAiBlG,IAAI,CAAClE,IAAI,CAAC,cAAc,CAAC;YACtD,MAAM4J,GAAG,GAAGQ,MAAM,CACfvI,GAAG,CAACwI,IAAI,IAAIhB,iBAAiB,CAAC3R,GAAG,CAAC2S,IAAI,CAACC,UAAU,CAAC,CAAC,CACnDnF,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,KAAK1W,SAAS,GAAI2W,CAAC,KAAK3W,SAAS,GAAG0W,CAAC,GAAGC,CAAC,GAAG,CAAC,CAAC,GAAI,CAAC,CAAC;YAEvE;YAEA;YACAnB,IAAI,CAAClE,IAAI,CAAC,KAAK,EAAE4J,GAAG,CAAC;UACvB,CAAC,CAAC;UACFxP,EAAE,CAACyG,KAAK,CAAC,UAAU,CAAC,CAAC1P,OAAO,CAAC+S,IAAI,IAAG;YAClC,MAAMnO,IAAI,GAAWmO,IAAI,CAAClE,IAAI,CAAC,YAAY,CAAC;YAC5C,MAAMuK,WAAW,GAAGV,kBAAkB,CAACnS,GAAG,CAAC3B,IAAI,CAAC;YAChD,IAAI,CAACwU,WAAW,EAAE;cAChBrG,IAAI,CAAClE,IAAI,CAAC,KAAK,EAAE,CAACtR,SAAS,CAAC,CAAC;aAC9B,MAAM;cACL4Z,OAAO,CAACC,GAAG,CAACxS,IAAI,EAAE+T,SAAS,CAACS,WAAW,CAACX,GAAG,CAACT,aAAa,CAAC,IAAI,CAAC,GAAGoB,WAAW,CAACC,MAAM,EAAET,GAAG,EAAEC,GAAG,CAAC,CAAC;cAChG9F,IAAI,CAAClE,IAAI,CAAC,KAAK,EAAE,CACf,CAACuK,WAAW,CAACX,GAAG,CAACT,aAAa,CAAC,IAAI,CAAC,GAAGoB,WAAW,CAACC,MAAM,EAAED,WAAW,CAACE,KAAK,CAAC,EAC7E,CAAC/b,SAAS,EAAE6b,WAAW,CAACG,KAAK,GAAGH,WAAW,CAACE,KAAK,CAAC,CACnD,CAAC;;UAEN,CAAC,CAAC;UAEFrQ,EAAE,CAAC+J,KAAK,CAAC,UAAU,CAAC,CAAC1H,KAAK,CAAC;YAAC,kBAAkB,EAAE;UAAC,CAAC,CAAC;UACnDrC,EAAE,CAACyG,KAAK,CAAC,SAAS,CAAC,CAACpE,KAAK,CAAC;YACxB,WAAW,EAAE9N,qGAAO,CAAC8N,KAAK,CAACvN,UAAU,CAACkU,MAAM,CAACqF,QAAQ,CAAC,GAAG,CAAC;YAC1D,oBAAoB,EAAE9Z,qGAAO,CAAC8N,KAAK,CAACvN,UAAU,CAACkU,MAAM,CAACsF,WAAW,CAAC,GAAG;WACtE,CAAC;UAEF,MAAMiC,WAAW,GAAsB,IAAIC,GAAG,EAAE;UAChD,IAAI1Q,MAAM,CAACiQ,OAAO,CAAC1L,IAAI,KAAK,gBAAgB,EAAE;YAC5CkM,WAAW,CAACxK,GAAG,CAAC,WAAW,CAAC;WAC7B,MAAM,IAAIjG,MAAM,CAACiQ,OAAO,CAAC1L,IAAI,KAAK,YAAY,EAAE;YAC/CkM,WAAW,CAACxK,GAAG,CAAC,WAAW,CAAC;YAC5BwK,WAAW,CAACxK,GAAG,CAAC,YAAY,CAAC;YAC7BwK,WAAW,CAACxK,GAAG,CAAC,YAAY,CAAC;WAC9B,MAAM,IAAIjG,MAAM,CAACiQ,OAAO,CAAC1L,IAAI,KAAK,oBAAoB,EAAE;YACvDkM,WAAW,CAACxK,GAAG,CAAC,YAAY,CAAC;;UAG/B,KAAK,IAAIgK,OAAO,IAAI,IAAI,CAAC3S,QAAQ,CAACC,cAAc,CAACyL,MAAM,EAAE,EAAE;YACzDiH,OAAO,CAACxB,KAAK,CAACtF,OAAO,CAAC,GAAG,CAAC;YAC1B8G,OAAO,CAAC9I,OAAO,CAACnH,MAAM,CAACiQ,OAAO,CAAC1L,IAAI,KAAK,gBAAgB,GAAG,CAAC,GAAG,CAAC,CAAC;YACjE0L,OAAO,CAACU,MAAM,CAACd,GAAG,EAAEC,GAAG,CAAC;;UAG1B,IAAI,CAACxS,QAAQ,CAACU,QAAQ,CAAC/G,OAAO,CAAChC,KAAK,IAAIA,KAAK,CAACmJ,KAAK,GAAGqS,WAAW,CAACG,GAAG,CAAC3b,KAAK,CAAC4B,IAAI,CAAC,CAAC;UAClF,IAAI,CAACyG,QAAQ,CAACmB,OAAO,GAAG,IAAI,CAACnB,QAAQ,CAACC,cAAc,CAACC,GAAG,CAACwS,aAAa,GAAG,MAAM,GAAG,MAAM,CAAE;UAC1F,IAAI,CAACxJ,aAAa,CAACnB,YAAY,CAACnF,EAAE,EAAE,IAAI,CAAC5C,QAAQ,CAACmB,OAAO,CAACgQ,KAAK,CAAC;QAClE,CAAC,CAAC;MACJ,CAAC,CAAC;IAEJ,CAAC,CAAC;EACJ;EAEA5P,aAAaA,CAAA;IACXuP,OAAO,CAACC,GAAG,CAAC,IAAI,CAAC/Q,QAAQ,CAACmB,OAAO,CAAC;IAClC,IAAI,IAAI,CAACnB,QAAQ,CAACmB,OAAO,EAAE,IAAI,CAAC+H,aAAa,CAACnB,YAAY,CAAC,IAAI,CAACnF,EAAE,EAAE,IAAI,CAAC5C,QAAQ,CAACmB,OAAO,CAACgQ,KAAK,CAAC;EAClG;EAEAjG,WAAWA,CAAA;IACT,IAAI,CAACtI,EAAE,GAAG2L,UAAU,CAAC,MAAM,IAAI,CAACrF,aAAa,EAAEqK,MAAM,CAAC,IAAI,CAAC3Q,EAAE,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI;IACzE,IAAI,CAACyF,SAAS,GAAGkG,UAAU,CAAC,MAAM,IAAI,CAACrF,aAAa,EAAEqK,MAAM,CAAC,IAAI,CAAClL,SAAS,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI;IACvF,IAAI,CAACH,MAAM,GAAGqG,UAAU,CAAC,MAAM,IAAI,CAACrF,aAAa,EAAEqK,MAAM,CAAC,IAAI,CAACrL,MAAM,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI;EACnF;EAIAsL,SAASA,CAAA;IACP,IAAI,CAAC9M,eAAe,GAAG,IAAI;EAC7B;EAEA+M,OAAOA,CAAA;IACL,IAAI,CAAC/M,eAAe,GAAG,KAAK;EAC9B;EAEAgN,QAAQA,CAAC1S,MAAkB,EAAEuK,gBAAgC,EAAEH,SAAyB;IACtF,IAAI,CAAC,IAAI,CAAC1E,eAAe,EAAE;IAC3B6E,gBAAgB,CAACtG,KAAK,CAAC,MAAM,CAAC,GAAGjE,MAAM,CAACsF,CAAC,GAAG8E,SAAS,CAAC/E,qBAAqB,EAAE,CAACC,CAAC,GAAG,IAAI;IACtF,IAAI,CAAC+B,SAAS,CAACsL,MAAM,EAAE;IACvB,IAAI,CAAC/N,aAAa,CAAC,IAAI,CAAChD,EAAG,EAAE,IAAI,CAACyI,kBAAmB,CAACC,aAAa,EAAE,IAAI,CAACjD,SAAU,EAAE,IAAI,CAACkD,gBAAiB,CAACD,aAAa,CAAC;EAC7H;EAEAsI,YAAYA,CAAA;IACV,IAAI,CAAC1L,MAAM,CAACyL,MAAM,EAAE;IACpB,IAAI,CAACzL,MAAM,CAACkE,cAAc,CAAC,IAAI,CAAC;IAChC,IAAI,CAAClE,MAAM,CAACiE,cAAc,CAAC,IAAI,CAAC;IAChC,IAAI,CAACjE,MAAM,CAACwH,GAAG,CAAC,IAAI,CAACxH,MAAM,CAACU,QAAQ,EAAE,EAAE,CAAC,CAAC;IAC1C,IAAI,CAACV,MAAM,CAACkE,cAAc,CAAC,KAAK,CAAC;IACjC,IAAI,CAAClE,MAAM,CAACiE,cAAc,CAAC,KAAK,CAAC;EACnC;EAOA3E,eAAeA,CAACqM,CAAY;IAC1B,IAAI,CAACjN,OAAO,GAAG,IAAI;IACnBiN,CAAC,EAAE;IACH,IAAI,CAACjN,OAAO,GAAG,KAAK;EACtB;EAgBA;EAEQyG,cAAcA,CAAA;IACpB,KAAK,IAAIzK,EAAE,IAAI,IAAI,CAACC,GAAG,EAAE;MACvB,IAAI,CAAC4E,IAAI,CAAC,IAAI,CAAC9I,KAAK,CAACuB,GAAG,CAAC,MAAM,CAAC,EAAE0C,EAAE,CAAC;MACrC,IAAI,CAACgF,MAAM,CAAC,IAAI,CAACjJ,KAAK,CAACuB,GAAG,CAAC,QAAQ,CAAC,EAAE0C,EAAE,CAAC;;IAG3C,MAAMkR,QAAQ,GAAG,IAAI,CAACnV,KAAK,CAACuB,GAAG,CAAC,SAAS,CAAC;IAC1C,IAAI4T,QAAQ,EAAE;MACZ,IAAI,CAACC,oBAAoB,EAAEC,cAAc,CAACF,QAAQ,CAAC;;IAGrD,IAAI,CAAC/L,YAAY,CAAC,IAAI,CAACpJ,KAAK,CAACuB,GAAG,CAAC,UAAU,CAAC,CAAC;EAC/C;EA0HA+T,WAAWA,CAAA;IACTnD,OAAO,CAACoD,KAAK,CAAC,IAAId,GAAG,CAAC,IAAI,CAACxQ,EAAE,CAACyG,KAAK,CAAC,UAAU,CAAC,CAACgB,GAAG,CAACqC,IAAI,IAAIA,IAAI,CAAClE,IAAI,CAAC,KAAK,CAAC,IAAIkE,IAAI,CAAClE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;EACtG;EAEA2L,OAAOA,CAAChS,OAAiB;IACvB,IAAI,CAACnC,QAAQ,CAACmC,OAAO,CAACA,OAAO,CAAC,CAACpD,SAAS,EAAE;EAC5C;EAAC,QAAAtG,CAAA;qBAprBUwC,gBAAgB,EAAAlB,gEAAA,CAAAhB,qEAAA,GAAAgB,gEAAA,CAAAG,+DAAA,GAAAH,gEAAA,CAAA+H,uFAAA,GAAA/H,gEAAA,CAAAsa,gFAAA,GAAAta,gEAAA,CAAAua,uEAAA,GAAAva,gEAAA,CAAAwa,iEAAA,GAAAxa,gEAAA,CAAAya,oDAAA,GAAAza,gEAAA,CAAAya,4DAAA;EAAA;EAAA,QAAA9b,EAAA;UAAhBuC,gBAAgB;IAAAb,SAAA;IAAA2J,SAAA,WAAA0Q,uBAAAha,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;;;;;;;;;;;;;;;;;;;;;;;;;;QC9B7BV,6DAAA,gBAA6D;QAE3DA,wDAAA,gBAAqC;QACrCA,6DAAA,gBAAkH;QACxFA,yDAAA,qBAAA2a,iDAAA;UAAA,OAAWha,GAAA,CAAA+Y,OAAA,EAAS;QAAA,EAAC,wBAAAkB,oDAAA;UAAA,OAAeja,GAAA,CAAA+Y,OAAA,EAAS;QAAA,EAAxB,uBAAAmB,mDAAA5T,MAAA;UAAAjH,4DAAA,CAAA8a,GAAA;UAAA,MAAAlS,GAAA,GAAA5I,0DAAA;UAAA,MAAA0I,GAAA,GAAA1I,0DAAA;UAAA,OAC3BA,0DAAA,CAAAW,GAAA,CAAAgZ,QAAA,CAAA1S,MAAA,EAAA2B,GAAA,EAAAF,GAAA,CAA6C;QAAA,EADlB;QAE3C1I,6DAAA,cAAwE;QAA1BA,yDAAA,uBAAA+a,oDAAA;UAAA,OAAapa,GAAA,CAAA8Y,SAAA,EAAW;QAAA,EAAC;QAACzZ,2DAAA,EAAO;QAGjFA,wDAAA,gBAAyE;QAC3EA,2DAAA,EAAM;QAENA,6DAAA,eAAsF;QAE/EA,yDAAA,0BAAAgb,uDAAA;UAAA,OAAgBra,GAAA,CAAAkZ,YAAA,EAAc;QAAA,EAAC;QAElC7Z,6DAAA,kBAAyC;QAAAA,qDAAA,cAAM;QAAAA,2DAAA,EAAS;QACxDA,wDAAA,mBAA+B;QACjCA,2DAAA,EAAM;;;;QAlBaA,0DAAA,SAAAW,GAAA,CAAA+G,IAAA,CAAAc,MAAA,CAA0B;QAGsBxI,wDAAA,GAA4C;QAA5CA,0DAAA,YAAAW,GAAA,CAAA2K,SAAA,mBAA4C;QAE9CtL,wDAAA,GAAgC;QAAhCA,0DAAA,WAAAW,GAAA,CAAAgM,eAAA,CAAgC;QAOzE3M,wDAAA,GAA2D;QAA3DA,0DAAA,mBAAAW,GAAA,CAAA6K,KAAA,GAAA9C,GAAA,CAAAwS,YAAA,OAA2D;QAG9Elb,wDAAA,GAA8C;QAA9CA,0DAAA,WAAA0I,GAAA,CAAAwS,YAAA,QAA8C;;;;;;;ADe1Cha,gBAAgB,GAAAqE,kDAAA,EAN5BpC,oEAAY,CAAC;EAACgY,eAAe,EAAE;AAAI,CAAC,CAAC,GAMzBja,gBAAgB,CA0rB5B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AExtB+F;AAInC;AACT;AACW;AAGI;AACb;;;;;;;;;;;;;;;;;;;ICD9ClB,qEAAA,GAA4B;IAC1BA,4DAAA,YAC4C;IAAzCA,wDAAA,mBAAA2b,wFAAA;MAAA3b,2DAAA,CAAA4b,IAAA;MAAA,MAAAC,aAAA,GAAA7b,2DAAA,GAAA8b,SAAA;MAAA,MAAAC,MAAA,GAAA/b,2DAAA;MAAA,OAASA,yDAAA,CAAA+b,MAAA,CAAAC,kBAAA,CAAAH,aAAA,CAA8B;IAAA,EAAC;IACzC7b,4DAAA,WAAM;IAAAA,oDAAA,GAA4B;IAAAA,0DAAA,EAAO;IAE7CA,mEAAA,EAAe;;;;;IAJ6CA,uDAAA,GAAkD;IAAlDA,wDAAA,eAAAA,6DAAA,IAAAkc,GAAA,EAAAC,MAAA,CAAAvU,SAAA,EAAkD;IAEpG5H,uDAAA,GAA4B;IAA5BA,+DAAA,CAAA6b,aAAA,CAAAhY,WAAA,CAA4B;;;;;IAGtC7D,qEAAA,GAA2B;IAEzBA,4DAAA,eAA8B;IAACA,oDAAA,GAA4B;IAAAA,0DAAA,EAAO;IACpEA,mEAAA,EAAe;;;;IADkBA,uDAAA,GAA4B;IAA5BA,gEAAA,MAAA6b,aAAA,CAAAhY,WAAA,KAA4B;;;;;IAV/D7D,qEAAA,GAAsE;IAEpEA,wDAAA,IAAAoc,oEAAA,2BAKe;IACfpc,wDAAA,IAAAqc,oEAAA,2BAGe;IACjBrc,mEAAA,EAAe;;;;IAVEA,uDAAA,GAAW;IAAXA,wDAAA,UAAAsc,OAAA,CAAW;IAMXtc,uDAAA,GAAU;IAAVA,wDAAA,SAAAsc,OAAA,CAAU;;;;;IAd/Btc,4DAAA,aAAmE;IACjEA,qEAAA,MAAqC;IACnCA,uDAAA,kBAAsD;IACxDA,mEAAA,EAAe;IACfA,uDAAA,aAAwC;IACxCA,4DAAA,cAAwB;IACtBA,wDAAA,IAAAuc,qDAAA,2BAYe;IACjBvc,0DAAA,EAAM;IACNA,uDAAA,cAAyC;IAC3CA,0DAAA,EAAM;;;;IAfmCA,uDAAA,GAAgB;IAAhBA,wDAAA,YAAAuE,MAAA,CAAAiY,WAAA,CAAgB;;;;;;IA2C/Cxc,4DAAA,cAC0C;IADgBA,wDAAA,uBAAAyc,gFAAA;MAAAzc,2DAAA,CAAA0c,IAAA;MAAA,MAAAC,QAAA,GAAA3c,2DAAA,GAAA8b,SAAA;MAAA,MAAAc,OAAA,GAAA5c,2DAAA;MAAA,OAAaA,yDAAA,CAAA4c,OAAA,CAAAC,UAAA,CAAAF,QAAA,CAAgB;IAAA,EAAC,wBAAAG,iFAAA;MAAA9c,2DAAA,CAAA0c,IAAA;MAAA,MAAAC,QAAA,GAAA3c,2DAAA,GAAA8b,SAAA;MAAA,MAAAiB,OAAA,GAAA/c,2DAAA;MAAA,OACrEA,yDAAA,CAAA+c,OAAA,CAAAC,eAAA,CAAAL,QAAA,CAAqB;IAAA,EADgD;IAEtF3c,4DAAA,eAAsB;IAAAA,oDAAA,QAAC;IAAAA,0DAAA,EAAO;IAC9BA,4DAAA,eAAmB;IAAAA,oDAAA,aAAM;IAAAA,0DAAA,EAAO;;;;;;IAElCA,4DAAA,cAC0C;IADYA,wDAAA,uBAAAid,iFAAA;MAAAjd,2DAAA,CAAAkd,IAAA;MAAA,MAAAP,QAAA,GAAA3c,2DAAA,GAAA8b,SAAA;MAAA,MAAAqB,OAAA,GAAAnd,2DAAA;MAAA,OAAaA,yDAAA,CAAAmd,OAAA,CAAAN,UAAA,CAAAF,QAAA,CAAgB;IAAA,EAAC,wBAAAS,kFAAA;MAAApd,2DAAA,CAAAkd,IAAA;MAAA,MAAAP,QAAA,GAAA3c,2DAAA,GAAA8b,SAAA;MAAA,MAAAuB,OAAA,GAAArd,2DAAA;MAAA,OACjEA,yDAAA,CAAAqd,OAAA,CAAAL,eAAA,CAAAL,QAAA,CAAqB;IAAA,EAD4C;IAElF3c,4DAAA,eAAsB;IAAAA,oDAAA,QAAC;IAAAA,0DAAA,EAAO;IAC9BA,4DAAA,eAAmB;IAAAA,oDAAA,SAAE;IAAAA,0DAAA,EAAO;;;;;;IAG9BA,4DAAA,cAC0C;IADmCA,wDAAA,uBAAAsd,iFAAA;MAAAtd,2DAAA,CAAAud,IAAA;MAAA,MAAAZ,QAAA,GAAA3c,2DAAA,GAAA8b,SAAA;MAAA,MAAA0B,OAAA,GAAAxd,2DAAA;MAAA,OAAaA,yDAAA,CAAAwd,OAAA,CAAAX,UAAA,CAAAF,QAAA,CAAgB;IAAA,EAAC,wBAAAc,kFAAA;MAAAzd,2DAAA,CAAAud,IAAA;MAAA,MAAAZ,QAAA,GAAA3c,2DAAA,GAAA8b,SAAA;MAAA,MAAA4B,OAAA,GAAA1d,2DAAA;MAAA,OACxFA,yDAAA,CAAA0d,OAAA,CAAAV,eAAA,CAAAL,QAAA,CAAqB;IAAA,EADmE;IAEzG3c,4DAAA,eAAsB;IAAAA,oDAAA,QAAC;IAAAA,0DAAA,EAAO;IAC9BA,4DAAA,eAAmB;IAAAA,oDAAA,aAAM;IAAAA,0DAAA,EAAO;;;;IAHQA,yDAAA,YAAA2c,QAAA,CAAAgB,WAAA,CAAkC;;;;;;IAM5E3d,4DAAA,cAC0C;IADDA,wDAAA,uBAAA4d,iFAAA;MAAA5d,2DAAA,CAAA6d,IAAA;MAAA,MAAAlB,QAAA,GAAA3c,2DAAA,GAAA8b,SAAA;MAAA,MAAAgC,OAAA,GAAA9d,2DAAA;MAAA,OAAaA,yDAAA,CAAA8d,OAAA,CAAAjB,UAAA,CAAAF,QAAA,CAAgB;IAAA,EAAC,wBAAAoB,kFAAA;MAAA/d,2DAAA,CAAA6d,IAAA;MAAA,MAAAlB,QAAA,GAAA3c,2DAAA,GAAA8b,SAAA;MAAA,MAAAkC,OAAA,GAAAhe,2DAAA;MAAA,OACpDA,yDAAA,CAAAge,OAAA,CAAAhB,eAAA,CAAAL,QAAA,CAAqB;IAAA,EAD+B;IAErE3c,4DAAA,eAAsB;IAAAA,oDAAA,QAAC;IAAAA,0DAAA,EAAO;IAC9BA,4DAAA,eAAmB;IAAAA,oDAAA,cAAO;IAAAA,0DAAA,EAAO;;;;;;;;;;;;;;;;;IA3CzCA,4DAAA,wBAC4E;IAIrDA,wDAAA,mBAAAie,yEAAA;MAAA,MAAAC,WAAA,GAAAle,2DAAA,CAAAme,IAAA;MAAA,MAAAxB,QAAA,GAAAuB,WAAA,CAAApC,SAAA;MAAA,MAAAsC,OAAA,GAAApe,2DAAA;MAAA,OAASA,yDAAA,CAAAoe,OAAA,CAAAC,iBAAA,CAAA1B,QAAA,CAAuB;IAAA,EAAC;IAElD3c,uDAAA,mBAE6F;IAC7FA,4DAAA,cAA4B;IAErBA,wDAAA,uBAAAse,0EAAArX,MAAA;MAAA,MAAAiX,WAAA,GAAAle,2DAAA,CAAAme,IAAA;MAAA,MAAAxB,QAAA,GAAAuB,WAAA,CAAApC,SAAA;MAAA,MAAAyC,OAAA,GAAAve,2DAAA;MAAA,OAAaA,yDAAA,CAAAue,OAAA,CAAAC,WAAA,CAAAvX,MAAA,EAAA0V,QAAA,CAAyB;IAAA,EAAC,wBAAA8B,2EAAAxX,MAAA;MAAA,MAAAiX,WAAA,GAAAle,2DAAA,CAAAme,IAAA;MAAA,MAAAxB,QAAA,GAAAuB,WAAA,CAAApC,SAAA;MAAA,MAAA4C,OAAA,GAAA1e,2DAAA;MAAA,OACzBA,yDAAA,CAAA0e,OAAA,CAAAC,gBAAA,CAAA1X,MAAA,EAAA0V,QAAA,CAA8B;IAAA,EADL,mBAAAiC,sEAAA3X,MAAA;MAAA,MAAAiX,WAAA,GAAAle,2DAAA,CAAAme,IAAA;MAAA,MAAAxB,QAAA,GAAAuB,WAAA,CAAApC,SAAA;MAAA,MAAA+C,OAAA,GAAA7e,2DAAA;MAAA,OAE9BA,yDAAA,CAAA6e,OAAA,CAAAC,QAAA,CAAA7X,MAAA,EAAA0V,QAAA,CAAsB;IAAA,EAFQ;IAG1C3c,oDAAA,GACF;IAAAA,0DAAA,EAAM;IAKZA,4DAAA,cAAmB;IAEfA,wDAAA,IAAA+e,sDAAA,kBAIM;IACN/e,wDAAA,KAAAgf,uDAAA,kBAIM;IAENhf,wDAAA,KAAAif,uDAAA,kBAIM;IAENjf,wDAAA,KAAAkf,uDAAA,kBAIM;IAERlf,0DAAA,EAAM;;;;;IA7CKA,wDAAA,YAAAA,6DAAA,IAAAmf,GAAA,EAAAzb,MAAA,CAAA0b,yBAAA,CAAAzC,QAAA,GAA4D;IAK/D3c,uDAAA,GAAqE;IAArEA,wDAAA,YAAAA,6DAAA,KAAAsf,GAAA,EAAA3C,QAAA,CAAA4C,UAAA,EAAA5C,QAAA,CAAA6C,SAAA,EAAqE;IAEjExf,uDAAA,GAA+E;IAA/EA,wDAAA,eAAA2c,QAAA,CAAAlY,WAAA,iDAA+E,YAAAkY,QAAA,CAAAlY,WAAA;IAOrFzE,uDAAA,GACF;IADEA,gEAAA,MAAA2c,QAAA,CAAA9Y,WAAA,MACF;IAOgB7D,uDAAA,GAAsC;IAAtCA,wDAAA,SAAA2c,QAAA,CAAA8C,aAAA,eAAsC;IAKtCzf,uDAAA,GAAkC;IAAlCA,wDAAA,SAAA2c,QAAA,CAAA8C,aAAA,WAAkC;IAMlCzf,uDAAA,GAAsB;IAAtBA,wDAAA,SAAA2c,QAAA,CAAAgB,WAAA,CAAsB;IAMtB3d,uDAAA,GAAqB;IAArBA,wDAAA,SAAA2c,QAAA,CAAA+C,UAAA,CAAqB;;;;;;IAqCrC1f,4DAAA,cAC0C;IADgBA,wDAAA,uBAAA2f,wFAAA;MAAA3f,2DAAA,CAAA4f,IAAA;MAAA,MAAAC,QAAA,GAAA7f,2DAAA,GAAA8b,SAAA;MAAA,MAAAgE,OAAA,GAAA9f,2DAAA;MAAA,OAAaA,yDAAA,CAAA8f,OAAA,CAAAjD,UAAA,CAAAgD,QAAA,CAAgB;IAAA,EAAC,wBAAAE,yFAAA;MAAA/f,2DAAA,CAAA4f,IAAA;MAAA,MAAAC,QAAA,GAAA7f,2DAAA,GAAA8b,SAAA;MAAA,MAAAkE,OAAA,GAAAhgB,2DAAA;MAAA,OACrEA,yDAAA,CAAAggB,OAAA,CAAAhD,eAAA,CAAA6C,QAAA,CAAqB;IAAA,EADgD;IAEtF7f,4DAAA,eAAsB;IAAAA,oDAAA,QAAC;IAAAA,0DAAA,EAAO;IAC9BA,4DAAA,eAAmB;IAAAA,oDAAA,aAAM;IAAAA,0DAAA,EAAO;;;;;;IAElCA,4DAAA,cAC0C;IADYA,wDAAA,uBAAAigB,wFAAA;MAAAjgB,2DAAA,CAAAkgB,IAAA;MAAA,MAAAL,QAAA,GAAA7f,2DAAA,GAAA8b,SAAA;MAAA,MAAAqE,OAAA,GAAAngB,2DAAA;MAAA,OAAaA,yDAAA,CAAAmgB,OAAA,CAAAtD,UAAA,CAAAgD,QAAA,CAAgB;IAAA,EAAC,wBAAAO,yFAAA;MAAApgB,2DAAA,CAAAkgB,IAAA;MAAA,MAAAL,QAAA,GAAA7f,2DAAA,GAAA8b,SAAA;MAAA,MAAAuE,OAAA,GAAArgB,2DAAA;MAAA,OACjEA,yDAAA,CAAAqgB,OAAA,CAAArD,eAAA,CAAA6C,QAAA,CAAqB;IAAA,EAD4C;IAElF7f,4DAAA,eAAsB;IAAAA,oDAAA,QAAC;IAAAA,0DAAA,EAAO;IAC9BA,4DAAA,eAAmB;IAAAA,oDAAA,SAAE;IAAAA,0DAAA,EAAO;;;;;;IAG9BA,4DAAA,cACyE;IAApEA,wDAAA,uBAAAsgB,wFAAA;MAAAtgB,2DAAA,CAAAugB,IAAA;MAAA,MAAAV,QAAA,GAAA7f,2DAAA,GAAA8b,SAAA;MAAA,MAAA0E,OAAA,GAAAxgB,2DAAA;MAAA,OAAaA,yDAAA,CAAAwgB,OAAA,CAAA3D,UAAA,CAAAgD,QAAA,CAAgB;IAAA,EAAC,wBAAAY,yFAAA;MAAAzgB,2DAAA,CAAAugB,IAAA;MAAA,MAAAV,QAAA,GAAA7f,2DAAA,GAAA8b,SAAA;MAAA,MAAA4E,OAAA,GAAA1gB,2DAAA;MAAA,OAAeA,yDAAA,CAAA0gB,OAAA,CAAA1D,eAAA,CAAA6C,QAAA,CAAqB;IAAA,EAApC;IACjC7f,4DAAA,eAAsB;IAAAA,oDAAA,QAAC;IAAAA,0DAAA,EAAO;IAC9BA,4DAAA,eAAmB;IAAAA,oDAAA,aAAM;IAAAA,0DAAA,EAAO;;;;IAHQA,yDAAA,YAAA6f,QAAA,CAAAlC,WAAA,CAAkC;;;;;;IAM5E3d,4DAAA,cAC0C;IADDA,wDAAA,uBAAA2gB,wFAAA;MAAA3gB,2DAAA,CAAA4gB,IAAA;MAAA,MAAAf,QAAA,GAAA7f,2DAAA,GAAA8b,SAAA;MAAA,MAAA+E,OAAA,GAAA7gB,2DAAA;MAAA,OAAaA,yDAAA,CAAA6gB,OAAA,CAAAhE,UAAA,CAAAgD,QAAA,CAAgB;IAAA,EAAC,wBAAAiB,yFAAA;MAAA9gB,2DAAA,CAAA4gB,IAAA;MAAA,MAAAf,QAAA,GAAA7f,2DAAA,GAAA8b,SAAA;MAAA,MAAAiF,OAAA,GAAA/gB,2DAAA;MAAA,OACpDA,yDAAA,CAAA+gB,OAAA,CAAA/D,eAAA,CAAA6C,QAAA,CAAqB;IAAA,EAD+B;IAErE7f,4DAAA,eAAsB;IAAAA,oDAAA,QAAC;IAAAA,0DAAA,EAAO;IAC9BA,4DAAA,eAAmB;IAAAA,oDAAA,cAAO;IAAAA,0DAAA,EAAO;;;;;;IAGnCA,4DAAA,cAE0C;IADLA,wDAAA,uBAAAghB,wFAAA;MAAAhhB,2DAAA,CAAAihB,IAAA;MAAA,MAAApB,QAAA,GAAA7f,2DAAA,GAAA8b,SAAA;MAAA,MAAAoF,OAAA,GAAAlhB,2DAAA;MAAA,OAAaA,yDAAA,CAAAkhB,OAAA,CAAArE,UAAA,CAAAgD,QAAA,CAAgB;IAAA,EAAC,wBAAAsB,yFAAA;MAAAnhB,2DAAA,CAAAihB,IAAA;MAAA,MAAApB,QAAA,GAAA7f,2DAAA,GAAA8b,SAAA;MAAA,MAAAsF,OAAA,GAAAphB,2DAAA;MAAA,OAChDA,yDAAA,CAAAohB,OAAA,CAAApE,eAAA,CAAA6C,QAAA,CAAqB;IAAA,EAD2B;IAEnE7f,0DAAA,EAAM;;;;IAFDA,yDAAA,eAAA6f,QAAA,CAAAwB,KAAA,CAA+B;;;;;;IAlD5CrhB,4DAAA,2BAA8E;IAItBA,wDAAA,mBAAAshB,gFAAA;MAAA,MAAApD,WAAA,GAAAle,2DAAA,CAAAuhB,IAAA;MAAA,MAAA1B,QAAA,GAAA3B,WAAA,CAAApC,SAAA;MAAA,MAAA0F,OAAA,GAAAxhB,2DAAA;MAAA,OAASA,yDAAA,CAAAwhB,OAAA,CAAAnD,iBAAA,CAAAwB,QAAA,CAAuB;IAAA,EAAC;IACjF7f,uDAAA,mBAC6F;IAC/FA,0DAAA,EAAS;IAETA,4DAAA,iBAC8E;IAD3DA,wDAAA,mBAAAyhB,gFAAA;MAAA,MAAAvD,WAAA,GAAAle,2DAAA,CAAAuhB,IAAA;MAAA,MAAA1B,QAAA,GAAA3B,WAAA,CAAApC,SAAA;MAAA,MAAA4F,OAAA,GAAA1hB,2DAAA;MAAA,OAASA,yDAAA,CAAA0hB,OAAA,CAAArD,iBAAA,CAAAwB,QAAA,CAAuB;IAAA,EAAC;IAElD7f,uDAAA,uBAE4E;IAC5EA,4DAAA,cAA4B;IACHA,wDAAA,uBAAA2hB,kFAAA1a,MAAA;MAAA,MAAAiX,WAAA,GAAAle,2DAAA,CAAAuhB,IAAA;MAAA,MAAA1B,QAAA,GAAA3B,WAAA,CAAApC,SAAA;MAAA,MAAA8F,OAAA,GAAA5hB,2DAAA;MAAA,OAAaA,yDAAA,CAAA4hB,OAAA,CAAApD,WAAA,CAAAvX,MAAA,EAAA4Y,QAAA,CAAyB;IAAA,EAAC,wBAAAgC,mFAAA5a,MAAA;MAAA,MAAAiX,WAAA,GAAAle,2DAAA,CAAAuhB,IAAA;MAAA,MAAA1B,QAAA,GAAA3B,WAAA,CAAApC,SAAA;MAAA,MAAAgG,OAAA,GAAA9hB,2DAAA;MAAA,OAC3CA,yDAAA,CAAA8hB,OAAA,CAAAnD,gBAAA,CAAA1X,MAAA,EAAA4Y,QAAA,CAA8B;IAAA,EADa,mBAAAkC,8EAAA9a,MAAA;MAAA,MAAAiX,WAAA,GAAAle,2DAAA,CAAAuhB,IAAA;MAAA,MAAA1B,QAAA,GAAA3B,WAAA,CAAApC,SAAA;MAAA,MAAAkG,OAAA,GAAAhiB,2DAAA;MAAA,OAEhDA,yDAAA,CAAAgiB,OAAA,CAAAlD,QAAA,CAAA7X,MAAA,EAAA4Y,QAAA,CAAsB;IAAA,EAF0B;IAG5D7f,oDAAA,IACF;IAAAA,0DAAA,EAAM;IAKZA,4DAAA,eAAmB;IAEfA,wDAAA,KAAAiiB,8DAAA,kBAIM;IACNjiB,wDAAA,KAAAkiB,8DAAA,kBAIM;IAENliB,wDAAA,KAAAmiB,8DAAA,kBAIM;IAENniB,wDAAA,KAAAoiB,8DAAA,kBAIM;IAENpiB,wDAAA,KAAAqiB,8DAAA,kBAGM;IAERriB,0DAAA,EAAM;IAKVA,4DAAA,UAAI;IAEAA,gEAAA,QAA+C;IACjDA,0DAAA,EAAM;;;;;IA1DIA,uDAAA,GAAyC;IAAzCA,yDAAA,2BAAA6f,QAAA,CAAArgB,IAAA,CAAyC;IAErCQ,uDAAA,GAAuE;IAAvEA,wDAAA,YAAA8D,MAAA,CAAA0e,WAAA,CAAAC,UAAA,CAAA5C,QAAA,iCAAuE;IAI3E7f,uDAAA,GAAqE;IAArEA,wDAAA,YAAAA,6DAAA,KAAAsf,GAAA,EAAAO,QAAA,CAAAN,UAAA,EAAAM,QAAA,CAAAL,SAAA,EAAqE;IAEjExf,uDAAA,GAA4E;IAA5EA,wDAAA,eAAA6f,QAAA,CAAA6C,OAAA,mDAA4E,YAAA7C,QAAA,CAAA6C,OAAA;IAMlF1iB,uDAAA,GACF;IADEA,gEAAA,MAAA6f,QAAA,CAAAhc,WAAA,MACF;IAOgB7D,uDAAA,GAAsC;IAAtCA,wDAAA,SAAA6f,QAAA,CAAAJ,aAAA,eAAsC;IAKtCzf,uDAAA,GAAkC;IAAlCA,wDAAA,SAAA6f,QAAA,CAAAJ,aAAA,WAAkC;IAMlCzf,uDAAA,GAAsB;IAAtBA,wDAAA,SAAA6f,QAAA,CAAAlC,WAAA,CAAsB;IAMtB3d,uDAAA,GAAqB;IAArBA,wDAAA,SAAA6f,QAAA,CAAAH,UAAA,CAAqB;IAMd1f,uDAAA,GAA6D;IAA7DA,wDAAA,UAAA6f,QAAA,CAAA8C,UAAA,IAAA9C,QAAA,CAAA+C,MAAA,CAAAC,IAAA,KAAA/e,MAAA,CAAA8D,SAAA,CAA6D;IAWrF5H,uDAAA,GAA8D;IAA9DA,yDAAA,4BAAA8D,MAAA,CAAA0e,WAAA,CAAAC,UAAA,CAAA5C,QAAA,EAA8D;;;ADvHtE,IAAMld,uBAAuB,GAA7B,MAAMA,uBAAuB;EA0BlCxD,YAAsBwF,YAA0B,EAAUme,cAA8B,EAAUle,KAA0B,EAAU2L,EAAc,EAAUtH,MAAc;IAAtJ,KAAAtE,YAAY,GAAZA,YAAY;IAAwB,KAAAme,cAAc,GAAdA,cAAc;IAA0B,KAAAle,KAAK,GAALA,KAAK;IAA+B,KAAA2L,EAAE,GAAFA,EAAE;IAAsB,KAAAtH,MAAM,GAANA,MAAM;IAxBvJ,KAAArB,SAAS,GAAW,EAAE;IAM3B,KAAAmb,aAAa,GAAG,EAAE,CAAC,CAAC;IACpB,KAAAC,aAAa,GAAG,EAAE;IAClB,KAAAC,eAAe,GAAG,EAAE;IACpB,KAAApW,OAAO,GAAG,KAAK,CAAC,CAAC;IACjB,KAAAqW,cAAc,GAAG,IAAI,CAAC,CAAC;IAE/B,KAAAV,WAAW,GAAG,IAAIhH,gEAAiB,CAAgBvW,KAAK,IAAIA,KAAK,CAACke,QAAQ,EAAE;MAACC,OAAO,EAAEne,KAAK,IAAIA,KAAK,CAAC4d;IAAI,CAAC,CAAC;IAC3G,KAAAQ,cAAc,GAAG,IAAI5H,2EAAuB,EAAS;IAErD,KAAAe,WAAW,GAAY,EAAE;IAEzB,KAAA8G,iBAAiB,GAAG,EAAE;IAGtB,KAAAC,gBAAgB,GAAwB,IAAInQ,GAAG,EAAkB;IACjE,KAAAoQ,SAAS,GAAY,EAAE;IAMvB,KAAA7V,SAAS,GAAG,IAAI,CAAC/I,KAAK,CAAC0I,QAAQ,CAACM,OAAO,CAAC7I,IAAI,CAC1CwW,yCAAG,CAAC/N,KAAK,IAAI,IAAI,CAAC8V,iBAAiB,GAAG9V,KAAK,CAAC,EAC5ChE,4CAAM,CAACgE,KAAK,IAAI,CAAC,IAAI,CAACX,OAAO,IAAI,CAAC,IAAI,CAACqW,cAAc,IAAI,CAAC,IAAI,CAACJ,cAAc,CAACW,SAAS,EAAE,CAAC;IAAC;IAC3FnI,+CAAS,CAAClD,EAAE,IAAG;MACb,MAAMsL,OAAO,GAAGtL,EAAE,GAAGA,EAAE,GAAG,IAAI,CAACxQ,SAAS;MACxC,OAAO,IAAI,CAACjD,YAAY,CAACgf,sBAAsB,CAACD,OAAO,CAAC;IAC1D,CAAC,CAAC,EACFpI,+CAAS,CAAEsI,aAAa,IAAI;MAC1B,OAAO,IAAI,CAACjf,YAAY,CAACkf,8BAA8B,CAACD,aAAa,EAAE,IAAI,CAAChc,SAAS,EAAE,IAAI,CAAC2b,gBAAgB,EAAE,IAAI,CAACf,WAAW,EAAE,IAAI,CAACa,cAAc,CAAC5U,IAAI,CAAC;IAC3J,CAAC,CAAC,EACFrL,qEAAc,CAAC,IAAI,CAAC,CACrB,CAAC4B,SAAS,EAAE;EAbb;EAeAH,eAAeA,CAAA;IAEb2P,UAAU,CAAC,MAAK;MACd,IAAI,CAAC0O,cAAc,GAAG,KAAK,CAAC,CAAC;IAC/B,CAAC,EAAE,GAAG,CAAC;IAEP,IAAI,CAACJ,cAAc,CAACgB,eAAe,CAAC/e,IAAI,CAAC3B,qEAAc,CAAC,IAAI,CAAC,CAAC,CAAC4B,SAAS,CAACtF,OAAO,IAAG;MACjF,MAAMqkB,KAAK,GAAGrkB,OAAO,GAAGA,OAAO,CAACqkB,KAAK,GAAG,MAAM;MAC9C,IAAI,CAACC,mBAAmB,CAACD,KAAK,CAAC;IACjC,CAAC,CAAC;IAEF,IAAI,CAACpf,YAAY,CAACsf,SAAS,CAAClf,IAAI,CAAC3B,qEAAc,CAAC,IAAI,CAAC,CAAC,CAAC4B,SAAS,CAACkf,MAAM,IAAG;MACxE;MACA;MACA;MACA,IAAI,CAACb,cAAc,CAAC5U,IAAI,GAAG,IAAI,CAAC,CAAC;MACjC,IAAI,CAAC4U,cAAc,CAAC5U,IAAI,GAAGyV,MAAM;MACjC,IAAI,CAACC,YAAY,EAAE;IACrB,CAAC,CAAC;IAEF,IAAI,CAACxf,YAAY,CAACyf,kBAAkB,CAACrf,IAAI,CAAC3B,qEAAc,CAAC,IAAI,CAAC,CAAC,CAAC4B,SAAS,CAACC,KAAK,IAAG;MAChF,IAAI,CAACof,iBAAiB,GAAGpf,KAAK;IAChC,CAAC,CAAC;IAEF,IAAI,CAACN,YAAY,CAACG,YAAY,CAACC,IAAI,CAAC3B,qEAAc,CAAC,IAAI,CAAC,CAAC,CAAC4B,SAAS,CAACC,KAAK,IAAG;MAC1E,IAAI,CAACqf,WAAW,GAAGrf,KAAK;IAC1B,CAAC,CAAC;IAEF,IAAI,CAACN,YAAY,CAAC4f,YAAY,CAACxf,IAAI,CAAC3B,qEAAc,CAAC,IAAI,CAAC,CAAC,CAAC4B,SAAS,CAACkf,MAAM,IAAG;MAC3E,IAAI,CAAC1H,WAAW,GAAG0H,MAAM;IAC3B,CAAC,CAAC;IAEF,IAAI,CAAC3a,KAAK,CAACib,aAAa,CAACzf,IAAI,CAAC3B,qEAAc,CAAC,IAAI,CAAC,CAAC,CAAC4B,SAAS,CAACyJ,IAAI,IAAG;MACnE,IAAI,CAAC0V,YAAY,EAAE;IACrB,CAAC,CAAC;IAEF9I,gDAAS,CAACoJ,MAAM,EAAE,QAAQ,CAAC,CAAC1f,IAAI,CAAC3B,qEAAc,CAAC,IAAI,CAAC,CAAC,CAAC4B,SAAS,CAAC,MAAK;MACpE,IAAI,CAACmf,YAAY,EAAE;IACrB,CAAC,CAAC;IAEF,IAAI,CAACxf,YAAY,CAAC+f,kBAAkB,CAAC3f,IAAI,CAAC3B,qEAAc,CAAC,IAAI,CAAC,CAAC,CAAC4B,SAAS,CAAC2f,MAAM,IAAG;MACjF,IAAI,CAACpB,gBAAgB,GAAGoB,MAAM;IAChC,CAAC,CAAC;IAEF,IAAI,CAAChgB,YAAY,CAACigB,cAAc,CAAC7f,IAAI,CACnCuW,+CAAS,CAACuJ,SAAS,IAAG;MACpB,IAAI,CAACC,oBAAoB,CAACD,SAAS,CAAC;MACpC,OAAO,IAAI,CAAClgB,YAAY,CAACogB,mBAAmB,CAACF,SAAS,EAAE,IAAI,CAACxB,cAAc,CAAC5U,IAAI,CAAC;IACnF,CAAC,CAAC,EACFrL,qEAAc,CAAC,IAAI,CAAC,CACrB,CAAC4B,SAAS,CAAC,CAAC,CAACC,KAAK,EAAE+f,cAAc,EAAEL,MAAM,CAAC,KAAI;MAC9C,IAAI,CAAChgB,YAAY,CAACsgB,qBAAqB,CAAChgB,KAAK,EAAE+f,cAAc,CAAC;MAC9D,IAAI,CAACrgB,YAAY,CAACugB,mBAAmB,CAACjgB,KAAK,EAAE0f,MAAM,CAAC;IACtD,CAAC,CAAC;EAEJ;EAEAX,mBAAmBA,CAACD,KAAa;IAC/B,IAAI,CAACpf,YAAY,CAACwgB,iBAAiB,CAACpB,KAAK,CAAC,CAAChf,IAAI,CAC7CwW,yCAAG,CAAC6J,OAAO,IAAI,IAAI,CAACzgB,YAAY,CAAC0gB,WAAW,CAACD,OAAO,CAAC,CAAC,EACtD9J,+CAAS,CAAC,MAAK;MACb,MAAMoI,OAAO,GAAG,IAAI,CAACJ,iBAAiB,GAAG,IAAI,CAACA,iBAAiB,GAAG,IAAI,CAAC1b,SAAS;MAChF,OAAO,IAAI,CAACjD,YAAY,CAACgf,sBAAsB,CAACD,OAAO,CAAC;IAC1D,CAAC,CAAC,EACFpI,+CAAS,CAACrW,KAAK,IAAI,IAAI,CAACN,YAAY,CAAC2gB,SAAS,CAACrgB,KAAK,EAAE,IAAI,CAAC2C,SAAS,EAAE,IAAI,CAAC4a,WAAW,EAAE,IAAI,CAACe,gBAAgB,CAAC,CAAC,CAChH,CAACve,SAAS,EAAE;EACf;EAEA;EACAoa,yBAAyBA,CAACna,KAAY;IACpC,IAAI,CAACA,KAAK,CAACue,SAAS,IAAIve,KAAK,CAACue,SAAS,CAAC9Z,MAAM,KAAK,CAAC,EAAE;MACpD,OAAO,KAAK;;IAEd,MAAMkZ,MAAM,GAAG3d,KAAK,CAAC2d,MAAM;IAC3B,OAAO,CAAC,CAACA,MAAM,CAACO,QAAQ,IAAIP,MAAM,CAACO,QAAQ,CAACzQ,IAAI,CAAC6S,OAAO,IAAIA,OAAO,KAAKtgB,KAAK,IAAI,IAAI,CAACN,YAAY,CAAC6gB,aAAa,CAACD,OAAO,CAAC,CAAC;EAC5H;EAGAE,sBAAsBA,CAACZ,SAAgB;IACrC,IAAI,CAAClgB,YAAY,CAAC+gB,aAAa,CAACb,SAAS,CAAC;EAC5C;EAEAc,WAAWA,CAAA;IACTC,YAAY,CAAC,IAAI,CAACC,aAAa,CAAC;EAClC;EAEAxH,iBAAiBA,CAACwG,SAAgB;IAChC,MAAMiB,KAAK,GAAGjB,SAAS,CAACpgB,WAAW,KAAK,iBAAiB;IACzD,MAAMshB,QAAQ,GAAG,IAAI,CAACphB,YAAY,CAAC6gB,aAAa,CAACX,SAAS,CAAC;IAC3D;IACA;IACA,MAAMtF,UAAU,GAAG,CAACsF,SAAS,CAACtF,UAAU;IACxC,IAAI,CAACyG,wBAAwB,CAACnB,SAAS,EAAEtF,UAAU,CAAC;EACtD;EAEQyG,wBAAwBA,CAAC/gB,KAAY,EAAEsa,UAAmB;IAChE,IAAIA,UAAU,EAAE;MACd,IAAI,CAAC0G,uBAAuB,CAAChhB,KAAK,CAAC;KACpC,MAAM;MACL,IAAI,CAACihB,yBAAyB,CAACjhB,KAAK,CAAC;;EAEzC;EAEA+W,kBAAkBA,CAACmK,QAAe;IAChC,IAAI,CAACC,sBAAsB,CAAC,IAAI,CAAC/C,cAAc,CAAC5U,IAAI,CAAC;IACrD,IAAI,CAAC4X,gBAAgB,CAACF,QAAQ,EAAE,IAAI,CAAC9C,cAAc,CAAC5U,IAAI,CAAC;IACzD0X,QAAQ,CAAC5G,UAAU,GAAG,IAAI;IAC1B;IACA,IAAI,CAACiD,WAAW,CAAC8D,mBAAmB,CAACH,QAAQ,CAAC;IAC9C;IACA,IAAI,CAAC3D,WAAW,CAAC+D,MAAM,CAACJ,QAAQ,CAAC;IACjC,IAAI,CAACK,iBAAiB,CAACL,QAAQ,CAAC;IAEhC,IAAI,CAACM,YAAY,CAACN,QAAQ,CAAC;IAC3B,MAAMO,eAAe,GAAG,IAAI,CAAC/hB,YAAY,CAAC6gB,aAAa,CAACW,QAAQ,CAAC,IAAIA,QAAQ,CAACxD,UAAU,GAAG,EAAE,GAAGwD,QAAQ,CAACtD,IAAI;IAC7G,IAAI,CAAChW,OAAO,GAAG,IAAI;IACnB,IAAI,CAACjI,KAAK,CAAC4L,GAAG,CAAC,QAAQ,EAAEkW,eAAe,CAAC;IACzC,IAAI,CAAC7Z,OAAO,GAAG,KAAK;IAEpB,MAAM2W,SAAS,GAAG2C,QAAQ,CAAC3C,SAAS,GAAG2C,QAAQ,CAAC3C,SAAS,GAAG,EAAE;IAC9D,IAAI,CAAC7e,YAAY,CAACgiB,OAAO,CAAC,IAAI,CAAC/e,SAAS,EAAE4b,SAAS,CAAC;IAEpD,IAAI,CAAC7e,YAAY,CAACgf,sBAAsB,CAACwC,QAAQ,CAACtD,IAAI,CAAC,CAAC9d,IAAI,CAAC3B,qEAAc,CAAC,IAAI,CAAC,CAAC,CAAC4B,SAAS,CAAC2D,MAAM,IAAG;MACpG,IAAI,CAAChE,YAAY,CAACsgB,qBAAqB,CAACkB,QAAQ,EAAExd,MAAM,CAAC;IAC3D,CAAC,CAAC;EAEJ;EAGQsd,uBAAuBA,CAAChhB,KAAY;IAC1C;IACA,IAAI,CAACmhB,sBAAsB,CAAC,IAAI,CAAC/C,cAAc,CAAC5U,IAAI,CAAC;IACrD,IAAI,CAAC4X,gBAAgB,CAACphB,KAAK,EAAE,IAAI,CAACoe,cAAc,CAAC5U,IAAI,CAAC;IACtD,IAAI,CAACmY,oBAAoB,CAAC3hB,KAAK,EAAE,IAAI,CAAC;IACtC,IAAI,CAACuhB,iBAAiB,CAACvhB,KAAK,CAAC;IAC7B,IAAI,CAACwhB,YAAY,CAACxhB,KAAK,CAAC;IACxB,IAAI,CAAC4hB,iBAAiB,CAAC5hB,KAAK,CAAC;EAC/B;EAGQihB,yBAAyBA,CAACjhB,KAAY;IAC5C;IAEA;IACA,IAAIA,KAAK,CAACR,WAAW,KAAK,iBAAiB,EAAE;IAE7C,IAAI,CAAC4hB,gBAAgB,CAACphB,KAAK,EAAE,IAAI,CAACoe,cAAc,CAAC5U,IAAI,CAAC;IACtD,IAAI,CAACmY,oBAAoB,CAAC3hB,KAAK,EAAE,KAAK,CAAC;IACvC,IAAI,CAAC6hB,oCAAoC,CAAC7hB,KAAK,CAAC;IAChD,IAAI,CAAC8hB,oCAAoC,CAAC9hB,KAAK,CAAC;EAClD;EAEQ2hB,oBAAoBA,CAAC3hB,KAAY,EAAEsa,UAAmB;IAC5D;IACA,IAAIta,KAAK,CAACR,WAAW,KAAK,iBAAiB,EAAE;MAC3C,IAAI,CAAC+d,WAAW,CAACwE,WAAW,EAAE;;IAGhC,IAAIzH,UAAU,EAAE;MACdta,KAAK,CAACsa,UAAU,GAAG,IAAI;MACvB,IAAI,CAACkG,sBAAsB,CAACxgB,KAAK,CAAC;MAClC,IAAI,CAACud,WAAW,CAACyE,MAAM,CAAChiB,KAAK,CAAC;KAC/B,MAAM;MACLA,KAAK,CAACsa,UAAU,GAAG,KAAK;MACxB,IAAI,CAACiD,WAAW,CAACyE,MAAM,CAAChiB,KAAK,CAAC;MAC9B,IAAI,CAACud,WAAW,CAAC8D,mBAAmB,CAACrhB,KAAK,CAAC;MAC3C,IAAI,CAACN,YAAY,CAACgf,sBAAsB,CAAC1e,KAAK,CAAC2d,MAAM,CAACC,IAAI,CAAC,CAAC9d,IAAI,CAAC3B,qEAAc,CAAC,IAAI,CAAC,CAAC,CAAC4B,SAAS,CAAC2D,MAAM,IAAG;QACxG,IAAI,CAAChE,YAAY,CAACuiB,aAAa,CAACve,MAAM,CAAC;MACzC,CAAC,CAAC;;IAGJ,IAAI,CAACmc,oBAAoB,CAAC7f,KAAK,CAAC;EAClC;EAGQ6f,oBAAoBA,CAAC7f,KAAY;IACvC,IAAIA,KAAK,CAACue,SAAS,EAAE;MACnB;MACA,IAAI2D,WAAW,GAAGliB,KAAK,CAAC2d,MAAM;MAC9B;MACAuE,WAAW,CAAChE,QAAQ,EAAEvjB,OAAO,CAACwnB,UAAU,IAAG;QACzC,IAAIA,UAAU,KAAKniB,KAAK,IAAI,IAAI,CAACud,WAAW,CAACC,UAAU,CAAC2E,UAAU,CAAC,EAAE;UACnE,IAAI,CAAC5E,WAAW,CAAC6E,QAAQ,CAACD,UAAU,CAAC;UACrC,IAAI,CAAC5E,WAAW,CAAC8D,mBAAmB,CAACc,UAAU,CAAC;UAChDA,UAAU,CAAC7H,UAAU,GAAG,KAAK;;MAEjC,CAAC,CAAC;;EAEN;EAEQ8G,gBAAgBA,CAACiB,aAAoB,EAAEpD,MAAe;IAC5DA,MAAM,CAACtkB,OAAO,CAACqF,KAAK,IAAG;MACrBA,KAAK,CAACsa,UAAU,GAAG+H,aAAa,CAAC9D,SAAS,EAAE9Q,IAAI,CAACkQ,MAAM,IAAIA,MAAM,CAACC,IAAI,KAAK5d,KAAK,CAAC4d,IAAI,CAAC,IAAI,KAAK;MAC/F,IAAI5d,KAAK,CAACke,QAAQ,EAAE;QAClB,IAAI,CAACkD,gBAAgB,CAACiB,aAAa,EAAEriB,KAAK,CAACke,QAAQ,CAAC;;IAExD,CAAC,CAAC;EACJ;EAEQiD,sBAAsBA,CAAClC,MAAe;IAC5CA,MAAM,CAACtkB,OAAO,CAACqF,KAAK,IAAG;MACrBA,KAAK,CAACsa,UAAU,GAAG,KAAK;MACxB,IAAIta,KAAK,CAACke,QAAQ,EAAE;QAClB,IAAI,CAACiD,sBAAsB,CAACnhB,KAAK,CAACke,QAAQ,CAAC;;IAE/C,CAAC,CAAC;EACJ;EAEQqD,iBAAiBA,CAACvhB,KAAY;IACpC,IAAIA,KAAK,CAACR,WAAW,KAAK,iBAAiB,EAAE;MAC3C;MACA,IAAI,CAACE,YAAY,CAAC4iB,cAAc,CAAC,CAACtiB,KAAK,CAAC,CAAC;KAC1C,MAAM,IAAIA,KAAK,CAACue,SAAS,EAAE;MAC1B;MACA,IAAI,CAAC7e,YAAY,CAAC4iB,cAAc,CAAC,CAAC,GAAItiB,KAAK,CAACue,SAAU,EAAEve,KAAK,CAAC,CAAC;;EAEnE;EAEQ6hB,oCAAoCA,CAAC7hB,KAAY;IACvD,IAAIA,KAAK,CAACR,WAAW,KAAK,iBAAiB,EAAE;MAC3C,IAAI,CAACE,YAAY,CAAC4iB,cAAc,CAAC,EAAE,CAAC;KACrC,MAAM,IAAItiB,KAAK,CAACue,SAAS,EAAE9Z,MAAM,EAAE;MAClC;MACA,IAAI,CAAC8c,iBAAiB,CAACvhB,KAAK,CAACue,SAAS,CAACve,KAAK,CAACue,SAAS,CAAC9Z,MAAM,GAAG,CAAC,CAAC,CAAC;;EAEvE;EAEQqd,oCAAoCA,CAAC9hB,KAAY;IACvD;IACA,IAAI,IAAI,CAACN,YAAY,CAAC6gB,aAAa,CAACvgB,KAAK,CAAC,EAAE;MAC1C,IAAIA,KAAK,CAACR,WAAW,KAAK,iBAAiB,EAAE;QAC3C,MAAM0iB,WAAW,GAAGliB,KAAK,CAAC2d,MAAM;QAChC,MAAM4E,iBAAiB,GAAG,IAAI,CAACC,qBAAqB,CAACxiB,KAAK,CAAC;QAC3D,IAAI,CAAC2C,SAAS,GAAG4f,iBAAkB,CAAC3E,IAAI;QACxC,IAAI,CAACgE,iBAAiB,CAACM,WAAW,CAAC;OACpC,MAAM;QACL,IAAI,CAACvf,SAAS,GAAG3C,KAAK,CAAC4d,IAAI;QAC3B,IAAI,CAACgE,iBAAiB,CAAC5hB,KAAK,CAAC;;;EAGnC;EAEQwhB,YAAYA,CAACxhB,KAAY;IAC/B;IACA,IAAI,IAAI,CAACN,YAAY,CAAC6gB,aAAa,CAACvgB,KAAK,CAAC,IAAIA,KAAK,CAAC0d,UAAU,EAAE;MAC9D,IAAI,CAAC/a,SAAS,GAAG3C,KAAK,CAAC4d,IAAI;KAC5B,MAAM;MACL;MACA,MAAM2E,iBAAiB,GAAG,IAAI,CAACC,qBAAqB,CAACxiB,KAAK,CAAC;MAC3D,IAAI,CAAC2C,SAAS,GAAG4f,iBAAkB,CAAC3E,IAAI;;EAE5C;EAEQ4E,qBAAqBA,CAACxiB,KAAY;IACxC,MAAMyiB,OAAO,GAAG,CAAC,GAAGziB,KAAK,CAACue,SAAS,CAAC,CAACmE,OAAO,EAAE;IAC9C,OAAOD,OAAO,CAACE,IAAI,CAACnQ,CAAC,IAAIA,CAAC,CAACkL,UAAU,CAAC;EACxC;EAGQkE,iBAAiBA,CAAChC,SAAgB;IAExC,MAAMrB,SAAS,GAAGqB,SAAS,CAACrB,SAAS,GAAGqB,SAAS,CAACrB,SAAS,GAAG,EAAE;IAChE,IAAI,CAAC7e,YAAY,CAACgiB,OAAO,CAAC,IAAI,CAAC/e,SAAS,EAAE4b,SAAS,CAAC;IAEpD;IACA,MAAMkD,eAAe,GAAG,IAAI,CAAC/hB,YAAY,CAAC6gB,aAAa,CAACX,SAAS,CAAC,IAAIA,SAAS,CAAClC,UAAU,GAAG,EAAE,GAAGkC,SAAS,CAAChC,IAAI;IAChH,IAAI,CAAChW,OAAO,GAAG,IAAI;IACnB,IAAI,CAAC5D,MAAM,CAAC+J,QAAQ,CAAC,CAAC,gBAAgB,EAAE,IAAI,CAACpL,SAAS,CAAC,EAAE;MACvDqL,mBAAmB,EAAE,UAAU,CAAC;KACjC,CAAC,CAAC4U,IAAI,CAAC,MAAK;MACX,IAAI,CAACjjB,KAAK,CAAC4L,GAAG,CAAC,QAAQ,EAAEkW,eAAe,CAAC;MACzC,IAAI,CAAC/hB,YAAY,CAACmjB,mBAAmB,CAACjD,SAAS,CAAC;MAChD;MACA,IAAI,CAAC5b,MAAM,CAACib,MAAM,CAACnf,IAAI,CACrByE,4CAAM,CAACue,WAAW,IAAIA,WAAW,YAAYrM,2DAAa,CAAC,EAC3D3Q,2CAAI,CAAC,CAAC,CAAC,CAAC;OACT,CAAC/F,SAAS,CAAC,MAAK;QACf,IAAI,CAAC6H,OAAO,GAAG,KAAK;MACtB,CAAC,CAAC;IAEJ,CAAC,CAAC,CAACmb,KAAK,CAACC,GAAG,IAAG;MACb,MAAM,IAAIC,KAAK,CAAC,mBAAmB,EAAED,GAAG,CAAC;IAC3C,CAAC,CAAC;EACJ;EAEAE,SAASA,CAAClU,KAAa,EAAEhP,KAAY;IACnC,OAAOA,KAAK,CAAC4d,IAAI;EACnB;EAEA;;;EAGAsB,YAAYA,CAAA;IACV,MAAMiE,SAAS,GAAG,IAAI,CAAC7X,EAAE,CAACgB,aAAa,CAAC8W,gBAAgB,CAAC,gBAAgB,CAAC;IAC1ED,SAAS,CAACxoB,OAAO,CAAE+S,IAAiB,IAAI;MACtC,IAAI,CAAC2V,WAAW,CAAC3V,IAAI,CAAC;IACxB,CAAC,CAAC;EACJ;EAEA2V,WAAWA,CAAC3V,IAAiB;IAC3B,MAAM4V,IAAI,GAAG5V,IAAI,CAAC6V,aAAa,CAAC,OAAO,CAAgB;IACvD,MAAMC,SAAS,GAAGF,IAAI,CAACG,QAAQ,CAAChf,MAAM,GAAG,CAAC;IAC1C,IAAI,CAACif,oBAAoB,CAAChW,IAAI,EAAE8V,SAAS,CAAC;EAE5C;EAEAG,iBAAiBA,CAACjW,IAAiB,EAAE1N,KAAY;IAC/C,MAAMwjB,SAAS,GAAG,IAAI,CAAC9jB,YAAY,CAAC6gB,aAAa,CAACvgB,KAAK,CAAC;IACxD,OAAO,IAAI,CAAC0jB,oBAAoB,CAAChW,IAAI,EAAE8V,SAAS,CAAC;EACnD;EAGQE,oBAAoBA,CAAChW,IAAiB,EAAE8V,SAAkB;IAChE,MAAMF,IAAI,GAAG5V,IAAI,CAAC6V,aAAa,CAAC,OAAO,CAAgB;IACvD,MAAMK,KAAK,GAAGlW,IAAI,CAAC6V,aAAa,CAAC,QAAQ,CAAgB;IACzD,MAAMM,WAAW,GAAGnW,IAAI,CAACoW,WAAW,CAAC,CAAC;IACtC,MAAMC,UAAU,GAAGP,SAAS,GAAGI,KAAK,CAACI,WAAW,GAAGJ,KAAK,CAACI,WAAW,GAAG,IAAI,CAAChG,eAAe,CAAC,CAAC;IAC7FsF,IAAI,CAACrd,KAAK,CAACge,KAAK,GAAG,QAAQJ,WAAW,QAAQE,UAAU,KAAK;IAC7D,OAAOF,WAAW,GAAGE,UAAU;EACjC;EAGAnM,UAAUA,CAAC5X,KAAY;IACrB,IAAIA,KAAK,CAACsa,UAAU,IAAK,IAAI,CAACiD,WAAW,CAACC,UAAU,CAACxd,KAAK,CAAC,IAAIA,KAAK,CAACke,QAAS,EAAE;IAChFle,KAAK,CAACua,SAAS,GAAG,IAAI;EACxB;EAEAxC,eAAeA,CAAC/X,KAAY;IAC1BA,KAAK,CAACua,SAAS,GAAG,KAAK;EACzB;EAGAhB,WAAWA,CAACvX,MAAkB,EAAEhC,KAAY;IAC1C,MAAMkkB,gBAAgB,GAAIliB,MAAM,CAAC+E,MAAsB,CAACod,OAAO,CAAC,gBAAgB,CAAgB;IAChG,MAAMC,YAAY,GAAG,IAAI,CAACT,iBAAiB,CAACO,gBAAgB,EAAElkB,KAAK,CAAC;IACpE,MAAMqkB,WAAW,GAAGriB,MAAM,CAAC+E,MAAqB;IAChD,MAAMud,YAAY,GAAG,IAAI,CAACC,qBAAqB,CAACF,WAAW,EAAErkB,KAAK,CAAC;IACnE;IACAqkB,WAAW,CAACG,SAAS,CAACnV,MAAM,CAAC,eAAe,CAAC;IAC7C;IACA,IAAIiV,YAAY,GAAGF,YAAY,EAAE;MAC/B,IAAIK,gBAAgB,GAAGH,YAAY,GAAGF,YAAY;MAClD,IAAI,CAACM,eAAe,CAACL,WAAW,EAAEI,gBAAgB,CAAC;;EAEvD;EAEQF,qBAAqBA,CAACI,aAA0B,EAAE3kB,KAAY;IACpE,MAAM4kB,SAAS,GAAG,IAAI,CAACC,SAAS,CAACvY,aAAa,CAACjF,qBAAqB,EAAE,CAAC4c,KAAK,GAAG,IAAI,CAAClG,aAAa,CAAC,CAAC;IACnG,MAAM+G,sBAAsB,GAAG,IAAI,CAACC,iBAAiB,CAACzY,aAAa,CAACjF,qBAAqB,EAAE,CAAC4c,KAAK;IACjG,MAAMe,SAAS,GAAGL,aAAa,CAACX,WAAW,GAAGY,SAAS;IACvD,OAAO,IAAI,CAACllB,YAAY,CAAC6gB,aAAa,CAACvgB,KAAK,CAAC,GAAGglB,SAAS,GAAGF,sBAAsB,GAAGE,SAAS;EAChG;EAEQN,eAAeA,CAACC,aAA0B,EAAEF,gBAAwB;IAC1E;IACA,MAAM7T,QAAQ,GAAG6T,gBAAgB,GAAG,IAAI,CAAC3G,aAAa;IACtD6G,aAAa,CAAC1e,KAAK,CAACgf,UAAU,GAAG,QAAQrU,QAAQ,UAAU;IAC3D;IACA+T,aAAa,CAAC1e,KAAK,CAACqd,IAAI,GAAG,IAAImB,gBAAgB,IAAI;EACrD;EAEA/K,gBAAgBA,CAAC1X,MAAkB,EAAEhC,KAAY;IAC/C,MAAMqkB,WAAW,GAAGriB,MAAM,CAAC+E,MAAqB;IAChDsd,WAAW,CAACpe,KAAK,CAACqd,IAAI,GAAG,GAAG,CAAC,CAAC;EAChC;;EAGAzJ,QAAQA,CAAC7X,MAAkB,EAAE0L,IAAW;IACtC,MAAM2W,WAAW,GAAGriB,MAAM,CAAC+E,MAAqB;IAChD,IAAI,CAACme,aAAa,CAACb,WAAW,CAAC;IAE/B1D,YAAY,CAAC,IAAI,CAACC,aAAa,CAAC;IAEhC,IAAI,CAACA,aAAa,GAAGrR,UAAU,CAAC,MAAK;MACnC,IAAI,CAAC4V,YAAY,CAACd,WAAW,CAAC;IAChC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;EACX;EAGA;;;EAGA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEQa,aAAaA,CAAC5Z,EAAe;IACnC;IACA,MAAM8Z,SAAS,GAAG9Z,EAAE,CAAC6Y,OAAO,CAAC,oBAAoB,CAAgB;IACjEiB,SAAS,CAACZ,SAAS,CAAC7a,GAAG,CAAC,eAAe,CAAC;IACxC2B,EAAE,CAACkZ,SAAS,CAAC7a,GAAG,CAAC,eAAe,CAAC;EACnC;EAEQwb,YAAYA,CAAC7Z,EAAe;IAClC,MAAM8Z,SAAS,GAAG9Z,EAAE,CAAC6Y,OAAO,CAAC,oBAAoB,CAAgB;IACjEiB,SAAS,CAACZ,SAAS,CAACnV,MAAM,CAAC,eAAe,CAAC;IAC3C/D,EAAE,CAACkZ,SAAS,CAACnV,MAAM,CAAC,eAAe,CAAC;EACtC;EAAC,QAAA5V,CAAA;qBA5bUiE,uBAAuB,EAAA3C,+DAAA,CAAAhB,iEAAA,GAAAgB,+DAAA,CAAAG,qEAAA,GAAAH,+DAAA,CAAA+H,gFAAA,GAAA/H,+DAAA,CAAAA,qDAAA,GAAAA,+DAAA,CAAAsa,oDAAA;EAAA;EAAA,QAAA3b,EAAA;UAAvBgE,uBAAuB;IAAAtC,SAAA;IAAA2J,SAAA,WAAAugB,8BAAA7pB,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;0EAIK0a,qDAAU;0EAClBA,qDAAU;;;;;;;;;;;;;;;;;QCxB3Cpb,4DAAA,aAA8B;QAC5BA,wDAAA,IAAAwqB,sCAAA,iBAqBM;QAENxqB,4DAAA,aAA2B;QAGvBA,wDAAA,IAAAyqB,gDAAA,6BAgDgB;QAGhBzqB,wDAAA,IAAA0qB,uDAAA,oCAgEuB;QACzB1qB,0DAAA,EAAW;;;QA9ImBA,uDAAA,GAAiC;QAAjCA,wDAAA,SAAAW,GAAA,CAAA6b,WAAA,CAAA9S,MAAA,KAAiC;QAwBrD1J,uDAAA,GAA6B;QAA7BA,wDAAA,eAAAW,GAAA,CAAA0iB,cAAA,CAA6B,gBAAA1iB,GAAA,CAAA6hB,WAAA,aAAA7hB,GAAA,CAAAwnB,SAAA;QAqDYnoB,uDAAA,GAA2B;QAA3BA,wDAAA,uBAAAW,GAAA,CAAAgE,YAAA,CAAAohB,QAAA,CAA2B;;;;;;;AD3DrEpjB,uBAAuB,GAAA4C,kDAAA,EADnCpC,mEAAY,EAAE,GACFR,uBAAuB,CA6bnC;;;;;;;;;;;;;;;;AEhd6D;AACzB;AAErC,MAAMioB,WAAW,GAAG,yCAAyC;AAGtD,MAAM3sB,WAAW,GAAkBA,CAACwB,KAAK,EAAEmF,KAAK,KAAI;EACzD,MAAMqE,MAAM,GAAW0hB,qDAAM,CAAC5gB,mDAAM,CAAC;EACrC,MAAM;IAAC8gB,QAAQ;IAAEC;EAAW,CAAC,GAAGrrB,KAAK;EACrC,IAAI2J,MAAM,GAAG;IAAC,GAAG0hB;EAAW,CAAW;EACvC,IAAI1S,EAAE,GAAG,cAAc,CAAC,CAAC;EAEzB,IAAIyS,QAAQ,EAAE;IACZ,MAAMzV,KAAK,GAAGyV,QAAQ,CAACzV,KAAK,CAACwV,WAAW,CAAC;IACzC,IAAIxV,KAAK,IAAIA,KAAK,CAAC2V,MAAM,IAAI3V,KAAK,CAAC2V,MAAM,CAAC,IAAI,CAAC,EAAE;MAC/C,IAAI3V,KAAK,CAAC2V,MAAM,CAAC,IAAI,CAAC,EAAE;QACtB3S,EAAE,GAAGhD,KAAK,CAAC2V,MAAM,CAAC,IAAI,CAAC;;MAEzB,IAAI3V,KAAK,CAAC2V,MAAM,CAAC,QAAQ,CAAC,EAAE;QAC1B3V,KAAK,CAAC2V,MAAM,CAAC,QAAQ,CAAC,CACnBxhB,KAAK,CAAC,GAAG,CAAC,CACV+G,GAAG,CAAC0a,KAAK,IAAIA,KAAK,CAACzhB,KAAK,CAAC,GAAG,CAAC,CAAC,CAC9B3J,OAAO,CAAC,CAAC,CAACpC,GAAG,EAAEgQ,KAAK,CAAC,KAAI;UACxBpE,MAAM,CAAC5L,GAAG,CAAC,GAAGgQ,KAAK,IAAI,IAAI;QAC7B,CAAC,CAAC;;;IAGR,OAAOvE,MAAM,CAAC+J,QAAQ,CAAC,CAAC,gBAAgB,EAAEoF,EAAE,CAAC,EAAE;MAACyS,QAAQ,EAAE1tB,SAAS;MAAE2tB,WAAW,EAAE1hB;IAAM,CAAC,CAAC;;EAG5F,OAAOH,MAAM,CAAC+J,QAAQ,CAAC,CAAC,gBAAgB,EAAEoF,EAAE,CAAC,CAAC,CAAC,CAAC;AAClD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtBuB;AACG;AACmC;AAKS;AACE;;;;;;;;;;;;;;;;ICVjEpY,4DAAA,gBAAqD;IAAAA,oDAAA,GAAkB;IAAAA,0DAAA,EAAY;;;;IAA9BA,uDAAA,GAAkB;IAAlBA,+DAAA,CAAAuE,MAAA,CAAA+mB,YAAA,CAAkB;;;;;IAOnEtrB,4DAAA,2BACoC;IAAAA,oDAAA,GACpC;IAAAA,0DAAA,EAAmB;;;;;IAFwDA,wDAAA,UAAAurB,OAAA,CAAA/rB,IAAA,CAAmB,YAAAgsB,IAAA;IAC1DxrB,uDAAA,GACpC;IADoCA,gEAAA,KAAAurB,OAAA,CAAAE,OAAA,MACpC;;;;;;IAIJzrB,4DAAA,yBAAoE;IACvBA,wDAAA,oBAAA0rB,gGAAAzkB,MAAA;MAAAjH,2DAAA,CAAA2rB,GAAA;MAAA,MAAA5P,MAAA,GAAA/b,2DAAA;MAAA,OAAUA,yDAAA,CAAA+b,MAAA,CAAA6P,YAAA,CAAA3kB,MAAA,CAAoB;IAAA,EAAC;IACxEjH,4DAAA,mBAA8B;IAAAA,oDAAA,aAAM;IAAAA,0DAAA,EAAW;IAEjDA,4DAAA,eAAU;IAAQA,oDAAA,qDAA8C;IAAAA,0DAAA,EAAS;;;IAHGA,uDAAA,GAAgB;IAAhBA,wDAAA,mBAAgB;;;;;IAa9FA,4DAAA,yBAAuE;IAC1DA,oDAAA,kCAA2B;IAAAA,0DAAA,EAAY;IAClDA,uDAAA,mBAAwD;IACxDA,4DAAA,eAAU;IAAQA,oDAAA,2CAAoC;IAAAA,0DAAA,EAAS;;;;;IAGjEA,4DAAA,yBAAmE;IACtDA,oDAAA,UAAG;IAAAA,0DAAA,EAAY;IAC1BA,uDAAA,gBAAsC;IACtCA,4DAAA,eAAU;IAAQA,oDAAA,wDAAiD;IAAAA,0DAAA,EAAS;;;;;IAmB5EA,uDAAA,sBAAqF;;;ADrCzF,MAAO4B,+BAA+B;EAe1CzC,YAAoB0sB,iBAAoC,EAAUC,SAAwD,EAAUC,EAAe,EAAkCtd,IAEpL;IAFmB,KAAAod,iBAAiB,GAAjBA,iBAAiB;IAA6B,KAAAC,SAAS,GAATA,SAAS;IAAyD,KAAAC,EAAE,GAAFA,EAAE;IAA+C,KAAAtd,IAAI,GAAJA,IAAI;IAZzL,KAAAjP,IAAI,GAAG,IAAIyrB,uDAAW,CAAC,EAAE,EAAE,CAACC,sDAAU,CAACc,QAAQ,EAAEd,sDAAU,CAACe,OAAO,CAAC,2BAA2B,CAAC,CAAC,CAAC;IAElG,KAAAX,YAAY,GAAG,EAAE;IACjB,KAAAY,KAAK,GAAG,MAAM,CAAC,CAAC;IAChB,KAAAC,aAAa,GAAG,MAAM,CAAC,CAAC;IACxB,KAAAC,aAAa,GAAY,KAAK;IAE9B,KAAAC,KAAK,GAAG,CACN;MAAC,MAAM,EAAE,MAAM;MAAE,SAAS,EAAE;IAAM,CAAC,EACnC;MAAC,MAAM,EAAE,SAAS;MAAE,SAAS,EAAE;IAAc,CAAC,EAC9C;MAAC,MAAM,EAAE,KAAK;MAAE,SAAS,EAAE;IAAK,CAAC,CAAC;IAuBpC,KAAAC,kBAAkB,GAAiBC,OAAwB,IAA6B;MACtF,MAAMC,SAAS,GAAGD,OAAO,CAAC/e,KAAK,CAACif,IAAI;MACpC,MAAMC,YAAY,GAAGH,OAAO,CAAC/e,KAAK,CAACie,OAAO;MAC1C,MAAMkB,QAAQ,GAAGJ,OAAO,CAAC/e,KAAK,CAACof,GAAG;MAClC,MAAMC,gBAAgB,GAAGN,OAAO,CAAC/e,KAAK,CAACsf,WAAW;MAClD,IAAIN,SAAS,IAAIE,YAAY,IAAIC,QAAQ,IAAIE,gBAAgB,EAAE;QAC7D,OAAO,IAAI;OACZ,MAAM;QACL,OAAO;UAACE,OAAO,EAAE;QAAI,CAAC;;IAE1B,CAAC;IA5BC,IAAI,CAACC,YAAY,GAAG,IAAI,CAACjB,EAAE,CAACnuB,KAAK,CAAC;MAChCuuB,aAAa,EAAE,CAAC,EAAE,CAAC;MACnBM,IAAI,EAAE,CAAC,EAAE,CAAC;MACVhB,OAAO,EAAE,CAAC,EAAE,CAAC;MACbmB,GAAG,EAAE,CAAC,EAAE,CAAC;MACTE,WAAW,EAAE,CAAC,EAAE;KACjB,EAAE;MAACG,UAAU,EAAE,IAAI,CAACX;IAAkB,CAAC,CAAC;IAEzCpX,2CAAK,CAAC,IAAI,CAAC1V,IAAI,CAAC0tB,aAAa,EAAE,IAAI,CAAC1tB,IAAI,CAAC2tB,YAAY,CAAC,CACnDpoB,IAAI,CAAComB,8EAAkB,EAAE,CAAC,CAC1BnmB,SAAS,CAAC,MAAM,IAAI,CAACooB,kBAAkB,EAAE,CAAC;EAC/C;EAGAC,QAAQA,CAAA;IACN,IAAI,CAACxkB,EAAE,GAAG,IAAI,CAAC4F,IAAI,CAAC5F,EAAE;EACxB;EAcAukB,kBAAkBA,CAAA;IAChB,IAAI,IAAI,CAAC5tB,IAAI,CAAC8tB,QAAQ,CAAC,UAAU,CAAC,EAAE;MAClC,IAAI,CAAChC,YAAY,GAAG,uBAAuB;KAC5C,MAAM,IAAI,IAAI,CAAC9rB,IAAI,CAAC8tB,QAAQ,CAAC,SAAS,CAAC,EAAE;MACxC,IAAI,CAAChC,YAAY,GAAG,+BAA+B;KACpD,MAAM;MACL,IAAI,CAACA,YAAY,GAAG,EAAE;;EAE1B;EAEAiC,WAAWA,CAACtmB,MAAyB;IACnC,IAAI,CAACilB,KAAK,GAAGjlB,MAAM,CAACumB,GAAG,CAACC,cAAc;EACxC;EAEAC,YAAYA,CAACzmB,MAAsB;IACjC,IAAI,CAACklB,aAAa,GAAGllB,MAAM,CAACuG,KAAK;EACnC;EAEAoe,YAAYA,CAAC3kB,MAAa;IACxB,MAAM0mB,YAAY,GAAG1mB,MAAM,CAAC+E,MAA0B;IACtD,IAAI2hB,YAAY,CAACC,KAAK,IAAID,YAAY,CAACC,KAAK,CAAClkB,MAAM,EAAE;MACnD,MAAMmkB,IAAI,GAAGF,YAAY,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;MACpC,IAAI,CAACZ,YAAY,CAACc,UAAU,CAAC;QAACrB,IAAI,EAAEoB;MAAI,CAAC,CAAC;;EAE9C;EAEAE,MAAMA,CAAA;IACJ,IAAI,CAAC3B,aAAa,GAAG,IAAI;IACzB,MAAM4B,SAAS,GAAG,IAAI,CAACC,SAAS,EAAE;IAClC,IAAID,SAAS,EAAE;MACb,IAAI,CAACnC,iBAAiB,CAACqC,uBAAuB,CAAC,IAAI,CAAC1uB,IAAI,CAACgO,KAAM,EAAEwgB,SAAS,CAACpB,GAAI,EAAEoB,SAAS,CAACvC,OAAQ,EAAE,IAAI,CAAC5iB,EAAE,CAAC,CAAC7D,SAAS,CAAE2D,MAAM,IAAI;QACjI,IAAI,CAACkjB,iBAAiB,CAACsC,2BAA2B,CAACxlB,MAAM,CAACylB,WAAW,EAAE,IAAI,CAACvlB,EAAE,EAAEF,MAAM,CAACylB,WAAW,CAACrU,QAAQ,CAAC;QAC5G,IAAI,CAACnF,KAAK,GAAGjM,MAAM,CAACiM,KAAK;QACzB,IAAI,CAACwX,aAAa,GAAG,KAAK;QAC1B,IAAI,CAACN,SAAS,CAAC7c,KAAK,EAAE;MACxB,CAAC,CAAC;;EAEN;EAEQgf,SAASA,CAAA;IACf,MAAMI,KAAK,GAAG,IAAIhD,kEAAa,EAAE;IACjC,MAAMiD,SAAS,GAAG,IAAI,CAACtB,YAAY,CAACxf,KAAK;IAEzC,IAAI,IAAI,CAAC0e,KAAK,KAAK,MAAM,EAAE;MACzBmC,KAAK,CAACzB,GAAG,GAAG,IAAI,CAACf,iBAAiB,CAAC0C,UAAU,GAAG,IAAI,CAACpC,aAAa;MAClEkC,KAAK,CAAC5C,OAAO,GAAG6C,SAAS,CAAC,IAAI,CAACnC,aAAa,CAAC;MAC7C,IAAI,IAAI,CAACA,aAAa,KAAK,IAAI,CAACE,KAAK,CAAC,CAAC,CAAC,CAAC7sB,IAAI,EAAE;QAAE;QAC/C6uB,KAAK,CAAC5C,OAAO,GAAG,IAAI,CAAC+C,eAAe,CAACF,SAAS,CAAC7B,IAAI,CAAC;;;IAIxD,IAAI,IAAI,CAACP,KAAK,KAAK,UAAU,EAAE;MAC7BmC,KAAK,CAACzB,GAAG,GAAG,IAAI,CAACf,iBAAiB,CAAC4C,mBAAmB;MACtDJ,KAAK,CAAC5C,OAAO,GAAG6C,SAAS,CAACxB,WAAW;;IAEvC,OAAOuB,KAAK;EACd;EAEQG,eAAeA,CAACE,WAA0B;IAChD,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,EAAE;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEH,WAAW,CAAC;IACpC,OAAOC,QAAQ;EACjB;EAAC,QAAAjwB,CAAA;qBA9GUkD,+BAA+B,EAAA5B,+DAAA,CAAAhB,2EAAA,GAAAgB,+DAAA,CAAAG,kEAAA,GAAAH,+DAAA,CAAA+H,uDAAA,GAAA/H,+DAAA,CAemHorB,qEAAe;EAAA;EAAA,QAAAzsB,EAAA;UAfjKiD,+BAA+B;IAAAvB,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAA6E,MAAA;IAAA5E,QAAA,WAAAwuB,yCAAAtuB,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCzB5CV,4DAAA,YAAqB;QAAAA,oDAAA,yBAAkB;QAAAA,0DAAA,EAAK;QAC5CA,4DAAA,yBAAoB;QAIDA,oDAAA,WAAI;QAAAA,0DAAA,EAAY;QAC3BA,4DAAA,eAA4E;QAAvCA,wDAAA,kBAAAivB,+DAAA;UAAA,OAAQtuB,GAAA,CAAAysB,kBAAA,EAAoB;QAAA,EAAC;QAAlEptB,0DAAA,EAA4E;QAC5EA,wDAAA,IAAAkvB,oDAAA,uBAAmF;QACrFlvB,0DAAA,EAAiB;QAEnBA,4DAAA,wBAAyD;QAA1CA,wDAAA,+BAAAmvB,qFAAAloB,MAAA;UAAA,OAAqBtG,GAAA,CAAA4sB,WAAA,CAAAtmB,MAAA,CAAmB;QAAA,EAAC;QACtDjH,4DAAA,kBAAsD;QAEjCA,wDAAA,oBAAAovB,4EAAAnoB,MAAA;UAAA,OAAUtG,GAAA,CAAA+sB,YAAA,CAAAzmB,MAAA,CAAoB;QAAA,EAAC;QAC9CjH,wDAAA,KAAAqvB,4DAAA,8BAEmB;QACrBrvB,0DAAA,EAAkB;QAGpBA,wDAAA,KAAAsvB,0DAAA,4BAKiB;QASjBtvB,wDAAA,KAAAuvB,0DAAA,4BAIiB;QAEjBvvB,wDAAA,KAAAwvB,0DAAA,4BAIiB;QAEnBxvB,0DAAA,EAAU;QACVA,4DAAA,kBAAsE;QAEvDA,oDAAA,WAAG;QAAAA,0DAAA,EAAY;QAC1BA,uDAAA,iBAA8C;QAC9CA,4DAAA,gBAAU;QAAQA,oDAAA,yDAAiD;QAAAA,0DAAA,EAAS;QAIlFA,4DAAA,8BAAgC;QAC2BA,oDAAA,aAAK;QAAAA,0DAAA,EAAS;QACvEA,4DAAA,kBAEyC;QAAnBA,wDAAA,mBAAAyvB,kEAAA;UAAA,OAAS9uB,GAAA,CAAAotB,MAAA,EAAQ;QAAA,EAAC;QACtC/tB,4DAAA,eAAwB;QACtBA,oDAAA,gBACA;QAAAA,wDAAA,KAAA0vB,uDAAA,0BAAqF;QACvF1vB,0DAAA,EAAM;;;;;QA7DNA,uDAAA,GAA0B;QAA1BA,wDAAA,cAAAW,GAAA,CAAAqsB,YAAA,CAA0B;QAIVhtB,uDAAA,GAAoB;QAApBA,wDAAA,gBAAAW,GAAA,CAAAnB,IAAA,CAAoB;QACxBQ,uDAAA,GAAuC;QAAvCA,wDAAA,UAAAsG,OAAA,GAAA3F,GAAA,CAAAqsB,YAAA,CAAA7mB,GAAA,2BAAAG,OAAA,CAAAymB,OAAA,CAAuC;QAOG/sB,uDAAA,GAAU;QAAVA,wDAAA,YAAAW,GAAA,CAAA0rB,KAAA,CAAU;QAM/CrsB,uDAAA,GAA8B;QAA9BA,wDAAA,SAAAW,GAAA,CAAAwrB,aAAA,YAA8B;QAc9BnsB,uDAAA,GAAiC;QAAjCA,wDAAA,SAAAW,GAAA,CAAAwrB,aAAA,eAAiC;QAMjCnsB,uDAAA,GAA6B;QAA7BA,wDAAA,SAAAW,GAAA,CAAAwrB,aAAA,WAA6B;QAkBxCnsB,uDAAA,IAAuE;QAAvEA,wDAAA,aAAAW,GAAA,CAAAqsB,YAAA,CAAAD,OAAA,OAAA4C,OAAA,GAAAhvB,GAAA,CAAAqsB,YAAA,CAAA7mB,GAAA,2BAAAwpB,OAAA,CAAA5C,OAAA,EAAuE;QAIzB/sB,uDAAA,GAAmB;QAAnBA,wDAAA,SAAAW,GAAA,CAAAyrB,aAAA,CAAmB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9DmC;AACR;AAOI;;;;;;;;;;;;;;;;;ICP5GpsB,4DAAA,cAA+B;IAE3BA,uDAAA,sBAA2C;IAC7CA,0DAAA,EAAM;IACNA,4DAAA,cAAkB;IAAAA,oDAAA,GAAU;IAAAA,0DAAA,EAAM;IAClCA,4DAAA,cAAkB;IAChBA,uDAAA,sBAA2C;IAC7CA,0DAAA,EAAM;;;;IAHYA,uDAAA,GAAU;IAAVA,+DAAA,CAAA8vB,OAAA,CAAU;;;;;IAoB1B9vB,gEAAA,GAAiG;;;;;IAYjGA,gEAAA,GAAqG;;;;;IAS7FA,uDAAA,sBACwG;;;;;;;;;;;IAP9GA,4DAAA,wBAAiF;IAEvEA,wDAAA,mBAAA+vB,uEAAA;MAAA,MAAA7R,WAAA,GAAAle,2DAAA,CAAAgwB,IAAA;MAAA,MAAAC,WAAA,GAAA/R,WAAA,CAAApC,SAAA;MAAA,MAAA9V,OAAA,GAAAhG,2DAAA;MAAA,OAASA,yDAAA,CAAAgG,OAAA,CAAAiU,cAAA,CAAAgW,WAAA,CAAAzwB,IAAA,CAA6B;IAAA,EAAC;IAE7CQ,4DAAA,cAA2B;IACnBA,oDAAA,GAAmB;IAAAA,0DAAA,EAAO;IAChCA,wDAAA,IAAAkwB,4DAAA,0BACwG;IAC1GlwB,0DAAA,EAAM;;;;;IALAA,uDAAA,GAAsE;IAAtEA,wDAAA,YAAAA,6DAAA,IAAAmwB,GAAA,GAAAC,MAAA,CAAAC,eAAA,kBAAAD,MAAA,CAAAC,eAAA,CAAA7wB,IAAA,MAAAywB,WAAA,CAAAzwB,IAAA,EAAsE;IAEpEQ,uDAAA,GAAmB;IAAnBA,+DAAA,CAAAiwB,WAAA,CAAAzwB,IAAA,CAAmB;IAEXQ,uDAAA,GAA0E;IAA1EA,wDAAA,SAAAowB,MAAA,CAAAE,yBAAA,KAAAF,MAAA,CAAAC,eAAA,kBAAAD,MAAA,CAAAC,eAAA,CAAA7wB,IAAA,MAAAywB,WAAA,CAAAzwB,IAAA,CAA0E;;;;;IAMhGQ,gEAAA,GAAmG;;;;;;IAGjGA,4DAAA,0BAGoC;IAFoBA,wDAAA,mBAAAuwB,uGAAA;MAAA,MAAArS,WAAA,GAAAle,2DAAA,CAAAwwB,IAAA;MAAA,MAAAC,iBAAA,GAAAvS,WAAA,CAAApC,SAAA;MAAA,MAAA4U,OAAA,GAAA1wB,2DAAA;MAAA,OAASA,yDAAA,CAAA0wB,OAAA,CAAAzW,cAAA,CAAAwW,iBAAA,CAA6B;IAAA,EAAC;IAG7FzwB,4DAAA,cAA2C;IACpCA,oDAAA,GAAgC;IAAAA,0DAAA,EAAM;IAC3CA,4DAAA,iBAAsE;IAA9CA,wDAAA,mBAAA2wB,8FAAA;MAAA,MAAAzS,WAAA,GAAAle,2DAAA,CAAAwwB,IAAA;MAAA,MAAAC,iBAAA,GAAAvS,WAAA,CAAApC,SAAA;MAAA,MAAA8U,OAAA,GAAA5wB,2DAAA;MAAA,OAASA,yDAAA,CAAA4wB,OAAA,CAAAC,oBAAA,CAAAJ,iBAAA,CAAmC;IAAA,EAAC;IACnEzwB,4DAAA,eAAU;IAAAA,oDAAA,aAAM;IAAAA,0DAAA,EAAW;;;;;IAP6BA,wDAAA,UAAAywB,iBAAA,CAAuB,aAAAK,OAAA,CAAAvR,UAAA,CAAAkR,iBAAA,cAAAzwB,6DAAA,IAAAmwB,GAAA,GAAAW,OAAA,CAAAT,eAAA,kBAAAS,OAAA,CAAAT,eAAA,CAAA7wB,IAAA,MAAAixB,iBAAA,CAAA7X,OAAA,CAAApZ,IAAA;IAK5EQ,uDAAA,GAAgC;IAAhCA,+DAAA,CAAAywB,iBAAA,CAAA7X,OAAA,CAAApZ,IAAA,CAAgC;;;;;IAN3CQ,4DAAA,6BAA2G;IACzGA,wDAAA,IAAA+wB,qEAAA,8BAUkB;IACpB/wB,0DAAA,EAAqB;;;;IAZmCA,wDAAA,mBAAgB;IAC3BA,uDAAA,GAAiB;IAAjBA,wDAAA,YAAAmc,MAAA,CAAA6U,cAAA,CAAiB;;;;;;;;;;;;;;;;;;;;;;;ADvC9D,MAAO1uB,oBAAoB;EAiB/BnD,YAAoBiM,OAAuB,EAAS1D,IAAiB,EAAU2D,kBAAqC,EAAUzG,KAA0B,EAASqsB,MAAiB,EAAUC,GAAsB;IAA9L,KAAA9lB,OAAO,GAAPA,OAAO;IAAyB,KAAA1D,IAAI,GAAJA,IAAI;IAAuB,KAAA2D,kBAAkB,GAAlBA,kBAAkB;IAA6B,KAAAzG,KAAK,GAALA,KAAK;IAA8B,KAAAqsB,MAAM,GAANA,MAAM;IAAqB,KAAAC,GAAG,GAAHA,GAAG;IAf/L,KAAAZ,yBAAyB,GAAY,KAAK;IAC1C,KAAAU,cAAc,GAAsB,EAAE;IACtC,KAAAG,KAAK,GAAG,KAAK;IACb,KAAAC,iBAAiB,GAAuB,EAAE;IAC1C,KAAAf,eAAe,GAAgC;MAAC7wB,IAAI,EAAE,IAAI;MAAE0N,IAAI,EAAE;IAAI,CAAC;IAGvE,KAAAmkB,gBAAgB,GAAG,UAAU;IAC7B,KAAAC,eAAe,GAAG,QAAQ;IACP,KAAAzB,YAAY,GAAGA,iEAAY;IAGhC,KAAA/mB,GAAG,GAAqB,EAAE;IACH,KAAA8G,yBAAyB,GAAsB,IAAIggB,uDAAY,EAAE;EAItG;EAEA/qB,eAAeA,CAAA;IACb,IAAI,CAAC0sB,oBAAoB,EAAE;IAC3B,IAAI,CAACC,2BAA2B,GAAG,IAAI,CAACnmB,kBAAkB,CAAComB,0BAA0B,CAACzsB,SAAS,CAAC+U,QAAQ,IAAG;MACzG,IAAI,CAACsW,eAAe,GAAGtW,QAAQ;IACjC,CAAC,CAAC;EACJ;EAEA4L,WAAWA,CAAA;IACT,IAAI,CAAC6L,2BAA2B,CAACE,WAAW,EAAE;EAChD;EAEAzX,cAAcA,CAACF,QAAyC;IACtD,IAAI,CAACA,QAAQ,EAAE;IAEf,IAAI,CAAC1O,kBAAkB,CAACsmB,eAAe,CAAC5X,QAAkB,CAAC,CAAC/U,SAAS,CAAC;MACpE2E,IAAI,EAAGioB,YAAY,IAAI;QACrB,QAAQA,YAAY;UAClB,KAAK/B,iEAAY,CAACgC,MAAM;UACxB,KAAKhC,iEAAY,CAACiC,QAAQ;YACxB,IAAI,CAACC,oBAAoB,CAAChY,QAAkB,CAAC;YAC7C;UACF,KAAK8V,iEAAY,CAACmC,QAAQ;YACxB,IAAI,CAACC,8BAA8B,CAAClY,QAAkB,CAAC;YACvD;UACF,KAAK8V,iEAAY,CAACqC,MAAM;YACtB,IAAI,CAACC,4BAA4B,CAACpY,QAA2B,CAAC;YAC9D;UACF;YACE,MAAM,IAAImO,KAAK,CAAC,qCAAqC,GAAG0J,YAAY,CAAC;;MAE3E,CAAC;MAEDQ,KAAK,EAAGA,KAAK,IAAI;QACfrb,OAAO,CAACqb,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;QACxD,MAAM,IAAIlK,KAAK,CAAC,mCAAmC,GAAGkK,KAAK,CAAC;MAC9D;KACD,CAAC;EACJ;EAEAL,oBAAoBA,CAAChY,QAAuB;IAC1C,IAAIA,QAAQ,EAAE;MACZ,IAAI,CAACoX,KAAK,GAAG,KAAK;MAClB,IAAIjkB,IAAI,GAAG6M,QAAQ,KAAK8V,iEAAY,CAACgC,MAAM,GAAGhC,iEAAY,CAACgC,MAAM,GAAGhC,iEAAY,CAACiC,QAAQ;MACzF,IAAI,CAACO,qBAAqB,CAACtY,QAAQ,EAAE7M,IAAI,CAAC;KAC3C,MAAM;MACL;;IAEF,IAAI,CAACpE,GAAG,CAAClJ,OAAO,CAACiJ,EAAE,IAAG;MACpB,IAAI,CAACwC,kBAAkB,CAACinB,iBAAiB,CAACzpB,EAAE,EAAEkR,QAAQ,CAAC,CAAC/U,SAAS,CAACopB,WAAW,IAAG;QAC9E,IAAI,CAAC/iB,kBAAkB,CAAC8iB,2BAA2B,CAACC,WAAW,EAAEvlB,EAAE,EAAEkR,QAAQ,CAAC;QAC9E,IAAI,CAACnK,yBAAyB,CAAC2iB,IAAI,EAAE;MACvC,CAAC,CAAC;MACF,IAAI,CAAC3tB,KAAK,CAAC4L,GAAG,CAAC,SAAS,EAAEuJ,QAAQ,CAAC;IACrC,CAAC,CAAC;EACJ;EAEAkY,8BAA8BA,CAACO,gBAAwB;IACrD,IAAI,CAAClC,yBAAyB,GAAG,IAAI;IACrC,IAAI,CAACa,KAAK,GAAG,KAAK;IAClB,IAAI,CAACkB,qBAAqB,CAACG,gBAAgB,EAAE3C,iEAAY,CAACmC,QAAQ,CAAC;IACnE,IAAI,CAAClpB,GAAG,CAAClJ,OAAO,CAACiJ,EAAE,IAAG;MACpB,IAAI,CAACwC,kBAAkB,CAACinB,iBAAiB,CAACzpB,EAAE,EAAE2pB,gBAAgB,CAAC,CAACxtB,SAAS,CAACopB,WAAW,IAAG;QACtF,IAAI,CAAC/iB,kBAAkB,CAAC8iB,2BAA2B,CAACC,WAAW,EAAEvlB,EAAE,EAAE2pB,gBAAgB,CAAC;QACtF,IAAI,CAAClC,yBAAyB,GAAG,KAAK;QACtC,IAAI,CAAC1rB,KAAK,CAAC4L,GAAG,CAAC,SAAS,EAAEgiB,gBAAgB,CAAC;MAC7C,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ;EAEAC,0BAA0BA,CAAA;IACxB,IAAI,CAAC3pB,GAAG,CAAClJ,OAAO,CAACiJ,EAAE,IAAG;MACpB;MACA,IAAI,IAAI,CAACooB,MAAM,CAACyB,WAAW,CAAChpB,MAAM,KAAK,CAAC,EAAE;QACxC;;MAEF,MAAMoiB,SAAS,GAAG,IAAI,CAACmF,MAAM,CAACjiB,IAAI,CAACpN,yHAA+B,EAAE;QAClE6M,IAAI,EAAE;UAAC5F,EAAE,EAAEA;QAAE,CAAC;QACd8pB,YAAY,EAAE,KAAK,CAAC;OACrB,CAAC;;MAEF7G,SAAS,CAAC8G,WAAW,EAAE,CAAC5tB,SAAS,CAAC2D,MAAM,IAAG;QACzC,MAAMoR,QAAQ,GAAG+R,SAAS,CAAC+G,iBAAiB,CAACje,KAAK;QAClD,IAAImF,QAAQ,EAAE;UACZ,IAAI,CAACiX,cAAe,CAAC8B,IAAI,CAAC/Y,QAAQ,CAAC;UACnC,IAAI,CAACoX,KAAK,GAAG,KAAK;UAClB,IAAI,CAACkB,qBAAqB,CAACtY,QAAQ,CAACnB,OAAO,CAACpZ,IAAI,EAAEqwB,iEAAY,CAACqC,MAAM,CAAC;UACtE,IAAI,CAACttB,KAAK,CAAC4L,GAAG,CAAC,SAAS,EAAEuJ,QAAQ,CAACnB,OAAO,CAAChE,KAAK,CAAC;;QAEnD,IAAI,CAACsc,GAAG,CAAC6B,aAAa,EAAE;MAC1B,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ;EAEAxT,UAAUA,CAACxF,QAAyB;IAClC,OAAO,IAAI,CAACiX,cAAe,CAAC9hB,QAAQ,CAAC6K,QAAQ,CAAC;EAChD;EAEAoY,4BAA4BA,CAACpY,QAAyB;IAEpD,IAAI,CAACA,QAAQ,CAACnB,OAAO,EAAE;IAEvB,IAAI,CAAC9P,GAAG,CAAClJ,OAAO,CAACiJ,EAAE,IAAG;MACpB,IAAI,CAACwC,kBAAkB,CAAC2nB,sBAAsB,CAACjZ,QAAQ,EAAElR,EAAE,CAAC,CAAC7D,SAAS,CAAE2D,MAAM,IAAI;QAChF,IAAI,CAAC0C,kBAAkB,CAAC8iB,2BAA2B,CAACxlB,MAAM,CAACylB,WAAW,EAAEvlB,EAAE,EAAEF,MAAM,CAACylB,WAAW,CAACrU,QAAQ,CAAC;QACxG,IAAI,CAACoX,KAAK,GAAG,KAAK;QAClB,IAAI,CAACkB,qBAAqB,CAACtY,QAAS,CAACnB,OAAO,CAACpZ,IAAI,EAAEqwB,iEAAY,CAACqC,MAAM,CAAC;QACvE,IAAI,CAACttB,KAAK,CAAC4L,GAAG,CAAC,SAAS,EAAEuJ,QAAQ,CAACnB,OAAO,CAAChE,KAAK,CAAC;MACnD,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ;EAEAic,oBAAoBA,CAAC9W,QAAyB;IAC5C,MAAM9F,KAAK,GAAG,IAAI,CAAC+c,cAAe,CAAC3c,OAAO,CAAC0F,QAAQ,CAAC;IACpD,IAAI9F,KAAK,KAAK,CAAC,CAAC,EAAE;MAChB,IAAI,CAAC+c,cAAe,CAAC7c,MAAM,CAACF,KAAK,EAAE,CAAC,CAAC;MACrC,IAAI,CAACnL,GAAG,CAAClJ,OAAO,CAACiJ,EAAE,IAAG;QACpBA,EAAE,CAACgG,QAAQ,CAAC,gBAAgBkL,QAAQ,IAAI,CAAC,CAACzF,MAAM,EAAE;QAClD,IAAI,CAAC1P,KAAK,CAAC4L,GAAG,CAAC,SAAS,EAAE,IAAI,CAAC;MACjC,CAAC,CAAC;;EAEN;EAEAyiB,gBAAgBA,CAAA;IACd,IAAI,CAACnqB,GAAG,CAAClJ,OAAO,CAACiJ,EAAE,IAAG;MACpB,IAAI,CAACwC,kBAAkB,CAAC6nB,uBAAuB,CAACrqB,EAAE,CAAC;MACnD,IAAI,CAACsoB,KAAK,GAAG,IAAI;MACjB,IAAI,CAACkB,qBAAqB,CAAC,IAAI,EAAE,IAAI,CAAC;MACtC,IAAI,CAACztB,KAAK,CAAC4L,GAAG,CAAC,SAAS,EAAE,IAAI,CAAC;IACjC,CAAC,CAAC;EACJ;EAEA6hB,qBAAqBA,CAAC7yB,IAAmB,EAAE0N,IAAyB;IAClE,IAAI1N,IAAI,IAAI0N,IAAI,EAAE;MAChB,MAAM6M,QAAQ,GAAoB;QAACva,IAAI;QAAE0N;MAAI,CAAC;MAC9C,IAAI,CAAC7B,kBAAkB,CAAC8nB,kBAAkB,CAACpZ,QAAQ,CAAC;KACrD,MAAM;MACL,IAAI,CAAC1O,kBAAkB,CAAC8nB,kBAAkB,CAAC;QAAC3zB,IAAI,EAAE,IAAI;QAAE0N,IAAI,EAAE;MAAI,CAAC,CAAC;;EAExE;EAEAqkB,oBAAoBA,CAAA;IAClB,IAAI,CAAClmB,kBAAkB,CAACkmB,oBAAoB,EAAE,CAACvsB,SAAS,CAACouB,SAAS,IAAG;MACnE,IAAI,CAAChC,iBAAiB,GAAGgC,SAAS;IACpC,CAAC,CAAC;EACJ;EAAC,QAAA10B,CAAA;qBArKU4D,oBAAoB,EAAAtC,+DAAA,CAAAhB,qEAAA,GAAAgB,+DAAA,CAAAG,+DAAA,GAAAH,+DAAA,CAAA+H,2EAAA,GAAA/H,+DAAA,CAAAsa,gFAAA,GAAAta,+DAAA,CAAAua,+DAAA,GAAAva,+DAAA,CAAAA,4DAAA;EAAA;EAAA,QAAArB,EAAA;UAApB2D,oBAAoB;IAAAjC,SAAA;IAAA4H,MAAA;MAAAY,EAAA;MAAAC,GAAA;IAAA;IAAAyqB,OAAA;MAAA3jB,yBAAA;IAAA;IAAAtP,KAAA;IAAAC,IAAA;IAAA6E,MAAA;IAAA5E,QAAA,WAAAgzB,8BAAA9yB,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCjBjCV,wDAAA,IAAAyzB,2CAAA,gCAAAzzB,oEAAA,CAUc;QAEdA,4DAAA,aAAiD;QAKkBA,wDAAA,mBAAA2zB,sDAAA;UAAA,OAAShzB,GAAA,CAAAsyB,gBAAA,EAAkB;QAAA,EAAC;QAErFjzB,4DAAA,kBAA6D;QAAAA,oDAAA,YAAK;QAAAA,0DAAA,EAAW;QAC7EA,oDAAA,uBACF;QAAAA,0DAAA,EAAS;QAIXA,wDAAA,KAAA4zB,6CAAA,0BAAiG;QAEjG5zB,4DAAA,cAA2B;QACaA,wDAAA,mBAAA6zB,uDAAA;UAAA,OAASlzB,GAAA,CAAAsZ,cAAA,CAAAtZ,GAAA,CAAA2wB,eAAA,CAA+B;QAAA,EAAC;QACMtxB,oDAAA,eACrF;QAAAA,0DAAA,EAAS;QAETA,4DAAA,iBACuF;QADjDA,wDAAA,mBAAA8zB,uDAAA;UAAA,OAASnzB,GAAA,CAAAsZ,cAAA,CAAAtZ,GAAA,CAAA0wB,gBAAA,CAAgC;QAAA,EAAC;QACOrxB,oDAAA,iBACvF;QAAAA,0DAAA,EAAS;QAGXA,wDAAA,KAAA+zB,6CAAA,0BAAqG;QAErG/zB,4DAAA,wBAA8D;QAC5DA,wDAAA,KAAAg0B,8CAAA,4BAUgB;QAClBh0B,0DAAA,EAAgB;QAEhBA,wDAAA,KAAAi0B,6CAAA,0BAAmG;QAEnGj0B,wDAAA,KAAAk0B,mDAAA,iCAYqB;QAErBl0B,4DAAA,cAA8B;QAC+BA,wDAAA,mBAAAm0B,uDAAA;UAAA,OAASxzB,GAAA,CAAA8xB,0BAAA,EAA4B;QAAA,EAAC;QAC/FzyB,4DAAA,oBAA0B;QAAAA,oDAAA,WAAG;QAAAA,0DAAA,EAAW;QACxCA,oDAAA,8BACF;QAAAA,0DAAA,EAAS;;;;QAvDDA,uDAAA,GAAoC;QAApCA,wDAAA,YAAAA,6DAAA,KAAAmwB,GAAA,EAAAxvB,GAAA,CAAAwwB,KAAA,EAAoC;QAChCnxB,uDAAA,GAAkC;QAAlCA,wDAAA,YAAAA,6DAAA,KAAAo0B,GAAA,EAAAzzB,GAAA,CAAAwwB,KAAA,EAAkC;QAMjCnxB,uDAAA,GAAmC;QAAnCA,wDAAA,qBAAA0I,GAAA,CAAmC,4BAAA1I,6DAAA,KAAAkc,GAAA;QAIxClc,uDAAA,GAA4E;QAA5EA,wDAAA,YAAAA,6DAAA,KAAAmwB,GAAA,GAAAxvB,GAAA,CAAA0vB,eAAA,kBAAA1vB,GAAA,CAAA0vB,eAAA,CAAAnjB,IAAA,MAAAvM,GAAA,CAAAkvB,YAAA,CAAAgC,MAAA,EAA4E;QAI5E7xB,uDAAA,GAA8E;QAA9EA,wDAAA,YAAAA,6DAAA,KAAAmwB,GAAA,GAAAxvB,GAAA,CAAA0vB,eAAA,kBAAA1vB,GAAA,CAAA0vB,eAAA,CAAAnjB,IAAA,MAAAvM,GAAA,CAAAkvB,YAAA,CAAAiC,QAAA,EAA8E;QAIzE9xB,uDAAA,GAAmC;QAAnCA,wDAAA,qBAAA0I,GAAA,CAAmC,4BAAA1I,6DAAA,KAAAmf,GAAA;QAETnf,uDAAA,GAAoB;QAApBA,wDAAA,qBAAoB;QACvBA,uDAAA,GAAoB;QAApBA,wDAAA,YAAAW,GAAA,CAAAywB,iBAAA,CAAoB;QAa3CpxB,uDAAA,GAAmC;QAAnCA,wDAAA,qBAAA0I,GAAA,CAAmC,4BAAA1I,6DAAA,KAAAsf,GAAA;QAE7Btf,uDAAA,GAAiC;QAAjCA,wDAAA,UAAAW,GAAA,CAAAqwB,cAAA,kBAAArwB,GAAA,CAAAqwB,cAAA,CAAAtnB,MAAA,OAAiC;;;;;;;;;;;;;;;;;;;;ACxC5D,MAAM4qB,iBAAiB;EAAA,QAAA51B,CAAA,GAEP,KAAA61B,eAAe,GAAG,EAAE;EAAA,QAAA51B,EAAA,GACpB,KAAA61B,SAAS,GAAG,EAAE;EAAA,QAAA51B,EAAA,GACd,KAAA61B,UAAU,GAAG,EAAE;EAAA,QAAAC,EAAA,GACf,KAAAC,UAAU,GAAGC,IAAI,CAACC,KAAK,CAAC,IAAI,CAACJ,UAAU,GAAG,GAAG,CAAC;EAAA,QAAAK,EAAA,GAC9C,KAAAC,UAAU,GAAG,CAAC,IAAI,CAAC,GAAG,IAAI,CAACN,UAAU,GAAG,IAAI,CAACE,UAAU,CAAC;EAAA,QAAAK,EAAA,GACxD,KAAAC,SAAS,GAAG,CAAC,IAAI,CAAC,GAAG,IAAI,CAACT,SAAS,GAAG,IAAI,CAACG,UAAU,CAAC;EAEpEx1B,YAAA,GACA;EAEO,OAAO+1B,4BAA4BA,CAAC9G,WAAyB;IAClE,IAAIA,WAAW,IAAI,IAAI,EAAE,OAAO,CAAC;IACjC,OAAOwG,IAAI,CAACpc,GAAG,CAAC4V,WAAW,CAAC1kB,MAAM,EAAE4qB,iBAAiB,CAACC,eAAe,CAAC;EACxE;EAEOY,gBAAgBA,CAACC,SAAiB,EAAEC,MAAgB,EAAEnM,KAAa,EAAEoM,MAAc;IACxFF,SAAS,GAAGA,SAAS,GAAG,CAAC;IACzB,OAAO;MACL7oB,CAAC,EAAE8oB,MAAM,CAAC9oB,CAAC,GAAI2c,KAAK,GAAG,CAAC,IAAKkM,SAAS,KAAK,CAAC,IAAIA,SAAS,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;MACzEG,CAAC,EAAEF,MAAM,CAACE,CAAC,GAAID,MAAM,GAAG,CAAC,IAAKF,SAAS,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;KACrD;EACH;EAEOI,SAASA,CAACC,IAAY,EAAEC,IAAY,EAAEC,IAAY,EAAEC,IAAY;IACrE,OAAO;MACLrpB,CAAC,EAAEkpB,IAAI,GAAG,CAACC,IAAI,GAAGD,IAAI,IAAI,GAAG;MAC7BF,CAAC,EAAEI,IAAI,GAAG,CAACC,IAAI,GAAGD,IAAI,IAAI;KAC3B;EACH;EAEOE,mBAAmBA,CAACC,OAAgB,EAAEC,GAAW,EAAEC,cAAsB;IAC9E,MAAMC,CAAC,GAAGF,GAAG,GAAGC,cAAc;IAC9B,OAAO;MACLzpB,CAAC,EAAEupB,OAAO,CAACI,IAAI,CAAC3pB,CAAC,GAAG0pB,CAAC,IAAIH,OAAO,CAACK,EAAE,CAAC5pB,CAAC,GAAGupB,OAAO,CAACI,IAAI,CAAC3pB,CAAC,CAAC;MACvDgpB,CAAC,EAAEO,OAAO,CAACI,IAAI,CAACX,CAAC,GAAGU,CAAC,IAAIH,OAAO,CAACK,EAAE,CAACZ,CAAC,GAAGO,OAAO,CAACI,IAAI,CAACX,CAAC;KACvD;EACH;EAEO/hB,WAAWA,CAAC4iB,UAAwB,EAAEC,eAAuB,EAAEC,YAAoB;IAExF,MAAMC,cAAc,GAA6BH,UAAU,CAAC3nB,IAAI,CAAC,QAAQ,CAAC,CAACtC,QAAQ,EAAE;IACrF,MAAMqqB,EAAE,GAAGC,eAAe,CAACC,SAAS,CAACJ,YAAY,CAAC;IAElD,IAAIK,SAAS,GAAGH,EAAE,CAACI,SAAS;IAC5B,IAAIC,SAAS,GAAG,CAAC;IACjB,IAAIC,aAAa,GAAG,CAAC;IACrB,IAAI1B,SAAS;IACb,MAAM2B,YAAY,GAAG,CAACP,EAAE,CAACI,SAAS,EAAEJ,EAAE,CAACQ,WAAW,EAAER,EAAE,CAACS,YAAY,EAAET,EAAE,CAACU,UAAU,CAAC;IAEnF,KAAK9B,SAAS,GAAG,CAAC,EAAEA,SAAS,GAAG2B,YAAY,CAACrtB,MAAM,EAAE0rB,SAAS,EAAE,EAAE;MAChEuB,SAAS,GAAGI,YAAY,CAAC3B,SAAS,CAAC;MACnC0B,aAAa,GAAGD,SAAS;MACzBA,SAAS,IAAIF,SAAS,GAAG,CAAC;MAC1B,IAAIN,eAAe,GAAGQ,SAAS,EAAE;QAC/B;;;IAIJ,MAAMM,OAAO,GAAGd,eAAe,GAAGS,aAAa;IAC/C,MAAMf,GAAG,GAAG,IAAI,CAACF,mBAAmB;IAClC;IACA;MACEK,IAAI,EAAE,IAAI,CAACf,gBAAgB,CAACC,SAAS,EAAEmB,cAAc,EAAEC,EAAE,CAACtN,KAAK,EAAEsN,EAAE,CAAClB,MAAM,CAAC;MAC3Ea,EAAE,EAAE,IAAI,CAAChB,gBAAgB,CAACC,SAAS,GAAG,CAAC,EAAEmB,cAAc,EAAEC,EAAE,CAACtN,KAAK,EAAEsN,EAAE,CAAClB,MAAM;KAC7E;IACD;IACA6B,OAAO,EACPR,SAAS,GAAG,CAAC,CACd;IAED,MAAMlB,IAAI,GAAGM,GAAG,CAACxpB,CAAC,GAAG+nB,iBAAiB,CAACE,SAAS;IAChD,MAAMkB,IAAI,GAAGK,GAAG,CAACxpB,CAAC,GAAG+nB,iBAAiB,CAACE,SAAS;IAChD,MAAMmB,IAAI,GAAGI,GAAG,CAACR,CAAC,GAAGjB,iBAAiB,CAACG,UAAU;IACjD,MAAMmB,IAAI,GAAGG,GAAG,CAACR,CAAC,GAAGjB,iBAAiB,CAACG,UAAU;IAEjD,OAAO,IAAI,CAACe,SAAS,CAACC,IAAI,EAAEC,IAAI,EAAEC,IAAI,EAAEC,IAAI,CAAC;EAC/C;;AAGF,MAAMa,eAAe;EACnBt3B,YACS+3B,UAAkB,EAClBF,WAAmB,EACnBJ,SAAiB,EACjBK,YAAoB,EACpB/N,KAAa,EACboM,MAAc;IALd,KAAA4B,UAAU,GAAVA,UAAU;IACV,KAAAF,WAAW,GAAXA,WAAW;IACX,KAAAJ,SAAS,GAATA,SAAS;IACT,KAAAK,YAAY,GAAZA,YAAY;IACZ,KAAA/N,KAAK,GAALA,KAAK;IACL,KAAAoM,MAAM,GAANA,MAAM;EAEf;EAEA,OAAOoB,SAASA,CAACU,CAAS;IACxB,MAAMC,mBAAmB,GAAGD,CAAC,GAAG,CAAC,GAAG,CAAC;IACrC,MAAME,eAAe,GAAG1C,IAAI,CAAC2C,KAAK,CAACF,mBAAmB,CAAC;IACvD,MAAMG,SAAS,GAAG5C,IAAI,CAACC,KAAK,CAAC,CAACwC,mBAAmB,GAAGC,eAAe,IAAI,CAAC,CAAC;IAEzE,MAAMJ,UAAU,GAAGI,eAAe,IAAIE,SAAS,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IAC5D,MAAMR,WAAW,GAAGM,eAAe,IAAIE,SAAS,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IAC7D,MAAMZ,SAAS,GAAGU,eAAe,IAAIE,SAAS,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IAC3D,MAAMP,YAAY,GAAGK,eAAe;IAEpC,MAAMhC,MAAM,GAAGV,IAAI,CAACnc,GAAG,CAAC,CAAC,CAAC,GAAG6b,iBAAiB,CAACG,UAAU,GAAGH,iBAAiB,CAACK,UAAU,KAAKuC,UAAU,GAAG,CAAC,CAAC,EAAE5C,iBAAiB,CAACS,UAAU,CAAC;IAC3I,MAAM7L,KAAK,GAAG0L,IAAI,CAACnc,GAAG,CAAC,CAAC,CAAC,GAAG6b,iBAAiB,CAACE,SAAS,GAAGF,iBAAiB,CAACK,UAAU,KAAKiC,SAAS,GAAG,CAAC,CAAC,EAAEtC,iBAAiB,CAACW,SAAS,CAAC;IAEvI,OAAO,IAAIwB,eAAe,CAACS,UAAU,EAAEF,WAAW,EAAEJ,SAAS,EAAEK,YAAY,EAAE/N,KAAK,EAAEoM,MAAM,CAAC;EAC7F;;AAGF,iEAAehB,iBAAiB;;;;;;;;;;;;;;;AC7E1B,MAAOjJ,aAAa;AAKnB,IAAKwE,YAKX;AALD,WAAYA,YAAY;EACtBA,YAAA,qBAAiB;EACjBA,YAAA,yBAAqB;EACrBA,YAAA,yBAAqB;EACrBA,YAAA,qBAAiB;AACnB,CAAC,EALWA,YAAY,KAAZA,YAAY;;;;;;;;;;;;;;;;;;;;;;;;;ACnDiD;AAEA;AAQtC;AAG0B;AAEC;;;;AAMxD,MAAO7nB,iBAAiB;EA4B5B7I,YAAoB24B,IAAgB,EAAUC,cAA8B;IAAxD,KAAAD,IAAI,GAAJA,IAAI;IAAsB,KAAAC,cAAc,GAAdA,cAAc;IA1B3C,KAAAC,kBAAkB,GAAG,GAAGH,kEAAW,CAACI,IAAI,8BAA8B;IACtE,KAAAC,eAAe,GAAG,GAAGL,kEAAW,CAACI,IAAI,qBAAqB;IAE1D,KAAAE,WAAW,GAAG,IAAI,CAACH,kBAAkB,GAAG,0BAA0B;IAClE,KAAAI,sBAAsB,GAAG,IAAI,CAACJ,kBAAkB,GAAG,qBAAqB;IACxE,KAAAK,aAAa,GAAG,IAAI,CAACL,kBAAkB,GAAG,qBAAqB;IAChE,KAAAzJ,UAAU,GAAG,IAAI,CAACyJ,kBAAkB,GAAG,eAAe;IACtD,KAAAvJ,mBAAmB,GAAG,IAAI,CAACuJ,kBAAkB,GAAG,qBAAqB;IACpE,KAAAM,UAAU,GAAG,IAAI,CAACN,kBAAkB,GAAG,QAAQ;IAE/C,KAAAO,YAAY,GAAG,IAAI,CAACL,eAAe,GAAG,aAAa;IAEnD,KAAAM,wBAAwB,GAAG,GAAG;IAC9B,KAAAC,sBAAsB,GAAG,GAAG;IAC5B,KAAAC,kBAAkB,GAAG,EAAE;IACvB,KAAAC,UAAU,GAAG,EAAE;IACf,KAAAC,WAAW,GAAG,EAAE;IAChB,KAAAC,sBAAsB,GAAG,EAAE;IAG5C,KAAAC,WAAW,GAAW,EAAE;IACxB,KAAAC,oBAAoB,GAAG,IAAI3lB,GAAG,EAA0B;IAEhD,KAAA4lB,gCAAgC,GAAG,IAAIluB,yCAAO,EAAmB;IAClE,KAAA2mB,0BAA0B,GAAG,IAAI,CAACuH,gCAAgC,CAACjsB,YAAY,EAAE;EAGxF;EAEAomB,kBAAkBA,CAAC8C,CAAkB;IACnC,IAAI,CAAC+C,gCAAgC,CAACrvB,IAAI,CAACssB,CAAC,CAAC;EAC/C;EAEQgD,cAAcA,CAACpwB,EAAkB;IACvC,IAAI,CAACiwB,WAAW,GAAG,IAAI,CAACI,uBAAuB,CAACrwB,EAAE,CAAC;EACrD;EAEQswB,iBAAiBA,CAACtwB,EAAkB;IAC1C,MAAMuwB,kBAAkB,GAAG,IAAI,CAACF,uBAAuB,CAACrwB,EAAE,CAAC;IAE3D,IAAI,CAAC,IAAI,CAACiwB,WAAW,IAAI,CAAC,IAAI,CAACO,OAAO,CAAC,IAAI,CAACP,WAAW,EAAEM,kBAAkB,CAAC,EAAE;MAC5E,IAAI,CAACN,WAAW,GAAGM,kBAAkB;KACtC,MAAM;MACL,IAAI,CAACH,cAAc,CAACpwB,EAAE,CAAC;;EAE3B;EAEAwwB,OAAOA,CAACC,IAAY,EAAEC,IAAY;IAChC,MAAMhhB,SAAS,GAAIihB,GAAW,IAAaA,GAAG,CAACjwB,KAAK,CAAC,GAAG,CAAC,CAACqK,IAAI,EAAE,CAAC6lB,IAAI,CAAC,GAAG,CAAC;IAC1E,OAAOlhB,SAAS,CAAC+gB,IAAI,CAAC,KAAK/gB,SAAS,CAACghB,IAAI,CAAC;EAC5C;EAGOL,uBAAuBA,CAACrwB,EAAkB;IAC/C,MAAM6wB,UAAU,GAAG7wB,EAAE,EAAEyG,KAAK,CAAC,SAAS,CAAC;IACvC,MAAM3G,MAAM,GAAa,EAAE;IAE3B+wB,UAAU,EAAE95B,OAAO,CAACoY,MAAM,IAAG;MAC3B,MAAMvT,WAAW,GAAGuT,MAAM,CAACvJ,IAAI,CAAC,OAAO,CAAC,CAAChK,WAAW;MACpD,IAAIA,WAAW,KAAK,+BAA+B,IAAIA,WAAW,KAAK,cAAc,EAAE;QACrFkE,MAAM,CAACmqB,IAAI,CAAC9a,MAAM,CAACvJ,IAAI,CAAC,KAAK,CAAC,CAAC;;IAEnC,CAAC,CAAC;IAEF;IACA,OAAO,CAAC,GAAG,IAAI4K,GAAG,CAAC1Q,MAAM,CAAC,CAAC,CAAC8wB,IAAI,CAAC,GAAG,CAAC;EAEvC;EAEOnH,iBAAiBA,CAACzpB,EAAkB,EAAEkR,QAAgB;IAC3D,IAAI,CAACof,iBAAiB,CAACtwB,EAAE,CAAC;IAC1B,IAAI+jB,GAAG;IACP,IAAI7S,QAAQ,KAAK8V,iEAAY,CAACgC,MAAM,EAAE;MACpCjF,GAAG,GAAG,IAAI,CAACuL,WAAW;KACvB,MAAM,IAAIpe,QAAQ,KAAK8V,iEAAY,CAACiC,QAAQ,EAAE;MAC7ClF,GAAG,GAAG,IAAI,CAAC2L,YAAY;KACxB,MAAM;MACL3L,GAAG,GAAG,IAAI,CAACyL,aAAa,GAAGte,QAAQ,CAAC4f,WAAW,EAAE,GAAG,UAAU;;IAGhE,OAAO,IAAI,CAAC7B,IAAI,CAAC8B,IAAI,CAAchN,GAAG,EAAE,IAAI,CAACkM,WAAW,EAAE;MACxDe,OAAO,EAAE,IAAIpC,6DAAW,CAAC;QAAC,cAAc,EAAE;MAAY,CAAC;KACxD,CAAC;EACJ;EAGOtJ,2BAA2BA,CAACC,WAAwB,EAAEvlB,EAAkB,EAAEkR,QAAgB;IAC/F,IAAI,IAAI,CAACgf,oBAAoB,CAACxf,GAAG,CAAC1Q,EAAE,CAAC,IAAI,IAAI,CAACkwB,oBAAoB,CAAC5yB,GAAG,CAAC0C,EAAE,CAAC,KAAKkR,QAAQ,EAAE;MACvF,MAAM+f,gBAAgB,GAAG,IAAI,CAACf,oBAAoB,CAAC5yB,GAAG,CAAC0C,EAAE,CAAC;MAC1DA,EAAE,CAACgG,QAAQ,CAAC,cAAcirB,gBAAgB,IAAI,CAAC,CAACxlB,MAAM,EAAE;MACxD,IAAI,CAACylB,8BAA8B,CAAC3L,WAAW,EAAEvlB,EAAE,EAAEkR,QAAQ,CAAC;MAC9D,IAAI,CAACgf,oBAAoB,CAACvoB,GAAG,CAAC3H,EAAE,EAAEkR,QAAQ,CAAC;KAC5C,MAAM,IAAI,CAAC,IAAI,CAACgf,oBAAoB,CAACxf,GAAG,CAAC1Q,EAAE,CAAC,EAAE;MAC7C,IAAI,CAACkxB,8BAA8B,CAAC3L,WAAW,EAAEvlB,EAAE,EAAEkR,QAAQ,CAAC;MAC9D,IAAI,CAACgf,oBAAoB,CAACvoB,GAAG,CAAC3H,EAAE,EAAEkR,QAAQ,CAAC;;EAE/C;EAEOggB,8BAA8BA,CAAC3L,WAAwB,EAAEvlB,EAAkB,EAAEkR,QAAgB;IAClG,MAAMjK,OAAO,GAAGiK,QAAQ,KAAK8V,iEAAY,CAACiC,QAAQ,GAAG,CAAC,uBAAuB,EAAE,SAAS,CAAC,GAAG,CAAC,uBAAuB,CAAC;IAErH,IAAI1D,WAAW,CAAC/W,QAAQ,KAAKla,SAAS,EAAE;IAExCixB,WAAW,CAAC/W,QAAQ,CACjB7N,MAAM,CAACwwB,gBAAgB,IAAIA,gBAAgB,CAACC,KAAK,GAAG,CAAC,CAAC,CACtDr6B,OAAO,CAACo6B,gBAAgB,IAAG;MAE1B,MAAM3iB,QAAQ,GAAGxO,EAAE,EAAEyG,KAAK,CAAC,WAAW0qB,gBAAgB,CAACE,GAAG,IAAI,CAAC;MAC/D7iB,QAAQ,EAAEzX,OAAO,CAACu6B,UAAU,IAAG;QAE7B,MAAMpE,GAAG,GAAG;UAAC,GAAGoE,UAAU,CAAChuB,QAAQ;QAAE,CAAC;QACtC4pB,GAAG,CAACxpB,CAAC,IAAI4tB,UAAU,CAACjR,KAAK,EAAE,GAAG,CAAC;QAC/B6M,GAAG,CAACR,CAAC,IAAI4E,UAAU,CAAC7E,MAAM,EAAE,GAAG,CAAC;QAEhC,MAAMld,EAAE,GAAG+hB,UAAU,CAAC/hB,EAAE,EAAE,GAAG,MAAM,GAAG,GAAG,GAAG2B,QAAQ,CAAC4f,WAAW,EAAE;QAElE,IAAI,CAACQ,UAAU,CAACrqB,OAAO,EAAE,CAACZ,QAAQ,CAAC,cAAc,CAAC,EAAE;UAClD,MAAMG,cAAc,GAAGxG,EAAE,EAAE+F,GAAG,CAAC;YAC7BH,IAAI,EAAE;cACJ,GAAG0rB,UAAU,CAAC1rB,IAAI,EAAE;cACpB2J,EAAE,EAAEA,EAAE;cACNvU,WAAW,EAAEm2B,gBAAgB,CAACC,KAAK;cACnCjiB,MAAM,EAAEmiB,UAAU;cAClB/L,WAAW,EAAE4L,gBAAgB,CAAC5L,WAAW;cACzCrU,QAAQ,EAAEA;aACX;YACDjK,OAAO,EAAEA,OAAO;YAChBsqB,QAAQ,EAAE,IAAI;YACdC,SAAS,EAAE,KAAK;YAChBluB,QAAQ,EAAE4pB;WACX,CAAC;UAEFoE,UAAU,CAAC1rB,IAAI,CAAC,YAAY,EAAEY,cAAc,CAAC;;MAGjD,CAAC,CAAC;IACJ,CAAC,CAAC;EACN;EAGOE,kBAAkBA,CAACF,cAAsC,EAAExG,EAAkB;IAClF,MAAMyxB,eAAe,GAAGjrB,cAAc,CAACZ,IAAI,CAAC,aAAa,CAAC;IAC1D,MAAMsL,QAAQ,GAAG1K,cAAc,CAACZ,IAAI,CAAC,UAAU,CAAC;IAChD6lB,kEAAiB,CAACE,SAAS,GAAGza,QAAQ,KAAK8V,iEAAY,CAACiC,QAAQ,GAAG,IAAI,CAAC2G,sBAAsB,GAAG,CAAC,GAAG,IAAI,CAACD,wBAAwB,GAAG,CAAC;IACtI,MAAM+B,WAAW,GAAGjG,kEAAiB,CAACY,4BAA4B,CAACoF,eAAe,CAAC;IACnF,MAAM,CAACE,kBAAkB,EAAEC,mBAAmB,CAAC,GAAG,IAAI,CAACC,iBAAiB,CAACJ,eAAe,EAAEzxB,EAAE,EAAE0xB,WAAW,CAAC;IAC1G,MAAMI,QAAQ,GAAiB,CAAC,GAAGH,kBAAkB,EAAE,GAAGC,mBAAmB,CAAC;IAC9E5xB,EAAE,CAAC0K,KAAK,CAAC,MAAK;MAEZ,MAAMjE,KAAK,GAAG,IAAI,CAACsrB,qBAAqB,CAACJ,kBAAkB,EAAEnrB,cAAc,EAAExG,EAAE,EAAE2xB,kBAAkB,CAAC9wB,MAAM,EAAEqQ,QAAQ,CAAC;MACrH,IAAI,CAAC8gB,qBAAqB,CAACF,QAAQ,EAAEtrB,cAAc,EAAExG,EAAE,EAAEkR,QAAQ,CAAC;MAElE,IAAI,CAAC+gB,kBAAkB,CAACxrB,KAAK,EAAEzG,EAAE,CAAC;IACpC,CAAC,CAAC;EACJ;EAEO6xB,iBAAiBA,CAACJ,eAA6B,EAAEzxB,EAAkB,EAAE0xB,WAAmB;IAC7F,MAAMC,kBAAkB,GAAG,EAAE;IAC7B,MAAMC,mBAAmB,GAAG,EAAE;IAC9B;IACA,KAAK,IAAI9yB,UAAU,IAAI2yB,eAAe,EAAE;MACtC,MAAMS,YAAY,GAAGlyB,EAAE,EAAEyG,KAAK,CAAC,0BAA0B3H,UAAU,CAACuyB,GAAG,IAAI,CAAC;MAE5E,IAAI,CAACa,YAAY,IAAIA,YAAY,CAACrxB,MAAM,KAAK,CAAC,EAAE;QAC9C8wB,kBAAkB,CAAC1H,IAAI,CAACnrB,UAAU,CAAC;OACpC,MAAM;QACLA,UAAU,CAACqzB,aAAa,GAAGD,YAAY;QACvCN,mBAAmB,CAAC3H,IAAI,CAACnrB,UAAU,CAAC;;;IAIxC,OAAO,CAAC6yB,kBAAkB,CAAC1jB,KAAK,CAAC,CAAC,EAAEyjB,WAAW,CAAC,EAAEE,mBAAmB,CAAC;EACxE;EAEOG,qBAAqBA,CAACN,eAA6B,EAAElE,UAAwB,EAAEvtB,EAAkB,EAAE0xB,WAAmB,EAAExgB,QAAgB;IAC7I,MAAMkhB,eAAe,GAA+B,EAAE;IACtD,MAAMC,gBAAgB,GAAG,IAAI5G,kEAAiB,EAAE;IAEhDgG,eAAe,CAAC16B,OAAO,CAAC,CAAC+H,UAAsB,EAAEsM,KAAa,KAAI;MAChE,MAAM9H,QAAQ,GAAG+uB,gBAAgB,CAAC1nB,WAAW,CAAC4iB,UAAU,EAAEniB,KAAK,EAAEsmB,WAAW,CAAC;MAC7E,MAAM12B,WAAW,GAAG8D,UAAU,CAACwzB,KAAK,GAAGxzB,UAAU,CAACwzB,KAAK,GAAGxzB,UAAU,CAACuyB,GAAG;MACxE,MAAMkB,WAAW,GAAG,CAAC,SAAS,EAAE,gBAAgB,CAAC,EAAC;MAClD,MAAMtrB,OAAO,GAAGiK,QAAQ,KAAK8V,iEAAY,CAACiC,QAAQ,GAAG,CAAC,gBAAgB,EAAE,YAAY,EAAE,SAAS,CAAC,GAAG,CAAC,IAAG,IAAI,CAACiG,cAAc,CAACsD,WAAW,CAACl1B,GAAG,CAACwB,UAAU,CAACuF,IAAI,CAAC,IAAIkuB,WAAW,GAAE,YAAY,CAAC;MACzL,IAAIlS,KAAK,GAAGnP,QAAQ,KAAK8V,iEAAY,CAACiC,QAAQ,GAAG,IAAI,CAAC2G,sBAAsB,GAAG,IAAI,CAACD,wBAAwB;MAC5G,IAAIlD,MAAM,GAAG,IAAI,CAACsD,WAAW,GAAG,CAAC,GAAG,IAAI,CAACF,kBAAkB;MAC3D,IAAI/wB,UAAU,CAACuF,IAAI,KAAK,MAAM,EAAEooB,MAAM,IAAI,IAAI,CAACuD,sBAAsB;MAErE,MAAMzgB,EAAE,GAAG,aAAa,GAAGzQ,UAAU,CAACuyB,GAAG;MACzCe,eAAe,CAACnI,IAAI,CAAC;QACnBrkB,IAAI,EAAE;UACJ,GAAG2nB,UAAU,CAAC3nB,IAAI,EAAE;UACpB2J,EAAE,EAAEA,EAAE;UACNvU,WAAW,EAAEA,WAAW,CAACy3B,OAAO,CAAC,YAAY,EAAE,UAAU,CAAC;UAC1DC,IAAI,EAAE,IAAI,CAACxD,cAAc,CAACyD,qBAAqB,CAAC;YAACpjB,EAAE;YAAElL,IAAI,EAAEvF,UAAU,CAACuF,IAAI,IAAI;UAAS,CAAC,EAAEgc,KAAK,EAAEoM,MAAM,EAAE3tB,UAAU,CAACuyB,GAAG,CAAC;UACxHhR,KAAK,EAAEA,KAAK;UACZoM,MAAM,EAAEA,MAAM;UACdmG,MAAM,EAAE9zB,UAAU,CAAC8zB,MAAM;UACzBC,KAAK,EAAE/zB,UAAU,CAAC+zB,KAAK;UACvBC,SAAS,EAAEh0B,UAAU,CAACg0B,SAAS;UAC/BC,YAAY,EAAEj0B,UAAU,CAACk0B,YAAY;UACrC9hB,QAAQ,EAAEA;SACX;QACDjK,OAAO,EAAEA,OAAO;QAChB3D,QAAQ,EAAEA,QAAQ;QAClB2vB,UAAU,EAAE;OACb,CAAC;IACJ,CAAC,CAAC;IACF,OAAOjzB,EAAE,EAAE+F,GAAG,CAACqsB,eAAe,CAAC;EACjC;EAGOJ,qBAAqBA,CAACP,eAA6B,EAAEjrB,cAA4B,EAAExG,EAA8B,EAAEkR,QAAgB;IACxI,IAAI,CAAClR,EAAE,EAAE;IAET,MAAMkzB,aAAa,GAAGhiB,QAAQ,KAAK8V,iEAAY,CAACiC,QAAQ,GAAG,CAAC,YAAY,EAAE,SAAS,CAAC,GAAG,CAAC,YAAY,CAAC;IAErG,MAAMkK,eAAe,GAA+B,EAAE;IACtD1B,eAAe,CAAC16B,OAAO,CAAE+H,UAAsB,IAAI;MACjD,MAAMqQ,MAAM,GAAG3I,cAAc,CAACZ,IAAI,CAAC,QAAQ,CAAC;MAC5C,MAAMwtB,WAAW,GAAGt0B,UAAU,CAACqzB,aAAa,GAAGrzB,UAAU,CAACqzB,aAAa,GAAG,CAACnyB,EAAE,CAAC8F,cAAc,CAAC,aAAa,GAAGhH,UAAU,CAACuyB,GAAG,CAAC,CAAC;MAC7H+B,WAAW,CAACr8B,OAAO,CAACw2B,UAAU,IAAG;QAC/B4F,eAAe,CAAClJ,IAAI,CAAC;UACnBrkB,IAAI,EAAE;YACJ,GAAG2nB,UAAU,CAAC3nB,IAAI,EAAE;YACpB2J,EAAE,EAAEzQ,UAAU,CAACuyB,GAAG,GAAG,GAAG,GAAGliB,MAAM,CAACI,EAAE,EAAE;YACtCtM,MAAM,EAAEkM,MAAM,CAACI,EAAE,EAAE;YACnBpM,MAAM,EAAEoqB,UAAU,CAAChe,EAAE,EAAE;YACvB8jB,YAAY,EAAE7sB,cAAc,CAAC+I,EAAE,EAAE;YACjCwjB,YAAY,EAAEj0B,UAAU,CAACk0B,YAAY;YACrC9hB,QAAQ,EAAEA;WACX;UACDjK,OAAO,EAAEisB,aAAa;UACtBD,UAAU,EAAE;SACb,CAAC;MACJ,CAAC,CAAC;IAEJ,CAAC,CAAC;IACFjzB,EAAE,EAAE+F,GAAG,CAACotB,eAAe,CAAC;EAC1B;EAEOlB,kBAAkBA,CAACqB,oBAAoC,EAAEtzB,EAAkB;IAEhF,IAAIuzB,aAAa,GAA4B;MAC3C58B,IAAI,EAAE,QAAQ;MACdmW,GAAG,EAAE;KACN;IACDwmB,oBAAoB,CAAClqB,MAAM,CAACmqB,aAAa,CAAC,CAACC,GAAG,EAAE;EAClD;EAEO7sB,qBAAqBA,CAACH,cAAsC;IACjE,MAAM8qB,UAAU,GAAG9qB,cAAc,CAACZ,IAAI,CAAC,QAAQ,CAAC;IAChD,MAAM2f,WAAW,GAAG+L,UAAU,CAACmC,kBAAkB,CAAC,iBAAiB,CAAC;IAEpEnC,UAAU,CAAChqB,cAAc,CAAC,aAAa,CAAC,CAACmE,MAAM,EAAE;IACjD8Z,WAAW,CAACxuB,OAAO,CAAE+H,UAAkC,IAAI;MACzD,IAAIA,UAAU,CAACwI,cAAc,EAAE,CAACosB,KAAK,EAAE,EAAE;QACvC50B,UAAU,CAAC2M,MAAM,EAAE;;IAEvB,CAAC,CAAC;EACJ;EAEO4e,uBAAuBA,CAACrqB,EAAkB;IAC/C,IAAI,CAACkwB,oBAAoB,CAAC5H,KAAK,EAAE;IACjC,MAAMqL,aAAa,GAAG3zB,EAAE,CAACgG,QAAQ,CAAC,wBAAwB,CAAC,CAACyF,MAAM,EAAE;IACpEkoB,aAAa,CAAC58B,OAAO,CAAC+S,IAAI,IAAG;MAC3B,IAAIA,IAAI,CAAC8pB,QAAQ,CAAC,QAAQ,CAAC,EAAE;QAC3B,IAAI,CAACjtB,qBAAqB,CAACmD,IAAI,CAAC;;IAEpC,CAAC,CAAC;EACJ;EAEO4e,oBAAoBA,CAAA;IACzB,OAAO,IAAI,CAACuG,IAAI,CAAC3xB,GAAG,CAAqB,IAAI,CAACiyB,sBAAsB,EAAE;MACpEyB,OAAO,EAAE,IAAIpC,6DAAW,CAAC;QAAC,cAAc,EAAE;MAAgC,CAAC;KAC5E,CAAC,CAAC1yB,IAAI,CACLuL,yCAAG,CAAE8gB,iBAAiB,IAAI;MACxB,OAAOA,iBAAiB,CAAC5nB,MAAM,CAACysB,CAAC,IAAIA,CAAC,CAACz2B,IAAI,KAAKqwB,iEAAY,CAACgC,MAAM,IAAIoE,CAAC,CAACyG,MAAM,CAAC;IAClF,CAAC,CAAC,CACH;EACH;EAGOC,mBAAmBA,CAACn9B,IAAY,EAAEotB,GAAW,EAAEgQ,IAAuB;IAC3E,OAAO,IAAI,CAAC9E,IAAI,CAAC8B,IAAI,CAAkBhN,GAAG,EAAEgQ,IAAI,EAAE;MAChDxzB,MAAM,EAAE,IAAIsuB,4DAAU,EAAE,CAAClnB,GAAG,CAAC,MAAM,EAAEhR,IAAI;KAC1C,CAAC;EACJ;EAGA;;;;;;;;;EASO0uB,uBAAuBA,CAAC1uB,IAAY,EAAEotB,GAAW,EAAEgQ,IAAuB,EAAE/zB,EAAkB;IAInG,IAAI,CAACswB,iBAAiB,CAACtwB,EAAE,CAAC;IAC1B,OAAO,IAAI,CAAC8zB,mBAAmB,CAACn9B,IAAI,EAAEotB,GAAG,EAAEgQ,IAAI,CAAC,CAAC73B,IAAI,CACnDuW,+CAAS,CAAC1G,KAAK,IAAI,IAAI,CAACoe,sBAAsB,CAACpe,KAAK,EAAE/L,EAAE,CAAC,CAAC,CAC3D;EACH;EAEOmqB,sBAAsBA,CAACpe,KAAsB,EAAE/L,EAAkB;IAItE,IAAI,CAACswB,iBAAiB,CAACtwB,EAAE,CAAC;IAC1B,OAAO,IAAI,CAACivB,IAAI,CAAC8B,IAAI,CAAc,IAAI,CAACtB,UAAU,GAAG1jB,KAAK,CAACgE,OAAO,CAAChE,KAAK,EAAE,IAAI,CAACkkB,WAAW,EAAE;MAC1Fe,OAAO,EAAE,IAAIpC,6DAAW,CAAC;QAAC,cAAc,EAAE;MAAY,CAAC;KACxD,CAAC,CAAC1yB,IAAI,CACLuL,yCAAG,CAAE8d,WAAW,KAAM;MAACxZ,KAAK,EAAEA,KAAK;MAAEwZ,WAAW,EAAEA;IAAW,CAAC,CAAC,CAAC,CACjE;EACH;EAGOyO,qBAAqBA,CAAC9iB,QAAgB;IAE3C,IAAIA,QAAQ,KAAK8V,iEAAY,CAACgC,MAAM,EAAE;MACpC,OAAOhC,iEAAY,CAACgC,MAAM;;IAE5B,IAAI9X,QAAQ,KAAK8V,iEAAY,CAACiC,QAAQ,EAAE;MACtC,OAAOjC,iEAAY,CAACiC,QAAQ;;IAG9B;IACA,IAAI,IAAI,CAACgL,cAAc,CAAC/iB,QAAQ,CAAC,EAAE;MACjC,OAAO8V,iEAAY,CAACmC,QAAQ;;IAE9B;IACA,IAAI,IAAI,CAAC+K,gBAAgB,CAAChjB,QAAQ,CAAC,EAAE;MACnC,OAAO8V,iEAAY,CAACqC,MAAM;;IAG5B,OAAO,IAAI;EACb;EAGOP,eAAeA,CAAC5X,QAAgB;IACrC,IAAIA,QAAQ,KAAK8V,iEAAY,CAACgC,MAAM,EAAE;MACpC,OAAO+F,wCAAE,CAAC/H,iEAAY,CAACgC,MAAM,CAAC;;IAEhC,IAAI9X,QAAQ,KAAK8V,iEAAY,CAACiC,QAAQ,EAAE;MACtC,OAAO8F,wCAAE,CAAC/H,iEAAY,CAACiC,QAAQ,CAAC;;IAGlC,OAAO,IAAI,CAACgL,cAAc,CAAC/iB,QAAQ,CAAC,CAAChV,IAAI,CACvCuW,+CAAS,CAAC0hB,UAAU,IAAG;MACrB,IAAIA,UAAU,EAAE;QACd,OAAOpF,wCAAE,CAAC/H,iEAAY,CAACmC,QAAQ,CAAC;;MAGlC,OAAO,IAAI,CAAC+K,gBAAgB,CAAChjB,QAAQ,CAAC,CAAChV,IAAI,CACzCuL,yCAAG,CAAC2sB,QAAQ,IAAIA,QAAQ,GAAGpN,iEAAY,CAACqC,MAAM,GAAG,IAAI,CAAC,CACvD;IACH,CAAC,CAAC,EACFyF,gDAAU,CAAC,MAAMC,wCAAE,CAAC,IAAI,CAAC,CAAC,CAC3B;EACH;EAEOkF,cAAcA,CAAC/iB,QAAgB;IACpC,IAAI,CAACA,QAAQ,EAAE;MACb,OAAO6d,wCAAE,CAAC,KAAK,CAAC;;IAGlB,OAAO,IAAI,CAACrG,oBAAoB,EAAE,CAACxsB,IAAI,CACrCuL,yCAAG,CAAC8gB,iBAAiB,IACnBA,iBAAiB,CAAC1e,IAAI,CAACwqB,EAAE,IAAIA,EAAE,CAAC19B,IAAI,KAAKua,QAAQ,IAAImjB,EAAE,CAAC19B,IAAI,KAAKqwB,iEAAY,CAACgC,MAAM,CAAC,CACtF,CACF;EACH;EAEOkL,gBAAgBA,CAAChjB,QAAgB;IACtC,IAAI,CAACA,QAAQ,EAAE;MACb,OAAO6d,wCAAE,CAAC,KAAK,CAAC;;IAGlB,OAAO,IAAI,CAACrG,oBAAoB,EAAE,CAACxsB,IAAI,CACrCuL,yCAAG,CAAC8gB,iBAAiB,IAAG;MACtB,MAAM4L,UAAU,GAAG5L,iBAAiB,CAAC1e,IAAI,CAACwqB,EAAE,IAAIA,EAAE,CAAC19B,IAAI,KAAKua,QAAQ,IAAImjB,EAAE,CAAC19B,IAAI,KAAKqwB,iEAAY,CAACgC,MAAM,CAAC;MACxG,OAAO9X,QAAQ,KAAK8V,iEAAY,CAACgC,MAAM,IACrC9X,QAAQ,KAAK8V,iEAAY,CAACiC,QAAQ,IAClC,CAACkL,UAAU;IACf,CAAC,CAAC,CACH;EACH;EAAC,QAAAt+B,CAAA;qBAxYUsJ,iBAAiB,EAAAhI,uDAAA,CAAAhB,4DAAA,GAAAgB,uDAAA,CAAAG,qEAAA;EAAA;EAAA,QAAAxB,EAAA;WAAjBqJ,iBAAiB;IAAAo1B,OAAA,EAAjBp1B,iBAAiB,CAAAq1B,IAAA;IAAAC,UAAA,EAHhB;EAAM;;;;;;;;;;;;;;;;;;;;;;;;;;AClBuE;AAEhC;AAGZ;;;;AAO/C;AAEM,MAAOC,cAAc;EAKzBp+B,YAAoBK,IAAa;IAAb,KAAAA,IAAI,GAAJA,IAAI;IACtB,IAAI,CAACg+B,MAAM,GAAGpmB,gDAAK,CAAC5X,IAAI,CAAC,CAACi+B,IAAI,CAAC,OAAO,CAAC;IACvC,IAAI,CAACrmB,KAAK,GAAG,IAAI,CAAComB,MAAM;IACxB,IAAI,CAACj3B,QAAQ,GAAG,sCAAsC0E,6CAAM,CAAC,IAAI,CAACzL,IAAI,CAAC,CAACi6B,IAAI,CAAC,IAAI,CAAC,GAAG;EACvF;EAEA3pB,OAAOA,CAACsnB,CAAS;IACf,IAAIA,CAAC,GAAG,CAAC,EAAE;MACT,IAAI,CAAChgB,KAAK,GAAG,IAAI,CAAComB,MAAM,CAAC1tB,OAAO,CAACsnB,CAAC,CAAC;MACnC,IAAI,CAAC7wB,QAAQ,GAAG,sCAAsC,IAAI,CAAC6Q,KAAK,CAACuN,MAAM,CAACyS,CAAC,CAAC,CAAC9mB,GAAG,CAAC,CAACotB,CAAC,EAAEC,CAAC,KAAK,GAAGD,CAAC,IAAIC,CAAC,GAAGvG,CAAC,GAAG,GAAG,MAAMsG,CAAC,IAAI,CAACC,CAAC,GAAG,CAAC,IAAIvG,CAAC,GAAG,GAAG,GAAG,CAAC,CAACqC,IAAI,CAAC,IAAI,CAAC,GAAG;KAC3J,MAAM;MACL,IAAI,CAACriB,KAAK,GAAG,IAAI,CAAComB,MAAM;MACxB,IAAI,CAACj3B,QAAQ,GAAG,sCAAsC0E,6CAAM,CAAC,IAAI,CAACzL,IAAI,CAAC,CAACi6B,IAAI,CAAC,IAAI,CAAC,GAAG;;EAEzF;EAEAngB,MAAMA,CAACd,GAAW,EAAEC,GAAW;IAC7B,IAAI,CAACrB,KAAK,GAAG,IAAI,CAACA,KAAK,CAACkC,MAAM,CAAC,CAACd,GAAG,EAAEC,GAAG,CAAC,CAAC;EAC5C;;AASI,MAAO5Q,eAAe;EAmC1B1I,YAAoB24B,IAAgB,EAAUlzB,KAA0B;IAApD,KAAAkzB,IAAI,GAAJA,IAAI;IAAsB,KAAAlzB,KAAK,GAALA,KAAK;IAjCnD,KAAAsB,cAAc,GAAiC,IAAIkN,GAAG,CAAC1B,MAAM,CAACksB,IAAI,CAAC3yB,6CAAM,CAAC,CACvEzB,MAAM,CAAChK,IAAI,IAAIA,IAAI,CAACm6B,WAAW,EAAE,KAAKn6B,IAAI,CAAC,CAC3C8Q,GAAG,CAAC9Q,IAAI,IAAK,CAACA,IAAe,EAAE,IAAI+9B,cAAc,CAAC/9B,IAAe,CAAC,CAAE,CAAC,CAAC;IAEzE,KAAA4H,OAAO,GAAmB,IAAI,CAAClB,cAAc,CAACC,GAAG,CAAC,MAAM,CAAE;IAC1D,KAAAQ,QAAQ,GAAkE,CACxE;MACEnH,IAAI,EAAE,YAAY;MAAEuH,KAAK,EAAE,KAAK;MAAEJ,QAAQ,EAAE,CAC1C,OAAO,EAAE,SAAS,EAAE,OAAO,EAAE,QAAQ,EAAE,SAAS,EAAE,MAAM,EACxD,MAAM,EAAE,MAAM,EAAE,MAAM,EACtB,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAE,QAAQ,EAClC,MAAM,EAAE,MAAM,EACd,QAAQ,EAAE,MAAM,EAAE,QAAQ;KAE7B,EACD;MAACnH,IAAI,EAAE,WAAW;MAAEuH,KAAK,EAAE,IAAI;MAAEJ,QAAQ,EAAE,CAAC,QAAQ,EAAE,QAAQ,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM;IAAC,CAAC,EAChH;MAACnH,IAAI,EAAE,YAAY;MAAEuH,KAAK,EAAE,KAAK;MAAEJ,QAAQ,EAAE,CAAC,UAAU,EAAE,SAAS;IAAC,CAAC,CACtE;IAID,KAAA+Q,OAAO,GAAG,IAAI,CAAC9S,KAAK,CAAC0I,QAAQ,CAACS,SAAS,CAAChJ,IAAI,CAC1CuW,+CAAS,CAAC1G,KAAK,IACbA,KAAK,KAAK,IAAI,GAEVA,KAAK,KAAK,IAAI,CAACjM,MAAM,EAAEiQ,OAAO,CAAChE,KAAK,GAClCgjB,wCAAE,CAAC,IAAI,CAACjvB,MAAM,CAAC;IAAG;IAClB,IAAI,CAACqF,YAAY,CAAC4G,KAAK,CAAC,CAAC;IAAA,EAE7BgjB,wCAAE,CAACz6B,SAAS,CAAC,CAAC;KACjB,CACF;EAGD;;EAEA4I,aAAaA,CAAA;IACX,IAAI,CAAC4C,MAAM,GAAGxL,SAAS;IACvB,IAAI,CAACyH,KAAK,CAAC4L,GAAG,CAAC,UAAU,EAAE,IAAI,CAAC;EAClC;EAEA4J,OAAOA,CAAC3L,IAAY,EAAErF,MAAqC;IACzD,OAAO,IAAI,CAAC0uB,IAAI,CAAC8B,IAAI,CAAkB,GAAG/B,kEAAW,CAACI,IAAI,yCAAyC,EAAExpB,IAAI,EAAE;MAACrF;IAAM,CAAC,CAAC,CAACrE,IAAI,CACvHwW,yCAAG,CAAC5S,MAAM,IAAI,IAAI,CAACA,MAAM,GAAGA,MAAM,CAAC,EACnC4S,yCAAG,CAAC5S,MAAM,IAAI,IAAI,CAAC/D,KAAK,CAAC4L,GAAG,CAAC,UAAU,EAAE7H,MAAM,CAACiQ,OAAO,CAAChE,KAAK,CAAC,CAAC,CAChE;EACH;EAEA5G,YAAYA,CAAC4G,KAAc,EAAExL,MAAqC;IAChE2N,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;IAC5B,OAAO,IAAI,CAAC8gB,IAAI,CAAC3xB,GAAG,CAAkB,GAAG0xB,kEAAW,CAACI,IAAI,0BAA0BrjB,KAAK,IAAI,IAAI,CAAChQ,KAAK,CAACuB,GAAG,CAAC,UAAU,CAAC,EAAE,EAAE;MAACiD;IAAM,CAAC,CAAC,CAACrE,IAAI,CACtIwW,yCAAG,CAAC5S,MAAM,IAAI,IAAI,CAACA,MAAM,GAAGA,MAAM,CAAC,CACpC;EACH;EAEA2O,aAAaA,CAACumB,OAAe,EAAEjpB,KAAc,EAAEmF,QAAA,GAA8B,OAAO;IAClF,OAAO,IAAI,CAAC+d,IAAI,CAAC3xB,GAAG,CAAyB,GAAG0xB,kEAAW,CAACI,IAAI,0BAA0BrjB,KAAK,IAAI,IAAI,CAAChQ,KAAK,CAACuB,GAAG,CAAC,UAAU,CAAC,cAAc03B,OAAO,EAAE,EAAE;MACpJz0B,MAAM,EAAE;QACN2Q;;KAEH,CAAC,CAAChV,IAAI,CACL4yB,gDAAU,CAAC,MAAMC,wCAAE,CAAC;MAClBiG,OAAO;MACPvmB,aAAa,EAAE,CAAC;MAChBwmB,gBAAgB,EAAE,CAAC;MACnBjmB,QAAQ,EAAE,EAAE;MACZR,QAAQ,EAAE,EAAE;MACZ+W,WAAW,EAAE,EAAE;MACfgF,SAAS,EAAE,CAACrZ,QAAQ;KACrB,CAAC,CAAC,CACJ;EACH;EAEAvC,eAAeA,CAACumB,UAAoB,EAAEnpB,KAAc,EAAEmF,QAAA,GAA8B,OAAO;IACzF,IAAIgkB,UAAU,CAACr0B,MAAM,KAAK,CAAC,EAAE,OAAOkuB,wCAAE,CAAC,EAAE,CAAC;IAC1C,OAAO,IAAI,CAACE,IAAI,CAAC8B,IAAI,CAAqB,GAAG/B,kEAAW,CAACI,IAAI,0BAA0BrjB,KAAK,IAAI,IAAI,CAAChQ,KAAK,CAACuB,GAAG,CAAC,UAAU,CAAC,kBAAkB,EAAE43B,UAAU,CAACtE,IAAI,CAAC,GAAG,CAAC,EAAE;MAClKrwB,MAAM,EAAE;QAAC2Q;MAAQ;KAClB,CAAC,CAAChV,IAAI,CACL4yB,gDAAU,CAAC,MAAMC,wCAAE,CAAC,EAAE,CAAC,CAAC,CACzB;EACH;EAEAxvB,OAAOA,CAAC5I,IAAc;IACpB,OAAO,IAAI,CAACs4B,IAAI,CAAC3xB,GAAG,CAAC,iCAAiC3G,IAAI,MAAM,EAAE;MAAC6J,YAAY,EAAE;IAAM,CAAC,CAAC,CAACtE,IAAI,CAC5FuW,+CAAS,CAAClT,OAAO,IAAI,IAAI,CAACgS,OAAO,CAAChS,OAAO,CAAC,CAAC,CAC5C;EACH;EAAC,QAAA1J,CAAA;qBAxFUmJ,eAAe,EAAA7H,sDAAA,CAAAhB,4DAAA,GAAAgB,sDAAA,CAAAG,uEAAA;EAAA;EAAA,QAAAxB,EAAA;WAAfkJ,eAAe;IAAAu1B,OAAA,EAAfv1B,eAAe,CAAAw1B,IAAA;IAAAC,UAAA,EAFd;EAAM;;;;;;;;;;;;;;;;;AC5CiB;;AAK/B,MAAOx1B,WAAW;EAQtB3I,YAAA;IALQ,KAAA8+B,OAAO,GAAY,KAAK;IAEf,KAAAC,MAAM,GAAG,IAAIF,iDAAe,CAAC,IAAI,CAACC,OAAO,CAAC;IAC3C,KAAA/sB,KAAK,GAAG,IAAI,CAACgtB,MAAM,CAACnxB,YAAY,EAAE;IAGhD,IAAI,CAACoxB,KAAK,GAAGC,QAAQ,CAAC5V,aAAa,CAAC,MAAM,CAAC;IAE3C;IACA;IACA;IACA;IAEA,MAAM6V,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC;IAClD,IAAIF,UAAU,EAAE,IAAI,CAAC71B,MAAM,GAAGg2B,IAAI,CAACC,KAAK,CAACJ,UAAU,CAAC,CAAC,KAChD,IAAI5Z,MAAM,CAACia,UAAU,CAAC,wBAAwB,CAAC,CAACC,KAAK,KAAK,SAAS,EAAE;MACxE,IAAI,CAACn2B,MAAM,GAAGic,MAAM,CAACia,UAAU,CAAC,8BAA8B,CAAC,CAACE,OAAO;;EAE3E;EAEA,IAAIp2B,MAAMA,CAAA;IACR,OAAO,IAAI,CAACy1B,OAAO;EACrB;EAEA,IAAIz1B,MAAMA,CAACgF,KAAc;IACvB,IAAI,CAACywB,OAAO,GAAGzwB,KAAK;IACpB8wB,YAAY,CAACO,OAAO,CAAC,SAAS,EAAEL,IAAI,CAACM,SAAS,CAACtxB,KAAK,CAAC,CAAC;IACtD,IAAIA,KAAK,EAAE,IAAI,CAAC2wB,KAAK,EAAE1U,SAAS,CAAC7a,GAAG,CAAC,MAAM,CAAC,CAAC,KACxC,IAAI,CAACuvB,KAAK,EAAE1U,SAAS,CAACnV,MAAM,CAAC,MAAM,CAAC;IACzC,IAAI,CAAC4pB,MAAM,CAACv0B,IAAI,CAAC,IAAI,CAACs0B,OAAO,CAAC;EAChC;EAAC,QAAAv/B,CAAA;qBAjCUoJ,WAAW;EAAA;EAAA,QAAAnJ,EAAA;WAAXmJ,WAAW;IAAAs1B,OAAA,EAAXt1B,WAAW,CAAAu1B,IAAA;IAAAC,UAAA,EAFV;EAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACF6E;AAC7C;AAEO;;;;AAwBrD,MAAOn4B,mBAAmB;EA4B9BhG,YAAYM,KAAqB,EAAUwJ,MAAc,EAAU6uB,IAAgB;IAAA,IAAAqH,KAAA;IAAxC,KAAAl2B,MAAM,GAANA,MAAM;IAAkB,KAAA6uB,IAAI,GAAJA,IAAI;IA1B/D,KAAAsH,SAAS,GAAG,KAAK;IAGjB,KAAAx6B,KAAK,GAAU;MACrBiJ,MAAM,EAAE;QAACwxB,WAAW,EAAE,CAAC,KAAK,CAAC;QAAE7xB,KAAK,EAAE;MAAE,CAAC;MACzCE,IAAI,EAAE;QAAC2xB,WAAW,EAAE,CAAC,KAAK,CAAC;QAAE7xB,KAAK,EAAE;MAAE,CAAC;MACvCnP,IAAI,EAAE;QAACghC,WAAW,EAAE,CAAC,MAAM,CAAC;QAAE7xB,KAAK,EAAE;MAAE,CAAC;MACxC8xB,eAAe,EAAE;QAACD,WAAW,EAAE,CAAC,QAAQ,CAAC;QAAE7xB,KAAK,EAAE;MAAK,CAAC;MACxD+xB,OAAO,EAAE;QAAC/xB,KAAK,EAAE;MAAE,CAAC;MACpBvH,QAAQ,EAAE;QAACuH,KAAK,EAAE,IAAI;QAAE6xB,WAAW,EAAE,CAAC,UAAU;MAAC,CAAC;MAClD1nB,eAAe,EAAE;QAACnK,KAAK,EAAE;MAAI;KAC9B;IAEO,KAAAgyB,OAAO,GAAG,IAAIxB,iDAAe,CAAQ,IAAI,CAACp5B,KAAK,CAAC;IACjD,KAAA66B,MAAM,GAAG,IAAI,CAACD,OAAO,CAACzyB,YAAY,EAAE;IACpC,KAAAO,QAAQ,GAAoBoE,MAAM,CAACksB,IAAI,CAAC,IAAI,CAACh5B,KAAK,CAAC,CACvD86B,MAAM,CAAC,CAAC/hC,UAAU,EAAEgiC,IAAiB,KAAI;MACxChiC,UAAU,CAAC,GAAGgiC,IAAI,GAAG,CAAC,GAAG,IAAI,CAACF,MAAM,CAAC16B,IAAI,CACvCuL,yCAAG,CAAC1L,KAAK,IAAIA,KAAK,CAAC+6B,IAAI,CAAC,CAACnyB,KAAK,CAAC,EAC/B7C,0DAAoB,CAAC,CAACi1B,EAAE,EAAEC,EAAE,KAAKD,EAAE,EAAEE,QAAQ,EAAE,KAAKD,EAAE,EAAEC,QAAQ,EAAE,CAAC,EACnEvkB,yCAAG,CAACwkB,CAAC,IAAIhpB,OAAO,CAACC,GAAG,CAAC,GAAG2oB,IAAI,wBAAwBI,CAAC,EAAE,CAAC,CAAC,CAE1D;MACD,OAAOpiC,UAAU;IACnB,CAAC,EAAE,EAAqB,CAAC;IAGzB8B,KAAK,CAACugC,aAAa,CAACh7B,SAAS;MAAA,IAAAi7B,IAAA,GAAAC,yJAAA,CAAC,WAAM92B,MAAM,EAAG;QAC3C,KAAK,MAAM+2B,SAAS,IAAIhB,KAAI,CAACv6B,KAAK,EAAE;UAClC,MAAMomB,KAAK,GAAGmU,KAAI,CAACv6B,KAAK,CAACu7B,SAAS,CAAC;UACnC,MAAMzrB,MAAM,GAAa,CAACyrB,SAAS,EAAE,IAAGnV,KAAK,CAACqU,WAAW,IAAI,EAAE,EAAC;UAChE,MAAMzqB,KAAK,GAAGF,MAAM,CAACkT,IAAI,CAAChT,KAAK,IAAIxL,MAAM,CAACmQ,GAAG,CAAC3E,KAAK,CAAC,CAAC;UACrD,IAAIA,KAAK,EAAE;YACT,MAAMwrB,WAAW,GAAGpV,KAAK,CAACxd,KAAK;YAC/B,IAAIA,KAAK,GAAGpE,MAAM,CAACjD,GAAG,CAACyO,KAAK,CAAE;YAC9B,IAAIoqB,+CAAO,CAAChU,KAAK,CAACxd,KAAK,CAAC,EAAE;cACxB,MAAM6yB,QAAQ,GAAG7yB,KAAM;cACvBwd,KAAK,CAACxd,KAAK,GAAG6yB,QAAQ,CAAC92B,KAAK,CAAC,GAAG,CAAC,CAAC+G,GAAG,CAACyvB,CAAC,IAAIA,CAAC,CAACO,MAAM,CAAC,CAAC,CAAC,CAAClrB,KAAK,CAAC,IAAI,CAAC,GAAGmrB,QAAQ,CAACR,CAAC,CAAC,GAAGA,CAAC,CAAC;cACrF,MAAMS,QAAQ,GAAGxV,KAAK,CAACxd,KAAK,CAACkF,IAAI,CAACwsB,4CAAQ,CAAC;cAC3C,IAAIsB,QAAQ,EAAE;gBACZxV,KAAK,CAACxd,KAAK,SAASizB,OAAO,CAACC,GAAG,CAAC1V,KAAK,CAACxd,KAAK,CAAC8C,GAAG,CAAEyvB,CAAkB,IAAKZ,KAAI,CAACwB,UAAU,CAACZ,CAAC,CAAC,CAAC,CAAC;gBAC5FZ,KAAI,CAAC3uB,GAAG,CAAC2vB,SAAS,EAAEnV,KAAK,CAACxd,KAAK,CAAC;;aAEnC,MAAM,IAAIyxB,iDAAS,CAACjU,KAAK,CAACxd,KAAK,CAAC,EAAE;cACjCwd,KAAK,CAACxd,KAAK,GAAGA,KAAK,KAAK,MAAM;aAC/B,MAAM,IAAIA,KAAK,CAAC8yB,MAAM,CAAC,CAAC,CAAC,CAAClrB,KAAK,CAAC,IAAI,CAAC,EAAE;cACtC+pB,KAAI,CAAC3uB,GAAG,CAAC2vB,SAAS,QAAQhB,KAAI,CAACyB,UAAU,CAACL,QAAQ,CAAC/yB,KAAK,CAAC,CAAC,CAAC;aAC5D,MAAM;cACLwd,KAAK,CAACxd,KAAK,GAAGA,KAAK;;;;QAIzB,IAAI2xB,KAAI,CAACC,SAAS,EAAED,KAAI,CAACK,OAAO,CAAC71B,IAAI,CAACw1B,KAAI,CAACv6B,KAAK,CAAC;MACnD,CAAC;MAAA,iBAAAi8B,EAAA;QAAA,OAAAZ,IAAA,CAAA/iC,KAAA,OAAA4jC,SAAA;MAAA;IAAA,IAAC;EACJ;EAEMH,UAAUA,CAACvoB,EAAmB;IAAA,IAAA2oB,MAAA;IAAA,OAAAb,yJAAA;MAClC,OAAOhB,gDAAQ,CAAC9mB,EAAE,CAAC,GAAG2oB,MAAI,CAACH,UAAU,CAACxoB,EAAE,CAAC,GAAGA,EAAE;IAAC;EACjD;EAEMwoB,UAAUA,CAACp8B,IAAY;IAAA,IAAAw8B,MAAA;IAAA,OAAAd,yJAAA;MAC3B,OAAOnB,oDAAc,CAACiC,MAAI,CAAClJ,IAAI,CAAC3xB,GAAG,CAAC,GAAG0xB,kEAAW,CAACI,IAAI,8BAA8BzzB,IAAI,OAAO,EAAE;QAAC6E,YAAY,EAAE;MAAM,CAAC,CAAC,CAAC;IAAA;EAC5H;EAEAlD,GAAGA,CAAwByO,KAAQ;IACjC,OAAO,IAAI,CAAChQ,KAAK,CAACgQ,KAAK,CAAC,CAACpH,KAAK;EAChC;EAEAgD,GAAGA,CAAwBoE,KAAQ,EAAEpH,KAAwB,EAAE4xB,SAAS,GAAG,IAAI;IAC7E,IAAI,CAACx6B,KAAK,CAACgQ,KAAK,CAAC,CAACpH,KAAK,GAAGA,KAAK;IAC/B,IAAI,CAAC4xB,SAAS,GAAGA,SAAS;IAC1B,IAAI,CAAC6B,kBAAkB,EAAE;EAC3B;EAEA;EACAA,kBAAkBA,CAAA;IAChB,OAAO,IAAI,CAACh4B,MAAM,CAAC+J,QAAQ,CAAC,EAAE,EAAE;MAC9B8X,WAAW,EAAE;QACX,GAAGpZ,MAAM,CAACwvB,OAAO,CAAC,IAAI,CAACt8B,KAAK,CAAC,CAC1B4E,MAAM,CAAC,CAAC,CAACoL,KAAK,EAAEoW,KAAK,CAAC,KAAKA,KAAK,CAACxd,KAAK,IAAIwd,KAAK,CAACxd,KAAK,CAAC9D,MAAM,KAAK,CAAC,CAAC,CACnEg2B,MAAM,CAAC,CAACxF,GAAG,EAAE,CAACtlB,KAAK,EAAEoW,KAAK,CAAC,MAAM;UAChC,GAAGkP,GAAG;UACN,CAACtlB,KAAK,GAAGusB,KAAK,CAACnC,OAAO,CAAChU,KAAK,CAACxd,KAAK,CAAC,GAAGwd,KAAK,CAACxd,KAAK,CAACisB,IAAI,CAAC,GAAG,CAAC,GAAGzO,KAAK,CAACxd;SACrE,CAAC,EAAE,EAAE;;KAEX,CAAC;EACJ;EAAC,QAAA9O,CAAA;qBAxFUyG,mBAAmB,EAAAnF,sDAAA,CAAAhB,2DAAA,GAAAgB,sDAAA,CAAAhB,mDAAA,GAAAgB,sDAAA,CAAAG,6DAAA;EAAA;EAAA,QAAAxB,EAAA;WAAnBwG,mBAAmB;IAAAi4B,OAAA,EAAnBj4B,mBAAmB,CAAAk4B,IAAA;IAAAC,UAAA,EAFlB;EAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1B2D;AAItB;AACP;AACjB;AAEC;AACiC;AAIR;;;AAE3D/yB,iDAAS,CAAC+2B,GAAG,CAACD,wDAAc,CAAC;AAK7B,MAAME,QAAQ,GAAGA,CAAC1uB,IAAU,EAAEkjB,GAAa,KAAK,GAAGljB,IAAI,CAACuF,EAAE,IAAI2d,GAAG,CAACxpB,CAAC,IAAIwpB,GAAG,CAACR,CAAC,EAAE;AAE9E,MAAMiM,UAAU,GAAIC,KAAe,IAAK,GAAGA,KAAK,CAACl1B,CAAC,IAAIk1B,KAAK,CAAClM,CAAC,EAAE;AAE/D,MAAMne,KAAK,GAAGA,CAA8B2e,GAAM,EAAE3e,KAAK,GAAG,CAAC,KAAO;EAClE,IAAI,OAAO2e,GAAG,KAAK,QAAQ,EAAE,OAAOA,GAAG,GAAG3e,KAAU;EACpD,OAAO;IACL7K,CAAC,EAAEwpB,GAAG,CAACxpB,CAAC,GAAG6K,KAAK;IAChBme,CAAC,EAAEQ,GAAG,CAACR,CAAC,GAAGne;GACP;AACR,CAAC;AAED,MAAMsqB,KAAK,GAAGA,CAACC,IAAc,EAAEC,IAAc,KAAKD,IAAI,CAACp1B,CAAC,KAAKq1B,IAAI,CAACr1B,CAAC,IAAIo1B,IAAI,CAACpM,CAAC,KAAKqM,IAAI,CAACrM,CAAC;AAExF,MAAMsM,GAAG,GAAIC,SAAqB,IAAc;EAC9C,MAAMC,GAAG,GAAG;IAACx1B,CAAC,EAAE,CAAC;IAAEgpB,CAAC,EAAE;EAAC,CAAC;EACxBuM,SAAS,CAACliC,OAAO,CAACm2B,GAAG,IAAG;IACtBgM,GAAG,CAACx1B,CAAC,IAAIwpB,GAAG,CAACxpB,CAAC;IACdw1B,GAAG,CAACxM,CAAC,IAAIQ,GAAG,CAACR,CAAC;EAChB,CAAC,CAAC;EACFwM,GAAG,CAACx1B,CAAC,IAAIu1B,SAAS,CAACp4B,MAAM;EACzBq4B,GAAG,CAACxM,CAAC,IAAIuM,SAAS,CAACp4B,MAAM;EACzB,OAAOq4B,GAAG;AACZ,CAAC;AACD,MAAMC,WAAW,GAAGA,CAACL,IAAc,EAAEC,IAAc,KAAI;EACrD,OAAOhN,IAAI,CAACqN,GAAG,CAACL,IAAI,CAACr1B,CAAC,GAAGo1B,IAAI,CAACp1B,CAAC,EAAE,CAAC,CAAC,GAAGqoB,IAAI,CAACqN,GAAG,CAACL,IAAI,CAACrM,CAAC,GAAGoM,IAAI,CAACpM,CAAC,EAAE,CAAC,CAAC;AACpE,CAAC;AAED,MAAM2M,IAAI,GAAGA,CAACP,IAAc,EAAEC,IAAc,KAAKhN,IAAI,CAACuN,IAAI,CAACH,WAAW,CAACL,IAAI,EAAEC,IAAI,CAAC,CAAC;AAEnF,MAAMQ,gBAAgB,GAAIN,SAAqB,IAAc;EAC3D,MAAMO,OAAO,GAAGR,GAAG,CAACC,SAAS,CAAC;EAC9B,IAAI1Y,OAAO,GAAG0Y,SAAS,CAAC,CAAC,CAAC;EAC1B,IAAItpB,GAAG,GAAGwpB,WAAW,CAAC5Y,OAAO,EAAEiZ,OAAO,CAAC;EACvC,KAAK,IAAI1E,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGmE,SAAS,CAACp4B,MAAM,EAAEi0B,CAAC,EAAE,EAAE;IACzC,MAAM5H,GAAG,GAAG+L,SAAS,CAACnE,CAAC,CAAC;IACxB,MAAMuE,IAAI,GAAGF,WAAW,CAACjM,GAAG,EAAEsM,OAAO,CAAC;IACtC,IAAIH,IAAI,GAAG1pB,GAAG,EAAE;MACdA,GAAG,GAAG0pB,IAAI;MACV9Y,OAAO,GAAG2M,GAAG;;;EAGjB,OAAO3M,OAAO;AAChB,CAAC;AAKK,MAAO/O,cAAc;EAKzBlb,YAAoB24B,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAHxB,KAAAwK,SAAS,GAA0B,IAAIlvB,GAAG,EAAoB;IAC9D,KAAAmvB,gBAAgB,GAA0B,IAAInvB,GAAG,EAAoB;IAKrE,KAAAioB,WAAW,GAAG,IAAIjoB,GAAG,CAAyB,CAC1C,CAAC,MAAM,EAAE,CAAC,MAAM,EAAE,gBAAgB,CAAC,CAAC,EACpC,CAAC,KAAK,EAAE,CAAC,KAAK,EAAE,gBAAgB,CAAC,CAAC,EAClC,CAAC,SAAS,EAAE,CAAC,SAAS,EAAE,gBAAgB,CAAC,CAAC,EAC1C,CAAC,QAAQ,EAAE,CAAC,qBAAqB,EAAE,gBAAgB,CAAC,CAAC,EACrD,CAAC,SAAS,EAAE,CAAC,SAAS,EAAE,gBAAgB,CAAC,CAAC,EAC1C,CAAC,WAAW,EAAE,CAAC,WAAW,EAAE,gBAAgB,CAAC,CAAC,EAC9C,CAAC,UAAU,EAAE,CAAC,UAAU,EAAE,gBAAgB,CAAC,CAAC,EAC5C,CAAC,MAAM,EAAE,CAAC,MAAM,EAAE,gBAAgB,CAAC,CAAC,EAEpC,CAAC,aAAa,EAAE,CAAC,SAAS,EAAE,gBAAgB,EAAE,MAAM,CAAC,CAAC,EACtD,CAAC,aAAa,EAAE,CAAC,SAAS,EAAE,gBAAgB,EAAE,MAAM,CAAC,CAAC,EACtD,CAAC,cAAc,EAAE,CAAC,UAAU,EAAE,gBAAgB,EAAE,MAAM,CAAC,CAAC,EACxD,CAAC,eAAe,EAAE,CAAC,WAAW,EAAE,gBAAgB,EAAE,MAAM,CAAC,CAAC,EAE1D,CAAC,aAAa,EAAE,CAAC,KAAK,EAAE,SAAS,CAAC,CAAC,EACnC,CAAC,kBAAkB,EAAE,CAAC,aAAa,EAAE,SAAS,CAAC,CAAC,CACjD,CACF;IAED,KAAAovB,eAAe,GAAG,IAAIpvB,GAAG,CAAyC,CAC9D,CAACjW,SAAS,EAAE,CAAC,YAAY,EAAE,UAAU,CAAC,CAAC,EACvC,CAAC,YAAY,EAAE,CAAC,YAAY,EAAE,UAAU,CAAC,CAAC,EAC1C,CAAC,YAAY,EAAE,CAAC,YAAY,EAAE,UAAU,CAAC,CAAC,EAC1C,CAAC,SAAS,EAAE,CAAC,YAAY,EAAE,UAAU,CAAC,CAAC,EAEvC,CAAC,SAAS,EAAE,CAAC,aAAa,EAAE,UAAU,CAAC,CAAC,EACxC,CAAC,aAAa,EAAE,CAAC,aAAa,EAAE,UAAU,CAAC,CAAC,EAE5C,CAAC,cAAc,EAAE,CAAC,cAAc,EAAE,UAAU,CAAC,CAAC,EAC9C,CAAC,cAAc,EAAE,CAAC,cAAc,EAAE,UAAU,CAAC,CAAC,EAE9C,CAAC,SAAS,EAAE,CAAC,SAAS,EAAE,UAAU,CAAC,CAAC,EACpC,CAAC,iBAAiB,EAAE,CAAC,SAAS,EAAE,UAAU,CAAC,CAAC,EAE5C,CAAC,WAAW,EAAE,CAAC,WAAW,EAAE,UAAU,CAAC,CAAC,EACxC,CAAC,mBAAmB,EAAE,CAAC,WAAW,EAAE,UAAU,CAAC,CAAC,CACjD,CACF;IAED,KAAAslC,WAAW,GAAG,IAAIrvB,GAAG,CAA6B,CAC9C,CAAC,OAAO,EAAE,CAAC,aAAa,EAAE,UAAU,EAAE,UAAU,CAAC,CAAC,EAClD,CAAC,WAAW,EAAE,CAAC,qBAAqB,EAAE,UAAU,EAAE,UAAU,CAAC,CAAC,EAC9D,CAAC,UAAU,EAAE,CAAC,qBAAqB,EAAE,UAAU,EAAE,UAAU,CAAC,CAAC,EAC7D,CAAC,WAAW,EAAE,CAAC,qBAAqB,EAAE,UAAU,EAAE,UAAU,CAAC,CAAC,EAC9D,CAAC,UAAU,EAAE,CAAC,WAAW,EAAE,UAAU,EAAE,UAAU,CAAC,CAAC,EACnD,CAAC,QAAQ,EAAE,CAAC,YAAY,EAAE,UAAU,EAAE,UAAU,CAAC,CAAC,CACnD,CACF;IAED,KAAAsvB,aAAa,GAAG,IAAItvB,GAAG,CAAiB,CACpC,CAAC,OAAO,EAAE,GAAG,CAAC,EACd,CAAC,WAAW,EAAE,GAAG,CAAC,EAClB,CAAC,UAAU,EAAE,IAAI,CAAC,EAClB,CAAC,WAAW,EAAE,GAAG,CAAC,EAClB,CAAC,UAAU,EAAE,GAAG,CAAC,EACjB,CAAC,QAAQ,EAAE,GAAG,CAAC,CAChB,CACF;IAGD,KAAAuvB,YAAY,GAAG,IAAIvvB,GAAG,CAA6B,CACjD,CAAC,wBAAwB,EAAE,CAAC,eAAe,EAAE,UAAU,CAAC,CAAC,EACzD,CAAC,2BAA2B,EAAE,CAAC,eAAe,EAAE,UAAU,CAAC,CAAC,EAC5D,CAAC,aAAa,EAAE,CAAC,YAAY,EAAE,UAAU,CAAC,CAAC,EAC3C,CAAC,UAAU,EAAE,CAAC,YAAY,EAAE,UAAU,CAAC,CAAC,CACzC,CAAC;IAWe,KAAAwvB,iBAAiB,GAAG,EAAE;EA/EvC;EAuEAC,MAAMA,CAACrqB,GAAW,EAAEC,GAAW;IAC7B,OAAOmc,IAAI,CAAC2C,KAAK,CAAE3C,IAAI,CAACiO,MAAM,EAAE,IAAKpqB,GAAG,GAAGD,GAAG,GAAG,CAAC,CAAC,CAAC,GAAGA,GAAG;EAC5D;EAEAsqB,IAAIA,CAAInxB,MAAW;IACjB,OAAOA,MAAM,CAAC,IAAI,CAACkxB,MAAM,CAAC,CAAC,EAAElxB,MAAM,CAACjI,MAAM,GAAG,CAAC,CAAC,CAAC;EAClD;EAIOqI,SAASA,CAAA;IACd,OAAO6lB,wCAAE,CAACzpB,qDAAM,CAAC;EACnB;EAEO40B,gBAAgBA,CAAC3qB,EAAU;IAChC,OAAO,IAAI,CAAC0f,IAAI,CAAC3xB,GAAG,CAAC,sDAAsDiS,EAAE,gBAAgB,EAAE;MAAC/O,YAAY,EAAE;IAAM,CAAC,CAAC,CAACtE,IAAI,CACzHuL,yCAAG,CAAC7B,IAAI,IAAIA,IAAI,CAAClF,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CACjC;EACH;EAEOkJ,UAAUA,CAAC2F,EAAmB;IACnC,OAAOxN,8CAAQ,CAAC;MACdQ,OAAO,EAAE,IAAI,CAAC0sB,IAAI,CAAC3xB,GAAG,CAAU,GAAG0xB,kEAAW,CAACI,IAAI,6BAA6B7f,EAAE,OAAO,CAAC;MAC1F4qB,KAAK,EAAE,IAAI,CAAClL,IAAI,CAAC3xB,GAAG,CAAa,GAAG0xB,kEAAW,CAACI,IAAI,6BAA6B7f,EAAE,aAAa;KACjG,CAAC,CAACrT,IAAI,CACLwW,yCAAG,CAAC,CAAC;MAACnQ,OAAO;MAAE43B;IAAK,CAAC,KAAKjsB,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAE5L,OAAO,EAAE,cAAc,EAAE43B,KAAK,CAAC,CAAC,EACzF1nB,+CAAS,CAAC,CAAC;MAAClQ,OAAO;MAAE43B;IAAK,CAAC,KAAI;MAC7B,IAAI53B,OAAO,CAAC63B,aAAa,KAAK9lC,SAAS,IAAI,CAACiO,OAAO,CAAC63B,aAAa,EAAE;QACjE,OAAO,IAAI,CAACF,gBAAgB,CAAC33B,OAAO,CAAC83B,QAAQ,CAAC,CAACn+B,IAAI,CACjDuW,+CAAS,CAAC6nB,eAAe,IAAIv4B,8CAAQ,CAAC;UACpCw4B,aAAa,EAAE,IAAI,CAACtL,IAAI,CAAC3xB,GAAG,CAAU,GAAG0xB,kEAAW,CAACI,IAAI,6BAA6BkL,eAAe,OAAO,CAAC;UAC7GE,WAAW,EAAE,IAAI,CAACvL,IAAI,CAAC3xB,GAAG,CAAa,GAAG0xB,kEAAW,CAACI,IAAI,6BAA6BkL,eAAe,aAAa;SACpH,CAAC,CAAC,EACH5nB,yCAAG,CAAC,CAAC;UACE8nB,WAAW;UACXD;QAAa,CACd,KAAKrsB,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEqsB,WAAW,EAAE,cAAc,EAAED,aAAa,CAAC,CAAC,EACtF9yB,yCAAG,CAAC,CAAC;UAAC+yB,WAAW;UAAED;QAAa,CAAC,KAAI;UACnCJ,KAAK,CAAC1zB,KAAK,CAACwjB,IAAI,CAAC,GAAGuQ,WAAW,CAAC/zB,KAAK,CAAC;UACtC0zB,KAAK,CAACpwB,KAAK,CAACkgB,IAAI,CAAC,GAAGuQ,WAAW,CAACzwB,KAAK,CAAC;UACtC,IAAIwwB,aAAa,CAACE,OAAO,EAAE;YACzBF,aAAa,CAACE,OAAO,CAAC1jC,OAAO,CAACiS,MAAM,IAAIA,MAAM,CAAC0xB,SAAS,GAAG,IAAI,CAAC;YAChEn4B,OAAO,CAACk4B,OAAO,GAAGl4B,OAAO,CAACk4B,OAAO,IAAI,EAAE;YACvCl4B,OAAO,CAACk4B,OAAO,CAACxQ,IAAI,CAAC,GAAGsQ,aAAa,CAACE,OAAO,CAAC;YAE9CN,KAAK,CAACQ,WAAW,GAAGR,KAAK,CAACQ,WAAW,IAAI,EAAE;YAC3CR,KAAK,CAACQ,WAAW,CAAC1Q,IAAI,CAAC,GAAGuQ,WAAW,CAACG,WAAW,CAAC;;UAEpD,OAAO;YAACp4B,OAAO;YAAE43B;UAAK,CAAC;QACzB,CAAC,CAAC,EACFrL,iDAAU,CAAC1P,GAAG,IAAI2P,wCAAE,CAAC;UAACxsB,OAAO;UAAE43B;QAAK,CAAC,CAAC,CAAC,CACxC;OACF,MAAM;QACL,OAAOpL,wCAAE,CAAC;UAACxsB,OAAO;UAAE43B;QAAK,CAAC,CAAC;;IAE/B,CAAC,CAAC,EACFznB,yCAAG,CAAEkoB,cAAc,IAAK1sB,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEysB,cAAc,CAAC,CAAC,EACtEnzB,yCAAG,CAAC,CAAC;MAAClF,OAAO;MAAE43B;IAAK,CAAC,KAAI;MAEvBjsB,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAE,IAAIqC,GAAG,CAACjO,OAAO,CAACwH,KAAK,CAACmF,OAAO,CAAClF,IAAI,IAAIA,IAAI,CAAC6wB,YAAY,CAAC,CAAC,CAAC;MAC3F3sB,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAE,IAAIqC,GAAG,CAACjO,OAAO,CAACkE,KAAK,CAACyI,OAAO,CAACpF,IAAI,IAAIA,IAAI,CAACgxB,UAAU,CAAC5rB,OAAO,CAAC6rB,GAAG,IAAIA,GAAG,CAAC12B,IAAI,CAAC,CAAC,CAAC,CAAC;MACtH6J,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAE,IAAIqC,GAAG,CAACjO,OAAO,CAACkE,KAAK,CAACyI,OAAO,CAACpF,IAAI,IAAIA,IAAI,CAACkxB,eAAe,CAAC,CAAC,CAAC;MACjG9sB,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAE,IAAIqC,GAAG,CAACjO,OAAO,CAAC04B,KAAK,CAAC/rB,OAAO,CAACgsB,IAAI,IAAIA,IAAI,CAACF,eAAe,CAAC,CAAC,CAAC;MAClG9sB,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAE,IAAIqC,GAAG,CAACjO,OAAO,CAACk4B,OAAO,CAACvrB,OAAO,CAAClG,MAAM,IAAIA,MAAM,CAACgyB,eAAe,CAAC,CAAC,CAAC;MAEzG,MAAMG,SAAS,GAAG,IAAI5wB,GAAG,CAAehI,OAAO,CAACwH,KAAK,CAACtC,GAAG,CAACuC,IAAI,IAAI,CAACA,IAAI,CAACuF,EAAE,EAAEvF,IAAI,CAAC,CAAC,CAAC;MACnF,MAAMoxB,SAAS,GAAG,IAAI7wB,GAAG,CAAehI,OAAO,CAACkE,KAAK,CAACgB,GAAG,CAACqC,IAAI,IAAI,CAACA,IAAI,CAACyF,EAAE,EAAEzF,IAAI,CAAC,CAAC,CAAC;MACnF,MAAMuxB,gBAAgB,GAAG,IAAI9wB,GAAG,CAC9B;MACE;MACA,GAAGhI,OAAO,CAACwH,KAAK,CAACtC,GAAG,CAACuC,IAAI,IAAI,CAACA,IAAI,CAACzF,UAAU,EAAEyF,IAAI,CAAC,CAAC,CAClC,CACtB;MAED,MAAMsxB,OAAO,GAAG,IAAI/wB,GAAG,EAAkB;MACzC,MAAMgxB,YAAY,GAAGh5B,OAAO,CAACwH,KAAK,CAACmF,OAAO,CAAClF,IAAI,IAAIA,IAAI,CAACwxB,QAAQ,CAAC/zB,GAAG,CAACwlB,OAAO,IAAI,CAACyL,QAAQ,CAAC1uB,IAAI,EAAEuE,KAAK,CAAC0e,OAAO,CAACI,IAAI,CAAC,CAAC,EAAE9e,KAAK,CAAC0e,OAAO,CAACK,EAAE,CAAC,CAAC,CAAC,CAAyB;MAClK,IAAI,CAACmM,SAAS,GAAG,IAAIlvB,GAAG,CAAmBgxB,YAAY,CAAC;MACxDrtB,OAAO,CAACutB,MAAM,CAACF,YAAY,CAAC16B,MAAM,KAAK,IAAI,CAAC44B,SAAS,CAACiC,IAAI,EAAE,sFAAsF,CAAC;MAEnJ,MAAMC,aAAa,GAAGp5B,OAAO,CAACwH,KAAK,CAACmF,OAAO,CAAClF,IAAI,IAAIA,IAAI,CAACwxB,QAAQ,CAAC/zB,GAAG,CAACwlB,OAAO,IAAI,CAACyL,QAAQ,CAAC1uB,IAAI,EAAEuE,KAAK,CAAC0e,OAAO,CAACK,EAAE,CAAC,CAAC,EAAE/e,KAAK,CAAC0e,OAAO,CAACI,IAAI,CAAC,CAAC,CAAC,CAAyB;MACnK,IAAI,CAACqM,gBAAgB,GAAG,IAAInvB,GAAG,CAAmBoxB,aAAa,CAAC;MAChEztB,OAAO,CAACutB,MAAM,CAACE,aAAa,CAAC96B,MAAM,IAAI,IAAI,CAAC64B,gBAAgB,CAACgC,IAAI,EAAE,kFAAkF,CAAC;MAGtJ,MAAME,aAAa,GAAG,IAAIprB,GAAG,CAASjO,OAAO,CAACk4B,OAAO,CAAChzB,GAAG,CAAEuB,MAAM,IAAKA,MAAM,CAACzE,UAAU,CAAC,CAAC;MAEzF,MAAMs3B,qBAAqB,GAAG,IAAItxB,GAAG,CAAiB4vB,KAAK,CAACQ,WAAW,EAAEzrB,OAAO,CAAC4sB,UAAU,IAAIA,UAAU,CAACzgB,MAAM,CAC7G5T,GAAG,CAACrL,KAAK,IAAI,CAACA,KAAK,EAAE0/B,UAAU,CAACngC,IAAI,CAAC,CAAC,CACtCgF,MAAM,CAACo7B,KAAK,IAAIH,aAAa,CAAClrB,GAAG,CAACqrB,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAuB,IAAI,EAAE,CAAC;MAE7E,MAAMC,sBAAsB,GAAG,IAAIzxB,GAAG,CAAmB4vB,KAAK,CAACQ,WAAW,EAAElzB,GAAG,CAACq0B,UAAU,IAAI,CAACA,UAAU,CAACngC,IAAI,EAAEmgC,UAAU,CAACzgB,MAAM,CAAC,CAAC,CAAC;MACpI,MAAM4gB,wBAAwB,GAAG,IAAI1xB,GAAG,CAAmB4vB,KAAK,CAACQ,WAAW,EAAElzB,GAAG,CAACq0B,UAAU,IAAI,CAACA,UAAU,CAAC9hB,IAAI,EAAE8hB,UAAU,CAACzgB,MAAM,CAAC,CAAC,CAAC;MACtI;MACA,MAAM6gB,eAAe,GAAG,IAAI3xB,GAAG,CAAqB4vB,KAAK,CAAC1zB,KAAK,CAACgB,GAAG,CAACqC,IAAI,IAAK,CAACA,IAAI,CAACnO,IAAI,EAAEmO,IAAI,CAAC,IAAK,CAAE,CAAC,CAAC;MACvG,MAAMqyB,WAAW,GAA2BhC,KAAK,CAAC1zB,KAAK,CAACyI,OAAO,CAACpF,IAAI,IAAG;QACrE,IAAIA,IAAI,CAAC+V,QAAQ,IAAI/V,IAAI,CAAC+V,QAAQ,CAAChf,MAAM,KAAK,CAAC,EAAE;UAAE;UACjD,OAAOiJ,IAAI,CAACxJ,UAAU,EAAEmH,GAAG,CAAC8H,EAAE,IAAI,CAACA,EAAE,EAAE2sB,eAAe,CAAC5+B,GAAG,CAACwM,IAAI,CAAC+V,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAC3Elf,MAAM,CAACo7B,KAAK,IAAIA,KAAK,CAAC,CAAC,CAAC,KAAKznC,SAAS,CAA2B;SACrE,MAAM;UACL,OAAOwV,IAAI,CAACxJ,UAAU,EAAEmH,GAAG,CAAC8H,EAAE,IAAI,CAACA,EAAE,EAAEzF,IAAI,CAAC,CAA2B;;MAE3E,CAAC,CAAC,CAACnJ,MAAM,CAACo7B,KAAK,IAAIA,KAAK,KAAKznC,SAAS,CAAC;MAEvC,MAAM8nC,cAAc,GAAG,IAAI7xB,GAAG,CAAC,CAAC,GAAG4xB,WAAW,CAAC,CAAC;MAChD,MAAME,cAAc,GAAG,IAAI9xB,GAAG,CAAC4vB,KAAK,CAACpwB,KAAK,CAACtC,GAAG,CAACuC,IAAI,IAAI,CAACA,IAAI,CAACrO,IAAI,EAAEqO,IAAI,CAAC,CAAC,CAAC;MAE1E,MAAMsyB,SAAS,GAAGA,CAACxyB,IAAgB,EAAEkG,MAAuB,KAAI;QAC9D,IAAIlG,IAAI,CAACkG,MAAM,IAAIlG,IAAI,CAACkG,MAAM,CAACnP,MAAM,GAAG,CAAC,EAAE;UACzCiJ,IAAI,CAACkG,MAAM,CAACjZ,OAAO,CAACiR,KAAK,IAAIgI,MAAM,CAACjK,GAAG,CAACiC,KAAK,CAAC,CAAC;SAChD,MAAM;UACL,IAAI8B,IAAI,CAAC+V,QAAQ,IAAI/V,IAAI,CAAC+V,QAAQ,CAAChf,MAAM,GAAG,CAAC,EAC3CiJ,IAAI,CAAC+V,QAAQ,CAAC9oB,OAAO,CAACwlC,KAAK,IAAID,SAAS,CAACJ,eAAe,CAAC5+B,GAAG,CAACi/B,KAAK,CAAE,EAAEvsB,MAAM,CAAC,CAAC,MAE9EA,MAAM,CAACjK,GAAG,CAAC+D,IAAI,CAAC;;MAEtB,CAAC;MAEDsyB,cAAc,CAACrlC,OAAO,CAAC+S,IAAI,IAAG;QAC5B,IAAIkG,MAAM,GAAG,IAAIQ,GAAG,EAAc;QAClC8rB,SAAS,CAACxyB,IAAI,EAAEkG,MAAM,CAAC;QACvBlG,IAAI,CAACkG,MAAM,GAAG,CAAC,GAAGA,MAAM,CAAC;MAC3B,CAAC,CAAC;MAEF,MAAMwsB,eAAe,GAAG,IAAIjyB,GAAG,CAAqB4vB,KAAK,CAACpwB,KAAK,CAACtC,GAAG,CAACuC,IAAI,IAAK,CAACA,IAAI,CAACrO,IAAI,EAAEqO,IAAI,CAAC,IAAK,CAAE,CAAC,CAAC;MAEvG,MAAMyyB,UAAU,GAAGl6B,OAAO,CAACkE,KAAK,CAACoD,IAAI,CAACC,IAAI,IAAIA,IAAI,CAAC4wB,SAAS,CAAC;MAC7D,MAAMgC,WAAW,GAAGn6B,OAAO,CAACkE,KAAK,CAAC9F,MAAM,CAACmJ,IAAI,IAAIA,IAAI,CAAC4wB,SAAS,CAAC;MAChE,MAAMiC,YAAY,GAAGp6B,OAAO,CAACkE,KAAK,CAAC9F,MAAM,CAACmJ,IAAI,IAAI,CAACA,IAAI,CAAC4wB,SAAS,CAAC;MAClE,MAAMkC,eAAe,GAAG,IAAIryB,GAAG,CAACmyB,WAAW,CAACj1B,GAAG,CAACqC,IAAI,IAAI,CAAC6uB,UAAU,CAAC7uB,IAAI,CAACxG,QAAQ,CAAC,EAAEwG,IAAI,CAAC,CAAC,CAAC;MAC3F,MAAM+yB,gBAAgB,GAAG,IAAItyB,GAAG,CAACoyB,YAAY,CAACl1B,GAAG,CAACqC,IAAI,IAAI,CAAC6uB,UAAU,CAAC7uB,IAAI,CAACxG,QAAQ,CAAC,EAAEwG,IAAI,CAAC,CAAC,CAAC;MAE7F,MAAMgzB,WAAW,GAAGv6B,OAAO,CAACwH,KAAK,CAACpJ,MAAM,CAACqJ,IAAI,IAAIA,IAAI,CAAC0wB,SAAS,CAAC;MAChE,MAAMqC,YAAY,GAAGx6B,OAAO,CAACwH,KAAK,CAACpJ,MAAM,CAACqJ,IAAI,IAAI,CAACA,IAAI,CAAC0wB,SAAS,CAAC;MAClE,MAAMsC,eAAe,GAAG,IAAIzyB,GAAG,CAACuyB,WAAW,CAACr1B,GAAG,CAACuC,IAAI,IAAI,CAAC2uB,UAAU,CAAC3uB,IAAI,CAAC1G,QAAQ,CAAC,EAAE0G,IAAI,CAAC,CAAC,CAAC;MAC3F,MAAMizB,gBAAgB,GAAG,IAAI1yB,GAAG,CAACwyB,YAAY,CAACt1B,GAAG,CAACuC,IAAI,IAAI,CAAC2uB,UAAU,CAAC3uB,IAAI,CAAC1G,QAAQ,CAAC,EAAE0G,IAAI,CAAC,CAAC,CAAC;MAE7F;MACA,MAAMkzB,gBAAgB,GAA+B36B,OAAO,EAAE46B,YAAY,CAACjuB,OAAO,CAACkuB,IAAI,IAAG;QACxF,MAAMC,WAAW,GAAIvG,IAAU,KAA+B;UAC5DpX,IAAI,EAAEnR,KAAK,CAACuoB,IAAI,CAACpzB,CAAC,CAAC;UACnB45B,GAAG,EAAE/uB,KAAK,CAACuoB,IAAI,CAACpK,CAAC,CAAC;UAClB1M,KAAK,EAAEzR,KAAK,CAACuoB,IAAI,CAACpzB,CAAC,GAAGozB,IAAI,CAACzW,KAAK,CAAC;UACjCkd,MAAM,EAAEhvB,KAAK,CAACuoB,IAAI,CAACpzB,CAAC,GAAGozB,IAAI,CAACrK,MAAM;SACnC,CAAC;QAEF,IAAI+Q,OAAO,GAAG,EAAE;QAChB,IAAIC,OAAO;QACX,IAAIL,IAAI,CAACM,MAAM,EAAE;UACf,MAAMC,KAAK,GAAG,CAACN,WAAW,CAACD,IAAI,CAACtG,IAAI,CAAC,EAAEuG,WAAW,CAACD,IAAI,CAACM,MAAM,CAAC,CAAC;UAChED,OAAO,GAAG50B,MAAM,CAACksB,IAAI,CAAC4I,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC9G,MAAM,CAAC,CAAC+G,QAAQ,EAAEjpC,GAAG,KAAKo3B,IAAI,CAACpc,GAAG,CAACiuB,QAAQ,EAAE7R,IAAI,CAAC8R,GAAG,CAACF,KAAK,CAAC,CAAC,CAAC,CAAChpC,GAAG,CAAC,GAAGgpC,KAAK,CAAC,CAAC,CAAC,CAAChpC,GAAG,CAAC,CAAC,CAAC,EAAEmpC,MAAM,CAACC,gBAAgB,CAAC;UAC/IN,OAAO,GAAGD,OAAO,GAAGzR,IAAI,CAACpc,GAAG,CAAC8tB,OAAO,EAAE,GAAG,CAAC;;QAG5C,MAAMO,MAAM,GAA+B,CACzC;UACEp4B,IAAI,EAAE;YACJ2J,EAAE,EAAE6tB,IAAI,CAAC7tB,EAAE,GAAG,QAAQ;YACtBvU,WAAW,EAAEoiC,IAAI,CAACpiC,WAAW;YAC7BijC,KAAK,EAAE1vB,KAAK,CAAC6uB,IAAI,CAACc,YAAY,CAACx6B,CAAC,IAAI05B,IAAI,CAACtG,IAAI,CAACpzB,CAAC,GAAG05B,IAAI,CAACtG,IAAI,CAACzW,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC0Z,iBAAiB;YAC5FoE,KAAK,EAAE5vB,KAAK,CAAC6uB,IAAI,CAACc,YAAY,CAACxR,CAAC,IAAI0Q,IAAI,CAACtG,IAAI,CAACpK,CAAC,GAAG0Q,IAAI,CAACtG,IAAI,CAACrK,MAAM,CAAC,CAAC,GAAG,IAAI,CAACsN,iBAAiB;YAC7F1Z,KAAK,EAAE9R,KAAK,CAAC6uB,IAAI,CAACtG,IAAI,CAACzW,KAAK,CAAC;YAC7BoM,MAAM,EAAEle,KAAK,CAAC6uB,IAAI,CAACtG,IAAI,CAACrK,MAAM,CAAC;YAC/B2R,MAAM,EAAEX;WACT;UACDx2B,OAAO,EAAE,CAAC,aAAa,EAAE,OAAO,CAAC;UACjC3D,QAAQ,EAAEiL,KAAK,CAAC6uB,IAAI,CAAC95B,QAAQ,CAAC;UAC9B2vB,UAAU,EAAE;SACb,CACF;QAED,IAAImK,IAAI,CAACM,MAAM,EAAE;UACfM,MAAM,CAAC/T,IAAI,CAAC;YACVrkB,IAAI,EAAE;cACJ2J,EAAE,EAAE6tB,IAAI,CAAC7tB,EAAE,GAAG,QAAQ;cACtB8Q,KAAK,EAAE9R,KAAK,CAAC6uB,IAAI,CAACM,MAAM,CAACrd,KAAK,CAAC;cAC/BoM,MAAM,EAAEle,KAAK,CAAC6uB,IAAI,CAACM,MAAM,CAACjR,MAAM,CAAC;cACjC2R,MAAM,EAAEZ;aACT;YACDv2B,OAAO,EAAE,CAAC,aAAa,EAAE,OAAO,CAAC;YACjC3D,QAAQ,EAAEiL,KAAK,CAAC;cAAC7K,CAAC,EAAE05B,IAAI,CAACM,MAAM,CAACh6B,CAAC,GAAG05B,IAAI,CAACM,MAAM,CAACrd,KAAK,GAAG,CAAC;cAAEqM,CAAC,EAAE0Q,IAAI,CAACM,MAAM,CAAChR,CAAC,GAAG0Q,IAAI,CAACM,MAAM,CAACjR,MAAM,GAAG;YAAC,CAAC,CAAC;YACtGwG,UAAU,EAAE;WACb,CAAC;;QAEJ,OAAO+K,MAAM;MACf,CAAC,CAAC;MAEF,MAAMK,cAAc,GAAG,IAAI9zB,GAAG,EAAkB;MAEhD;MACA,MAAM+zB,aAAa,GAA+B/7B,OAAO,EAAEwH,KAAK,CAACtC,GAAG,CAAC21B,IAAI,IAAG;QAC1E,IAAImB,WAAW,EAAE74B,UAAU;QAC3B,IAAI03B,IAAI,CAAC1C,SAAS,EAAE;UAClBh1B,UAAU,GAAGu3B,gBAAgB,CAAC3/B,GAAG,CAACq7B,UAAU,CAACyE,IAAI,CAAC95B,QAAQ,CAAC,CAAC,EAAEiM,EAAE,CAAC0nB,QAAQ,EAAE,IAAI8F,YAAY,CAAChe,IAAI,CAAC/U,IAAI,IAAImvB,WAAW,CAAC5qB,KAAK,CAACvE,IAAI,CAAC1G,QAAQ,CAAC,EAAEiL,KAAK,CAAC6uB,IAAI,CAAC95B,QAAQ,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAEiM,EAAE,CAAC0nB,QAAQ,EAAE;UACzL,IAAIvxB,UAAU,EAAE;YACd24B,cAAc,CAAC12B,GAAG,CAACy1B,IAAI,CAAC7tB,EAAE,CAAC0nB,QAAQ,EAAE,EAAEvxB,UAAU,CAAC;YAClD24B,cAAc,CAAC12B,GAAG,CAACjC,UAAU,EAAE03B,IAAI,CAAC7tB,EAAE,CAAC0nB,QAAQ,EAAE,CAAC;;;QAGtD,IAAI,CAACmG,IAAI,CAAC1C,SAAS,EAAE;UACnB6D,WAAW,GAAGvB,eAAe,CAAC1/B,GAAG,CAACq7B,UAAU,CAACyE,IAAI,CAAC95B,QAAQ,CAAC,CAAC,EAAEiM,EAAE,CAAC0nB,QAAQ,EAAE,IAAI6F,WAAW,CAAC/d,IAAI,CAAC/U,IAAI,IAAImvB,WAAW,CAAC5qB,KAAK,CAACvE,IAAI,CAAC1G,QAAQ,CAAC,EAAEiL,KAAK,CAAC6uB,IAAI,CAAC95B,QAAQ,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAEiM,EAAE,CAAC0nB,QAAQ,EAAE;;QAE1L,IAAI0D,WAAW,GAAG,CAAC,GAAGsB,wBAAwB,CAAC5D,OAAO,EAAE,CAAC,CAACnpB,OAAO,CAAC,CAAC,CAACsvB,YAAY,EAAEnjB,MAAM,CAAC,KAAKA,MAAM,CAAChV,QAAQ,CAAC+2B,IAAI,CAAC74B,UAAU,CAAC,GAAG,CAACi6B,YAAY,CAAC,GAAG,EAAE,CAAC;QAErJ,OAAQ;UACN54B,IAAI,EAAE;YACJ2J,EAAE,EAAE6tB,IAAI,CAAC7tB,EAAE,GAAG,EAAE;YAChB;YACAnQ,MAAM,EAAEg+B,IAAI,CAACh+B,MAAM;YACnBq/B,MAAM,EAAErB,IAAI,CAAC1S,OAAO;YACpBgQ,SAAS,EAAE0C,IAAI,CAAC1C,SAAS;YACzBgE,YAAY,EAAEtB,IAAI,CAAC1C,SAAS;YAC5Bn2B,UAAU,EAAE64B,IAAI,CAAC74B,UAAU;YAC3Bo6B,UAAU,EAAEvB,IAAI,CAAC7tB,EAAE;YACnB4qB,KAAK,EAAEkC,cAAc,CAAC/+B,GAAG,CAAC8/B,IAAI,CAAC74B,UAAU,CAAC;YAC1Co2B,WAAW,EAAEA,WAAW;YACxB4D,WAAW;YAAE74B;WACd;UACDuB,OAAO,EAAE,IAAI,CAAC0yB,eAAe,CAACr8B,GAAG,CAAC8/B,IAAI,CAACvC,YAAY,CAAC;UACpDv3B,QAAQ,EAAEiL,KAAK,CAAC6uB,IAAI,CAAC95B,QAAQ;SAC9B;MACH,CAAC,CAAC;MAGF;MACA,MAAMs7B,WAAW,GAA+Br8B,OAAO,EAAEkE,KAAK,CAACyI,OAAO,CAACkuB,IAAI,IAAG;QAC5E,MAAMn2B,OAAO,GAAG,CAAC,GAAG,IAAI,CAACurB,WAAW,CAACl1B,GAAG,CAAC8/B,IAAI,CAACpC,eAAe,CAAE,CAAC,IAAI,CAACoC,IAAI,CAACpC,eAAe,CAAClK,WAAW,EAAE,CAAC;QACxG,IAAIprB,UAA8B;QAClC,IAAI64B,WAA+B;QACnC,IAAInB,IAAI,CAACyB,SAAS,EAAE53B,OAAO,CAACgjB,IAAI,CAAC,SAAS,CAAC;QAC3C,IAAImT,IAAI,CAAC0B,SAAS,EAAE73B,OAAO,CAACgjB,IAAI,CAAC,SAAS,CAAC;QAC3C,IAAImT,IAAI,CAAC2B,OAAO,EAAE93B,OAAO,CAACgjB,IAAI,CAAC,SAAS,CAAC;QACzC,IAAImT,IAAI,CAAC4B,gBAAgB,EAAE/3B,OAAO,CAACgjB,IAAI,CAAC,kBAAkB,CAAC;QAC3D,IAAImT,IAAI,CAAC1C,SAAS,EAAE;UAClBh1B,UAAU,GAAGm3B,gBAAgB,CAACv/B,GAAG,CAACq7B,UAAU,CAACyE,IAAI,CAAC95B,QAAQ,CAAC,CAAC,EAAEiM,EAAE,CAAC0nB,QAAQ,EAAE;UAC3E,IAAI,CAACvxB,UAAU,EAAE;YACfA,UAAU,GAAGi3B,YAAY,CAAC5d,IAAI,CAACjV,IAAI,IAAIm1B,cAAc,CAAC7B,IAAI,EAAEtzB,IAAI,EAAE,GAAG,CAAC,CAAC,EAAEyF,EAAE,CAAC0nB,QAAQ,EAAE;;UAExF,IAAIvxB,UAAU,EAAE;YACd24B,cAAc,CAAC12B,GAAG,CAACy1B,IAAI,CAAC7tB,EAAE,CAAC0nB,QAAQ,EAAE,EAAEvxB,UAAU,CAAC;YAClD24B,cAAc,CAAC12B,GAAG,CAACjC,UAAU,EAAE03B,IAAI,CAAC7tB,EAAE,CAAC0nB,QAAQ,EAAE,CAAC;;;QAGtD,IAAI,CAACmG,IAAI,CAAC1C,SAAS,EAAE6D,WAAW,GAAG3B,eAAe,CAACt/B,GAAG,CAACq7B,UAAU,CAACyE,IAAI,CAAC95B,QAAQ,CAAC,CAAC,EAAEiM,EAAE,CAAC0nB,QAAQ,EAAE,EAAC;QACjG,IAAIhwB,OAAO,CAAC4C,IAAI,CAAC2C,KAAK,IAAIA,KAAK,KAAK,KAAK,CAAC,EAAE4wB,IAAI,CAACtG,IAAI,CAACrK,MAAM,IAAI,EAAE;QAClE,IAAIxlB,OAAO,CAAC4C,IAAI,CAAC2C,KAAK,IAAIA,KAAK,KAAK,MAAM,CAAC,EAAE4wB,IAAI,CAACtG,IAAI,CAACrK,MAAM,IAAI,CAAC;QAElE,MAAMiS,YAAY,GAAGtB,IAAI,CAAC1C,SAAS,IAAIzzB,OAAO,CAAC4C,IAAI,CAAC2C,KAAK,IAAIA,KAAK,KAAK,SAAS,CAAC,IAAI4wB,IAAI,CAACtC,UAAU,CAACjxB,IAAI,CAACq1B,SAAS,IAAIA,SAAS,CAACxE,SAAS,CAAC;QAC3I0C,IAAI,CAACsB,YAAY,GAAGA,YAAY;QAChC,IAAIhM,IAAI,GAAGp+B,SAAS;QACpB,IAAI+rB,KAAK,GAAG9R,KAAK,CAAC6uB,IAAI,CAACtG,IAAI,CAACzW,KAAK,CAAC;QAClC,IAAIoM,MAAM,GAAGle,KAAK,CAAC6uB,IAAI,CAACtG,IAAI,CAACrK,MAAM,CAAC;QACpC,IAAI0S,WAAW,GAAG/C,cAAc,CAAC9+B,GAAG,CAAC8/B,IAAI,CAAC7tB,EAAE,CAAC,EAAEW,UAAU;QACzD,IAAIjJ,OAAO,CAAC4C,IAAI,CAAC2C,KAAK,IAAIA,KAAK,KAAK,SAAS,CAAC,EAAE;UAC9CkmB,IAAI,GAAG,IAAI,CAACC,qBAAqB,CAAC;YAAC,GAAGyK,IAAI;YAAE/4B,IAAI,EAAE;UAAS,CAAC,EAAEgc,KAAK,EAAEoM,MAAM,EAAE0S,WAAW,CAAC;SAC1F,MAAM,IAAIl4B,OAAO,CAAC4C,IAAI,CAAC2C,KAAK,IAAIA,KAAK,KAAK,UAAU,CAAC,EAAE;UACtDkmB,IAAI,GAAG,mFAAmFyM,WAAW,oDAAoD9e,KAAK,GAAG,CAAC,GAAG,CAAC,kBAAkBoM,MAAM,aAAa;;QAE7M,IAAIiS,YAAY,IAAI,CAACtB,IAAI,CAAC1C,SAAS,EAAE;UACnC2D,cAAc,CAAC12B,GAAG,CAACy1B,IAAI,CAAC7tB,EAAE,CAAC0nB,QAAQ,EAAE,EAAEmG,IAAI,CAAC7tB,EAAE,CAAC0nB,QAAQ,EAAE,CAAC;;QAE5D,MAAMyD,SAAS,GAAG,CAAC0C,IAAI,CAAC0B,SAAS,IAAI1B,IAAI,CAAC1C,SAAS;QACnD,MAAMj0B,KAAK,GAA+B,CACxC;UACEb,IAAI,EAAE;YACJ2J,EAAE,EAAE6tB,IAAI,CAAC7tB,EAAE,GAAG,EAAE;YAChBhL,UAAU,EAAE64B,IAAI,CAAC74B,UAAU;YAC3BvJ,WAAW,EAAEoiC,IAAI,CAACpiC,WAAW,CAACy3B,OAAO,CAAC,YAAY,EAAE,UAAU,CAAC;YAC/DhG,MAAM,EAAEA,MAAM;YACdpM,KAAK,EAAEA,KAAK;YACZ8Z,KAAK,EAAEiC,cAAc,CAAC9+B,GAAG,CAAC8/B,IAAI,CAAC7tB,EAAE,CAAC;YAClC8hB,GAAG,EAAE8N,WAAW;YAChBzM,IAAI;YACJgI,SAAS;YACTgE,YAAY;YACZH,WAAW;YACX74B;WACD;UACDuB,OAAO,EAAEA,OAAO;UAChB3D,QAAQ,EAAEiL,KAAK,CAAC6uB,IAAI,CAAC95B,QAAQ;SAC9B,CACF;QACD,IAAI85B,IAAI,CAACgC,eAAe,EAAE;UACxB34B,KAAK,CAACwjB,IAAI,CAAC,GAAGmT,IAAI,CAACgC,eAAe,CAAC33B,GAAG,CAAC43B,GAAG,KAAK;YAC7Cz5B,IAAI,EAAE;cACJ2J,EAAE,EAAE6tB,IAAI,CAAC7tB,EAAE,GAAG,GAAG,GAAG8vB,GAAG,CAAC96B,UAAU;cAClCA,UAAU,EAAE86B,GAAG,CAAC96B,UAAU;cAC1B+6B,MAAM,EAAElC,IAAI,CAAC7tB,EAAE;cACfgwB,cAAc,EAAEnC,IAAI,CAAC74B,UAAU;cAC/BvJ,WAAW,EAAEqkC,GAAG,CAACG,KAAK;cACtB/S,MAAM,EAAEle,KAAK,CAAC8wB,GAAG,CAACI,KAAK,CAACx0B,CAAC,CAACyhB,CAAC,GAAG2S,GAAG,CAACI,KAAK,CAACz0B,CAAC,CAAC0hB,CAAC,CAAC;cAC5CrM,KAAK,EAAE9R,KAAK,CAAC8wB,GAAG,CAACI,KAAK,CAACx0B,CAAC,CAACvH,CAAC,GAAG27B,GAAG,CAACI,KAAK,CAACz0B,CAAC,CAACtH,CAAC,CAAC;cAC3Cg3B,SAAS;cACTgE,YAAY;cACZH,WAAW;cACX74B;aACD;YACDuB,OAAO,EAAE,cAAc;YACvB3D,QAAQ,EAAEiL,KAAK,CAAC8wB,GAAG,CAACI,KAAK,CAACC,MAAM;WACjC,CAAC,CAAC,CAAC;;QAEN,OAAOj5B,KAAK;MACd,CAAC,CAAC;MAEF;MACA,MAAM4G,WAAW,GAA+B9K,OAAO,EAAEk4B,OAAO,CAAChzB,GAAG,CAAC21B,IAAI,IAAG;QAC1E,OAAO;UACLx3B,IAAI,EAAE;YACJ2J,EAAE,EAAE6tB,IAAI,CAAC7tB,EAAE,GAAG,EAAE;YAChBvU,WAAW,EAAEoiC,IAAI,CAACpiC,WAAW;YAC7ByxB,MAAM,EAAEle,KAAK,CAAC6uB,IAAI,CAACtG,IAAI,CAACrK,MAAM,CAAC;YAC/BpM,KAAK,EAAE9R,KAAK,CAAC6uB,IAAI,CAACtG,IAAI,CAACzW,KAAK,CAAC;YAC7B9b,UAAU,EAAE64B,IAAI,CAAC74B,UAAU;YAC3Bm2B,SAAS,EAAE0C,IAAI,CAAC1C,SAAS;YACzBh1B,UAAU,EAAE03B,IAAI,CAAC1C,SAAS;YAC1BiF,eAAe,EAAEpxB,KAAK,CAAC6uB,IAAI,CAACvQ,IAAI;WACjC;UACD5lB,OAAO,EAAE,CAAC,QAAQ,CAAC;UACnB3D,QAAQ,EAAEi2B,gBAAgB,CAACyC,sBAAsB,CAAC1+B,GAAG,CAAC8/B,IAAI,CAAC74B,UAAU,CAAE,CAACkD,GAAG,CAACk3B,UAAU,IAAItD,gBAAgB,CAAC/9B,GAAG,CAACqhC,UAAU,CAAE,CAAC,CAACl3B,GAAG,CAACuC,IAAI,IAAIuE,KAAK,CAACvE,IAAK,CAAC1G,QAAQ,CAAC,CAAC;SAChK;MACH,CAAC,CAAC;MAEFs8B,YAAY,CAACvyB,WAAW,CAAC;MAEzB,MAAMwyB,CAAC,GAAG,CAAC;MACX,MAAMC,UAAU,GAAG,GAAG;MACtB,MAAMC,WAAW,GAAG,CAAC;MACrB,MAAMC,eAAe,GAAG,CAAC,GAAGH,CAAC;MAC7B,MAAMI,QAAQ,GAAGF,WAAW;MAG5B;;;;MAIA,MAAMh2B,KAAK,GACTxH,OAAO,CAACkE,KAAK,CAACyI,OAAO,CAACpF,IAAI,IAAG;QACzB,OAAOA,IAAI,CAACgxB,UAAU,CAACrzB,GAAG,CAACy3B,SAAS,IAAG;UACrC,MAAM93B,QAAQ,GAAG+zB,SAAS,CAAC79B,GAAG,CAAC4hC,SAAS,CAACgB,MAAM,CAAE;UAEjD,MAAMC,SAAS,GAAG5xB,KAAK,CAACnH,QAAQ,CAAC9D,QAAQ,CAAC;UAC1C,MAAM88B,KAAK,GAAG7xB,KAAK,CAACzE,IAAI,CAACxG,QAAQ,CAAC;UAElC,MAAM,CAACL,MAAM,EAAEE,MAAM,CAAC,GAAG+7B,SAAS,CAAC76B,IAAI,KAAK,QAAQ,GAClD,CAACyF,IAAI,EAAE1C,QAAQ,CAAC,GAChB,CAACA,QAAQ,EAAE0C,IAAI,CAAC;UAElB,MAAMu2B,OAAO,GAAG9xB,KAAK,CAACtL,MAAM,CAACK,QAAQ,CAAC;UACtC,MAAMg9B,OAAO,GAAG/xB,KAAK,CAACpL,MAAM,CAACG,QAAQ,CAAC;UAEtC,IAAIi9B,MAAM,GAAGrB,SAAS,CAAC1D,QAAQ,CAC5BtsB,OAAO,CAAC,CAAC+d,OAAO,EAAE6H,CAAC,KAAKA,CAAC,KAAK,CAAC,GAAG,CAAC7H,OAAO,CAACI,IAAI,EAAEJ,OAAO,CAACK,EAAE,CAAC,GAAG,CAACL,OAAO,CAACK,EAAE,CAAC,CAAC,CAC5E7lB,GAAG,CAACylB,GAAG,IAAI3e,KAAK,CAAC2e,GAAG,CAAC,CAAC;UACzB,IAAIgS,SAAS,CAAC76B,IAAI,KAAK,QAAQ,EAAEk8B,MAAM,CAACzhB,OAAO,EAAE;UACjD,IAAIyhB,MAAM,CAAC1/B,MAAM,KAAK,CAAC,EAAE0/B,MAAM,CAACtW,IAAI,CAACkW,SAAS,CAAC;UAE/C,IAAI,CAACK,WAAW,CAACp5B,QAAQ,EAAEm5B,MAAM,EAAE,UAAU,EAAEF,OAAO,CAAC;UACvD,IAAI,CAACG,WAAW,CAACp5B,QAAQ,EAAEm5B,MAAM,EAAE,SAAS,EAAED,OAAO,CAAC;UAEtD,IAAI,CAACjT,IAAI,EAAEC,EAAE,CAAC,GAAG,CAACiT,MAAM,CAACE,KAAK,EAAG,EAAEF,MAAM,CAACG,GAAG,EAAG,CAAC;UACjDrT,IAAI,GAAGA,IAAI,IAAI+S,KAAK,CAAC,CAAC;UACtB9S,EAAE,GAAGA,EAAE,IAAI6S,SAAS,CAAC,CAAC;UACtB,IAAIjB,SAAS,CAAC76B,IAAI,KAAK,UAAU,EAAE;YACjCipB,EAAE,GAAG/e,KAAK,CAAC2wB,SAAS,CAACyB,QAAQ,CAACjB,MAAM,CAAC;;UAGvC;UACA,MAAMkB,SAAS,GAAG,IAAI,CAACC,kBAAkB,CAACxT,IAAI,EAAEC,EAAE,EAAEiT,MAAM,CAAC;UAE3D,MAAMt5B,OAAO,GAAG,CAAC,GAAG,IAAI,CAAC2yB,WAAW,CAACt8B,GAAG,CAAC4hC,SAAS,CAAC76B,IAAI,CAAE,CAAC;UAC1D,IAAI+C,QAAQ,CAACy3B,SAAS,EAAE53B,OAAO,CAACgjB,IAAI,CAAC,SAAS,CAAC;UAC/C,IAAIngB,IAAI,CAACi1B,OAAO,EAAE93B,OAAO,CAACgjB,IAAI,CAAC,SAAS,CAAC;UACzC,IAAI4R,qBAAqB,CAACnrB,GAAG,CAACtJ,QAAQ,CAAC7C,UAAU,CAAC,EAAE0C,OAAO,CAACgjB,IAAI,CAAC,QAAQ,CAAC;UAE1E,IAAI6W,CAAC,GAAGzH,IAAI,CAAChM,IAAI,EAAEC,EAAE,CAAC;UACtB,IAAIuL,KAAK,CAACxL,IAAI,EAAE8S,SAAS,CAAC,IAAItH,KAAK,CAACvL,EAAE,EAAE6S,SAAS,CAAC,EAAEW,CAAC,IAAId,eAAe;UACxE,IAAI/4B,OAAO,CAACZ,QAAQ,CAAC,qBAAqB,CAAC,IAAIY,OAAO,CAACZ,QAAQ,CAAC,WAAW,CAAC,IAAIY,OAAO,CAACZ,QAAQ,CAAC,YAAY,CAAC,EAAEy6B,CAAC,IAAIhB,UAAU,GAAGD,CAAC;UACnI;UACA3xB,OAAO,CAACutB,MAAM,CAACqF,CAAC,GAAGb,QAAQ,EAAE,GAAG1wB,EAAE,KAAKhN,OAAO,CAACvH,WAAW,KAAKyhC,UAAU,WAAWr1B,QAAQ,CAAC7C,UAAU,WAAWuF,IAAI,CAACvF,UAAU,mDAAmDgL,EAAE,cAAcnI,QAAQ,CAAC7C,UAAU,cAAcuF,IAAI,CAACvF,UAAU,mDAAmDgL,EAAE,WAAWnI,QAAQ,CAAC7C,UAAU,SAASuF,IAAI,CAACvF,UAAU,EAAE,CAAC;UAElW,IAAIg6B,WAAW,EAAE74B,UAAU;UAC3B,IAAIw5B,SAAS,CAACxE,SAAS,EAAE;YACvB;YACA;YACA;YACA;YAEAh1B,UAAU,GAAG24B,cAAc,CAAC/gC,GAAG,CAACwM,IAAI,CAACyF,EAAE,CAAC0nB,QAAQ,EAAE,CAAC,IAAIoH,cAAc,CAAC/gC,GAAG,CAAC8J,QAAQ,CAACmI,EAAE,CAAC0nB,QAAQ,EAAE,CAAC;;UAEnG,IAAI,CAACiI,SAAS,CAACxE,SAAS,EAAE;YACxB;YACA6D,WAAW,GAAGz0B,IAAI,CAACgxB,UAAU,CAAC/b,IAAI,CAACgiB,cAAc,IAAIA,cAAc,KAAK7B,SAAS,IAAI6B,cAAc,CAACrG,SAAS,IAAIsG,SAAS,CAAC7F,SAAS,CAAC79B,GAAG,CAACyjC,cAAc,CAACb,MAAM,CAAE,CAAC58B,QAAQ,EAAE8D,QAAQ,CAAC9D,QAAQ,CAAC,CAAC,EAAE48B,MAAM;YACtM;YAEA;YACA3B,WAAW,GAAGA,WAAW,IAAI,CAAC3B,eAAe,CAACt/B,GAAG,CAACq7B,UAAU,CAAC7uB,IAAI,CAACxG,QAAQ,CAAC,CAAC,IAAI05B,eAAe,CAAC1/B,GAAG,CAACq7B,UAAU,CAACvxB,QAAQ,CAAC9D,QAAQ,CAAC,CAAC,GAAGiM,EAAE;YACvI;;;UAGF,MAAMvF,IAAI,GAA6B;YACrCpE,IAAI,EAAE;cACJ2J,EAAE,EAAE,IAAI,CAAC0xB,SAAS,CAACh+B,MAAM,EAAEi8B,SAAS,EAAE/7B,MAAM,EAAEm4B,OAAO,CAAC;cACtDnB,KAAK,EAAEqC,eAAe,CAACl/B,GAAG,CAAC8J,QAAQ,CAAC7C,UAAU,CAAC;cAC/CtB,MAAM,EAAEA,MAAM,CAACsM,EAAE,GAAG,EAAE;cACtBpM,MAAM,EAAEA,MAAM,CAACoM,EAAE,GAAG,EAAE;cACtB2xB,aAAa,EAAEhC,SAAS,CAACgC,aAAa,CAACv8B,KAAK;cAC5Cw8B,OAAO,EAAEP,SAAS,CAACO,OAAO,CAACvQ,IAAI,CAAC,GAAG,CAAC;cACpCwQ,SAAS,EAAER,SAAS,CAACQ,SAAS,CAACxQ,IAAI,CAAC,GAAG,CAAC;cACxCyQ,cAAc,EAAE,IAAI,CAACC,QAAQ,CAACjB,OAAO,EAAEhT,IAAI,CAAC;cAC5CkU,cAAc,EAAE,IAAI,CAACD,QAAQ,CAAChB,OAAO,EAAEhT,EAAE,CAAC;cAC1C0H,OAAO,EAAE6G,qBAAqB,CAACv+B,GAAG,CAAC8J,QAAQ,CAAC7C,UAAU,CAAC;cACvDA,UAAU,EAAE6C,QAAQ,CAAC7C,UAAU;cAC/Bo6B,UAAU,EAAEv3B,QAAQ,CAACmI,EAAE;cACvBmrB,SAAS,EAAEtzB,QAAQ,CAACszB,SAAS;cAC7BgE,YAAY,EAAEt3B,QAAQ,CAACszB,SAAS;cAChCh1B,UAAU;cAAE64B;aACb;YACDt3B,OAAO,EAAEA;WACV;UACD,OAAO+C,IAAI;QACb,CAAC,CAAC;MACJ,CAAC,CACF;MAEH,MAAMw3B,SAAS,GAA+Bj/B,OAAO,CAAC04B,KAAK,EACvDt6B,MAAM,CAACu6B,IAAI,IAAI,CAACA,IAAI,CAACF,eAAe,CAAC30B,QAAQ,CAAC,WAAW,CAAC,IAAI60B,IAAI,CAAC97B,MAAM,CAAC,CAAC,CAAC,CAACmQ,EAAE,KAAK2rB,IAAI,CAACxQ,OAAO,CAAC,CAAC,CAAC,CAACnb,EAAE,CAAC,EACvG9H,GAAG,CAACyzB,IAAI,IAAG;QACT,MAAMj4B,MAAM,GAAGm4B,SAAS,CAAC99B,GAAG,CAAC49B,IAAI,CAAC97B,MAAM,CAAC,CAAC,CAAC,CAACmQ,EAAE,CAAE;QAChD,MAAMpM,MAAM,GAAGi4B,SAAS,CAAC99B,GAAG,CAAC49B,IAAI,CAACxQ,OAAO,CAAC,CAAC,CAAC,CAACnb,EAAE,CAAE;QAEjD,MAAM8wB,OAAO,GAAG9xB,KAAK,CAACtL,MAAM,CAACK,QAAQ,CAAC;QACtC,MAAMg9B,OAAO,GAAG/xB,KAAK,CAACpL,MAAM,CAACG,QAAQ,CAAC;QAEtC,IAAIi9B,MAAM,GAAGrF,IAAI,CAACM,QAAQ,CACvBtsB,OAAO,CAAC,CAAC+d,OAAO,EAAE6H,CAAC,KAAKA,CAAC,KAAK,CAAC,GAAG,CAAC7H,OAAO,CAACI,IAAI,EAAEJ,OAAO,CAACK,EAAE,CAAC,GAAG,CAACL,OAAO,CAACK,EAAE,CAAC,CAAC,CAC5E7lB,GAAG,CAACylB,GAAG,IAAI3e,KAAK,CAAC2e,GAAG,CAAC,CAAC;QAEzB,IAAI,CAACG,IAAI,EAAEC,EAAE,CAAC,GAAG,CAACiT,MAAM,CAACE,KAAK,EAAG,EAAEF,MAAM,CAACG,GAAG,EAAG,CAAC;QACjDrT,IAAI,GAAGA,IAAI,IAAIgT,OAAO,CAAC,CAAC;QACxB/S,EAAE,GAAGA,EAAE,IAAIgT,OAAO,CAAC,CAAC;QAEpB;QACA,MAAMM,SAAS,GAAG,IAAI,CAACC,kBAAkB,CAACxT,IAAI,EAAEC,EAAE,EAAEiT,MAAM,CAAC;QAE3D,MAAMt5B,OAAO,GAAG,CAAC,GAAG,IAAI,CAAC6yB,YAAY,CAACx8B,GAAG,CAAC49B,IAAI,CAACF,eAAe,CAAE,CAAC;QACjE,IAAIE,IAAI,CAAC2D,SAAS,EAAE53B,OAAO,CAACgjB,IAAI,CAAC,SAAS,CAAC;QAC3C,MAAMyU,YAAY,GAAGxD,IAAI,CAACR,SAAS,IACjCU,SAAS,CAAC99B,GAAG,CAAC49B,IAAI,CAAC97B,MAAM,CAAC,CAAC,CAAC,CAACmQ,EAAE,CAAC,EAAEmvB,YAAY,IAC9CtD,SAAS,CAAC99B,GAAG,CAAC49B,IAAI,CAACxQ,OAAO,CAAC,CAAC,CAAC,CAACnb,EAAE,CAAC,EAAEmvB,YAAY;QAEjD,OAAO;UACL94B,IAAI,EAAE;YACJ2J,EAAE,EAAE2rB,IAAI,CAAC3rB,EAAE,GAAG,EAAE;YAChBtM,MAAM,EAAEi4B,IAAI,CAAC97B,MAAM,CAAC,CAAC,CAAC,CAACmQ,EAAE,GAAG,EAAE;YAC9BpM,MAAM,EAAE+3B,IAAI,CAACxQ,OAAO,CAAC,CAAC,CAAC,CAACnb,EAAE,GAAG,EAAE;YAC/B4xB,OAAO,EAAEP,SAAS,CAACO,OAAO,CAACvQ,IAAI,CAAC,GAAG,CAAC;YACpCwQ,SAAS,EAAER,SAAS,CAACQ,SAAS,CAACxQ,IAAI,CAAC,GAAG,CAAC;YACxCyQ,cAAc,EAAE,IAAI,CAACC,QAAQ,CAACjB,OAAO,EAAEhT,IAAI,CAAC;YAC5CkU,cAAc,EAAE,IAAI,CAACD,QAAQ,CAAChB,OAAO,EAAEhT,EAAE,CAAC;YAC1CoN,SAAS,EAAEQ,IAAI,CAACR,SAAS;YACzBgE,YAAY,EAAEA;WACf;UACDz3B,OAAO,EAAEA,OAAO;UAChBgsB,UAAU,EAAE;SACb;MACH,CAAC,CACF;MAEH,OAAO;QACLxsB,KAAK,EAAE,CAAC,GAAGy2B,gBAAgB,EAAE,GAAGoB,aAAa,EAAE,GAAGM,WAAW,EAAE,GAAGvxB,WAAW,CAAC;QAC9EtD,KAAK,EAAE,CAAC,GAAGA,KAAK,EAAE,GAAGy3B,SAAS;OAC/B;IACH,CAAC,CAAC,EACF9uB,yCAAG,CAAE+rB,MAAM,IAAKvwB,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEswB,MAAM,CAAC,CAAC,CAChD;EAEH;EAEA9L,qBAAqBA,CAACyK,IAGrB,EAAE/c,KAAa,EAAEoM,MAAc,EAAEgV,SAA6B;IAC7D,IAAIrE,IAAI,CAAC/4B,IAAI,KAAK,SAAS,EACzB,OAAO,yBAAyB+4B,IAAI,CAAC7tB,EAAE,YAAY8Q,KAAK,GAAG,EAAE,aAAaoM,MAAM,GAAG,EAAE;+BAC5DuC,kEAAW,CAAC0S,EAAE,eAAeD,SAAS;+BACtCzS,kEAAW,CAAC0S,EAAE,eAAeD,SAAS;uBAC9C;IACnB,OAAOntC,SAAS;EAClB;EAEQ2sC,SAASA,CAACh+B,MAAmB,EAAEi8B,SAAwB,EAAE/7B,MAAmB,EAAEm4B,OAA4B;IAChH,IAAI4E,MAAM,GAAG,GAAGj9B,MAAM,CAACsM,EAAE,MAAM,IAAI,CAACsqB,aAAa,CAACv8B,GAAG,CAAC4hC,SAAS,CAAC76B,IAAI,CAAC,IAAIlB,MAAM,CAACoM,EAAE,EAAE;IAEpF,IAAI+rB,OAAO,CAAC5qB,GAAG,CAACwvB,MAAM,CAAC,EAAE;MACvB,IAAI9O,KAAK,GAAGkK,OAAO,CAACh+B,GAAG,CAAC4iC,MAAM,CAAE;MAChC5E,OAAO,CAAC3zB,GAAG,CAACu4B,MAAM,EAAE9O,KAAK,EAAE,CAAC;MAC5B8O,MAAM,IAAI,KAAK9O,KAAK,GAAG;MACvBljB,OAAO,CAACyzB,IAAI,CAAC,uBAAuB,EAAEzB,MAAM,CAAC;KAC9C,MAAM;MACL5E,OAAO,CAAC3zB,GAAG,CAACu4B,MAAM,EAAE,CAAC,CAAC;;IAExB,OAAOA,MAAM;EACf;EAEQM,WAAWA,CAACx2B,IAAU,EAAEu2B,MAAkB,EAAEqB,SAAiC,EAAEC,IAAc;IACnG,MAAMC,OAAO,GAAGpJ,QAAQ,CAAC1uB,IAAI,EAAE63B,IAAI,CAAC;IACpC,IAAID,SAAS,KAAK,SAAS,EAAE;MAC3B,MAAMn6B,GAAG,GAAG,IAAI,CAACgyB,SAAS;MAC1B,IAAIvM,GAAG,GAAGwL,QAAQ,CAAC1uB,IAAI,EAAEu2B,MAAM,CAACwB,EAAE,CAAC,CAAC,CAAC,CAAE,CAAC;MACxC,OAAOt6B,GAAG,CAACiJ,GAAG,CAACwc,GAAG,CAAC,IAAIA,GAAG,KAAK4U,OAAO,EAAE;QACtCvB,MAAM,CAACtW,IAAI,CAACxiB,GAAG,CAACnK,GAAG,CAAC4vB,GAAG,CAAE,CAAC;QAC1BA,GAAG,GAAGwL,QAAQ,CAAC1uB,IAAI,EAAEu2B,MAAM,CAACwB,EAAE,CAAC,CAAC,CAAC,CAAE,CAAC;;KAEvC,MAAM;MACL,MAAMt6B,GAAG,GAAG,IAAI,CAACiyB,gBAAgB;MACjC,IAAIxM,GAAG,GAAGwL,QAAQ,CAAC1uB,IAAI,EAAEu2B,MAAM,CAACwB,EAAE,CAAC,CAAC,CAAE,CAAC;MACvC,OAAOt6B,GAAG,CAACiJ,GAAG,CAACwc,GAAG,CAAC,IAAIA,GAAG,KAAK4U,OAAO,EAAE;QACtCvB,MAAM,CAACyB,OAAO,CAACv6B,GAAG,CAACnK,GAAG,CAAC4vB,GAAG,CAAE,CAAC;QAC7BA,GAAG,GAAGwL,QAAQ,CAAC1uB,IAAI,EAAEu2B,MAAM,CAACwB,EAAE,CAAC,CAAC,CAAE,CAAC;;;EAGzC;EAEQT,QAAQA,CAACr+B,MAAgB,EAAE21B,KAAe;IAChD,OAAO,GAAGA,KAAK,CAACl1B,CAAC,GAAGT,MAAM,CAACS,CAAC,IAAIk1B,KAAK,CAAClM,CAAC,GAAGzpB,MAAM,CAACypB,CAAC,EAAE;EACtD;EAGA;;;;;;;;;;EAUQmU,kBAAkBA,CAAC59B,MAAgB,EAAEE,MAAgB,EAAE8+B,SAAqB;IAClF,MAAMrB,SAAS,GAAqB;MAACQ,SAAS,EAAE,EAAE;MAAED,OAAO,EAAE;IAAE,CAAC;IAChE,IAAIc,SAAS,CAACphC,MAAM,KAAK,CAAC,EAAE,OAAO+/B,SAAS;IAE5C,MAAMsB,UAAU,GAAG3J,iDAAK,CAAC,CAACp1B,MAAM,CAACO,CAAC,GAAGT,MAAM,CAACS,CAAC,EAAEP,MAAM,CAACupB,CAAC,GAAGzpB,MAAM,CAACypB,CAAC,CAAC,CAAC,CAAC,CAAC;IACtE,MAAMyV,WAAW,GAAG5J,iDAAK,CAAC,CAAC,CAAC2J,UAAU,CAACxV,CAAC,EAAEwV,UAAU,CAACx+B,CAAC,CAAC,CAAC,CAAC;IAAA,CACtDgM,SAAS,EAAE,CAAC,CAAC;IAChB,IAAI0yB,SAAS,GAAG7J,iDAAK,CAAC,CACpB,CAAC2J,UAAU,CAACx+B,CAAC,EAAEw+B,UAAU,CAACxV,CAAC,CAAC,EAC5B,CAACyV,WAAW,CAACz+B,CAAC,EAAEy+B,WAAW,CAACzV,CAAC,CAAC,CAC/B,CAAC,CAAC2V,GAAG,EAAE,CAAC,CAAC;IAEV,KAAK,IAAIC,KAAK,IAAIL,SAAS,EAAE;MAC3B,MAAMM,QAAQ,GAAGhK,iDAAK,CAAC,CAAC,CAAC+J,KAAK,CAAC5+B,CAAC,GAAGT,MAAM,CAACS,CAAC,EAAE4+B,KAAK,CAAC5V,CAAC,GAAGzpB,MAAM,CAACypB,CAAC,CAAC,CAAC,CAAC;MAClE,MAAM8V,QAAQ,GAAGD,QAAQ,CAACE,QAAQ,CAACL,SAAS,CAAC;MAC7CxB,SAAS,CAACO,OAAO,CAAClX,IAAI,CAACuY,QAAQ,CAACllC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;MAC1CsjC,SAAS,CAACQ,SAAS,CAACnX,IAAI,CAACuY,QAAQ,CAACllC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;;IAE9C,OAAOsjC,SAAS;EAClB;EAEO8B,aAAaA,CAAA;IAClB,MAAMC,MAAM,GAAG,GAAG;IAClB,MAAMC,OAAO,GAAG,CAAC,SAAS,EAAE,WAAW,EAAE,qBAAqB,EAAE,KAAK,EAAE,MAAM,EAAE,SAAS,EAAE,UAAU,CAAC;IACrG;IACA,MAAMC,aAAa,GAAG,CAAC,aAAa,EAAE,cAAc,EAAE,YAAY,EAAE,WAAW,EAAE,SAAS,CAAC;IAE3F,MAAMC,gBAAgB,GAA+BxK,KAAK,CAACjL,IAAI,CAAC;MAACxsB,MAAM,EAAE8hC;IAAM,CAAC,EAAE,CAACj/B,CAAC,EAAEoxB,CAAC,KAAI;MACzF,MAAMtoB,KAAK,GAAG,IAAI,CAACytB,IAAI,CAAC2I,OAAO,CAAC;MAChC,OAAO;QACL7tC,KAAK,EAAE,OAAO;QACd6Q,IAAI,EAAE;UACJ2J,EAAE,EAAEulB,CAAC,CAACmC,QAAQ,EAAE;UAChB5W,KAAK,EAAE,IAAI,CAAC2Z,MAAM,CAAC,GAAG,EAAE,GAAG,CAAC;UAC5BvN,MAAM,EAAE,IAAI,CAACuN,MAAM,CAAC,EAAE,EAAE,GAAG,CAAC;UAC5Bh/B,WAAW,EAAEwR,KAAK;UAClBuN,MAAM,EAAE;SACT;QACD9S,OAAO,EAAE,CAACuF,KAAK,EAAE,gBAAgB,EAAE,IAAI,CAACytB,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;OAC/D;IACH,CAAC,CAAC;IAEF,MAAM8I,SAAS,GAA+BD,gBAAgB,CAACr7B,GAAG,CAAC,CAACqC,IAAI,EAAEgrB,CAAC,MACxE;MACC//B,KAAK,EAAE,OAAO;MACd6Q,IAAI,EAAE;QACJ2J,EAAE,EAAE,GAAGulB,CAAC,QAAQ;QAChB/a,MAAM,EAAE;OACT;MACD9S,OAAO,EAAE,CAAC,IAAI,CAACgzB,IAAI,CAAC4I,aAAa,CAAC,EAAE,UAAU;KAC/C,CAAC,CACH;IAED,MAAMp8B,KAAK,GAA+Bq8B,gBAAgB,CAAC5zB,OAAO,CAAC,CAACpF,IAAI,EAAEgrB,CAAC,KACzE,CAAChrB,IAAI,EAAEi5B,SAAS,CAACjO,CAAC,CAAC,CAAC,CACrB;IAGD,MAAMkO,KAAK,GAA+BF,gBAAgB,CAAC5zB,OAAO,CAAC,CAACpF,IAAI,EAAEgrB,CAAC,KAAK,CAC9E;MACE//B,KAAK,EAAE,OAAO;MACd6Q,IAAI,EAAE;QACJ3C,MAAM,EAAE,GAAG6xB,CAAC,EAAE;QACd3xB,MAAM,EAAE,GAAG2xB,CAAC,QAAQ;QACpBoM,aAAa,EAAE,IAAI,CAACjH,IAAI,CAAC,CAAC3lC,SAAS,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;OAClD;MACD2S,OAAO,EAAE,CAAC,aAAa;KACxB,EACD;MACElS,KAAK,EAAE,OAAO;MACd6Q,IAAI,EAAE;QACJ3C,MAAM,EAAE,GAAG6xB,CAAC,QAAQ;QACpB3xB,MAAM,EAAE,GAAG,CAAC2xB,CAAC,GAAG,CAAC,IAAI6N,MAAM,EAAE;QAC7BzB,aAAa,EAAE,IAAI,CAACjH,IAAI,CAAC,CAAC3lC,SAAS,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;OAClD;MAED2S,OAAO,EAAE,CAAC,YAAY;KACvB,CACF,CAAC;IAEF,MAAMg8B,YAAY,GAA+B3K,KAAK,CAACjL,IAAI,CAAC;MAACxsB,MAAM,EAAE8hC,MAAM,GAAG;IAAC,CAAC,CAAC,CAACl7B,GAAG,CAAC,OAAO;MAC3F1S,KAAK,EAAE,OAAO;MACd6Q,IAAI,EAAE;QACJ3C,MAAM,EAAE,IAAI,CAACg3B,IAAI,CAAC6I,gBAAgB,CAAC,CAACl9B,IAAI,CAAC2J,EAAG;QAC5CpM,MAAM,EAAE,IAAI,CAAC82B,IAAI,CAAC8I,SAAS,CAAC,CAACn9B,IAAI,CAAC2J;OACnC;MACDtI,OAAO,EAAE,IAAI,CAACgzB,IAAI,CAAC,CAAC,WAAW,EAAE,qBAAqB,EAAE,qBAAqB,EAAE,eAAe,CAAC;KAChG,CAAC,CAAC;IAGH,MAAMlwB,KAAK,GAA+B,CAAC,GAAGi5B,KAAK,EAAE,GAAGC,YAAY,CAAC;IAErE,OAAOlU,wCAAE,CAAC;MACRtoB,KAAK,EAAE,CACL;QACEb,IAAI,EAAE;UAAC2J,EAAE,EAAE;QAAa,CAAC;QACzBtI,OAAO,EAAE,CAAC,aAAa,CAAC;QACxBsqB,QAAQ,EAAE,IAAI;QACdC,SAAS,EAAE,KAAK;QAChByB,UAAU,EAAE;OACb,EACD,GAAGxsB,KAAK,CACT;MACCsD;KACH,CAAC;EACJ;EAAC,QAAAlU,CAAA;qBA/sBU2b,cAAc,EAAAra,uDAAA,CAAAhB,6DAAA;EAAA;EAAA,QAAAL,EAAA;WAAd0b,cAAc;IAAA+iB,OAAA,EAAd/iB,cAAc,CAAAgjB,IAAA;IAAAC,UAAA,EAFb;EAAM;;AAotBpB,SAASuM,SAASA,CAACkC,EAAY,EAAEC,EAAY;EAC3C,OAAOD,EAAE,CAACx/B,CAAC,KAAKy/B,EAAE,CAACz/B,CAAC,IAAIw/B,EAAE,CAACxW,CAAC,KAAKyW,EAAE,CAACzW,CAAC;AACvC;AAEA,SAASuS,cAAcA,CAACmE,KAAW,EAAEC,KAAW,EAAEC,KAAA,GAAgB,GAAG;EACnE,IAAIF,KAAK,CAAC9/B,QAAQ,CAACI,CAAC,KAAK2/B,KAAK,CAAC//B,QAAQ,CAACI,CAAC,IAAI0/B,KAAK,CAAC9/B,QAAQ,CAACopB,CAAC,KAAK2W,KAAK,CAAC//B,QAAQ,CAACopB,CAAC,EAAE,OAAO,IAAI;EAC/F,MAAM6W,KAAK,GAAGC,OAAO,CAACJ,KAAK,CAAC;IAAEK,KAAK,GAAGD,OAAO,CAACH,KAAK,CAAC;EACpD,MAAMK,CAAC,GAAc;IACnBhkB,IAAI,EAAEqM,IAAI,CAACnc,GAAG,CAAC2zB,KAAK,CAAC7jB,IAAI,EAAE+jB,KAAK,CAAC/jB,IAAI,CAAC;IACtCM,KAAK,EAAE+L,IAAI,CAACpc,GAAG,CAAC4zB,KAAK,CAACvjB,KAAK,EAAEyjB,KAAK,CAACzjB,KAAK,CAAC;IACzCsd,GAAG,EAAEvR,IAAI,CAACnc,GAAG,CAAC2zB,KAAK,CAACjG,GAAG,EAAEmG,KAAK,CAACnG,GAAG,CAAC;IACnCC,MAAM,EAAExR,IAAI,CAACpc,GAAG,CAAC4zB,KAAK,CAAChG,MAAM,EAAEkG,KAAK,CAAClG,MAAM;GAC5C;EACD,OAAQmG,CAAC,CAAChkB,IAAI,GAAGgkB,CAAC,CAAC1jB,KAAK,IAAI0jB,CAAC,CAACpG,GAAG,GAAGoG,CAAC,CAACnG,MAAM,IAAOoG,IAAI,CAACD,CAAC,CAAC,GAAGC,IAAI,CAACJ,KAAK,CAAC,GAAID,KAAM;AACpF;AAEA,SAASM,OAAOA,CAACR,KAAW,EAAEC,KAAW;EACvC,IAAID,KAAK,CAAC9/B,QAAQ,CAACI,CAAC,KAAK2/B,KAAK,CAAC//B,QAAQ,CAACI,CAAC,IAAI0/B,KAAK,CAAC9/B,QAAQ,CAACopB,CAAC,KAAK2W,KAAK,CAAC//B,QAAQ,CAACopB,CAAC,EAAE,OAAO,IAAI;EAC/F,MAAM6W,KAAK,GAAGC,OAAO,CAACJ,KAAK,CAAC;IAAEK,KAAK,GAAGD,OAAO,CAACH,KAAK,CAAC;EACpD,OAAOtX,IAAI,CAACnc,GAAG,CAAC2zB,KAAK,CAAC7jB,IAAI,EAAE+jB,KAAK,CAAC/jB,IAAI,CAAC,GAAGqM,IAAI,CAACpc,GAAG,CAAC4zB,KAAK,CAACvjB,KAAK,EAAEyjB,KAAK,CAACzjB,KAAK,CAAC,IACvE+L,IAAI,CAACnc,GAAG,CAAC2zB,KAAK,CAACjG,GAAG,EAAEmG,KAAK,CAACnG,GAAG,CAAC,GAAGvR,IAAI,CAACpc,GAAG,CAAC4zB,KAAK,CAAChG,MAAM,EAAEkG,KAAK,CAAClG,MAAM,CAAC;AAC5E;AAEA,SAASoG,IAAIA,CAACE,IAAe;EAC3B,OAAO,CAACA,IAAI,CAAC7jB,KAAK,GAAG6jB,IAAI,CAACnkB,IAAI,KAAKmkB,IAAI,CAACtG,MAAM,GAAGsG,IAAI,CAACvG,GAAG,CAAC;AAC5D;AAEA,SAASkG,OAAOA,CAAC15B,IAAU;EACzB,IAAIA,IAAI,CAAC+5B,IAAI,EAAE,OAAO/5B,IAAI,CAAC+5B,IAAI;EAC/B,MAAMC,SAAS,GAAGh6B,IAAI,CAACgtB,IAAI,CAACzW,KAAK,GAAG,CAAC;EACrC,MAAM0jB,UAAU,GAAGj6B,IAAI,CAACgtB,IAAI,CAACrK,MAAM,GAAG,CAAC;EACvC3iB,IAAI,CAAC+5B,IAAI,GAAG;IACVnkB,IAAI,EAAE5V,IAAI,CAACxG,QAAQ,CAACI,CAAC,GAAGogC,SAAS;IACjC9jB,KAAK,EAAElW,IAAI,CAACxG,QAAQ,CAACI,CAAC,GAAGogC,SAAS;IAClCxG,GAAG,EAAExzB,IAAI,CAACxG,QAAQ,CAACopB,CAAC,GAAGqX,UAAU;IACjCxG,MAAM,EAAEzzB,IAAI,CAACxG,QAAQ,CAACopB,CAAC,GAAGqX;GAC3B;EACD,OAAOj6B,IAAI,CAAC+5B,IAAI;AAClB;AAEA;;;AAGA,SAASjE,YAAYA,CAACoE,WAAuC;EAC3D,MAAMx7B,SAAS,GAAG+sB,QAAQ,CAAC0O,aAAa,CAAC,KAAK,CAAC;EAE/C,MAAM5hC,KAAK,GAAG,IAAIT,4DAAK,CAAC4G,SAAS,EAAE,EAAE,CAAC;EACtC,MAAMxI,EAAE,GAAG0B,qDAAS,CAAC;IACnB8G,SAAS,EAAEA,SAAS;IACpBnG,KAAK,EAAEA,KAAK,CAAC8G,aAAa,EAAE;IAC5BnD,QAAQ,EAAEg+B,WAAW;IACrB56B,MAAM,EAAE;MAACzS,IAAI,EAAE;IAAQ;GACxB,CAAC;EAEF,MAAM8P,KAAK,GAAGzG,EAAE,CAACyG,KAAK,EAAE;EACxBA,KAAK,CAAC1P,OAAO,CAAC+S,IAAI,IAAG;IACnB,MAAMJ,EAAE,GAAGI,IAAI,CAACH,WAAW,CAAC;MAACu6B,aAAa,EAAE,IAAI;MAAEC,YAAY,EAAE;IAAK,CAAC,CAAC;IACvEr6B,IAAI,CAACzH,KAAK,CAAC;MAACge,KAAK,EAAE3W,EAAE,CAAC06B,CAAC;MAAE3X,MAAM,EAAE/iB,EAAE,CAAC26B;IAAC,CAAC,CAAC;EACzC,CAAC,CAAC;EAEF,MAAMj7B,MAAM,GAAG3C,KAAK,CAAC2C,MAAM,CAAC;IAC1BzS,IAAI,EAAE,OAAO;IACb2tC,aAAa,EAAE,EAAE;IACjBz3B,OAAO,EAAE,KAAK;IACdC,GAAG,EAAE,IAAI;IACTy3B,cAAc,EAAE,KAAK;IACrBC,SAAS,EAAE,KAAK;IAChBC,IAAI,EAAE;GACe,CAAC;EACxBr7B,MAAM,CAACoqB,GAAG,EAAE;EAEZwQ,WAAW,CAACjtC,OAAO,CAAC2tC,GAAG,IAAIA,GAAG,CAACphC,QAAQ,GAAGtD,EAAE,CAAC8F,cAAc,CAAC4+B,GAAG,CAAC9+B,IAAI,CAAC2J,EAAG,CAAC,CAACjM,QAAQ,EAAE,CAAC;EAErFtD,EAAE,CAAC2kC,OAAO,EAAE;EACZn8B,SAAS,CAACiD,MAAM,EAAE;AACpB;;;;;;;;;;;;;;;;;;;;;;;;;;;ACj2B2D;AAGsD;AACtD;;;;AAQrD,MAAOpP,YAAY;EAyBvB/F,YAAoB24B,IAAgB,EAAUlzB,KAA0B;IAApD,KAAAkzB,IAAI,GAAJA,IAAI;IAAsB,KAAAlzB,KAAK,GAALA,KAAK;IAvBlC,KAAA+oC,mBAAmB,GAAG,GAAG9V,kEAAW,CAACI,IAAI,oCAAoC;IAC7E,KAAA2V,eAAe,GAAG,GAAG/V,kEAAW,CAACI,IAAI,sCAAsC;IAC3E,KAAA4V,WAAW,GAAG,GAAGhW,kEAAW,CAACI,IAAI,6BAA6B;IAC9D,KAAA6V,UAAU,GAAG,GAAGjW,kEAAW,CAACI,IAAI,6BAA6B;IAE9E,KAAAhU,SAAS,GAA6B,IAAI+Z,iDAAe,CAAU,EAAE,CAAC;IAE9D,KAAA+P,kBAAkB,GAAmB,IAAIjjC,yCAAO,EAAS;IAC1D,KAAAsZ,kBAAkB,GAAG,IAAI,CAAC2pB,kBAAkB,CAAChhC,YAAY,EAAE;IAE1D,KAAAihC,YAAY,GAAmB,IAAIljC,yCAAO,EAAS;IACpD,KAAAhG,YAAY,GAAG,IAAI,CAACkpC,YAAY,CAACjhC,YAAY,EAAE;IAE9C,KAAAkhC,mBAAmB,GAAG,IAAInjC,yCAAO,EAAW;IACpD,KAAAyZ,YAAY,GAAG,IAAI,CAAC0pB,mBAAmB,CAAClhC,YAAY,EAAE;IAG9C,KAAAmhC,kBAAkB,GAAG,IAAIlQ,iDAAe,CAAsB,IAAI5qB,GAAG,EAAkB,CAAC;IAChG,KAAAsR,kBAAkB,GAAG,IAAI,CAACwpB,kBAAkB,CAACnhC,YAAY,EAAE;IAEnD,KAAAohC,cAAc,GAAG,IAAIrjC,yCAAO,EAAS;IAC7C,KAAA8Z,cAAc,GAAG,IAAI,CAACupB,cAAc,CAACphC,YAAY,EAAE;IA+bnD,KAAAgZ,QAAQ,GAAG,CAACrnB,CAAS,EAAEuG,KAAY,KAAK,CAAC,CAACA,KAAK,CAACke,QAAQ,IAAIle,KAAK,CAACke,QAAQ,CAACzZ,MAAM,GAAG,CAAC,IAAI,CAAC,iBAAiB,EAAE,SAAS,EAAE,iBAAiB,CAAC,CAACwF,QAAQ,CAACjK,KAAK,CAACR,WAAW,CAAC;EA5btK;EAEA4gB,WAAWA,CAACnB,MAAe;IACzB,IAAI,CAACD,SAAS,CAACta,IAAI,CAACua,MAAM,CAAC;EAC7B;EAEA4D,mBAAmBA,CAAC7iB,KAAY;IAC9B,IAAI,CAAC8oC,kBAAkB,CAACpkC,IAAI,CAAC1E,KAAK,CAAC;EACrC;EAEAiiB,aAAaA,CAACjiB,KAAY;IACxB,IAAI,CAAC+oC,YAAY,CAACrkC,IAAI,CAAC1E,KAAK,CAAC;EAC/B;EAEAggB,qBAAqBA,CAAChgB,KAAY,EAAEtB,GAAU;IAC5C,IAAI,CAACmkB,mBAAmB,CAAC7iB,KAAK,CAAC;IAC/B,IAAI,CAACiiB,aAAa,CAACvjB,GAAG,CAAC;EACzB;EAEA4jB,cAAcA,CAACrD,MAAe;IAC5B,IAAI,CAAC+pB,mBAAmB,CAACtkC,IAAI,CAACua,MAAM,CAAC;EACvC;EAEA/Q,oBAAoBA,CAACi7B,QAA6B;IAChD,IAAI,CAACF,kBAAkB,CAACvkC,IAAI,CAACykC,QAAQ,CAAC;EACxC;EAEA1oB,aAAaA,CAACzgB,KAAY;IACxB,IAAI,CAACkpC,cAAc,CAACxkC,IAAI,CAAC1E,KAAK,CAAC;EACjC;EAEAkgB,iBAAiBA,CAACpB,KAAa;IAC7B,IAAI6I,GAAG,GAAG,GAAG,IAAI,CAAC+gB,mBAAmB,GAAG5pB,KAAK,EAAE;IAC/C,OAAO,IAAI,CAAC+T,IAAI,CAAC3xB,GAAG,CAAUymB,GAAG,CAAC;EACpC;EAGAyhB,mBAAmBA,CAACxrB,IAAY;IAC9B,IAAI+J,GAAG,GAAG,GAAG,IAAI,CAACkhB,UAAU,GAAGjrB,IAAI,YAAY;IAC/C,OAAO,IAAI,CAACiV,IAAI,CAAC3xB,GAAG,CAAYymB,GAAG,CAAC;EACtC;EAGAjJ,sBAAsBA,CAACd,IAAY;IACjC,IAAI+J,GAAG,GAAG,GAAG,IAAI,CAACghB,eAAe,GAAG/qB,IAAI,kBAAkB;IAC1D,OAAO,IAAI,CAACiV,IAAI,CAAC3xB,GAAG,CAAQymB,GAAG,CAAC,CAAC7nB,IAAI,CACnCuL,yCAAG,CAAEg+B,QAAe,IAAI;MACtB,MAAMC,YAAY,GAAG,IAAIb,qEAAgB,EAAE;MAC3C,MAAMc,gBAAgB,GAAGD,YAAY,CAACE,WAAW,CAACH,QAAQ,CAAC;MAC3D,OAAOE,gBAAoC;IAC7C,CAAC,CAAC,CACH;EACH;EAEAE,cAAcA,CAAC7rB,IAAY;IACzB,IAAI+J,GAAG,GAAG,GAAG,IAAI,CAACihB,WAAW,GAAGhrB,IAAI,EAAE;IACtC,OAAO,IAAI,CAACiV,IAAI,CAAC3xB,GAAG,CAAQymB,GAAG,CAAC,CAAC7nB,IAAI,CACnCuL,yCAAG,CAAEg+B,QAAe,IAAI;MACtB,MAAMC,YAAY,GAAG,IAAIb,qEAAgB,EAAE;MAC3C,MAAMc,gBAAgB,GAAGD,YAAY,CAACE,WAAW,CAACH,QAAQ,CAAC;MAC3D,OAAOE,gBAAoC;IAC7C,CAAC,CAAC,CACH;EACH;EAEAzpB,mBAAmBA,CAAC9f,KAAY,EAAEmjB,SAAkB;IAClD,OAAO,IAAI,CAACzE,sBAAsB,CAAC1e,KAAK,CAAC4d,IAAI,CAAC,CAAC9d,IAAI,CACjDuW,+CAAS,CAAC3S,MAAM,IAAG;MACjB,IAAIA,MAAM,CAACwa,QAAQ,EAAE;QACnBle,KAAK,CAACke,QAAQ,GAAGxa,MAAM,CAACwa,QAAQ,CAAC7S,GAAG,CAAC80B,KAAK,IAAG;UAC3CA,KAAK,CAAC5hB,SAAS,GAAG,CAAC,IAAIve,KAAK,CAACue,SAAS,IAAI,EAAE,CAAC,EAAEve,KAAK,CAAC;UACrDmgC,KAAK,CAACxiB,MAAM,GAAG3d,KAAK;UACpB,OAAOmgC,KAAK;QACd,CAAC,CAAC;QACF,IAAI,CAAC/f,WAAW,CAAC+C,SAAS,CAAC,CAAC,CAAC;QAC7B,OAAO,IAAI,CAAC1D,kBAAkB,CAAC3f,IAAI,CACjCuL,yCAAG,CAACqU,MAAM,IAAI,CAAC1f,KAAK,EAAE0D,MAAM,EAAEgc,MAAM,IAAI,IAAIvR,GAAG,EAAkB,CAAwC,CAAC,CAC3G;OACF,MAAM;QACL,OAAOwkB,wCAAE,CAAC,CAAC3yB,KAAK,EAAE0D,MAAM,EAAE,IAAIyK,GAAG,EAAkB,CAAwC,CAAC;;IAEhG,CAAC,CAAC,CACH;EACH;EAEA;;;;;;;;;;;;;EAaAyQ,8BAA8BA,CAACD,aAAoB,EAAEhc,SAAiB,EAAE2b,gBAAqC,EAAEf,WAA6C,EAAE4F,SAAkB;IAC9K;IACA,MAAMumB,mBAAmB,GAAG,IAAI,CAACC,sBAAsB,CAACpsB,WAAW,EAAE4F,SAAS,CAAC;IAC/E,IAAI,IAAI,CAACymB,QAAQ,CAACjrB,aAAa,CAAC,EAAE;MAChC,OAAO,IAAI,CAACkrB,gCAAgC,CAAClrB,aAAa,EAAEhc,SAAS,EAAE+mC,mBAAmB,EAAEnsB,WAAW,CAAC;KACzG,MAAM,IAAI,IAAI,CAACusB,UAAU,CAACnrB,aAAa,CAAC,EAAE;MACzC,OAAO,IAAI,CAACorB,kCAAkC,CAACprB,aAAa,EAAEhc,SAAS,EAAE+mC,mBAAmB,EAAEnsB,WAAW,EAAEe,gBAAgB,CAAC;KAC7H,MAAM,IAAI,IAAI,CAAC0rB,oBAAoB,CAACrrB,aAAa,CAAC,EAAE;MACnD;MACA,OAAO,IAAI,CAACsrB,iCAAiC,CAACtrB,aAAa,EAAEhc,SAAS,EAAE+mC,mBAAmB,EAAEnsB,WAAW,EAAEe,gBAAgB,EAAEorB,mBAAmB,CAAC;KACjJ,MAAM;MACL,OAAO/W,wCAAE,CAAC,IAAI,CAAC3T,SAAS,CAACzW,KAAK,CAAC;;EAEnC;EAGQshC,gCAAgCA,CAAC7pC,KAAY,EAAE2C,SAAiB,EAAE+mC,mBAA4B,EAAEnsB,WAA6C;IACnJ,MAAM2sB,gBAAgB,GAAGR,mBAAmB,CAAC/mB,IAAI,CAACjV,IAAI,IAAIA,IAAI,CAACkQ,IAAI,KAAKjb,SAAS,CAAC;IAClF,IAAIunC,gBAAgB,EAAE;MACpB,OAAO,IAAI,CAACC,4BAA4B,CAACD,gBAAgB,EAAE3sB,WAAW,EAAEmsB,mBAAmB,CAAC,CAAC5pC,IAAI,CAC/FuL,yCAAG,CAAC,CAAC,CAAC++B,QAAQ,EAAExqB,SAAS,CAAC,KAAI;QAC5B,IAAI,CAACI,qBAAqB,CAACkqB,gBAAgB,EAAElqC,KAAK,CAAC;QACnD,OAAOoqC,QAAQ;MACjB,CAAC,CAAC,CACH;KACF,MAAM;MACL,OAAOzX,wCAAE,CAAC,IAAI,CAAC3T,SAAS,CAACzW,KAAK,CAAC;;EAEnC;EAEQwhC,kCAAkCA,CAAC/pC,KAAY,EAAE2C,SAAiB,EAAE+mC,mBAA4B,EAAEnsB,WAA6C,EAAEe,gBAAqC;IAC5L,IAAI,CAAC,IAAI,CAAC+rB,cAAc,CAACrqC,KAAK,EAAE0pC,mBAAmB,CAAC,EAAE;MACpD,OAAO,IAAI,CAACY,0BAA0B,CAACtqC,KAAK,EAAE2C,SAAS,EAAE,IAAI,EAAE4a,WAAW,EAAEe,gBAAgB,CAAC,CAACxe,IAAI,CAChGuL,yCAAG,CAAE++B,QAAQ,IAAI;QACf,IAAI,CAACpqB,qBAAqB,CAAChgB,KAAK,EAAEA,KAAK,CAAC;QACxC,OAAOoqC,QAAQ;MACjB,CAAC,CAAC,CACH;KACF,MAAM;MACL,OAAO,IAAI,CAACD,4BAA4B,CAACnqC,KAAK,EAAEud,WAAW,EAAEmsB,mBAAmB,CAAC,CAAC5pC,IAAI,CACpFuL,yCAAG,CAAC,CAAC,CAAC++B,QAAQ,EAAEpqC,KAAK,CAAC,KAAI;QACxB,IAAI,CAACggB,qBAAqB,CAAChgB,KAAK,EAAEA,KAAK,CAAC,CAAC,CAAE;QAC3C,OAAOoqC,QAAQ;MACjB,CAAC,CAAC,CACH;;EAEL;EAGQH,iCAAiCA,CAACjqC,KAAY,EAAE2C,SAAiB,EAAE+mC,mBAA4B,EAAEnsB,WAA6C,EAAEe,gBAAqC,EAAE6E,SAAkB;IAC/M;IACA,IAAI,CAAC,IAAI,CAACknB,cAAc,CAACrqC,KAAK,EAAE0pC,mBAAmB,CAAC,EAAE;MACpD,IAAI,CAACvoB,sBAAsB,CAACgC,SAAS,CAAC;MACtC,OAAO,IAAI,CAACmnB,0BAA0B,CAACtqC,KAAK,EAAE2C,SAAS,EAAE,IAAI,EAAE4a,WAAW,EAAEe,gBAAgB,CAAC,CAACxe,IAAI,CAChGuL,yCAAG,CAAC++B,QAAQ,IAAG;QACb,OAAOA,QAAQ;MACjB,CAAC,CAAC,CACH;KACF,MAAM;MACL;MACA,OAAO,IAAI,CAACD,4BAA4B,CAACnqC,KAAK,EAAEud,WAAW,EAAEmsB,mBAAmB,CAAC,CAAC5pC,IAAI,CACpFuL,yCAAG,CAAC,CAAC,CAAC++B,QAAQ,EAAEpqC,KAAK,CAAC,KAAI;QACxB,IAAI,CAACggB,qBAAqB,CAAChgB,KAAK,EAAEA,KAAK,CAAC,CAAC,CAAC;QAC1C,OAAOoqC,QAAQ;MACjB,CAAC,CAAC,CACH;;EAEL;EAEQC,cAAcA,CAACrqC,KAAY,EAAE0pC,mBAA4B;IAC/D,OAAOA,mBAAmB,CAACr+B,GAAG,CAACpC,CAAC,IAAIA,CAAC,CAAC2U,IAAI,CAAC,CAAC3T,QAAQ,CAACjK,KAAK,CAAC4d,IAAI,CAAC;EAClE;EAEQosB,oBAAoBA,CAAChqC,KAAY;IACvC,OAAO,IAAI,CAACugB,aAAa,CAACvgB,KAAK,CAAC,IAAIA,KAAK,CAAC0d,UAAU;EACtD;EAEAyD,sBAAsBA,CAAClC,MAAe;IACpCA,MAAM,CAACtkB,OAAO,CAACqF,KAAK,IAAG;MACrBA,KAAK,CAACsa,UAAU,GAAG,KAAK;MACxB,IAAIta,KAAK,CAACke,QAAQ,EAAE;QAClB,IAAI,CAACiD,sBAAsB,CAACnhB,KAAK,CAACke,QAAQ,CAAC;;IAE/C,CAAC,CAAC;EACJ;EAEAmC,SAASA,CAACrgB,KAAY,EAAE2C,SAAiB,EAAE4a,WAA6C,EAAEe,gBAAqC;IAC7H,IAAI,IAAI,CAACsrB,QAAQ,CAAC5pC,KAAK,CAAC,EAAE;MACxB,OAAO,IAAI,CAACuqC,2BAA2B,CAACvqC,KAAK,EAAE2C,SAAS,EAAE4a,WAAW,EAAEe,gBAAgB,CAAC;KACzF,MAAM;MACL,OAAO,IAAI,CAACgsB,0BAA0B,CAACtqC,KAAK,EAAE2C,SAAS,EAAE,KAAK,EAAE4a,WAAW,EAAEe,gBAAgB,CAAC;;EAElG;EAEA;EACQisB,2BAA2BA,CAACvqC,KAAY,EAAE2C,SAAiB,EAAE4a,WAA6C,EAAEe,gBAAqC;IACvJ,IAAI,CAAC2D,aAAa,CAACjiB,KAAK,CAAC;IACzB,OAAQ,IAAI,CAAC0e,sBAAsB,CAAC/b,SAAS,CAAC,CAAC7C,IAAI,CACjDuW,+CAAS,CAAC,MAAM,IAAI,CAAC+yB,mBAAmB,CAACzmC,SAAS,CAAC,CAAC,EACpD0I,yCAAG,CAACkT,SAAS,IAAI,IAAI,CAACisB,qBAAqB,CAACjsB,SAAS,EAAEhB,WAAW,CAAC,CAAC,EACpElH,+CAAS,CAACkI,SAAS,IAAI,IAAI,CAACksB,sBAAsB,CAAClsB,SAAS,EAAE5b,SAAS,EAAE3C,KAAK,CAAC4d,IAAI,EAAEU,gBAAgB,CAAC,CAAC,EACvGjT,yCAAG,CAAC,CAAC,CAACqU,MAAM,EAAEgrB,IAAI,CAAC,KAAI;MACrB,IAAI,CAACtqB,WAAW,CAACsqB,IAAI,CAAC;MACtB,OAAOA,IAAI;IACb,CAAC,CAAC,CACH;EACH;EAGA;;;;;;;EAOQJ,0BAA0BA,CAACtqC,KAAY,EAAE2C,SAAiB,EAAEgoC,aAAsB,EAAEptB,WAA6C,EAAEe,gBAAqC;IAC9K;IACA,MAAMssB,SAAS,GAAGD,aAAa,GAAG3qC,KAAK,CAAC4d,IAAI,GAAI,IAAI,CAACosB,oBAAoB,CAAChqC,KAAK,CAAC,GAAG2C,SAAS,GAAG3C,KAAK,CAAC4d,IAAK;IAC1G,IAAI,CAACqE,aAAa,CAACjiB,KAAK,CAAC;IACzB,OAAO,IAAI,CAACopC,mBAAmB,CAACwB,SAAS,CAAC,CAAC9qC,IAAI,CAC7CuL,yCAAG,CAACkT,SAAS,IAAI,IAAI,CAACisB,qBAAqB,CAACjsB,SAAS,EAAEhB,WAAW,CAAC,CAAC,EACpElH,+CAAS,CAACkI,SAAS,IAAI,IAAI,CAACksB,sBAAsB,CAAClsB,SAAS,EAAE5b,SAAS,EAAE3C,KAAK,CAAC4d,IAAI,EAAEU,gBAAgB,CAAC,CAAC,EACvGjT,yCAAG,CAAC,CAAC,CAACqU,MAAM,EAAEgrB,IAAI,CAAC,KAAI;MACrB,IAAI,CAACtqB,WAAW,CAACsqB,IAAI,CAAC;MACtB,OAAOA,IAAI;IACb,CAAC,CAAC,CACH;EACH;EAEA;EACQP,4BAA4BA,CAACnqC,KAAY,EAAEud,WAA6C,EAAEstB,aAAsB;IACtH,OAAO,IAAI,CAACzB,mBAAmB,CAACppC,KAAK,CAAC4d,IAAI,CAAC,CAAC9d,IAAI,CAC9CuL,yCAAG,CAACkT,SAAS,IAAG;MACdzM,OAAO,CAACC,GAAG,CAAC,6CAA6C,EAAEwM,SAAS,CAAC;MACrE,MAAMusB,aAAa,GAAG,IAAI,CAACN,qBAAqB,CAACjsB,SAAS,EAAEhB,WAAW,CAAC;MACxE;MACA,MAAMwtB,aAAa,GAAG,IAAI32B,GAAG,CAAC02B,aAAa,CAACz/B,GAAG,CAAC2/B,QAAQ,IAAIA,QAAQ,CAACptB,IAAI,CAAC,CAAC;MAC3E9L,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEg5B,aAAa,CAAC;MAC5C;MACAF,aAAa,CAAClwC,OAAO,CAACswC,QAAQ,IAAG;QAC/BA,QAAQ,CAAC3wB,UAAU,GAAGywB,aAAa,CAACz2B,GAAG,CAAC22B,QAAQ,CAACrtB,IAAI,CAAC;MACxD,CAAC,CAAC;MACF5d,KAAK,CAACue,SAAS,GAAGusB,aAAa;MAC/B9qC,KAAK,CAAC2d,MAAM,GAAGmtB,aAAa,CAACA,aAAa,CAACrmC,MAAM,GAAG,CAAC,CAAC;MACtD,IAAI,CAAC2b,WAAW,CAAC,IAAI,CAACpB,SAAS,CAACzW,KAAK,CAAC;MACtC,IAAI,CAAC+Z,cAAc,CAACwoB,aAAa,CAAC;MAElC,OAAO,CAAC,IAAI,CAAC9rB,SAAS,CAACzW,KAAK,EAAEvI,KAAK,CAAC;IACtC,CAAC,CAAC,CACH;EACH;EAEQyqC,sBAAsBA,CAAClsB,SAAkB,EAAE5b,SAAiB,EAAE0b,iBAAyB,EAAEC,gBAAqC;IACpI,OAAOxa,mDAAa,CAAC,CACnB,IAAI,CAAC2b,kBAAkB,EACvB,IAAI,CAACyrB,eAAe,CAAC,IAAI,CAAClsB,SAAS,CAACzW,KAAK,EAAEgW,SAAS,EAAE5b,SAAS,EAAE0b,iBAAiB,EAAEC,gBAAgB,CAAC,CACtG,CAAC;EACJ;EAEA;;;;;;;;;;;;;;EAcA4sB,eAAeA,CAACC,KAAc,EAAE5sB,SAAkB,EAAE5b,SAAiB,EAAE0b,iBAAyB,EAAEC,gBAAqC;IACrIxM,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEo5B,KAAK,EAAE,gBAAgB,EAAE5sB,SAAS,CAAC;IAC7E,MAAMmsB,IAAI,GAAG,CAAC,GAAGS,KAAK,CAAC;IACvB,MAAMC,UAAU,GAAG7sB,SAAS,CAACkc,MAAM,CAAC,CAACxF,GAAG,EAAEj1B,KAAK,EAAEgP,KAAK,EAAEmtB,KAAK,KAAI;MAC/D,MAAMkP,MAAM,GAAGr8B,KAAK,KAAKmtB,KAAK,CAAC13B,MAAM,GAAG,CAAC;MACzC,OAAOwwB,GAAG,CAACn1B,IAAI,CACb0oC,8CAAQ,CAAC8C,YAAY,IAAG;QACtB,MAAMC,aAAa,GAAGD,YAAY,CAAC3oB,IAAI,CAAC1Z,CAAC,IAAIA,CAAC,CAAC1J,IAAI,KAAKS,KAAK,CAACT,IAAI,CAAC;QACnE,IAAIgsC,aAAa,EAAE;UACjB,OAAO,IAAI,CAAC7sB,sBAAsB,CAAC1e,KAAK,CAAC4d,IAAI,CAAC,CAAC9d,IAAI,CACjDuL,yCAAG,CAACoY,QAAQ,IAAG;YACb8nB,aAAa,CAACrtB,QAAQ,GAAGuF,QAAQ,CAACvF,QAAQ,EAAE7S,GAAG,CAAC80B,KAAK,IAAG;cACtDA,KAAK,CAAC5hB,SAAS,GAAG,CAAC,IAAIgtB,aAAa,CAAChtB,SAAS,IAAI,EAAE,CAAC,EAAEgtB,aAAa,CAAC;cACrEpL,KAAK,CAACxiB,MAAM,GAAG4tB,aAAa;cAC5B,IAAI,CAACjpB,cAAc,CAAC,CAAC,GAAG6d,KAAK,CAAC5hB,SAAS,CAAC,CAAC;cACzC,OAAO4hB,KAAK;YACd,CAAC,CAAC;YACF;YACA,IAAI9hB,iBAAiB,EAAE;cACrBktB,aAAa,CAACrtB,QAAQ,EAAEvjB,OAAO,CAACwlC,KAAK,IAAG;gBACtC,IAAI9hB,iBAAiB,KAAK8hB,KAAK,CAACviB,IAAI,EAAE;kBACpCuiB,KAAK,CAAC7lB,UAAU,GAAG,IAAI;kBACvB,IAAI,CAACgI,cAAc,CAAC,CAAC,GAAI6d,KAAM,CAAC5hB,SAAU,EAAE4hB,KAAK,CAAC,CAAC;;cAEvD,CAAC,CAAC;;YAEJ;YACAoL,aAAa,CAACjxB,UAAU,GAAG,IAAI;YAE/B,IAAIixB,aAAa,CAAC3tB,IAAI,KAAKjb,SAAS,EAAE;cACpC,IAAI,CAACsd,mBAAmB,CAACsrB,aAAa,EAAEjtB,gBAAgB,CAAC;;YAG3D,IAAI+sB,MAAM,EAAE;cACV,IAAI,CAACxoB,mBAAmB,CAAC0oB,aAAa,CAAC;;YAGzC,OAAOA,aAAa,CAACrtB,QAAS;UAChC,CAAC,CAAC,CACH;SACF,MAAM;UACL,OAAOyU,wCAAE,CAAC,EAAE,CAAC;;MAEjB,CAAC,CAAC,CACH;IACH,CAAC,EAAEA,wCAAE,CAAC+X,IAAI,CAAC,CAAC;IAEZ,OAAO/kC,+CAAQ,CAAC,CAACylC,UAAU,CAAC,CAAC,CAACtrC,IAAI,CAChCuL,yCAAG,CAAC,MAAK;MACP,OAAOq/B,IAAI;IACb,CAAC,CAAC,CACH;EACH;EAGAzqB,mBAAmBA,CAACjgB,KAAY,EAAE0f,MAAkC;IAClE,IAAIA,MAAM,IAAI1f,KAAK,CAACke,QAAQ,EAAE;MAC5Ble,KAAK,CAACke,QAAQ,CAACvjB,OAAO,CAACsO,CAAC,IAAG;QACzB,IAAIA,CAAC,CAACzJ,WAAW,KAAK,SAAS,IAAI,CAACyJ,CAAC,CAACyU,UAAU,EAAE;UAChDzU,CAAC,CAACmT,KAAK,GAAGsD,MAAM,CAACxe,GAAG,CAAC+H,CAAC,CAAC1J,IAAI,CAAC;;MAEhC,CAAC,CAAC;;EAEN;EAEQirC,qBAAqBA,CAACjsB,SAAoB,EAAEhB,WAA6C;IAC/F,MAAMiuB,OAAO,GAAG,IAAI,CAAC7rC,KAAK,CAACuB,GAAG,CAAC,MAAM,CAAC;IACtC,IAAI4pC,aAAsB;IAC1B;IACA,IAAIU,OAAO,IAAIjtB,SAAS,CAAC9Z,MAAM,GAAG,CAAC,EAAE;MACnCqmC,aAAa,GAAG,IAAI,CAACW,oBAAoB,CAACltB,SAAS,EAAEitB,OAAO,CAAC;MAC7D,IAAIV,aAAa,EAAE;QACjB,IAAI,CAACY,kBAAkB,CAACZ,aAAa,EAAEvtB,WAAW,CAAC;;KAEtD,MAAM;MACL;MACAutB,aAAa,GAAGvsB,SAAS,CAAC,CAAC,CAAC;MAC5B,IAAI,CAACmtB,kBAAkB,CAACntB,SAAS,CAAC,CAAC,CAAC,EAAEhB,WAAW,CAAC;;IAEpD,OAAOutB,aAAa;EACtB;EAGAW,oBAAoBA,CAACltB,SAAoB,EAAEitB,OAAiB;IAC1D,KAAK,MAAMG,aAAa,IAAIptB,SAAS,EAAE;MACrC,MAAMqtB,kBAAkB,GAAGD,aAAa,CAACtgC,GAAG,CAACrL,KAAK,IAAIA,KAAK,CAAC4d,IAAI,CAAC;MACjE;MACA,MAAMiuB,WAAW,GAAGL,OAAO,CAACM,KAAK,CAAC34B,EAAE,IAAIy4B,kBAAkB,CAAC3hC,QAAQ,CAACkJ,EAAE,CAAC,CAAC;MACxE,IAAI04B,WAAW,EAAE;QACf,OAAOF,aAAa;;;IAGxB;IACA,OAAOptB,SAAS,CAAC,CAAC,CAAC;EACrB;EAGAmtB,kBAAkBA,CAACntB,SAAkB,EAAEhB,WAA6C;IAClFgB,SAAS,CAACmE,OAAO,EAAE,CAAC/nB,OAAO,CAACqwC,QAAQ,IAAIztB,WAAW,CAAC+D,MAAM,CAAC0pB,QAAQ,CAAC,CAAC;EACvE;EAGAe,UAAUA,CAACppC,SAAiB,EAAE4b,SAAkB;IAC9C,MAAMytB,KAAK,GAAa,EAAE;IAC1B,KAAK,MAAMp9B,CAAC,IAAI2P,SAAS,EAAE;MACzB,IAAI3P,CAAC,CAACgP,IAAI,KAAKjb,SAAS,EAAE;QACxB,MAAM,CAAC;;;MAETqpC,KAAK,CAACne,IAAI,CAACjf,CAAC,CAACgP,IAAI,CAAC;;IAEpB,OAAOouB,KAAK;EACd;EAEAtqB,OAAOA,CAAC/e,SAAiB,EAAE4b,SAAkB;IAC3C,MAAMrL,GAAG,GAAG,IAAI,CAAC64B,UAAU,CAACppC,SAAS,EAAE4b,SAAS,CAAC;IACjD,IAAI,CAAC5e,KAAK,CAAC4L,GAAG,CAAC,MAAM,EAAE2H,GAAG,CAAC;EAC7B;EAGA;EACAy2B,sBAAsBA,CAACpsB,WAA6C,EAAE4F,SAAkB;IACtF,MAAM8oB,gBAAgB,GAAY,EAAE;IACpC,MAAMC,eAAe,GAAIx+B,IAAW,IAAI;MACtC;MACAu+B,gBAAgB,CAACpe,IAAI,CAACngB,IAAI,CAAC;MAC3B;MACA,IAAI6P,WAAW,CAACC,UAAU,CAAC9P,IAAI,CAAC,IAAIA,IAAI,CAACwQ,QAAQ,EAAE;QACjDxQ,IAAI,CAACwQ,QAAQ,CAACvjB,OAAO,CAACwlC,KAAK,IAAI+L,eAAe,CAAC/L,KAAK,CAAC,CAAC;;IAE1D,CAAC;IACD;IACAhd,SAAS,CAACxoB,OAAO,CAACwxC,QAAQ,IAAID,eAAe,CAACC,QAAQ,CAAC,CAAC;IAExD,OAAOF,gBAAgB;EACzB;EAEA;EACAG,gCAAgCA,CAAC7uB,WAA6C,EAAE4F,SAAkB;IAChG,MAAMkpB,iBAAiB,GAAY,EAAE;IACrC,MAAMC,OAAO,GAAG/uB,WAAW,CAACgvB,cAAc,CAACh8B,QAAQ,CAAC,CAAC,CAAC;IACtD,MAAM27B,eAAe,GAAIx+B,IAAW,IAAI;MACtC2+B,iBAAiB,CAACxe,IAAI,CAACngB,IAAI,CAAC;MAC5B,IAAI6P,WAAW,CAACC,UAAU,CAAC9P,IAAI,CAAC,IAAIA,IAAI,CAACwQ,QAAQ,EAAE;QACjDxQ,IAAI,CAACwQ,QAAQ,CAACvjB,OAAO,CAACwlC,KAAK,IAAI+L,eAAe,CAAC/L,KAAK,CAAC,CAAC;;IAE1D,CAAC;IACD,MAAMqM,QAAQ,GAAGrpB,SAAS,CAACR,IAAI,CAACjV,IAAI,IAAIA,IAAI,CAACkQ,IAAI,KAAK0uB,OAAO,CAAC;IAC9D,IAAIE,QAAQ,EAAE;MACZN,eAAe,CAACM,QAAQ,CAAC;;IAE3B,OAAOH,iBAAiB;EAC1B;EAEQI,WAAWA,CAACjjC,IAAa;IAC/B,MAAMkjC,YAAY,GAAY,EAAE;IAChC,MAAMC,OAAO,GAAItiC,KAAc,IAAI;MACjCA,KAAK,CAAC1P,OAAO,CAAC+S,IAAI,IAAG;QACnBg/B,YAAY,CAAC7e,IAAI,CAACngB,IAAI,CAAC;QACvB,IAAIA,IAAI,CAACwQ,QAAQ,EAAE;UACjByuB,OAAO,CAACj/B,IAAI,CAACwQ,QAAQ,CAAC;;MAE1B,CAAC,CAAC;IACJ,CAAC;IACDyuB,OAAO,CAACnjC,IAAI,CAAC;IACb,OAAOkjC,YAAY;EACrB;EAEAE,SAASA,CAAChvB,IAAY,EAAEqB,MAAe;IACrC,MAAM4tB,QAAQ,GAAG,IAAI,CAACJ,WAAW,CAACxtB,MAAM,CAAC;IACzC,OAAO4tB,QAAQ,CAAClqB,IAAI,CAACjV,IAAI,IAAIA,IAAI,CAACkQ,IAAI,KAAKA,IAAI,CAAC;EAClD;EAIA;EACA2C,aAAaA,CAACvgB,KAAY;IACxB,OAAO,IAAI,CAAC8gB,QAAQ,CAAC,CAAC,EAAE9gB,KAAK,CAAC;EAChC;EAGA4pC,QAAQA,CAAC5pC,KAAY;IACnB,OAAQ,CAAC,IAAI,CAACugB,aAAa,CAACvgB,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC8pC,UAAU,CAAC9pC,KAAK,CAAC;EAC/D;EAEA8pC,UAAUA,CAAC9pC,KAAY;IACrB,OAAQ,CAAC,UAAU,EAAE,eAAe,EAAE,qBAAqB,CAAC,CAACiK,QAAQ,CAACjK,KAAK,CAACR,WAAW,CAAC;EAC1F;EAAC,QAAA/F,CAAA;qBApeUwG,YAAY,EAAAlF,uDAAA,CAAAhB,6DAAA,GAAAgB,uDAAA,CAAAG,uEAAA;EAAA;EAAA,QAAAxB,EAAA;WAAZuG,YAAY;IAAAk4B,OAAA,EAAZl4B,YAAY,CAAAm4B,IAAA;IAAAC,UAAA,EAFX;EAAM;;;;;;;;;;;;;;;;;;;;;;ACVyC;AACF;AACA;;;;AASrD,MAAOhT,cAAc;EAoCzBnrB,YAAoB24B,IAAgB,EAAUlzB,KAA0B;IAApD,KAAAkzB,IAAI,GAAJA,IAAI;IAAsB,KAAAlzB,KAAK,GAALA,KAAK;IAlClC,KAAAmtC,aAAa,GAAG,GAAGla,kEAAW,CAACI,IAAI,mCAAmC;IACtE,KAAA+Z,YAAY,GAAG,GAAGna,kEAAW,CAACI,IAAI,+CAA+C;IAElG,KAAAga,cAAc,GAAG;MAACpuC,WAAW,EAAE,cAAc;MAAEkgB,KAAK,EAAE,MAAM;MAAEvf,IAAI,EAAE,KAAK;MAAE0tC,SAAS,EAAE;IAAW,CAAC;IAC1F,KAAAC,sBAAsB,GAAG,IAAInU,iDAAe,CAAU,IAAI,CAACiU,cAAc,CAAC;IAC3E,KAAAnuB,eAAe,GAAG,IAAI,CAACquB,sBAAsB,CAACplC,YAAY,EAAE;IAEnE,KAAAqlC,cAAc,GAAmB,EAAE;IAE3B,KAAAvlC,OAAO,GAAG,KAAK,CAAC,CAAC;IACzB;;;;IAIS,KAAAwlC,qBAAqB,GAAyB,IAAIj/B,GAAG,CAAkB,CAC9E,CAAC,KAAK,EAAE;MAACvP,WAAW,EAAE,cAAc;MAAEkgB,KAAK,EAAE,MAAM;MAAEvf,IAAI,EAAE,KAAK;MAAE0tC,SAAS,EAAE;IAAW,CAAC,CAAC,EAC1F,CAAC,KAAK,EAAE;MAACruC,WAAW,EAAE,YAAY;MAAEkgB,KAAK,EAAE,MAAM;MAAEvf,IAAI,EAAE,KAAK;MAAE0tC,SAAS,EAAE;IAAU,CAAC,CAAC,EACvF,CAAC,KAAK,EAAE;MAACruC,WAAW,EAAE,wBAAwB;MAAEkgB,KAAK,EAAE,MAAM;MAAEvf,IAAI,EAAE,KAAK;MAAE0tC,SAAS,EAAE;IAAW,CAAC,CAAC,EACpG,CAAC,KAAK,EAAE;MAACruC,WAAW,EAAE,kBAAkB;MAAEkgB,KAAK,EAAE,MAAM;MAAEvf,IAAI,EAAE,KAAK;MAAE0tC,SAAS,EAAE;IAAc,CAAC,CAAC,EACjG,CAAC,KAAK,EAAE;MAACruC,WAAW,EAAE,aAAa;MAAEkgB,KAAK,EAAE,MAAM;MAAEvf,IAAI,EAAE,KAAK;MAAE0tC,SAAS,EAAE;IAAS,CAAC,CAAC,EACvF,CAAC,KAAK,EAAE;MAACruC,WAAW,EAAE,0BAA0B;MAAEkgB,KAAK,EAAE,OAAO;MAAEvf,IAAI,EAAE,MAAM;MAAE0tC,SAAS,EAAE;IAAc,CAAC,CAAC,EAC3G,CAAC,KAAK,EAAE;MAACruC,WAAW,EAAE,yBAAyB;MAAEkgB,KAAK,EAAE,MAAM;MAAEvf,IAAI,EAAE,KAAK;MAAE0tC,SAAS,EAAE;IAAgB,CAAC,CAAC,EAC1G,CAAC,KAAK,EAAE;MAACruC,WAAW,EAAE,eAAe;MAAEkgB,KAAK,EAAE,MAAM;MAAEvf,IAAI,EAAE,KAAK;MAAE0tC,SAAS,EAAE;IAAU,CAAC,CAAC,EAC1F,CAAC,KAAK,EAAE;MAACruC,WAAW,EAAE,cAAc;MAAEkgB,KAAK,EAAE,OAAO;MAAEvf,IAAI,EAAE,KAAK;MAAE0tC,SAAS,EAAE;IAAY,CAAC,CAAC,EAC5F,CAAC,KAAK,EAAE;MAACruC,WAAW,EAAE,4BAA4B;MAAEkgB,KAAK,EAAE,MAAM;MAAEvf,IAAI,EAAE,MAAM;MAAE0tC,SAAS,EAAE;IAAgB,CAAC,CAAC,EAC9G,CAAC,KAAK,EAAE;MAACruC,WAAW,EAAE,uBAAuB;MAAEkgB,KAAK,EAAE,MAAM;MAAEvf,IAAI,EAAE,MAAM;MAAE0tC,SAAS,EAAE;IAAc,CAAC,CAAC,EACvG,CAAC,KAAK,EAAE;MAACruC,WAAW,EAAE,mBAAmB;MAAEkgB,KAAK,EAAE,OAAO;MAAEvf,IAAI,EAAE,KAAK;MAAE0tC,SAAS,EAAE;IAAc,CAAC,CAAC,EACnG,CAAC,KAAK,EAAE;MAACruC,WAAW,EAAE,0BAA0B;MAAEkgB,KAAK,EAAE,MAAM;MAAEvf,IAAI,EAAE,KAAK;MAAE0tC,SAAS,EAAE;IAAc,CAAC,CAAC,EACzG,CAAC,KAAK,EAAE;MAACruC,WAAW,EAAE,2BAA2B;MAAEkgB,KAAK,EAAE,MAAM;MAAEvf,IAAI,EAAE,KAAK;MAAE0tC,SAAS,EAAE;IAAS,CAAC,CAAC,EACrG,CAAC,KAAK,EAAE;MAACruC,WAAW,EAAE,YAAY;MAAEkgB,KAAK,EAAE,OAAO;MAAEvf,IAAI,EAAE,KAAK;MAAE0tC,SAAS,EAAE;IAAU,CAAC,CAAC,EACxF,CAAC,KAAK,EAAE;MAACruC,WAAW,EAAE,oBAAoB;MAAEkgB,KAAK,EAAE,MAAM;MAAEvf,IAAI,EAAE,MAAM;MAAE0tC,SAAS,EAAE;IAAc,CAAC,CAAC,CACrG,CAAC;EAIF;EAEAI,SAASA,CAAC9kC,KAAc;IACtB,IAAI,CAACX,OAAO,GAAGW,KAAK;EACtB;EAEAiW,SAASA,CAAA;IACP,OAAO,IAAI,CAAC5W,OAAO;EACrB;EAEA0lC,UAAUA,CAAA;IACR,OAAO,IAAI,CAACza,IAAI,CAAC3xB,GAAG,CAAY,IAAI,CAAC4rC,aAAa,EAAE;MAClDlY,OAAO,EAAE,IAAIpC,6DAAW,CAAC;QAAC,cAAc,EAAE;MAAgC,CAAC;KAC5E,CAAC;EACJ;EAEA+a,iBAAiBA,CAAC1Z,WAAmB,EAAE2Z,WAAmB;IACxD,MAAM7lB,GAAG,GAAG,GAAG,IAAI,CAAColB,YAAY,GAAGS,WAAW,EAAE;IAChD,OAAO,IAAI,CAAC3a,IAAI,CAAC8B,IAAI,CAAiBhN,GAAG,EAAEkM,WAAW,EAAE;MAACe,OAAO,EAAE,IAAIpC,6DAAW,CAAC;QAAC,cAAc,EAAE;MAAY,CAAC;IAAC,CAAC,CAAC;EACrH;EAGAib,YAAYA,CAACjpC,CAAU;IACrB,MAAMkpC,KAAK,GAAGlpC,CAAC,CAAC5F,WAAW,CAAC0F,KAAK,CAAC,GAAG,CAAC;IACtC;IACA,IAAIopC,KAAK,CAACjpC,MAAM,KAAK,CAAC,EAAE;MACtB,MAAM,IAAIwe,KAAK,CAAC,wDAAwD,CAAC;;IAE3E,MAAM0qB,KAAK,GAAGD,KAAK,CAAC,CAAC,CAAC;IACtB,MAAMjzC,OAAO,GAAGizC,KAAK,CAAC,CAAC,CAAC;IACxBlpC,CAAC,CAACyoC,SAAS,GAAG,GAAGU,KAAK,CAACtS,MAAM,CAAC,CAAC,CAAC,IAAI5gC,OAAO,EAAE;EAC/C;EAEAmzC,iBAAiBA,CAACnzC,OAAgB;IAChC,IAAI,CAACyyC,sBAAsB,CAACxoC,IAAI,CAACjK,OAAO,CAAC;EAC3C;EAEOozC,uBAAuBA,CAAClrC,SAAiB;IAC9C;IACA,MAAMmrC,WAAW,GAAGnrC,SAAS,CAACwN,KAAK,CAAC,SAAS,CAAC;IAC9C,IAAI1V,OAAO;IACX,IAAIqzC,WAAW,EAAE;MACf;MACArzC,OAAO,GAAG,IAAI,CAAC2yC,qBAAqB,CAAClsC,GAAG,CAAC,GAAG4sC,WAAW,CAAC,CAAC,CAAC,EAAE,CAAC;MAC7D,IAAIrzC,OAAO,EAAE;QACX,IAAI,CAACmzC,iBAAiB,CAACnzC,OAAO,CAAC;;;EAGrC;EAGAszC,qBAAqBA,CAACtzC,OAAgB,EAAEuzC,UAAkB,EAAEzvB,SAAkB,EAAErL,GAAa;IAC3F;IACA,MAAM+6B,SAAS,GAAa,EAAE;IAC9B1vB,SAAS,CAAC5jB,OAAO,CAACiU,CAAC,IAAG;MACpB,IAAIsE,GAAG,CAACjJ,QAAQ,CAAC2E,CAAC,CAACgP,IAAI,CAAC,EAAE;QACxBqwB,SAAS,CAACpgB,IAAI,CAACjf,CAAC,CAACrP,IAAI,CAAC;;IAE1B,CAAC,CAAC;IAEF,MAAMiuC,WAAW,GAAG/yC,OAAO,CAAC8E,IAAI;IAChC,IAAI2uC,aAAa,GAAW,EAAE;IAC9B,OAAO,IAAI,CAACX,iBAAiB,CAACU,SAAS,CAACzZ,IAAI,CAAC,GAAG,CAAC,EAAEgZ,WAAW,CAAC,CAAC1tC,IAAI;IAAE;IACpEwW,yCAAG,CAAC+yB,QAAQ,IAAG;MACb,IAAI,CAAC8D,cAAc,GAAG9D,QAAQ;MAC9B,IAAI,IAAI,CAAC8D,cAAc,CAACa,UAAU,CAAC,EAAE;QACnCE,aAAa,GAAG,IAAI,CAACf,cAAc,CAACa,UAAU,CAAC,CAACpwB,IAAI;OACrD,MAAM;QACLswB,aAAa,GAAG,EAAE;;IAEtB,CAAC,CAAC,EACF7iC,yCAAG,CAAC,MAAM6iC,aAAa,CAAC,CACzB;EACH;EAEAC,aAAaA,CAACxrC,SAAiB;IAC7B,IAAIuQ,GAAG,GAAa,EAAE;IACtBA,GAAG,CAAC2a,IAAI,CAAClrB,SAAS,CAAC;IACnB,IAAI,IAAI,CAAChD,KAAK,CAACuB,GAAG,CAAC,QAAQ,CAAC,EAAE;MAC5BgS,GAAG,CAAC2a,IAAI,CAAC,IAAI,CAACluB,KAAK,CAACuB,GAAG,CAAC,QAAQ,CAAC,CAAC;;IAEpC,IAAI,IAAI,CAACvB,KAAK,CAACuB,GAAG,CAAC,MAAM,CAAC,EAAE;MAC1BgS,GAAG,GAAGA,GAAG,CAACk7B,MAAM,CAAC,IAAI,CAACzuC,KAAK,CAACuB,GAAG,CAAC,MAAM,CAAC,CAAC;;IAE1C,OAAOgS,GAAG;EACZ;EAGAm7B,iBAAiBA,CAACC,UAAoB,EAAEN,UAAkB,EAAEO,YAAoB,EAAE/zC,KAAqB;IACrG;IACA,MAAMg0C,SAAS,GAAG;MAAC,GAAGh0C,KAAK,CAACi0C,QAAQ,CAAC5oB;IAAW,CAAC;IACjDyoB,UAAU,CAAC3zC,OAAO,CAACorB,KAAK,IAAG;MACzB,MAAMxd,KAAK,GAAGimC,SAAS,CAACzoB,KAAK,CAAC;MAC9B,MAAM2oB,WAAW,GAAIna,GAAW,IAAKA,GAAG,CAAC8B,OAAO,CAAC,SAAS,EAAE,IAAIkY,YAAY,GAAG,CAAC;MAChF,IAAIhmC,KAAK,EAAE;QACT,IAAIwd,KAAK,KAAK,QAAQ,EAAE;UACtB,IAAIioB,UAAU,EAAE;YACdQ,SAAS,CAACzoB,KAAK,CAAC,GAAG2oB,WAAW,CAACnmC,KAAK,CAAC;WACtC,MAAM;YACL;YACA;YACAimC,SAAS,CAACzoB,KAAK,CAAC,GAAG,EAAE;;SAExB,MAAM,IAAIA,KAAK,KAAK,MAAM,EAAE;UAC3ByoB,SAAS,CAACzoB,KAAK,CAAC,GAAGxd,KAAK,CACrBjE,KAAK,CAAC,GAAG,CAAC,CACV+G,GAAG,CAAE7G,CAAS,IAAKkqC,WAAW,CAAClqC,CAAC,CAAC,CAAC,CAClCgwB,IAAI,CAAC,GAAG,CAAC;SACb,MAAM;UACLga,SAAS,CAACzoB,KAAK,CAAC,GAAG2oB,WAAW,CAACnmC,KAAK,CAAC;;;IAG3C,CAAC,CAAC;IACF,OAAOimC,SAAS;EAClB;EAAC,QAAA/0C,CAAA;qBAvJU4rB,cAAc,EAAAtqB,sDAAA,CAAAhB,4DAAA,GAAAgB,sDAAA,CAAAG,uEAAA;EAAA;EAAA,QAAAxB,EAAA;WAAd2rB,cAAc;IAAA8S,OAAA,EAAd9S,cAAc,CAAA+S,IAAA;IAAAC,UAAA,EAFb;EAAM;;;;;;;;;;;;;;;ACVd,SAAUtyB,SAASA,CAAIwC,KAA2B;EACtD,OAAOA,KAAK,KAAKrQ,SAAS,IAAIqQ,KAAK,KAAK,IAAI;AAC9C;;;;;;;;;;;;;;;;;;;;;;;;;ACGmE;;;;;;;;;;;;ICH/DxN,4DAAA,yBAC4F;IAA3EA,wDAAA,mBAAA4zC,6EAAA;MAAA,MAAA11B,WAAA,GAAAle,2DAAA,CAAA6zC,GAAA;MAAA,MAAAC,IAAA,GAAA51B,WAAA,CAAApC,SAAA;MAAA,MAAAhY,MAAA,GAAA9D,2DAAA;MAAA,OAASA,yDAAA,CAAA8D,MAAA,CAAAiwC,eAAA,CAAAD,IAAA,CAAkB;IAAA,EAAC;IAC3C9zC,4DAAA,aAAqB;IACnBA,uDAAA,kBAAiE;IACjEA,4DAAA,WAAM;IAAAA,oDAAA,GAAmB;IAAAA,0DAAA,EAAO;;;;;IAJUA,wDAAA,UAAA8zC,IAAA,CAAW,aAAAA,IAAA,CAAA/vB,KAAA,KAAAxf,MAAA,CAAAyvC,cAAA,CAAAjwB,KAAA;IAGvB/jB,uDAAA,GAAuB;IAAvBA,mEAAA,YAAA8zC,IAAA,CAAA/vB,KAAA,CAAuB;IAC/C/jB,uDAAA,GAAmB;IAAnBA,+DAAA,CAAA8zC,IAAA,CAAAjwC,WAAA,CAAmB;;;ADU1B,IAAMpB,gBAAgB,GAAtB,MAAMA,gBAAgB;EAa3BtD,YAAoB2jB,cAA8B,EAAU7Z,MAAc,EAAUxJ,KAAqB,EAAUmF,KAA0B,EAAUD,YAA0B;IAA7J,KAAAme,cAAc,GAAdA,cAAc;IAA0B,KAAA7Z,MAAM,GAANA,MAAM;IAAkB,KAAAxJ,KAAK,GAALA,KAAK;IAA0B,KAAAmF,KAAK,GAALA,KAAK;IAA+B,KAAAD,YAAY,GAAZA,YAAY;IAZnK,KAAAuvC,UAAU,GAAc,EAAE;IAGb,KAAAtsC,SAAS,GAAW,EAAE;IACd,KAAAusC,UAAU,GAAG;MAChCz0C,OAAO,EAAE,KAAK;MACdiI,UAAU,EAAE;KACb;EAOD;EAEA9C,eAAeA,CAAA;IACb,IAAI,CAAC0tC,UAAU,EAAE;IAEjB,IAAI,IAAI,CAAC3qC,SAAS,EAAE;MAClB,IAAI,CAACkb,cAAc,CAACgwB,uBAAuB,CAAC,IAAI,CAAClrC,SAAS,CAAC;;IAG7D,IAAI,CAACkb,cAAc,CAACgB,eAAe,CAAC/e,IAAI,CAAC3B,qEAAc,CAAC,IAAI,CAAC,CAAC,CAAC4B,SAAS,CAACtF,OAAO,IAAG;MACjF,IAAI,CAACs0C,cAAc,GAAGt0C,OAAO;IAC/B,CAAC,CAAC;IAEF,IAAI,CAACiF,YAAY,CAACyf,kBAAkB,CAACrf,IAAI,CAAC3B,qEAAc,CAAC,IAAI,CAAC,CAAC,CAAC4B,SAAS,CAACC,KAAK,IAAG;MAChF,IAAI,CAACof,iBAAiB,GAAGpf,KAAK;IAChC,CAAC,CAAC;IAEF,IAAI,CAACN,YAAY,CAACG,YAAY,CAACC,IAAI,CAAC3B,qEAAc,CAAC,IAAI,CAAC,CAAC,CAAC4B,SAAS,CAACC,KAAK,IAAG;MAC1E,IAAI,CAACqf,WAAW,GAAGrf,KAAK;IAC1B,CAAC,CAAC;EAEJ;EAGAstC,UAAUA,CAAA;IACR,IAAI,CAACzvB,cAAc,CAACyvB,UAAU,EAAE,CAACvtC,SAAS,CAACtF,OAAO,IAAG;MACnD;MACA,MAAM00C,aAAa,GAAG,CAAC,GAAG10C,OAAO,CAAC,CAACkU,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAAChQ,WAAW,CAACwwC,aAAa,CAACvgC,CAAC,CAACjQ,WAAW,CAAC,CAAC;MAC7FuwC,aAAa,CAACx0C,OAAO,CAAC6J,CAAC,IAAI,IAAI,CAACqZ,cAAc,CAAC4vB,YAAY,CAACjpC,CAAC,CAAC,CAAC;MAC/D,IAAI,CAACyqC,UAAU,GAAGE,aAAa;IACjC,CAAC,CAAC;EACJ;EAEAL,eAAeA,CAACr0C,OAAgB;IAC9B,MAAMyY,GAAG,GAAG,IAAI,CAAC2K,cAAc,CAACswB,aAAa,CAAC,IAAI,CAACxrC,SAAS,CAAC;IAE7D,IAAI,CAACosC,cAAc,GAAGt0C,OAAO;IAC7B,IAAI,CAACojB,cAAc,CAAC+vB,iBAAiB,CAACnzC,OAAO,CAAC;IAE9C,MAAM8zC,YAAY,GAAG9zC,OAAO,CAAC8zC,YAAY;IACzC,IAAI,CAAC5rC,SAAS,GAAG,IAAI,CAACA,SAAS,CAAC0zB,OAAO,CAAC,SAAS,EAAE,IAAIkY,YAAY,GAAG,CAAC;IAEvE;IACA,MAAMhwB,SAAS,GAAG,IAAI,CAACa,iBAAiB,CAACb,SAAS;IAClD,MAAM8wB,OAAO,GAAG,IAAIj7B,GAAG,CAACmK,SAAS,CAAClT,GAAG,CAAC3M,GAAG,IAAIA,GAAG,CAACkf,IAAI,CAAC,CAAC;IACvD,IAAI,CAACyxB,OAAO,CAAC/6B,GAAG,CAAC,IAAI,CAAC+K,WAAW,CAACzB,IAAI,CAAC,EAAE;MACvCW,SAAS,CAACsP,IAAI,CAAC,IAAI,CAACxO,WAAW,CAAC;;IAGlC,IAAI,CAACxB,cAAc,CAACkwB,qBAAqB,CAACtzC,OAAO,EAAE,IAAI,CAAC4kB,WAAW,CAAC9f,IAAI,EAAEgf,SAAS,EAAErL,GAAG,CAAC,CACtFnT,SAAS,CAAEuvC,eAAe,IAAI;MAE7B,MAAMC,aAAa,GAAG,IAAI,CAAC1xB,cAAc,CAACwwB,iBAAiB,CAAC,CAAC,QAAQ,EAAE,MAAM,EAAE,MAAM,CAAC,EAAEiB,eAAe,EAAEf,YAAa,EAAE,IAAI,CAAC/zC,KAAK,CAAC;MACnI,IAAI,CAACqjB,cAAc,CAACwvB,SAAS,CAAC,IAAI,CAAC;MACnC,IAAI,CAACrpC,MAAM,CAAC+J,QAAQ,CAAC,CAAC,gBAAgB,EAAE,IAAI,CAACpL,SAAS,CAAC,EAAE;QACvDqL,mBAAmB,EAAE;OACtB,CAAC,CAAC4U,IAAI,CAAC,MAAK;QACX,IAAI2sB,aAAa,CAAC,QAAQ,CAAC,EAAE;UAC3B,IAAI,CAAC5vC,KAAK,CAAC4L,GAAG,CAAC,QAAQ,EAAEgkC,aAAa,CAAC,QAAQ,CAAC,CAAC;SAClD,MAAM;UACL,IAAI,CAAC5vC,KAAK,CAAC4L,GAAG,CAAC,QAAQ,EAAE,EAAE,CAAC;;QAE9B,IAAI,CAACsS,cAAc,CAACwvB,SAAS,CAAC,IAAI,CAAC;QACnC,IAAIkC,aAAa,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC5vC,KAAK,CAAC4L,GAAG,CAAC,MAAM,EAAEgkC,aAAa,CAAC,MAAM,CAAC,CAAC;QACxE,IAAIA,aAAa,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC5vC,KAAK,CAAC4L,GAAG,CAAC,MAAM,EAAEgkC,aAAa,CAAC,MAAM,CAAC,CAACjrC,KAAK,CAAC,GAAG,CAAC,CAAC;QACnF;QACAiL,UAAU,CAAC,MAAM,IAAI,CAAC2/B,UAAU,CAACz0C,OAAO,GAAG,KAAK,EAAE,GAAG,CAAC;MACxD,CAAC,CAAC;IACJ,CAAC,CAAC;EACN;EAAC,QAAAhB,CAAA;qBApFU+D,gBAAgB,EAAAzC,+DAAA,CAAAhB,qEAAA,GAAAgB,+DAAA,CAAAG,mDAAA,GAAAH,+DAAA,CAAAG,2DAAA,GAAAH,+DAAA,CAAA+H,gFAAA,GAAA/H,+DAAA,CAAAsa,iEAAA;EAAA;EAAA,QAAA3b,EAAA;UAAhB8D,gBAAgB;IAAApC,SAAA;IAAA4H,MAAA;MAAAL,SAAA;MAAAusC,UAAA;IAAA;IAAA7zC,KAAA;IAAAC,IAAA;IAAA6E,MAAA;IAAA5E,QAAA,WAAAi0C,0BAAA/zC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QChB7BV,4DAAA,aAA8C;QAE1CA,wDAAA,IAAA00C,2CAAA,6BAMkB;QACpB10C,0DAAA,EAAqB;;;QARDA,uDAAA,GAAgB;QAAhBA,wDAAA,mBAAgB;QACHA,uDAAA,GAAa;QAAbA,wDAAA,YAAAW,GAAA,CAAAuzC,UAAA,CAAa;;;;;;;ADcnCzxC,gBAAgB,GAAA8C,iDAAA,EAD5BpC,mEAAY,EAAE,GACFV,gBAAgB,CAqF5B;;;;;;;;;;;;;;AErGD;;;;;;;;;;;;;;;;;;;;;;;;;;AAmCM,MAAOirC,gBAAgB;EAA7BvuC,YAAA;IACU,KAAAw1C,SAAS,GAAiC,EAAE;EAiCtD;EA/BSlG,WAAWA,CAACmG,IAAgB;IACjC;IACA,IAAI,CAACC,kBAAkB,CAACD,IAAI,CAAC;IAC7B;IACA,OAAO,IAAI,CAACE,iBAAiB,CAACF,IAAI,CAAU;EAC9C;EAEQC,kBAAkBA,CAACE,UAAsB;IAC/C,IAAIA,UAAU,CAAC,KAAK,CAAC,EAAE;MACrB,IAAI,CAACJ,SAAS,CAACI,UAAU,CAAC,KAAK,CAAC,CAAC,GAAGA,UAAU;;IAGhD,KAAK,MAAMv3C,GAAG,IAAIu3C,UAAU,EAAE;MAC5B,IAAI,OAAOA,UAAU,CAACv3C,GAAG,CAAC,KAAK,QAAQ,IAAIu3C,UAAU,CAACv3C,GAAG,CAAC,KAAK,IAAI,EAAE;QACnE,IAAI,CAACq3C,kBAAkB,CAACE,UAAU,CAACv3C,GAAG,CAAC,CAAC;;;EAG9C;EAEQs3C,iBAAiBA,CAACnxC,GAAe;IACvC,IAAIA,GAAG,CAAC,MAAM,CAAC,EAAE;MACf,OAAO,IAAI,CAACgxC,SAAS,CAAChxC,GAAG,CAAC,MAAM,CAAC,CAAC;;IAGpC,KAAK,MAAMnG,GAAG,IAAImG,GAAG,EAAE;MACrB,IAAI,OAAOA,GAAG,CAACnG,GAAG,CAAC,KAAK,QAAQ,IAAImG,GAAG,CAACnG,GAAG,CAAC,KAAK,IAAI,EAAE;QACrDmG,GAAG,CAACnG,GAAG,CAAC,GAAG,IAAI,CAACs3C,iBAAiB,CAACnxC,GAAG,CAACnG,GAAG,CAAC,CAAC;;;IAG/C,OAAOmG,GAAG;EACZ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IEjEE3D,uDAAA,cAA6G;;;;IAAlCA,yDAAA,YAAAg1C,YAAA,CAA2B;;;;;IAqB1Fh1C,4DAAA,WAA8C;IAAAA,oDAAA,GAAqC;IAAAA,0DAAA,EAAO;;;;IAA5CA,uDAAA,GAAqC;IAArCA,+DAAA,CAAA8D,MAAA,CAAAmxC,yBAAA,kBAAAnxC,MAAA,CAAAmxC,yBAAA,CAAAz1C,IAAA,CAAqC;;;;;IAmCvFQ,uDAAA,cAAwG;;;;IAAlCA,yDAAA,YAAAk1C,YAAA,CAA2B;;;;;;;;ADzCvG,MAAOh3C,iBAAiB;EAmB5BiB,YAAoB8J,MAAc,EAAUxJ,KAAqB,EAC7CqjB,cAA8B,EAAU+I,iBAAoC,EAC5EspB,KAAwB,EAASlvC,QAAyB,EAC3DyB,IAAiB;IAHhB,KAAAuB,MAAM,GAANA,MAAM;IAAkB,KAAAxJ,KAAK,GAALA,KAAK;IAC7B,KAAAqjB,cAAc,GAAdA,cAAc;IAA0B,KAAA+I,iBAAiB,GAAjBA,iBAAiB;IACzD,KAAAspB,KAAK,GAALA,KAAK;IAA4B,KAAAlvC,QAAQ,GAARA,QAAQ;IAC1C,KAAAyB,IAAI,GAAJA,IAAI;IAjBV,KAAAE,SAAS,GAAW,EAAE;IAEnC,KAAAqtC,yBAAyB,GAAgC;MAACz1C,IAAI,EAAE,IAAI;MAAE0N,IAAI,EAAE;IAAI,CAAC;IACjF,KAAA8mC,cAAc,GAAwB72C,SAAS;IAM/C,KAAAg3C,UAAU,GAAG;MACXz0C,OAAO,EAAE,KAAK;MACdiI,UAAU,EAAE;KACb;IAqCkB,KAAAoP,OAAO,GAAGA,OAAO;EA/BpC;EAEAlS,eAAeA,CAAA;IAEb,IAAI,CAACuwC,0BAA0B,GAAG,IAAI,CAACtyB,cAAc,CAACgB,eAAe,CAAC9e,SAAS,CAACtF,OAAO,IAAG;MACxF,IAAI,CAACs0C,cAAc,GAAGt0C,OAAO;MAC7B;MACA,IAAI,CAACy1C,KAAK,CAACpiB,aAAa,EAAE;IAC5B,CAAC,CAAC;IAEF,IAAI,CAACvB,2BAA2B,GAAG,IAAI,CAAC3F,iBAAiB,CAAC4F,0BAA0B,CAACzsB,SAAS,CAAC+U,QAAQ,IAAG;MACxG,IAAI,CAACk7B,yBAAyB,GAAGl7B,QAAQ;IAC3C,CAAC,CAAC;EACJ;EAEA4L,WAAWA,CAAA;IACT,IAAI,CAACyvB,0BAA0B,CAAC1jB,WAAW,EAAE;IAC7C,IAAI,CAACF,2BAA2B,CAACE,WAAW,EAAE;EAChD;EAEA2jB,gBAAgBA,CAACnoC,IAAY;IAC3B,IAAIA,IAAI,KAAK,SAAS,EAAE;MACtB,IAAI,CAACinC,UAAU,CAACz0C,OAAO,GAAG,CAAC,IAAI,CAACy0C,UAAU,CAACz0C,OAAO;MAClD,IAAI,CAACy0C,UAAU,CAACxsC,UAAU,GAAG,KAAK;KACnC,MAAM,IAAIuF,IAAI,KAAK,YAAY,EAAE;MAChC,IAAI,CAACinC,UAAU,CAACxsC,UAAU,GAAG,CAAC,IAAI,CAACwsC,UAAU,CAACxsC,UAAU;MACxD,IAAI,CAACwsC,UAAU,CAACz0C,OAAO,GAAG,KAAK;;EAEnC;EAAC,QAAAhB,CAAA;qBAnDUR,iBAAiB,EAAA8B,+DAAA,CAAAhB,oDAAA,GAAAgB,+DAAA,CAAAhB,4DAAA,GAAAgB,+DAAA,CAAAG,qEAAA,GAAAH,+DAAA,CAAA+H,uFAAA,GAAA/H,+DAAA,CAAAA,4DAAA,GAAAA,+DAAA,CAAAsa,uEAAA,GAAAta,+DAAA,CAAAua,+DAAA;EAAA;EAAA,QAAA5b,EAAA;UAAjBT,iBAAiB;IAAAmC,SAAA;IAAA2J,SAAA,WAAAsrC,wBAAA50C,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;;;;;;;;;;;;;;;;;;;QClB9BV,4DAAA,aAAsC;QAGlCA,wDAAA,IAAAu1C,gCAAA,iBAA6G;QAC7Gv1C,4DAAA,uBAA2B;QAEAA,oDAAA,iBAAU;QAAAA,0DAAA,EAAI;QAGnCA,4DAAA,aAA0C;QACnBA,wDAAA,mBAAAw1C,iDAAA;UAAA,OAAS70C,GAAA,CAAA00C,gBAAA,CAAiB,SAAS,CAAC;QAAA,EAAC;QACxDr1C,uDAAA,mBAA2D;QAC3DA,4DAAA,eAA6B;QACrBA,oDAAA,eAAO;QAAAA,0DAAA,EAAO;QACpBA,4DAAA,YAAM;QAAAA,oDAAA,IAA+B;QAAAA,0DAAA,EAAO;QAE9CA,4DAAA,oBAA8B;QAAAA,oDAAA,uBAAe;QAAAA,0DAAA,EAAW;QAE1DA,4DAAA,eACqD;QAD7BA,wDAAA,mBAAAy1C,iDAAA;UAAA,OAAS90C,GAAA,CAAA00C,gBAAA,CAAiB,YAAY,CAAC;QAAA,EAAC;QAE9Dr1C,uDAAA,oBAA2D;QAC3DA,4DAAA,eAA6B;QACrBA,oDAAA,eAAO;QAAAA,0DAAA,EAAO;QAEpBA,wDAAA,KAAA01C,kCAAA,mBAA0F;QAC5F11C,0DAAA,EAAM;QACNA,4DAAA,oBAA8B;QAAAA,oDAAA,uBAAe;QAAAA,0DAAA,EAAW;QAI5DA,4DAAA,WAA2D;QACzDA,uDAAA,sBAAoE;QACtEA,0DAAA,EAAM;QACNA,4DAAA,WAA8D;QAE5CA,wDAAA,uCAAA21C,gFAAA;UAAA31C,2DAAA,CAAA2rB,GAAA;UAAA,MAAAhmB,GAAA,GAAA3F,yDAAA;UAAA,OAA6BA,yDAAA,CAAA2F,GAAA,CAAAiK,yBAAA,EAAmC;QAAA,EAAC;QAAC5P,0DAAA,EAAiB;QAErGA,4DAAA,eAA6B;QAC3BA,uDAAA,8BAAmF;QACrFA,0DAAA,EAAM;QAKZA,4DAAA,wBAA2B;QAGuBA,oDAAA,gBAAQ;QAAAA,0DAAA,EAAS;QAC7DA,4DAAA,0BAAwB;QACAA,wDAAA,mBAAA41C,oDAAA;UAAA,OAASj1C,GAAA,CAAAsF,QAAA,CAAAmC,OAAA,CAAiB,SAAS,CAAC,CAAApD,SAAA,EAAY;QAAA,EAAC;QAAChF,oDAAA,eAAO;QAAAA,0DAAA,EAAS;QACxFA,4DAAA,kBAA2E;QAArDA,wDAAA,mBAAA61C,oDAAA;UAAA,OAASl1C,GAAA,CAAAsF,QAAA,CAAAmC,OAAA,CAAiB,YAAY,CAAC,CAAApD,SAAA,EAAY;QAAA,EAAC;QAAChF,oDAAA,kBAAU;QAAAA,0DAAA,EAAS;QAC9FA,4DAAA,kBAAsB;QAAAA,oDAAA,WAAG;QAAAA,0DAAA,EAAS;QAGpCA,4DAAA,4BAA6D;QAA3BA,wDAAA,2BAAA81C,sEAAA7uC,MAAA;UAAA,OAAAtG,GAAA,CAAA+G,IAAA,CAAAc,MAAA,GAAAvB,MAAA;QAAA,EAA0B;QAACjH,oDAAA,iBAAS;QAAAA,0DAAA,EAAmB;QAG3FA,4DAAA,eAAqB;QAEjBA,wDAAA,KAAA+1C,iCAAA,kBAAwG;QACxG/1C,4DAAA,wBAA2B;QACzBA,uDAAA,0BAA8E;QAChFA,0DAAA,EAAgB;QAChBA,4DAAA,wBAA2B;QACzBA,uDAAA,kBAAyB;QAC3BA,0DAAA,EAAgB;;;;;;;QA7DTA,uDAAA,GAAW;QAAXA,wDAAA,YAAW;QAMyCA,uDAAA,GAA4C;QAA5CA,wDAAA,YAAAA,6DAAA,KAAAkc,GAAA,EAAAvb,GAAA,CAAAwzC,UAAA,CAAAz0C,OAAA,EAA4C;QAI7FM,uDAAA,GAA+B;QAA/BA,+DAAA,CAAAW,GAAA,CAAAqzC,cAAA,kBAAArzC,GAAA,CAAAqzC,cAAA,CAAA9B,SAAA,CAA+B;QAKpClyC,uDAAA,GAA+C;QAA/CA,wDAAA,YAAAA,6DAAA,KAAAkc,GAAA,EAAAvb,GAAA,CAAAwzC,UAAA,CAAAxsC,UAAA,EAA+C;QAKzC3H,uDAAA,GAAqC;QAArCA,wDAAA,SAAAW,GAAA,CAAAs0C,yBAAA,kBAAAt0C,GAAA,CAAAs0C,yBAAA,CAAAz1C,IAAA,CAAqC;QAM7CQ,uDAAA,GAAqD;QAArDA,yDAAA,YAAAW,GAAA,CAAAwzC,UAAA,CAAAz0C,OAAA,oBAAqD;QAC5CM,uDAAA,GAAgB;QAAhBA,wDAAA,OAAAW,GAAA,CAAAiH,SAAA,CAAgB,eAAAjH,GAAA,CAAAwzC,UAAA;QAEzBn0C,uDAAA,GAAwD;QAAxDA,yDAAA,YAAAW,GAAA,CAAAwzC,UAAA,CAAAxsC,UAAA,oBAAwD;QAC9B3H,uDAAA,GAAiB;QAAjBA,wDAAA,OAAA2F,GAAA,CAAAkD,EAAA,CAAiB,QAAAlD,GAAA,CAAAmD,GAAA;QAI1B9I,uDAAA,GAAgB;QAAhBA,wDAAA,OAAAW,GAAA,CAAAiH,SAAA,CAAgB,eAAAc,GAAA;QAM7B1I,uDAAA,GAAW;QAAXA,wDAAA,YAAW;QAGDA,uDAAA,GAAwB;QAAxBA,wDAAA,sBAAAsH,GAAA,CAAwB;QAOTtH,uDAAA,IAA0B;QAA1BA,wDAAA,YAAAW,GAAA,CAAA+G,IAAA,CAAAc,MAAA,CAA0B;QAM3CxI,uDAAA,GAAW;QAAXA,wDAAA,YAAW;QACHA,uDAAA,GAAgB;QAAhBA,wDAAA,OAAAW,GAAA,CAAAiH,SAAA,CAAgB,eAAAisC,GAAA;QAExB7zC,uDAAA,GAAW;QAAXA,wDAAA,YAAW;;;;;;;;;;;;;;;;;;;;AC/D/B,MAAM63B,WAAW,GAAG;EACzBme,UAAU,EAAE,KAAK;EACjB/d,IAAI,EAAE,0BAA0B;EAChCsS,EAAE,EAAE;CACL;;;;;;;;;;;;;;ACF4C;AAG7C0L,sEAAA,EAAwB,CAACE,eAAe,CAACnzC,sDAAS,CAAC,CAChDglB,KAAK,CAACC,GAAG,IAAIlR,OAAO,CAACqb,KAAK,CAACnK,GAAG,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ApCAnC;;;;;AAKG;AACG,SAAUjrB,UAAUA,CAAIC,QAAqB;EACjD,OAAQA,QAAwB,CAACC,KAAK,KAAKC,SAAS;AACtD;AAEA;;;;AAIG;AACG,SAAUC,OAAOA,CAAIH,QAAqB;EAC9C,OAAOD,UAAU,CAACC,QAAQ,CAAC,GAAGA,QAAQ,EAAE,GAAGA,QAAQ;AACrD;AAaM,SAAUI,WAAWA,CAAIC,MAAS;EACtC,MAAMD,WAAW,GAAIC,MAAyB;EAE9CD,WAAW,CAACE,UAAU,GAAG,UAA4FC,GAAO,EAAEC,YAAgB;IAC5I,IAAI,CAACH,MAAM,CAACE,GAAG,CAAC,EAAEF,MAAM,CAACE,GAAG,CAAC,GAAGC,YAAY;IAC5C,OAAOJ,WAAqC;EAC9C,CAAC;EAED,OAAOA,WAAW;AACpB;AAEO,MAAMK,iBAAiB,GAAIC,UAAsB,IAAK,CAA4DC,KAAQ,EAAEJ,GAAM,KAAKG,UAAU,CAACC,KAAK,CAAC,CAACJ,GAAG,CAAC;AAC7J,MAAMK,cAAc,GAAIF,UAAsB,IAAK,CAAuJC,KAAQ,EAAEJ,GAAM,EAAEM,MAAS,KAAKA,MAAM,CAACV,OAAO,CAACO,UAAU,CAACC,KAAK,CAAC,CAACJ,GAAG,CAAC,CAAC,CAAC;AqC5CjR,MAAM44C,IAAI,GAAmBA,CAACz4C,UAAU,EAAE;EAC/CurB,KAAK;EACLoM,MAAM;EACNhgB,IAAI;EACJ3N,UAAU;EACV0uC,OAAO;EACPC;AAAc,CACf,KAAI;EACH,MAAMC,CAAC,GAAGn5C,OAAO,CAACO,UAAU,CAAC64C,MAAM,CAACC,SAAS,CAAC;EAC9C,MAAMC,OAAO,GAAGt5C,OAAO,CAACO,UAAU,CAACy4C,IAAI,CAACO,gBAAgB,CAAC;EACzD,MAAMC,MAAM,GAAGx5C,OAAO,CAACO,UAAU,CAACy4C,IAAI,CAACS,oBAAoB,CAAC;EAC5D,MAAMC,QAAQ,GAAG15C,OAAO,CAACO,UAAU,CAACy4C,IAAI,CAACW,aAAa,CAAC;EACvD,MAAM9P,MAAM,GAAG7pC,OAAO,CAACO,UAAU,CAACy4C,IAAI,CAACY,WAAW,CAAC;EACnD,MAAMC,IAAI,GAAG75C,OAAO,CAACO,UAAU,CAACy4C,IAAI,CAACa,IAAI,CAAC;EAC1C,MAAMC,MAAM,GAAGvvC,UAAU,GAAGvK,OAAO,CAACO,UAAU,CAACgK,UAAU,CAACsvC,IAAI,CAAC,GAAGZ,OAAO,GAAGj5C,OAAO,CAACO,UAAU,CAAC64C,MAAM,CAACW,gBAAgB,CAAC,GAAG,IAAI;EAC9H,MAAMtpC,MAAM,GAAGzQ,OAAO,CAACO,UAAU,CAAC64C,MAAM,CAACY,UAAU,CAAC;EACpD,MAAMzmC,KAAK,GAAGvT,OAAO,CAACO,UAAU,CAAC64C,MAAM,CAACa,SAAS,CAAC;EAClD,MAAM3pC,IAAI,GAAGtQ,OAAO,CAACO,UAAU,CAAC64C,MAAM,CAAC9oC,IAAI,CAAC;EAC5C,MAAM4pC,EAAE,GAAG1iB,IAAI,CAACuN,IAAI,CAACvN,IAAI,CAACqN,GAAG,CAAC6U,QAAQ,EAAE,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;EAEnD,MAAMnK,SAAS,GAAGzjB,KAAK,GAAG,CAAC;EAE3B,MAAM+M,CAAC,GAAG74B,OAAO,CAACO,UAAU,CAACy4C,IAAI,CAACmB,YAAY,CAAC;EAC/C,MAAMC,EAAE,GAAGvhB,CAAC,GAAGsgB,CAAC;EAChB,MAAMkB,EAAE,GAAGxhB,CAAC,GAAGsgB,CAAC;EAChB,MAAMmB,GAAG,GAAGnB,CAAC,GAAG,CAAC;EACjB,MAAMoB,EAAE,GAAGpB,CAAC,GAAG,CAAC;EAChB,OAAO;IACLqB,UAAU,EAAE;MACV,kBAAkB,EAAE;wBACFX,IAAI,kEAAkES,GAAG,IAAIA,GAAG;QAChGR,MAAM,GAAc,WAAAA,MAAyB,mBAAAX,CAAI,MAAG,EAAE;QACtDD,cAAc,GAAwB,qBAAAC,CAAK,IAAAoB,EAAK,MAAG,EAAE;AAC7C,iBAAC,IAAIjB,OAAO;gBACZxtB,KAAK;gBACLoM,MAAM,GAAGohB,OAAO,GAAGzP,MAAM;AACzB,gBAAAA,MAAU,IAAAA,MAAiB,WAAAA,MAAM,IAAIA,MAAM;gBAC3CA,MAAM;AACN,gBAAAA,MAAU,IAAAA,MAAiB,WAAAA,MAAM,KAAKA,MAAM;;AAE9C;MACR,kBAAkB,EAAEyQ,GAAG;MACvB,iBAAiB,EAAE,MAAM;MACzB,8BAA8B,EAAE,MAAM;MACtC,uBAAuB,EAAE,CAACnB,CAAC,GAAG,CAAC;MAC/B,uBAAuB,EAAE,CAACA,CAAC,GAAG,CAAC;MAC/B,kBAAkB,EAAErtB,KAAK,GAAGqtB,CAAC;MAC7B,mBAAmB,EAAEjhB,MAAM,GAAGihB,CAAC;MAC/BsB,eAAe,EAAE;IAClB;IACDC,UAAU,EAAE,CACV;MACE,kBAAkB,EAAE;AACU,sCAAAb,IAAI,mBAAmBV,CAAC;AAC9C,gBAAA5J,SAAa,IAAA+J,OAAO,GAAG,CAAC,GAAGH,CAAC;AAC3B,iBAAAG,OAAO,GAAGzP,MAAM,GAAG,CAAC6P,QAAQ,GAAGP,CAAC,IAAI,CAAC,GAAG,CAAC,GAAGA,CAAC;AAC9C,gBAAAtP,MAAU,IAAAA,MAAgB,UAAAA,MAAM,KAAKA,MAAM;AAC3C,gBAAA0F,SAAS,GAAG4J,CAAC,GAAGtP,MAAM,GAAG2P,MAAM;;0BAErBK,IAAI,aAAaA,IAAI,mBAAmBV,CAAC;gBACnDrtB,KAAK,GAAGouB,EAAE,GAAGI,GAAG,GAAGd,MAAM,IAAIE,QAAQ,GAAG,CAAC,GAAGY,GAAG;AAC9C,iBAAAZ,QAAQ,GAAG,CAAC;gBACbQ,EAAE,IAAIR,QAAQ,GAAG,CAAC;iBACjBQ,EAAE,IAAIR,QAAQ,GAAG,CAAC;AAClB,iBAAAA,QAAQ,GAAG,CAAC;;AAEf;MACN,uBAAuB,EAAE,CAACP,CAAC,GAAG,CAAC;MAC/B,kBAAkB,EAAEG,OAAO;MAC3B,mBAAmB,EAAEA,OAAO,GAAG,GAAG,GAAGH,CAAC;MACtC,kBAAkB,EAAErtB,KAAK,GAAG0tB,MAAM;MAClC,iBAAiB,EAAE,MAAM;MACzB,8BAA8B,EAAE;IACjC,EACF;IACDjmC,KAAK,EAAE;MACL,kBAAkB,EAAE,4BAA4BuY,KAAK,aAAa,CAAC,GAAGqtB,CAAY,WAAA5lC,KAAU;MAC5F,uBAAuB,EAAE+lC,OAAO,GAAGH,CAAC;MACpC,kBAAkB,EAAEA,CAAC;MACrB,iBAAiB,EAAE,MAAM;MACzB,8BAA8B,EAAE,MAAM;MACtC,mBAAmB,EAAE,CAAC,GAAGA;IAC1B;IACD1oC,MAAM,EAAE;MACN,kBAAkB,EAAE;wBACFA,MAAM;;AAEd,gBAAA2pC,EAAM,IAAAA,EAAY,UAAAA,EAAE,IAAIA,EAAE;gBAC1BtuB,KAAK,GAAG,CAAC,GAAGsuB,EAAE;AACd,gBAAAA,EAAM,IAAAA,EAAY,UAAAA,EAAE,KAAKA,EAAE;AAC3B,gBAAAA,EAAM,IAAAC,EAAa,WAAAD,EAAE,IAAIC,EAAE;iBAC1BvuB,KAAK,GAAG,CAAC,GAAGsuB,EAAE;AACf,gBAAAA,EAAM,IAAAC,EAAa,WAAAD,EAAE,KAAKC,EAAE;;AAE3C;MACK,uBAAuB,EAAEniB,MAAM,GAAGW,CAAC;MACnC,kBAAkB,EAAEsgB,CAAC;MACrB,iBAAiB,EAAE,MAAM;MACzB,8BAA8B,EAAE,MAAM;MACtC,mBAAmB,EAAEiB;IACtB;IACD9pC,IAAI,EAAE;MACJ,kBAAkB,EAAE;qBACLA,IAAI;;WAEdwb,KAAK,GAAG,CAAC,GAAGqtB,CAAC;AACb,WAAAjhB,MAAM,GAAGohB,OAAO,GAAGzgB,CAAC,GAAGsgB,CAAC;WACxBiB,EAAE,GAAGjB,CAAK,IAAAiB,EAAE,WAAWA,EAAE,GAAGjB,CAAC,IAAIiB,EAAE;AACnC,WAAAA,EAAE,GAAGjB,CAAC;WACNiB,EAAE,GAAGjB,CAAK,IAAAiB,EAAE,WAAWA,EAAE,GAAGjB,CAAC,KAAKiB,EAAE;;;AAG9C;MACK,uBAAuB,EAAE,CAAC,CAAC,GAAGjB,CAAC;MAC/B,uBAAuB,EAAEG,OAAO,GAAGH,CAAC;MACpC,kBAAkB,EAAE,CAAC,GAAGA,CAAC;MACzB,iBAAiB,EAAE,MAAM;MACzB,8BAA8B,EAAE,MAAM;MACtC,kBAAkB,EAAErtB,KAAK,GAAG,CAAC,GAAGqtB,CAAC;MACjC,mBAAmB,EAAEjhB,MAAM,GAAG,CAAC,GAAGihB,CAAC,GAAGG;IACvC;;;;;;;;;;;;;;;;;;;;;GAqBF;AACH,CAAC;;AC/IM,MAAMqB,QAAQ,GAAmBA,CAACp6C,UAAU,EAAE;EAACurB,KAAK;EAAEoM,MAAM;EAAEhgB,IAAI;EAAE3N;AAAU,CAAC,KAAI;EACxF,MAAMkG,MAAM,GAAGzQ,OAAO,CAACO,UAAU,CAAC64C,MAAM,CAACY,UAAU,CAAC;EACpD,MAAMzmC,KAAK,GAAGvT,OAAO,CAACO,UAAU,CAAC64C,MAAM,CAACa,SAAS,CAAC;EAClD,MAAM3pC,IAAI,GAAGtQ,OAAO,CAACO,UAAU,CAAC64C,MAAM,CAAC9oC,IAAI,CAAC;EAC5C,MAAMsqC,KAAK,GAAG56C,OAAO,CAACO,UAAU,CAAC64C,MAAM,CAACC,SAAS,CAAC;EAClD,MAAMS,MAAM,GAAG,CAACvvC,UAAU,GACxB,CAAC2N,IAAI,GACHlY,OAAO,CAACO,UAAU,CAACo6C,QAAQ,CAACb,MAAM,CAAC,GACnC95C,OAAO,CAACO,UAAU,CAACo6C,QAAQ,CAACziC,IAAI,CAAC,GACjClY,OAAO,CAACO,UAAU,CAACgK,UAAU,CAACsvC,IAAI,CAAC;EACvC,MAAMA,IAAI,GAAG75C,OAAO,CAACO,UAAU,CAACo6C,QAAQ,CAACd,IAAI,CAAC;EAE9C,MAAMgB,EAAE,GAAGD,KAAK,GAAG,CAAC;EACpB,MAAMpL,UAAU,GAAGtX,MAAM,GAAG,CAAC;EAC7B,MAAMkiB,EAAE,GAAG5K,UAAU,GAAGoL,KAAK;EAC7B,MAAMP,EAAE,GAAG7K,UAAU,GAAGoL,KAAK;EAC7B,MAAME,GAAG,GAAGtjB,IAAI,CAACpc,GAAG,CAACg/B,EAAE,EAAEtuB,KAAK,GAAG,CAAC,CAAC;EACnC,OAAO;IACLvY,KAAK,EAAE;MACL,kBAAkB,EAAE;wBACFA,KAAK;kBACX6mC,EAAE;AACJ,gBAAAU,GAAO,IAAAV,EAAY,UAAAU,GAAG,KAAKV,EAAE;AAC7B,gBAAAtuB,KAAK,GAAG,CAAC,GAAGgvB,GAAG,GAAGF,KAAK;AACvB,gBAAAE,GAAO,IAAAV,EAAY,UAAAU,GAAG,IAAIV,EAAE;AAC5B,gBAAAU,GAAO,IAAAT,EAAa,WAAAS,GAAG,KAAKT,EAAE;AAC7B,iBAAAvuB,KAAK,GAAG,CAAC,GAAGgvB,GAAG,GAAGF,KAAK;AACxB,gBAAAE,GAAO,IAAAT,EAAa,WAAAS,GAAG,IAAIT,EAAE;;AAE5C;MACK,uBAAuB,EAAE,CAACO,KAAK;MAC/B,uBAAuB,EAAE,CAACA,KAAK,GAAG,CAAC;MACnC,kBAAkB,EAAEA,KAAK;MACzB,iBAAiB,EAAE,MAAM;MACzB,8BAA8B,EAAE,MAAM;MACtC,mBAAmB,EAAER,EAAE;MACvB,kBAAkB,EAAEtuB,KAAK,GAAG8uB;IAC7B;IACDnqC,MAAM,EAAE;MACN,kBAAkB,EAAE;wBACFA,MAAM;;AAEd,gBAAAqqC,GAAO,IAAAV,EAAY,UAAAU,GAAG,IAAIV,EAAE;AAC5B,gBAAAtuB,KAAK,GAAG,CAAC,GAAGgvB,GAAG,GAAGF,KAAK;AACvB,gBAAAE,GAAO,IAAAV,EAAY,UAAAU,GAAG,KAAKV,EAAE;AAC7B,gBAAAU,GAAO,IAAAT,EAAa,WAAAS,GAAG,IAAIT,EAAE;AAC5B,iBAAAvuB,KAAK,GAAG,CAAC,GAAGgvB,GAAG,GAAGF,KAAK;AACxB,gBAAAE,GAAO,IAAAT,EAAa,WAAAS,GAAG,KAAKT,EAAE;;AAE7C;MACK,uBAAuB,EAAE7K,UAAU;MACnC,uBAAuB,EAAE,CAACoL,KAAK,GAAG,CAAC;MACnC,kBAAkB,EAAEA,KAAK;MACzB,iBAAiB,EAAE,MAAM;MACzB,8BAA8B,EAAE,MAAM;MACtC,mBAAmB,EAAER,EAAE;MACvB,kBAAkB,EAAEtuB,KAAK,GAAG8uB;IAC7B;IACDtqC,IAAI,EAAE;MACJ,kBAAkB,EAAE;AACX,eAAAwb,KAAK,GAAG,CAAC,GAAG8uB,KAAkB,aAAA1iB,MAAM,GAAG,CAAC,GAAG0iB,KAAc,SAAAR,EAAE,GAAG,CAAC,GAAGQ,KAAc,SAAAR,EAAE,WAAW9pC,IAAI;AACrG,YAAC,GAAGsqC,KAAa,QAAAA,KAAK,YAAY9uB,KAAK,aAAaoM,MAAM,SAASkiB,EAAa,WAAAP,IAAiB,aAAAC,MAAM,mBAAmBc,KAAK;AACzI;MACK,uBAAuB,EAAE,CAAC,CAAC,GAAGA,KAAK;MACnC,uBAAuB,EAAE,CAACA,KAAK;MAC/B,kBAAkB,EAAE,CAAC,GAAGA,KAAK;MAC7B,iBAAiB,EAAE,MAAM;MACzB,8BAA8B,EAAE,MAAM;MACtC,kBAAkB,EAAE9uB,KAAK,GAAG,CAAC,GAAG8uB,KAAK;MACrC,mBAAmB,EAAE1iB,MAAM,GAAG,CAAC,GAAG0iB;IACnC;IACD/xC,QAAQ,EAAE;MACR,kBAAkB,EAAwC,sCAAAijB,KAAkB,aAAAoM,MAAe,SAAAsX,UAA6B,mBAAAoL,KAAkB,aAAAd,MAAW;MACrJW,eAAe,EAAE;IAClB;GACF;AACH,CAAC;AC5EM,MAAMM,OAAO,GAAmBA,CAACx6C,UAAU,EAAE;EAACurB,KAAK;EAAEoM,MAAM;EAAEhgB;AAAI,CAAC,KAAI;EAC3E,MAAM2hC,IAAI,GAAG75C,OAAO,CAACO,UAAU,CAACw6C,OAAO,CAAClB,IAAI,CAAC;EAC7C,MAAMppC,MAAM,GAAGzQ,OAAO,CAACO,UAAU,CAAC64C,MAAM,CAACY,UAAU,CAAC;EACpD,MAAMzmC,KAAK,GAAGvT,OAAO,CAACO,UAAU,CAAC64C,MAAM,CAACa,SAAS,CAAC;EAClD,MAAM3pC,IAAI,GAAGtQ,OAAO,CAACO,UAAU,CAAC64C,MAAM,CAAC9oC,IAAI,CAAC;EAC5C,MAAMsqC,KAAK,GAAG56C,OAAO,CAACO,UAAU,CAAC64C,MAAM,CAACC,SAAS,CAAC;EAClD,MAAMxP,MAAM,GAAG7pC,OAAO,CAACO,UAAU,CAACw6C,OAAO,CAAClR,MAAM,CAAC;EAEjD,MAAMuQ,EAAE,GAAGvQ,MAAM,GAAG+Q,KAAK;EACzB,MAAMP,EAAE,GAAGxQ,MAAM,GAAG+Q,KAAK;EAEzB,OAAO;IACLrnC,KAAK,EAAE;MACL,kBAAkB,EAAE;wBACFA,KAAK;kBACX6mC,EAAE;AACJ,gBAAAA,EAAM,IAAAA,EAAY,UAAAA,EAAE,KAAKA,EAAE;gBAC3BtuB,KAAK,GAAG,CAAC,GAAGsuB,EAAE;AACd,gBAAAA,EAAM,IAAAA,EAAY,UAAAA,EAAE,IAAIA,EAAE;AAC1B,gBAAAA,EAAM,IAAAC,EAAa,WAAAD,EAAE,KAAKC,EAAE;iBAC3BvuB,KAAK,GAAG,CAAC,GAAGsuB,EAAE;AACf,gBAAAA,EAAM,IAAAC,EAAa,WAAAD,EAAE,IAAIC,EAAE;;AAE1C;MACK,uBAAuB,EAAE,CAACO,KAAK;MAC/B,kBAAkB,EAAEA,KAAK;MACzB,iBAAiB,EAAE,MAAM;MACzB,8BAA8B,EAAE,MAAM;MACtC,mBAAmB,EAAER;IACtB;IACD3pC,MAAM,EAAE;MACN,kBAAkB,EAAE;wBACFA,MAAM;;AAEd,gBAAA2pC,EAAM,IAAAA,EAAY,UAAAA,EAAE,IAAIA,EAAE;gBAC1BtuB,KAAK,GAAG,CAAC,GAAGsuB,EAAE;AACd,gBAAAA,EAAM,IAAAA,EAAY,UAAAA,EAAE,KAAKA,EAAE;AAC3B,gBAAAA,EAAM,IAAAC,EAAa,WAAAD,EAAE,IAAIC,EAAE;iBAC1BvuB,KAAK,GAAG,CAAC,GAAGsuB,EAAE;AACf,gBAAAA,EAAM,IAAAC,EAAa,WAAAD,EAAE,KAAKC,EAAE;;AAE3C;MACK,uBAAuB,EAAEniB,MAAM,GAAG2R,MAAM;MACxC,kBAAkB,EAAE+Q,KAAK;MACzB,iBAAiB,EAAE,MAAM;MACzB,8BAA8B,EAAE,MAAM;MACtC,mBAAmB,EAAER;IACtB;IACD9pC,IAAI,EAAE;MACJ,kBAAkB,EAAE;AACX,eAAAwb,KAAK,GAAG,CAAC,GAAG8uB,KAAkB,aAAA1iB,MAAM,GAAG,CAAC,GAAG0iB,KAAc,SAAAR,EAAG,YAAY9pC,IAAI;WAChF,CAAC,GAACsqC,KAAK,QAAQA,KAAK,YAAY9uB,KAAK,aAAaoM,MAAM,SAAS2R,MAAM,WAAWgQ,IAAI;AAChG;MACK,uBAAuB,EAAE,CAAC,CAAC,GAAGe,KAAK;MACnC,uBAAuB,EAAE,CAACA,KAAK;MAC/B,kBAAkB,EAAE,CAAC,GAAGA,KAAK;MAC7B,iBAAiB,EAAE,MAAM;MACzB,8BAA8B,EAAE,MAAM;MACtC,kBAAkB,EAAE9uB,KAAK,GAAG,CAAC,GAAG8uB,KAAK;MACrC,mBAAmB,EAAE1iB,MAAM,GAAG,CAAC,GAAG0iB;IACnC;IACD/xC,QAAQ,EAAE;MACR,kBAAkB,EAAkB,gBAAAijB,KAAK,aAAaoM,MAAM,0BAA0B2R,MAAW;MACjG4Q,eAAe,EAAE;IAClB;GACF;AACH,CAAC;ACjEM,MAAMO,GAAG,GAAmBA,CAACz6C,UAAU,EAAE;EAACurB,KAAK;EAAEoM;AAAM,CAAC,KAAI;EACjE,MAAM0iB,KAAK,GAAG56C,OAAO,CAACO,UAAU,CAAC64C,MAAM,CAACC,SAAS,CAAC;EAClD,MAAM5oC,MAAM,GAAGzQ,OAAO,CAACO,UAAU,CAAC64C,MAAM,CAACY,UAAU,CAAC;EACpD,MAAMzmC,KAAK,GAAGvT,OAAO,CAACO,UAAU,CAAC64C,MAAM,CAACa,SAAS,CAAC;EAClD,MAAM3pC,IAAI,GAAGtQ,OAAO,CAACO,UAAU,CAAC64C,MAAM,CAAC9oC,IAAI,CAAC;EAC5C,MAAMupC,IAAI,GAAG75C,OAAO,CAACO,UAAU,CAACy6C,GAAG,CAACnB,IAAI,CAAC;EAEzC,MAAMhhB,CAAC,GAAG74B,OAAO,CAACO,UAAU,CAACy6C,GAAG,CAACnR,MAAM,CAAC;EACxC,MAAMuQ,EAAE,GAAGvhB,CAAC,GAAG+hB,KAAK;EACpB,MAAMP,EAAE,GAAGxhB,CAAC,GAAG+hB,KAAK;EACpB,OAAO;IACLrnC,KAAK,EAAE;MACL,kBAAkB,EAAE,4BAA4BuY,KAAK,aAAa,CAAC,GAAG8uB,KAAgB,WAAArnC,KAAU;MAChG,uBAAuB,EAAE,CAACqnC,KAAK;MAC/B,kBAAkB,EAAEA,KAAK;MACzB,iBAAiB,EAAE,MAAM;MACzB,8BAA8B,EAAE,MAAM;MACtC,mBAAmB,EAAE,CAAC,GAAGA;IAC1B;IACDnqC,MAAM,EAAE;MACN,kBAAkB,EAAE;wBACFA,MAAM;;AAEd,gBAAA2pC,EAAM,IAAAA,EAAY,UAAAA,EAAE,IAAIA,EAAE;gBAC1BtuB,KAAK,GAAG,CAAC,GAAGsuB,EAAE;AACd,gBAAAA,EAAM,IAAAA,EAAY,UAAAA,EAAE,KAAKA,EAAE;AAC3B,gBAAAA,EAAM,IAAAC,EAAa,WAAAD,EAAE,IAAIC,EAAE;iBAC1BvuB,KAAK,GAAG,CAAC,GAAGsuB,EAAE;AACf,gBAAAA,EAAM,IAAAC,EAAa,WAAAD,EAAE,KAAKC,EAAE;;AAE3C;MACK,uBAAuB,EAAEniB,MAAM,GAAGW,CAAC;MACnC,kBAAkB,EAAE+hB,KAAK;MACzB,iBAAiB,EAAE,MAAM;MACzB,8BAA8B,EAAE,MAAM;MACtC,mBAAmB,EAAER;IACtB;IACD9pC,IAAI,EAAE;MACJ,kBAAkB,EAAE;qBACLA,IAAI;;WAEdwb,KAAK,GAAG,CAAC,GAAG8uB,KAAK;WACjB1iB,MAAM,GAAGW,CAAC,GAAG+hB,KAAK;WAClBR,EAAE,GAAGQ,KAAS,IAAAR,EAAE,WAAWA,EAAE,GAAGQ,KAAK,IAAIR,EAAE;AAC3C,WAAAA,EAAE,GAAGQ,KAAK;WACVR,EAAE,GAAGQ,KAAS,IAAAR,EAAE,WAAWA,EAAE,GAAGQ,KAAK,KAAKR,EAAE;;;qBAGlCP,IAAI;WACd,CAAC,GAAGe,KAAK,IAAIA,KAAK;WAClB9uB,KAAK,GAAG,CAAC,GAAG8uB,KAAK;WACjB1iB,MAAM,GAAGW,CAAC,GAAG+hB,KAAK;AAClB,WAAA/hB,CAAK,IAAAA,CAAY,WAAAA,CAAC,IAAIA,CAAC;WACvBA,CAAC,GAAG,CAAC,GAAG+hB,KAAK;AACb,WAAA/hB,CAAK,IAAAA,CAAY,WAAAA,CAAC,KAAKA,CAAC;;AAElC;MACK,uBAAuB,EAAE,CAAC,CAAC,GAAG+hB,KAAK;MACnC,uBAAuB,EAAE,CAACA,KAAK;MAC/B,kBAAkB,EAAE,CAAC,GAAGA,KAAK;MAC7B,iBAAiB,EAAE,MAAM;MACzB,8BAA8B,EAAE,MAAM;MACtC,kBAAkB,EAAE9uB,KAAK,GAAG,CAAC,GAAG8uB,KAAK;MACrC,mBAAmB,EAAE1iB,MAAM,GAAG,CAAC,GAAG0iB;IACnC;IACD/xC,QAAQ,EAAE;MACR,kBAAkB,EAAE;;;WAGfijB,KAAK;AACL,WAAAoM,MAAM,GAAGW,CAAE;AACX,WAAAA,CAAK,IAAAA,CAAY,WAAAA,CAAC,IAAIA,CAAC;WACvBA,CAAC;AACD,WAAAA,CAAK,IAAAA,CAAY,WAAAA,CAAC,KAAKA,CAAC;AACvB;MACN4hB,eAAe,EAAE;IAClB;GACF;AACH,CAAC;AC/EM,MAAMQ,mBAAmB,GAAmBA,CAAC16C,UAAU,EAAE;EAC9DurB,KAAK;EACLoM,MAAM;EACNhgB,IAAI;EACJ+gC,OAAO;EACP1uC,UAAU;EACV2uC;AAAc,CACf,KAAI;EACH,MAAMW,IAAI,GAAG,CAAC3hC,IAAI,GAChBlY,OAAO,CAACO,UAAU,CAAC26C,OAAO,CAACrB,IAAI,CAAC,GAChC75C,OAAO,CAACO,UAAU,CAAC06C,mBAAmB,CAAC/iC,IAAI,CAAC;EAC9C,MAAMzH,MAAM,GAAGzQ,OAAO,CAACO,UAAU,CAAC64C,MAAM,CAACY,UAAU,CAAC;EACpD,MAAMzmC,KAAK,GAAGvT,OAAO,CAACO,UAAU,CAAC64C,MAAM,CAACa,SAAS,CAAC;EAClD,MAAM3pC,IAAI,GAAGtQ,OAAO,CAACO,UAAU,CAAC64C,MAAM,CAAC9oC,IAAI,CAAC;EAC5C,MAAM6oC,CAAC,GAAGn5C,OAAO,CAACO,UAAU,CAAC64C,MAAM,CAACC,SAAS,CAAC;EAC9C,MAAMiB,GAAG,GAAGnB,CAAC,GAAG,CAAC;EACjB,MAAMgC,OAAO,GAAGn7C,OAAO,CAACO,UAAU,CAAC06C,mBAAmB,CAACG,YAAY,CAAC;EACpE,MAAMtB,MAAM,GAAG,CAACvvC,UAAU,GAAG,CAAC0uC,OAAO,GAAG,IAAI,GAAGj5C,OAAO,CAACO,UAAU,CAAC64C,MAAM,CAACW,gBAAgB,CAAC,GAAG/5C,OAAO,CAACO,UAAU,CAACgK,UAAU,CAACsvC,IAAI,CAAC;EAEhI,MAAMwB,IAAI,GAAG7jB,IAAI,CAACpc,GAAG,CAACpb,OAAO,CAACO,UAAU,CAAC06C,mBAAmB,CAACK,SAAS,CAAC,EAAEpjB,MAAM,GAAGijB,OAAO,EAAErvB,KAAK,GAAG,CAAC,GAAGqtB,CAAC,CAAC;EACzG,MAAMxW,CAAC,GAAGzK,MAAM,GAAGijB,OAAO,GAAGE,IAAI;EAEjC,MAAME,KAAK,GAAGF,IAAI,GAAGlC,CAAC;EACtB,MAAMqC,KAAK,GAAGH,IAAI,GAAGlC,CAAC;EAEtB,MAAMsC,QAAQ,GAAGN,OAAO,GAAGhC,CAAC;EAC5B,MAAMuC,QAAQ,GAAGP,OAAO,GAAGhC,CAAC;EAG5B,OAAO;IACLqB,UAAU,EAAE;MACV,kBAAkB,EAAE;oBACNX,IAAI,kEAAkES,GAAG,IAAIA,GAAG;QAC5FR,MAAM,GAAc,WAAAA,MAAyB,mBAAAX,CAAI,MAAG,EAAE;AACtD,QAAAD,cAAc,GAAG,qBAAqBC,CAAC,IAAIA,CAAC,GAAG,CAAC,GAAG,GAAG,EAAE;;UAEtDkC,IAAI;AACJ,UAAAvvB,KAAK,GAAGuvB,IAAI;AACZ,UAAAA,IAAQ,IAAAA,IAAc,UAAAA,IAAI,IAAIA,IAAI;UAClC1Y,CAAC;AACD,UAAAwY,OAAW,IAAAA,OAAkB,WAAAA,OAAO,IAAIA,OAAO;UAC/CA,OAAO;AACP,UAAAA,OAAW,IAAAA,OAAkB,WAAAA,OAAO,KAAKA,OAAO;WAC/CxY,CAAC;AACF,UAAA0Y,IAAQ,IAAAA,IAAc,UAAAA,IAAI,KAAKA,IAAI;;;AAGtC;MACD,kBAAkB,EAAElC,CAAC,GAAG,CAAC;MACzB,iBAAiB,EAAE,MAAM;MACzB,8BAA8B,EAAE,MAAM;MACtC,uBAAuB,EAAE,CAACmB,GAAG;MAC7B,uBAAuB,EAAE,CAACA,GAAG;MAC7B,kBAAkB,EAAExuB,KAAK,GAAGqtB,CAAC;MAC7B,mBAAmB,EAAEjhB,MAAM,GAAGihB,CAAC;MACjCsB,eAAe,EAAE;IAChB;IACDlnC,KAAK,EAAE;MACL,kBAAkB,EAAE;wBACFA,KAAK;kBACXgoC,KAAK;AACP,gBAAAA,KAAS,IAAAA,KAAe,UAAAA,KAAK,KAAKA,KAAK;gBACvCzvB,KAAK,GAAG,CAAC,GAAGyvB,KAAK;AACjB,gBAAAA,KAAS,IAAAA,KAAe,UAAAA,KAAK,IAAIA,KAAK;AACtC,gBAAAA,KAAS,IAAAC,KAAgB,WAAAD,KAAK,KAAKC,KAAK;iBACvC1vB,KAAK,GAAG,CAAC,GAAGyvB,KAAK;AAClB,gBAAAA,KAAS,IAAAC,KAAgB,WAAAD,KAAK,IAAIC,KAAK;;AAEtD;MACK,uBAAuB,EAAE,CAACrC,CAAC;MAC3B,kBAAkB,EAAEA,CAAC;MACrB,iBAAiB,EAAE,MAAM;MACzB,8BAA8B,EAAE,MAAM;MACtC,mBAAmB,EAAEoC;IACtB;IACD9qC,MAAM,EAAE;MACN,kBAAkB,EAAE;wBACFA,MAAM;;AAEd,gBAAAgrC,QAAY,IAAAA,QAAkB,UAAAA,QAAQ,IAAIA,QAAQ;gBAClD3vB,KAAK,GAAG,CAAC,GAAG2vB,QAAQ;AACpB,gBAAAA,QAAY,IAAAA,QAAkB,UAAAA,QAAQ,KAAKA,QAAQ;AACnD,gBAAAA,QAAY,IAAAC,QAAmB,WAAAD,QAAQ,IAAIC,QAAQ;iBAClD5vB,KAAK,GAAG,CAAC,GAAG2vB,QAAQ;AACrB,gBAAAA,QAAY,IAAAC,QAAmB,WAAAD,QAAQ,KAAKC,QAAQ;;AAEnE;MACK,uBAAuB,EAAExjB,MAAM,GAAGijB,OAAO;MACzC,kBAAkB,EAAEhC,CAAC;MACrB,iBAAiB,EAAE,MAAM;MACzB,8BAA8B,EAAE,MAAM;MACtC,mBAAmB,EAAEsC;IACtB;IACDnrC,IAAI,EAAE;MACJ,kBAAkB,EAAE;oBACNA,IAAI;UACdirC,KAAK;AACL,UAAAzvB,KAAK,GAAG,CAAC,GAAGqtB,CAAC,GAAGoC,KAAK;UACrBA,KAAK,GAAGpC,CAAK,IAAAoC,KAAK,UAAUA,KAAK,GAAGpC,CAAC,IAAIoC,KAAK;UAC9C5Y,CAAC;UACD8Y,QAAQ,GAAGtC,CAAK,IAAAsC,QAAQ,WAAWA,QAAQ,GAAGtC,CAAC,IAAIsC,QAAQ;AAC3D,UAAAA,QAAQ,GAAGtC,CAAC;UACZsC,QAAQ,GAAGtC,CAAK,IAAAsC,QAAQ,WAAWA,QAAQ,GAAGtC,CAAC,KAAKsC,QAAQ;WAC3D9Y,CAAC;UACF4Y,KAAK,GAAGpC,CAAK,IAAAoC,KAAK,UAAUA,KAAK,GAAGpC,CAAC,KAAKoC,KAAK;;;AAGxD;MACK,uBAAuB,EAAE,CAAC,CAAC,GAAGpC,CAAC;MAC/B,uBAAuB,EAAE,CAACA,CAAC;MAC3B,kBAAkB,EAAE,CAAC,GAAGA,CAAC;MACzB,iBAAiB,EAAE,MAAM;MACzB,8BAA8B,EAAE,MAAM;MACtC,kBAAkB,EAAErtB,KAAK,GAAG,CAAC,GAAGqtB,CAAC;MACjC,mBAAmB,EAAEjhB,MAAM,GAAG,CAAC,GAAGihB;IACnC;GACF;AACH,CAAC;ACpHM,MAAM+B,OAAO,GAAmBA,CAAC36C,UAAU,EAAE;EAClDurB,KAAK;EACLoM,MAAM;EACNhgB,IAAI;EACJ+gC,OAAO;EACP1uC,UAAU;EACV2uC;AAAc,CACf,KAAI;EACH,MAAMzoC,MAAM,GAAGzQ,OAAO,CAACO,UAAU,CAAC64C,MAAM,CAACY,UAAU,CAAC;EACpD,MAAMzmC,KAAK,GAAGvT,OAAO,CAACO,UAAU,CAAC64C,MAAM,CAACa,SAAS,CAAC;EAClD,MAAM3pC,IAAI,GAAGtQ,OAAO,CAACO,UAAU,CAAC64C,MAAM,CAAC9oC,IAAI,CAAC;EAE5C,MAAM6oC,CAAC,GAAGn5C,OAAO,CAACO,UAAU,CAAC64C,MAAM,CAACC,SAAS,CAAC;EAC9C,MAAMsC,GAAG,GAAG37C,OAAO,CAACO,UAAU,CAAC26C,OAAO,CAACS,GAAG,CAAC;EAC3C,MAAM9B,IAAI,GAAG,CAAC3hC,IAAI,GAChB3N,UAAU,GAAGvK,OAAO,CAACO,UAAU,CAACgK,UAAU,CAACsvC,IAAI,CAAC,GAAG75C,OAAO,CAACO,UAAU,CAAC26C,OAAO,CAACrB,IAAI,CAAC,GACnF75C,OAAO,CAACO,UAAU,CAAC26C,OAAO,CAAChjC,IAAI,CAAC;EAElC,MAAM4hC,MAAM,GAAG,CAACb,OAAO,GAAGj5C,OAAO,CAACO,UAAU,CAAC26C,OAAO,CAACpB,MAAM,CAAC,GAAG95C,OAAO,CAACO,UAAU,CAAC64C,MAAM,CAACW,gBAAgB,CAAC;EAE1G,MAAM6B,IAAI,GAAGD,GAAG,GAAG,CAAC;EACpB,MAAMpB,EAAE,GAAGpB,CAAC,GAAG,CAAC;EAChB,MAAMxW,CAAC,GAAGzK,MAAM,GAAG0jB,IAAI,GAAG,CAAC,GAAGrB,EAAE,CAAC;EAEjC,MAAMsB,KAAK,GAAG,CAAC;EACf,MAAMC,WAAW,GAAG5jB,MAAM,GAAG,CAAC,GAAGihB,CAAC;EAElC,MAAM4C,IAAI,GAAG;;AAEL,UAAAJ,GAAG,GAAGpB,EAAE,GAAGsB,KAAK,IAAItB,EAAE;AACtB,UAAAzuB,KAAK,GAAG6vB,GAAG,GAAGpB,EAAE,GAAGsB,KAAK;AACxB,UAAAF,GAAG,IAAIA,GAAG;UACVhZ,CAAC;AACA,WAAAgZ,GAAG,IAAIA,GAAG;UACXA,GAAG,GAAGpB,EAAE,GAAGsB,KAAK;AACf,WAAAF,GAAG,KAAKA,GAAG;WACXhZ,CAAC;AACD,WAAAgZ,GAAG,KAAKA,GAAG;;;UAGZ;EACR,OAAO;IACLnB,UAAU,EAAE;MACV,kBAAkB,EAAE;QAClBuB,IAAI;AACuB,mCAAAlC,IAAiB,aAAAA,IAAuB,oBAAC,GAAGU,EAAE;AAChF;IACI;IACDhnC,KAAK,EAAE;MACL,kBAAkB,EAAE;sBACJA,KAAK,+BAA+B,CAAC,GAAGgnC,EAAE;AACtD,UAAAA,EAAE,IAAIuB,WAAW;AAChB,WAAAnZ,CAAC,GAAG,CAAC;UACNgZ,GAAG,KAAKA,GAAG,GAAGxC,CAAC;UACfrtB,KAAK,GAAG6vB,GAAG,GAAGpB,EAAE;UAChBoB,GAAG,IAAIA,GAAG,GAAGxC,CAAC;AACd,UAAAxW,CAAC,GAAG,CAAC;;AAER;MACD,uBAAuB,EAAE,CAACwW,CAAC;MAC3B,mBAAmB,EAAE2C,WAAW;MAChC,iBAAiB,EAAE,MAAM;MACzB,kBAAkB,EAAE3C;IACrB;IACD1oC,MAAM,EAAE;MACN,kBAAkB,EAAE;sBACJA,MAAM,+BAA+B,CAAC,GAAG8pC,EAAE;AACvD,UAAAA,EAAE,IAAI,CAAC;AACP,UAAA5X,CAAC,GAAG,CAAC;UACLgZ,GAAG,IAAIA,GAAG,GAAGxC,CAAC;UACdrtB,KAAK,GAAG6vB,GAAG,GAAGpB,EAAE;UAChBoB,GAAG,KAAKA,GAAG,GAAGxC,CAAC;AACd,WAAAxW,CAAC,GAAG,CAAC;;AAET;MACD,uBAAuB,EAAEzK,MAAM,GAAG,CAAC;MACnC,mBAAmB,EAAE4jB,WAAW;MAChC,iBAAiB,EAAE,MAAM;MACzB,kBAAkB,EAAE3C;IACrB;IACD7oC,IAAI,EAAE;MACJ,kBAAkB,EAAE;;AAEhB,UAAAwb,KAAK,GAAG,CAAK,KAAC,GAAGqtB,CAAC;UAClBrtB,KAAK,GAAG6vB,GAAG,GAAGE,KAAK;UACnBF,GAAG,GAAGxC,CAAC,IAAIwC,GAAG;UACdhZ,CAAC;WACAgZ,GAAG,GAAGxC,CAAC,IAAIwC,GAAG;AACf,UAAAA,GAAG,GAAGE,KAAK,GAAG,CAAC,GAAGtB,EAAE;WACnBoB,GAAG,GAAGxC,CAAC,KAAKwC,GAAG;WACfhZ,CAAC;WACDgZ,GAAG,GAAGxC,CAAC,KAAKwC,GAAG;;kBAERrrC,IAAI,mBAAmB,CAAC,GAAGiqC,EAAE;AAC9C;MACK,uBAAuB,EAAE,CAAC,CAAC,GAAGpB,CAAC;MAC/B,uBAAuB,EAAE,CAACA,CAAC;MAC3B,kBAAkB,EAAE,CAAC,GAAGA,CAAC;MACzB,iBAAiB,EAAE,MAAM;MACzB,8BAA8B,EAAE,MAAM;MACtC,kBAAkB,EAAErtB,KAAK,GAAG,CAAC,GAAGqtB,CAAC;MACjC,mBAAmB,EAAEjhB,MAAM,GAAG,CAAC,GAAGihB;IACnC;IACDuB,UAAU,EAAE,CACV;MACE,kBAAkB,EAAE;WACjBqB,IAAI;AACqC,oDAAAjC,MAAyB,mBAAAS,EAA+B,6BAAArB,cAAc,GAAG,qBAAqBqB,EAAE,GAAG,GAAG,EAAE;sCACtHV,IAAI;AAChC;MACFY,eAAe,EAAE;IAClB;GAEJ;AACH,CAAC;AClHM,MAAMuB,SAAS,GAAmBA,CAACz7C,UAAU,EAAE;EACpDurB,KAAK;EACLoM,MAAM;EACNhgB,IAAI;EACJ+gC,OAAO;EACPC,cAAc;EACd3uC;AAAU,CACX,KAAI;EACH,MAAMkG,MAAM,GAAGzQ,OAAO,CAACO,UAAU,CAAC64C,MAAM,CAACY,UAAU,CAAC;EACpD,MAAMzmC,KAAK,GAAGvT,OAAO,CAACO,UAAU,CAAC64C,MAAM,CAACa,SAAS,CAAC;EAClD,MAAM3pC,IAAI,GAAGtQ,OAAO,CAACO,UAAU,CAAC64C,MAAM,CAAC9oC,IAAI,CAAC;EAE5C,MAAM6oC,CAAC,GAAGn5C,OAAO,CAACO,UAAU,CAAC64C,MAAM,CAACC,SAAS,CAAC;EAC9C,IAAIxgB,CAAC,GAAG74B,OAAO,CAACO,UAAU,CAACy7C,SAAS,CAACnS,MAAM,CAAC;EAE5C,IAAI,CAAC,GAAGhR,CAAC,GAAGX,MAAM,GAAG,CAAC,GAAGihB,CAAC,EAAE;IAE1BtgB,CAAC,GAAGX,MAAM,GAAG,CAAC,GAAIihB,CAAC,GAAG,CAAE;EACzB;EAEDrtB,KAAK,IAAI,CAAC,GAAG+M,CAAC;EAEd,MAAMghB,IAAI,GACR,CAACtvC,UAAU,GACT,CAAC2N,IAAI,GACHlY,OAAO,CAACO,UAAU,CAACy7C,SAAS,CAACnC,IAAI,CAAC,GAClC75C,OAAO,CAACO,UAAU,CAACy7C,SAAS,CAAC9jC,IAAI,CAAC,GAClClY,OAAO,CAACO,UAAU,CAACgK,UAAU,CAACsvC,IAAI,CAAC;EACzC,MAAMC,MAAM,GAAG,CAACb,OAAO,GACrBj5C,OAAO,CAACO,UAAU,CAACy7C,SAAS,CAAClC,MAAM,CAAC,GACpC95C,OAAO,CAACO,UAAU,CAAC64C,MAAM,CAACW,gBAAgB,CAAC;EAE7C,MAAMkC,EAAE,GAAGpjB,CAAC,GAAG,CAAC;EAChB,MAAM0hB,EAAE,GAAGpB,CAAC,GAAG,CAAC;EAChB,MAAMxW,CAAC,GAAGzK,MAAM,GAAG,CAAC,GAAG+jB,EAAE,GAAG9C,CAAC,CAAC;EAC9B,MAAM2C,WAAW,GAAG5jB,MAAM,GAAG,CAAC,GAAGihB,CAAC;EAClC,MAAM+C,YAAY,GAAGD,EAAE,GAAG1B,EAAE;EAE5B,IAAI4B,cAAc,GAAGrwB,KAAK;EAE1B,IAAIotB,cAAc,EAAE;IAClB,MAAMkD,YAAY,GAAGtwB,KAAK,GAAG,CAAC,GAAGowB,YAAY;IAC7C,MAAMG,eAAe,GAAG9B,EAAE;IAC1B,MAAM+B,UAAU,GAAG9kB,IAAI,CAACC,KAAK,CAAC,CAAC2kB,YAAY,GAAGC,eAAe,GAAG,CAAC,IAAI,CAAC,CAAC;IACvEF,cAAc,GAAGC,YAAY,IAAI,CAAC,GAAGE,UAAU,GAAG,CAAC,CAAC;EACrD;EAGD,MAAMP,IAAI,GAAG;;WAEJE,EAAE,GAAG9C,CAAC,IAAIA,CAAC;WACXrtB,KAAK,GAAGmwB,EAAE,GAAG9C,CAAC;AACd,WAAAtgB,CAAK,IAAAA,CAAW,UAAAA,CAAC,IAAIA,CAAC;;WAEtB8J,CAAC;AACD,WAAA9J,CAAK,IAAAA,CAAW,UAAAA,CAAC,IAAIA,CAAC;AACtB,WAAAA,CAAK,IAAAA,CAAY,WAAAA,CAAC,IAAIA,CAAC;WACvB8J,CAAC;;AAED,WAAA9J,CAAK,IAAAA,CAAY,WAAAA,CAAC,IAAIA,CAAC;AACvB,WAAAojB,EAAE,GAAG9C,CAAC;AACN,WAAAtgB,CAAK,IAAAA,CAAY,WAAAA,CAAC,KAAKA,CAAC;;YAEvB8J,CAAC;AACF,WAAA9J,CAAK,IAAAA,CAAY,WAAAA,CAAC,KAAKA,CAAC;AACxB,WAAAA,CAAK,IAAAA,CAAW,UAAAA,CAAC,KAAKA,CAAC;YACtB8J,CAAC;;AAEF,WAAA9J,CAAK,IAAAA,CAAW,UAAAA,CAAC,KAAKA,CAAC;;;;;;SAMzB;EAEP,MAAM0jB,IAAI,GAAGpD,CAAC,GAAG,GAAG;EACpB,OAAO;IACLqB,UAAU,EAAE;MACV,kBAAkB,EAAE;SACjBuB,IAAI;kCACqBlC,IAAI,aAAaA,IAAI,mBAAmBU,EAAE;AACpE;MACF,uBAAuB,EAAE,CAAC1hB,CAAC;MAC3B,kBAAkB,EAAE/M,KAAK,GAAG,CAAC,GAAG+M,CAAC;MACjC,iBAAiB,EAAE,MAAM;MACzB,kBAAkB,EAAE,CAAC,GAAGsgB;IACzB;IACD5lC,KAAK,EAAE;MACL,kBAAkB,EAAE;AACH,uBAAAA,KAAK,mBAAmBgnC,EAAE;AACpC,aAAA1hB,CAAC,GAAGsgB,CAAK,IAAA2C,WAAW,GAAGjjB,CAAC;AACxB,aAAAA,CAAK,IAAAA,CAAY,WAAAA,CAAC,KAAKA,CAAC;AACxB,aAAAA,CAAK,IAAAA,CAAW,UAAAA,CAAC,KAAKA,CAAC;cACtB8J,CAAC;aACF9J,CAAC,IAAIA,CAAC,GAAGsgB,CAAC,UAAUtgB,CAAC,KAAKA,CAAC,GAAGsgB,CAAC;aAC/BrtB,KAAK,GAAGmwB,EAAE,GAAG9C,CAAC;aACdtgB,CAAC,IAAIA,CAAC,GAAGsgB,CAAC,UAAUtgB,CAAC,IAAIA,CAAC,GAAGsgB,CAAC;aAC9BxW,CAAC;AACD,aAAA9J,CAAK,IAAAA,CAAW,UAAAA,CAAC,IAAIA,CAAC;AACtB,aAAAA,CAAK,IAAAA,CAAY,WAAAA,CAAC,IAAIA,CAAC;AACzB;MACL,uBAAuB,EAAE,CAACA,CAAC;MAC3B,kBAAkB,EAAE/M,KAAK,GAAG,CAAC,GAAG+M,CAAC;MAEjC,iBAAiB,EAAE,MAAM;MACzB,kBAAkB,EAAE,CAAC,GAAGsgB,CAAC;MAEzB,uBAAuB,EAAE,CAACA,CAAC;MAC3B,mBAAmB,EAAE2C;IACtB;IACDrrC,MAAM,EAAE;MACN,kBAAkB,EAAE;AACH,uBAAAA,MAAM,mBAAmB8pC,EAAE;AACrC,aAAA1hB,CAAC,GAAGsgB,CAAK,KAACtgB,CAAC;AACX,aAAAA,CAAK,IAAAA,CAAY,WAAAA,CAAC,IAAIA,CAAC;AACvB,aAAAA,CAAK,IAAAA,CAAW,UAAAA,CAAC,IAAIA,CAAC;aACtB8J,CAAC;aACD9J,CAAC,IAAIA,CAAC,GAAGsgB,CAAC,UAAUtgB,CAAC,IAAIA,CAAC,GAAGsgB,CAAC;aAC9BrtB,KAAK,GAAGmwB,EAAE,GAAG9C,CAAC;aACdtgB,CAAC,IAAIA,CAAC,GAAGsgB,CAAC,UAAUtgB,CAAC,KAAKA,CAAC,GAAGsgB,CAAC;cAC9BxW,CAAC;AACF,aAAA9J,CAAK,IAAAA,CAAW,UAAAA,CAAC,KAAKA,CAAC;AACvB,aAAAA,CAAK,IAAAA,CAAY,WAAAA,CAAC,KAAKA,CAAC;AAC1B;MACL,uBAAuB,EAAE,CAACA,CAAC;MAC3B,kBAAkB,EAAE/M,KAAK,GAAG,CAAC,GAAG+M,CAAC;MAEjC,iBAAiB,EAAE,MAAM;MACzB,kBAAkB,EAAE,CAAC,GAAGsgB,CAAC;MAEzB,uBAAuB,EAAEjhB,MAAM,GAAG,CAAC;MACnC,mBAAmB,EAAE4jB;IACtB;IACDxrC,IAAI,EAAE;MACJ,kBAAkB,EAAE;AACX,eAAAwb,KAAK,aAAaoM,MAAM,GAAG,CAAC,GAAGihB,CAAU,SAAAtgB,CAAC,GAAG,CAAC,GAAGsgB,CAAC,SAAStgB,CAAC,GAAG0hB,EAAE,WAAWjqC,IAAI;AAC9F;MACK,uBAAuB,EAAE,CAAC,CAAC,GAAG6oC,CAAC;MAC/B,uBAAuB,EAAE,CAACA,CAAC;MAC3B,kBAAkB,EAAE,CAAC,GAAGA,CAAC;MACzB,iBAAiB,EAAE,MAAM;MACzB,8BAA8B,EAAE,MAAM;MACtC,kBAAkB,EAAErtB,KAAK;MACzB,mBAAmB,EAAEoM,MAAM,GAAG,CAAC,GAAGihB;IACnC;IACDuB,UAAU,EAAE,CACV;MACE,kBAAkB,EAAE;SACnBqB,IAAI;;AAEoC,iDAAAjwB,KAAK,aAAaoM,MAAM;iCACxCgkB,YAAY,QAAQ,CAAa,YAAApwB,KAAK,GAAG,CAAC,GAAGowB,YAAY,aAAahkB,MAAM;;AAE7D,gDAAA4hB,MAAM,mBAAmBS,EAAE;AAC1E;MACO,uBAAuB,EAAE,CAAC1hB,CAAC;MAC3B,kBAAkB,EAAEA,CAAC;MACrB,iBAAiB,EAAE,MAAM;MACzB,kBAAkB,EAAE/M,KAAK,GAAG,CAAC,GAAG+M;IACjC,EACF;IACDhwB,QAAQ,EAAE;MACR,kBAAkB,EAAE,YAAYgwB,CAAC,GAAG,GAAW,QAAAsgB,CAAC,YAAYrtB,KAAK,GAAG,CAAC,GAAG+M,CAAC,GAAG,GAAG,SAASA,CAAc,aAAAX,MAAM,GAAGqiB,EAAwB;MACvI,uBAAuB,EAAE,CAAC1hB,CAAC;MAC3B,kBAAkB,EAAE/M,KAAK,GAAG,CAAC,GAAG+M,CAAC;MACjC,iBAAiB,EAAE,MAAM;MACzB,kBAAkB,EAAE,CAAC,GAAGsgB,CAAC;MACzBsB,eAAe,EAAE;IAClB;;;;;;;;;;;;;;GAcF;AACH,CAAC;;ACzLM,MAAM+B,IAAI,GAAmBA,CAACj8C,UAAU,EAAE;EAACurB,KAAK;EAAEoM;AAAM,CAAC,KAAI;EAClE,MAAMznB,MAAM,GAAGzQ,OAAO,CAACO,UAAU,CAAC64C,MAAM,CAACY,UAAU,CAAC;EACpD,MAAMzmC,KAAK,GAAGvT,OAAO,CAACO,UAAU,CAAC64C,MAAM,CAACa,SAAS,CAAC;EAClD,MAAM3pC,IAAI,GAAGtQ,OAAO,CAACO,UAAU,CAAC64C,MAAM,CAAC9oC,IAAI,CAAC;EAC5C,MAAMsqC,KAAK,GAAG56C,OAAO,CAACO,UAAU,CAAC64C,MAAM,CAACC,SAAS,CAAC;EAClD,MAAMoD,SAAS,GAAGz8C,OAAO,CAACO,UAAU,CAACi8C,IAAI,CAACnD,SAAS,CAAC;EACpD,MAAMS,MAAM,GAAG95C,OAAO,CAACO,UAAU,CAACi8C,IAAI,CAAC1C,MAAM,CAAC;EAC9C,MAAMD,IAAI,GAAG75C,OAAO,CAACO,UAAU,CAACi8C,IAAI,CAAC3C,IAAI,CAAC;EAE1C,MAAMgB,EAAE,GAAGD,KAAK,GAAG,CAAC;EACpB,MAAMpL,UAAU,GAAGtX,MAAM,GAAG,CAAC;EAC7B,MAAMkiB,EAAE,GAAG5K,UAAU,GAAGoL,KAAK;EAC7B,MAAMP,EAAE,GAAG7K,UAAU,GAAGoL,KAAK;EAC7B,MAAME,GAAG,GAAGtjB,IAAI,CAACpc,GAAG,CAACg/B,EAAE,EAAEtuB,KAAK,GAAG,CAAC,CAAC;EACnC,OAAO;IACL0uB,UAAU,EAAE;MACV,kBAAkB,EAAE;AACT,iBAAAK,EAAE,QAAQA,EAAE,YAAY/uB,KAAK,GAAG8uB,KAAkB,aAAA1iB,MAAM,GAAG0iB,KAAK,SAASpL,UAAU,aAAaqK,IAAe,WAAAC,MAAM,mBAAmBc,KAAK;iBAC7IC,EAAE,GAAG4B,SAAS,QAAQ,CAAC,GAAG7B,KAAK,YAAY9uB,KAAK,GAAG,CAAC,GAAG2wB,SAAS,GAAG7B,KAAK,aAAa1iB,MAAM,GAAG,CAAC,GAAG0iB,KAAK,SAASpL,UAAU,SAASA,UAAU,GAAGiN,SAAS,WAAW5C,IAAI;AAClL;MACDY,eAAe,EAAE;IAClB;IACDlnC,KAAK,EAAE;MACL,kBAAkB,EAAE;wBACFA,KAAK;kBACX6mC,EAAE;AACJ,gBAAAU,GAAO,IAAAV,EAAY,UAAAU,GAAG,KAAKV,EAAE;gBAC7BtuB,KAAK,GAAG,CAAC,GAAGgvB,GAAG;AACf,gBAAAA,GAAO,IAAAV,EAAY,UAAAU,GAAG,IAAIV,EAAE;AAC5B,gBAAAU,GAAO,IAAAT,EAAa,WAAAS,GAAG,KAAKT,EAAE;iBAC7BvuB,KAAK,GAAG,CAAC,GAAGgvB,GAAG;AAChB,gBAAAA,GAAO,IAAAT,EAAa,WAAAS,GAAG,IAAIT,EAAE;;AAE5C;MACK,uBAAuB,EAAE,CAACO,KAAK;MAC/B,kBAAkB,EAAEA,KAAK;MACzB,iBAAiB,EAAE,MAAM;MACzB,8BAA8B,EAAE,MAAM;MACtC,mBAAmB,EAAER;IACtB;IACD3pC,MAAM,EAAE;MACN,kBAAkB,EAAE;wBACFA,MAAM;;AAEd,gBAAAqqC,GAAO,IAAAV,EAAY,UAAAU,GAAG,IAAIV,EAAE;gBAC5BtuB,KAAK,GAAG,CAAC,GAAGgvB,GAAG;AACf,gBAAAA,GAAO,IAAAV,EAAY,UAAAU,GAAG,KAAKV,EAAE;AAC7B,gBAAAU,GAAO,IAAAT,EAAa,WAAAS,GAAG,IAAIT,EAAE;iBAC5BvuB,KAAK,GAAG,CAAC,GAAGgvB,GAAG;AAChB,gBAAAA,GAAO,IAAAT,EAAa,WAAAS,GAAG,KAAKT,EAAE;;AAE7C;MACK,uBAAuB,EAAE7K,UAAU;MACnC,kBAAkB,EAAEoL,KAAK;MACzB,iBAAiB,EAAE,MAAM;MACzB,8BAA8B,EAAE,MAAM;MACtC,mBAAmB,EAAER;IACtB;IACD9pC,IAAI,EAAE;MACJ,kBAAkB,EAAE;AACX,eAAAwb,KAAK,GAAG,CAAC,GAAG8uB,KAAkB,aAAA1iB,MAAM,GAAG,CAAC,GAAG0iB,KAAc,SAAAR,EAAE,GAAG,CAAC,GAAGQ,KAAc,SAAAR,EAAE,WAAW9pC,IAAI;AAC/G;MACK,uBAAuB,EAAE,CAAC,CAAC,GAAGsqC,KAAK;MACnC,uBAAuB,EAAE,CAACA,KAAK;MAC/B,kBAAkB,EAAE,CAAC,GAAGA,KAAK;MAC7B,iBAAiB,EAAE,MAAM;MACzB,8BAA8B,EAAE,MAAM;MACtC,kBAAkB,EAAE9uB,KAAK,GAAG,CAAC,GAAG8uB,KAAK;MACrC,mBAAmB,EAAE1iB,MAAM,GAAG,CAAC,GAAG0iB;IACnC;;;;GAIF;AACH,CAAC;;ACzEM,MAAM8B,kBAAkB,GAAmBA,CAACn8C,UAAU,EAAE;EAACurB,KAAK;EAAEoM,MAAM;EAAEhgB;AAAI,CAAC,KAAI;EACtF,MAAMzH,MAAM,GAAGzQ,OAAO,CAACO,UAAU,CAAC64C,MAAM,CAACY,UAAU,CAAC;EACpD,MAAMzmC,KAAK,GAAGvT,OAAO,CAACO,UAAU,CAAC64C,MAAM,CAACa,SAAS,CAAC;EAClD,MAAM3pC,IAAI,GAAGtQ,OAAO,CAACO,UAAU,CAAC64C,MAAM,CAAC9oC,IAAI,CAAC;EAC5C,MAAMsqC,KAAK,GAAG56C,OAAO,CAACO,UAAU,CAAC64C,MAAM,CAACC,SAAS,CAAC;EAElD,IAAIsD,SAAS,GAAG7wB,KAAK;EACrB,MAAMqtB,CAAC,GAAG,CAAC,GAAGyB,KAAK;EACnB,OAAO;IACLrnC,KAAK,EAAE;MACL,kBAAkB,EAAiB,eAAAA,KAAK,YAAYuY,KAAK,aAAaqtB,CAAM;MAC5E,kBAAkB,EAAErtB,KAAK;MACzB,mBAAmB,EAAEqtB;IACtB;IACD1oC,MAAM,EAAE;MACN,kBAAkB,EAAiB,eAAAA,MAAM,YAAYqb,KAAK,aAAaqtB,CAAM;MAC7E,uBAAuB,EAAEjhB,MAAM,GAAGihB,CAAC;MACnC,kBAAkB,EAAErtB,KAAK;MACzB,mBAAmB,EAAEqtB;IACtB;IACD7oC,IAAI,EAAE;MACJ,kBAAkB,EAAE;cACZA,IAAI,YAAY6oC,CAAC,aAAajhB,MAAM;AACpC,cAAA5nB,IAAI,YAAY6oC,CAAC,aAAajhB,MAAc,QAAAykB,SAAS,GAAGxD,CAAC;AACtE;MACK,kBAAkB,EAAEwD,SAAS,GAAG,CAAC,GAAGxD,CAAC;MACrC,uBAAuB,EAAE,CAACA,CAAC;MAC3B,mBAAmB,EAAEjhB,MAAM;MAC3B,kBAAkB,EAAE,CAAC,GAAGihB,CAAC;MACzB,iBAAiB,EAAE,MAAM;MACzB,8BAA8B,EAAE;IACjC;IACDtwC,QAAQ,EAAE;MACR,kBAAkB,EAA+B,6BAAAswC,CAAS,QAAAA,CAAC,YAAYrtB,KAAK,GAAG,CAAC,GAAGqtB,CAAc,aAAAjhB,MAAM,GAAG,CAAC,GAAGihB,CAAM;MACpHsB,eAAe,EAAE;IAClB;GACF;AACH,CAAC;ACtCM,MAAMmC,iBAAiB,GAAmBA,CAACr8C,UAAU,EAAE;EAACurB,KAAK;EAAEoM,MAAM;EAAEhgB,IAAI;EAAE+gC,OAAO;EAAE1uC;AAAU,CAAC,KAAI;EAE1G,MAAMgJ,KAAK,GAAGvT,OAAO,CAACO,UAAU,CAAC64C,MAAM,CAACa,SAAS,CAAC;EAClD,MAAMxpC,MAAM,GAAGzQ,OAAO,CAACO,UAAU,CAAC64C,MAAM,CAACY,UAAU,CAAC;EACpD,MAAMH,IAAI,GAAG75C,OAAO,CAACO,UAAU,CAAC64C,MAAM,CAACyD,QAAQ,CAAC;EAChD,MAAM1D,CAAC,GAAGn5C,OAAO,CAACO,UAAU,CAAC64C,MAAM,CAACC,SAAS,CAAC;EAC9C,MAAMyD,eAAe,GAAG98C,OAAO,CAACO,UAAU,CAACgK,UAAU,CAACuyC,eAAe,CAAC;EACtE,MAAMC,EAAE,GAAG5D,CAAC,GAAG,CAAC;EAChB,MAAMoB,EAAE,GAAGpB,CAAC,GAAG,CAAC;EAChB,MAAMrJ,CAAC,GAAG5X,MAAM,GAAG,CAAC,GAAGqiB,EAAE;EACzB,MAAMyC,IAAI,GAAG9kB,MAAM,GAAG,CAAC;EAEvB,OAAO;IACLwiB,UAAU,EAAE,CACV;MACE,kBAAkB,EAAE;oBACRb,IAAI,kEAAkEkD,EAAE,aAAalD,IAAI;AACnG,UAAAU,EAAE,IAAIyC,IAAI;UACVF,eAAe,GAAGvC,EAAE,IAAIA,EAAE;AAC1B,UAAAzuB,KAAK,IAAIgxB,eAAe,GAAGvC,EAAE,CAAC;UAC9BzuB,KAAK,GAAGyuB,EAAE,IAAIyC,IAAI;UAClBlxB,KAAK,IAAIgxB,eAAe,GAAGvC,EAAE,CAAC,IAAIriB,MAAM,GAAGqiB,EAAE;AAC7C,UAAAuC,eAAe,GAAGvC,EAAE;;;AAGvB;IACA,EACF;IAEDhnC,KAAK,EAAE;MACL,kBAAkB,EAAE;AACJ,sBAAAA,KAAK,kEAAkEwpC,EAAE;UACrFxC,EAAE,IAAIyC,IAAI,GAAGzC,EAAE;UACfuC,eAAe,GAAGvC,EAAE,IAAIA,EAAE;AAC1B,UAAAzuB,KAAK,IAAIgxB,eAAe,GAAGvC,EAAE,CAAC;AAC9B,UAAAzuB,KAAK,GAAGyuB,EAAM,IAAAyC,IAAI,GAAGzC,EAAE;;;AAG1B;MACD,uBAAuB,EAAE,CAACA,EAAE;MAC5B,mBAAmB,EAAEzK,CAAC;MACtB,iBAAiB,EAAE,MAAM;MACzB,kBAAkB,EAAEyK,EAAE;MACtB,8BAA8B,EAAE;IACjC;IAED9pC,MAAM,EAAE;MACN,kBAAkB,EAAE;AACJ,sBAAAA,MAAM,kEAAkEssC,EAAE;UACtFxC,EAAE;UACFuC,eAAe,GAAGvC,EAAE,IAAIyC,IAAI;AAC5B,UAAAlxB,KAAK,IAAIgxB,eAAe,GAAGvC,EAAE,CAAC;AAC9B,UAAAzuB,KAAK,GAAGyuB,EAAE;;;AAGb;MACD,uBAAuB,EAAEyC,IAAI;MAC7B,mBAAmB,EAAElN,CAAC;MACtB,iBAAiB,EAAE,MAAM;MACzB,kBAAkB,EAAEyK,EAAE;MACtB,8BAA8B,EAAE;IACjC;GAEF;AACH,CAAC;AChEM,MAAM0C,UAAU,GAAmBA,CAAC18C,UAAU,EAAE;EAACurB,KAAK;EAAEoM,MAAM;EAAE+gB;AAAO,CAAC,KAAI;EACjF,MAAMxoC,MAAM,GAAGzQ,OAAO,CAACO,UAAU,CAAC64C,MAAM,CAACY,UAAU,CAAC;EACpD,MAAMzmC,KAAK,GAAGvT,OAAO,CAACO,UAAU,CAAC64C,MAAM,CAACa,SAAS,CAAC;EAClD,MAAM3pC,IAAI,GAAGtQ,OAAO,CAACO,UAAU,CAAC64C,MAAM,CAAC9oC,IAAI,CAAC;EAC5C,MAAMsqC,KAAK,GAAG56C,OAAO,CAACO,UAAU,CAAC64C,MAAM,CAACC,SAAS,CAAC,GAAG,CAAC;EACtD,MAAMS,MAAM,GAAG,CAACb,OAAO,GACrBj5C,OAAO,CAACO,UAAU,CAACkgC,OAAO,CAACqZ,MAAM,CAAC,GAClC95C,OAAO,CAACO,UAAU,CAAC64C,MAAM,CAACW,gBAAgB,CAAC;EAE7C,MAAMvK,UAAU,GAAGtX,MAAM,GAAG,CAAC;EAC7B,MAAMkiB,EAAE,GAAG5K,UAAU;EACrB,MAAM6K,EAAE,GAAG7K,UAAU,GAAGoL,KAAK;EAC7B,MAAME,GAAG,GAAGtjB,IAAI,CAACpc,GAAG,CAACg/B,EAAE,EAAEtuB,KAAK,GAAG,CAAC,CAAC;EACnC,OAAO;IACLvY,KAAK,EAAE;MACL,kBAAkB,EAAE;wBACFA,KAAK;kBACX6mC,EAAE;AACJ,gBAAAU,GAAO,IAAAV,EAAY,UAAAU,GAAG,KAAKV,EAAE;gBAC7BtuB,KAAK,GAAG,CAAC,GAAGgvB,GAAG;AACf,gBAAAA,GAAO,IAAAV,EAAY,UAAAU,GAAG,IAAIV,EAAE;AAC5B,gBAAAU,GAAO,IAAAT,EAAa,WAAAS,GAAG,KAAKT,EAAE;iBAC7BvuB,KAAK,GAAG,CAAC,GAAGgvB,GAAG;AAChB,gBAAAA,GAAO,IAAAT,EAAa,WAAAS,GAAG,IAAIT,EAAE;;AAE5C;MACK,iBAAiB,EAAE,MAAM;MACzB,8BAA8B,EAAE,MAAM;MACtC,mBAAmB,EAAED;IACtB;IACD3pC,MAAM,EAAE;MACN,kBAAkB,EAAE;wBACFA,MAAM;;AAEd,gBAAAqqC,GAAO,IAAAV,EAAY,UAAAU,GAAG,IAAIV,EAAE;gBAC5BtuB,KAAK,GAAG,CAAC,GAAGgvB,GAAG;AACf,gBAAAA,GAAO,IAAAV,EAAY,UAAAU,GAAG,KAAKV,EAAE;AAC7B,gBAAAU,GAAO,IAAAT,EAAa,WAAAS,GAAG,IAAIT,EAAE;iBAC5BvuB,KAAK,GAAG,CAAC,GAAGgvB,GAAG;AAChB,gBAAAA,GAAO,IAAAT,EAAa,WAAAS,GAAG,KAAKT,EAAE;;AAE7C;MACK,uBAAuB,EAAE7K,UAAU;MACnC,iBAAiB,EAAE,MAAM;MACzB,8BAA8B,EAAE,MAAM;MACtC,mBAAmB,EAAE4K;IACtB;IACD9pC,IAAI,EAAE;MACJ,kBAAkB,EAAE;AACX,eAAAwb,KAAK,GAAG,CAAC,GAAG8uB,KAAkB,aAAA1iB,MAAe,SAAAkiB,EAAE,GAAGQ,KAAc,SAAAR,EAAE,WAAW9pC,IAAI;AAC/F;MACK,uBAAuB,EAAE,CAACsqC,KAAK;MAC/B,kBAAkB,EAAE,CAAC,GAAGA,KAAK;MAC7B,iBAAiB,EAAE,MAAM;MACzB,8BAA8B,EAAE,MAAM;MACtC,kBAAkB,EAAE9uB,KAAK,GAAG,CAAC,GAAG8uB;IACjC;IACD/xC,QAAQ,EAAE;MACR,kBAAkB,EAA+B,6BAAA+xC,KAAa,QAAAA,KAAiB,YAAA9uB,KAAK,GAAG,CAAC,GAAG8uB,KAAkB,aAAA1iB,MAAM,GAAG,CAAC,GAAG0iB,KAAc,UAAC1iB,MAAM,GAAG,CAAC,GAAG0iB,KAAK,IAAI,CAAM;MACrKH,eAAe,EAAE;IAClB;GACF;AACH,CAAC;AC3CM,MAAMyC,YAAY,GAAGA,CAAC38C,UAAsB,EAAEuN,KAAY,KAAKqvC,+CAAO,CAC1E5nC,IAA4B,IAAuB;EAClDoE,OAAO,CAACyjC,IAAI,CAAgB,eAAA7nC,IAAI,CAACyF,EAAE,EAAI,GAAC;EACxC,IAAIyuB,MAAM,GAAY,EAAE;EACxB,MAAMxxB,KAAK,GAAG1C,IAAI,CAAC7C,OAAO,EAAE,CAAC8X,IAAI,CAACvS,KAAK,IAAIolC,cAAc,CAAClhC,GAAG,CAAClE,KAAa,CAAC,CAAS;EACrF,IAAI,CAACA,KAAK,EAAE,OAAOqlC,SAAS,CAAC7T,MAAM,EAAE8T,SAAS,CAAC;EAE/C,MAAMC,QAAQ,GAAGH,cAAc,CAACt0C,GAAG,CAACkP,KAAK,CAAE;EAC3C,MAAMwlC,IAAI,GAAGloC,IAAI,CAAClE,IAAI,CAAC,KAAK,CAAC;EAC7B,MAAMqsC,YAAY,GAAqB;IACrC1iC,EAAE,EAAEzF,IAAI,CAACyF,EAAE,EAAE;IACb8Q,KAAK,EAAEvW,IAAI,CAAClE,IAAI,CAAC,OAAO,CAAC;IACzB6mB,MAAM,EAAE3iB,IAAI,CAAClE,IAAI,CAAC,QAAQ,CAAC;IAC3B6G,IAAI,EAAE3C,IAAI,CAAC8pB,QAAQ,CAAC,MAAM,CAAC;IAC3B4Z,OAAO,EAAE1jC,IAAI,CAAC8pB,QAAQ,CAAC,SAAS,CAAC;IACjC90B,UAAU,EAAEgL,IAAI,CAAC8pB,QAAQ,CAAC,YAAY,CAAC;IACvCse,OAAO,EAAEpoC,IAAI,CAAC8pB,QAAQ,CAAC,SAAS,CAAC;IACjC6Z,cAAc,EAAE3jC,IAAI,CAAC8pB,QAAQ,CAAC,kBAAkB;GACjD;EAGD,MAAMue,MAAM,GAAGJ,QAAQ,CAACj9C,UAAU,EAAEm9C,YAAY,CAAC;EAEjD,IAAInoC,IAAI,CAAC8pB,QAAQ,CAAC,MAAM,CAAC,IAAIue,MAAM,CAACttC,IAAI,EAAEm5B,MAAM,CAAC/T,IAAI,CAACkoB,MAAM,CAACttC,IAAI,CAAC;EAElE,IAAIstC,MAAM,CAACpD,UAAU,EAAE/Q,MAAM,CAAC/T,IAAI,CAACkoB,MAAM,CAACpD,UAAU,CAAC;EAErD,IAAIiD,IAAI,IAAIG,MAAM,CAAC/0C,QAAQ,EAAE4gC,MAAM,CAAC/T,IAAI,CAACkoB,MAAM,CAAC/0C,QAAQ,CAAC;EAEzD,IAAI0M,IAAI,CAAC6C,QAAQ,EAAE,IAAIwlC,MAAM,CAACntC,MAAM,EAAEg5B,MAAM,CAAC/T,IAAI,CAACkoB,MAAM,CAACntC,MAAM,CAAC;EAEhE,IAAI8E,IAAI,CAAC8pB,QAAQ,CAAC,OAAO,CAAC,IAAIue,MAAM,CAACrqC,KAAK,EAAEk2B,MAAM,CAAC/T,IAAI,CAACkoB,MAAM,CAACrqC,KAAK,CAAC;EAErE,IAAIqqC,MAAM,CAAClD,UAAU,EAAEjR,MAAM,CAAC/T,IAAI,CAAC,GAAGkoB,MAAM,CAAClD,UAAU,CAAC;EAExD,IAAIgD,YAAY,CAACxlC,IAAI,EAAE;IACrBuxB,MAAM,CAAC/T,IAAI,CAACmoB,EAAE,CAACt9C,UAAU,EAAEm9C,YAAY,EAAEzlC,KAAK,CAAC,CAAC;EACjD;EAED,IAAI1C,IAAI,CAAC7C,OAAO,EAAE,CAACZ,QAAQ,CAAC,SAAS,CAAC,EAAE;IACtC23B,MAAM,CAAC/T,IAAI,CAACooB,OAAO,CAACv9C,UAAU,EAAEm9C,YAAY,CAAC,CAAC;EAC/C;EAED,IAAIA,YAAY,CAACC,OAAO,EAAElU,MAAM,CAAC/T,IAAI,CAACqoB,KAAK,CAACx9C,UAAU,EAAEm9C,YAAY,CAAC,CAAC;EAEtE,MAAMv0C,QAAQ,GAAG60C,aAAa,CAACzoC,IAAI,CAACyF,EAAE,EAAE,EAAEyiC,IAAI,EAAEl9C,UAAU,EAAEuN,KAAK,CAACmwC,cAAc,CAAC;;EAGjFxU,MAAM,GAAGA,MAAM,CACZv2B,GAAG,CAACgrC,CAAC,IAAG;IACP,IAAIA,CAAC,CAACzD,eAAe,IAAItxC,QAAQ,EAAE+0C,CAAC,CAAC,kBAAkB,CAAC,GAAGC,WAAW,CAACD,CAAC,CAAC,kBAAkB,CAAW,EAAE/0C,QAAQ,CAAC;IACjH,OAAO+0C,CAAC;EACV,CAAC,CAAC,CACDhrC,GAAG,CAACgrC,CAAC,KAAK;IACP,GAAGA,CAAC;IACJ,kBAAkB,EAAEE,MAAM,CAACF,CAAC,CAAC,kBAAkB,CAAW,EACxDpc,gDAAQ,CAACoc,CAAC,CAAC,kBAAkB,CAAC,CAAC,GAAGA,CAAC,CAAC,kBAAkB,CAAC,GAAGR,YAAY,CAAC5xB,KAAK,EAC5EgW,gDAAQ,CAACoc,CAAC,CAAC,mBAAmB,CAAC,CAAC,GAAGA,CAAC,CAAC,mBAAmB,CAAC,GAAGR,YAAY,CAACxlB,MAAM;EAElF,EAAC,CACH;EAEH,MAAMmmB,UAAU,GAAGf,SAAS,CAAC7T,MAAM,EAAE8T,SAAS,CAAC;EAC/Cc,UAAU,CAAC,kBAAkB,CAAC,GAAG,CAAC7mB,IAAI,CAACnc,GAAG,CAAC,GAAGgjC,UAAU,CAAC,kBAAkB,CAAa,EAAE,CAAC,CAAC,CAAC;EAG7F1kC,OAAO,CAAC2kC,OAAO,CAAgB,eAAA/oC,IAAI,CAACyF,EAAE,EAAI,GAAC;EAC3C,OAAOqjC,UAAU;AACnB,CAAC,EAAE9oC,IAAI,IAAI,GAAGA,IAAI,CAACyF,EAAE,EAAM,IAAAzF,IAAI,CAAC7C,OAAO,EAAE,CAACgwB,QAAQ,EAAE,MAAMntB,IAAI,CAAC6C,QAAQ,EAAI,GAC5E;AAED,MAAMmlC,SAAS,GAAU;EACvB,kBAAkB,EAAE,EAAE;EACtB,uBAAuB,EAAE,GAAG;EAC5B,uBAAuB,EAAE,GAAG;EAC5B,qBAAqB,EAAE,GAAG;EAC1B,qBAAqB,EAAE,GAAG;EAC1B,kBAAkB,EAAE,MAAM;EAC1B,mBAAmB,EAAE,MAAM;EAC3B,gBAAgB,EAAE,MAAM;EACxB,iBAAiB,EAAE,MAAM;EACzB,0BAA0B,EAAE,CAAC;EAC7B,8BAA8B,EAAE,MAAM;EACtC,4BAA4B,EAAE,KAAK;EACnC,+BAA+B,EAAE,OAAO;EACxC,8BAA8B,EAAE,OAAO;EACvC,mBAAmB,EAAE,WAAW;EAChC,8BAA8B,EAAE,WAAW;EAC3C,kBAAkB,EAAE;CACrB;AAED,SAASY,WAAWA,CAACI,OAAe,EAAEp1C,QAAgB,EAAEq1C,MAAA,GAAkB,KAAK;;;;;;;;EAQ3E,OAAyD,kDAAAr1C,QAAW,GAAAo1C,OAAO,EAAE;AACjF;AAEA,SAASE,cAAcA,CAACzjC,EAAU,EAAEyiC,IAA+C,EAAEl9C,UAAsB,EAAEyJ,OAAqB;EAChI,IAAI,CAACyzC,IAAI,EAAE;;EAEX,MAAMiB,KAAK,GAA6F,EAAE;EAC1G,MAAMvX,IAAI,GAAGsW,IAAI,CAACnb,MAAM,CAAC,CAAC4b,CAAS,EAAEptC,CAAC,KAAKA,CAAC,KAAK/Q,SAAS,IAAI6hC,+CAAO,CAAC9wB,CAAC,CAAC,GAAGotC,CAAC,GAAGptC,CAAC,CAAC,CAAC,CAAC,GAAGotC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;EAC/F,MAAMrC,KAAK,GAAG,CAAC,GAAG1U,IAAI;EACtB,MAAMwX,aAAa,GAAG3+C,OAAO,CAACO,UAAU,CAACsI,QAAQ,CAAC+1C,QAAQ,CAAC;EAC3DnB,IAAI,CAACj7C,OAAO,CAAC,CAACyY,GAAG,EAAEslB,CAAC,KAAI;IACtB,MAAMlmB,CAAC,GAAGqkC,KAAK,CAACpyC,MAAM,GAAG,CAAC;IAC1B,IAAIoyC,KAAK,CAACpyC,MAAM,KAAK,CAAC,IAAIoyC,KAAK,CAACrkC,CAAC,CAAC,CAACY,GAAG,KAAKA,GAAG,EAAE;MAC9CyjC,KAAK,CAACrkC,CAAC,CAAC,CAACizB,IAAI,IAAIuO,KAAK;MACtB6C,KAAK,CAACrkC,CAAC,CAAC,CAACyR,KAAK,IAAI+vB,KAAK;IACxB,OAAM;MACL,IAAIja,+CAAO,CAAC3mB,GAAG,CAAC,EAAE;QAChByjC,KAAK,CAAChpB,IAAI,CAAC;UACTmpB,KAAK,EAAEH,KAAK,CAACrkC,CAAC,CAAC,EAAEizB,IAAI,IAAI,CAAC;UAC1BA,IAAI,EAAE,CAACoR,KAAK,CAACrkC,CAAC,CAAC,EAAEizB,IAAI,IAAI,CAAC,IAAIuO,KAAK,GAAG5gC,GAAG,CAAC,CAAC,CAAC;UAC5C6Q,KAAK,EAAE+vB,KAAK,GAAG5gC,GAAG,CAAC,CAAC,CAAC;UACrBgJ,KAAK,EAAEhJ,GAAG,CAAC,CAAC,CAAC,KAAKlb,SAAS,GAAGiK,OAAO,CAACiR,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC6jC,GAAG,EAAE,GAAGH,aAAa;UACnE1jC,GAAG,EAAEA,GAAG,CAAC,CAAC;QACX,EAAC;;MAGH,OAAM;QACLyjC,KAAK,CAAChpB,IAAI,CAAC;UACTmpB,KAAK,EAAEH,KAAK,CAACrkC,CAAC,CAAC,EAAEizB,IAAI,IAAI,CAAC;UAC1BA,IAAI,EAAE,CAACoR,KAAK,CAACrkC,CAAC,CAAC,EAAEizB,IAAI,IAAI,CAAC,IAAIuO,KAAK;UACnC53B,KAAK,EAAEhJ,GAAG,KAAKlb,SAAS,GAAGiK,OAAO,CAACiR,GAAG,CAAC,CAAC6jC,GAAG,EAAE,GAAGH,aAAa;UAC7D7yB,KAAK,EAAE+vB,KAAK;UACZ5gC,GAAG,EAAEA;QACN,EAAC;MACH;IACF;EACH,CAAC,CAAC;;;;;EAMF,MAAM4T,OAAO,GAAG,kIAAkI,GAChJ6vB,KAAK,CACFxrC,GAAG,CAAC,CAACo6B,IAAI,EAAE/M,CAAC,KAAK,eAAe+M,IAAI,CAACrpB,KAAa,QAAAqpB,IAAI,CAACuR,KAA4B,uBAAAvR,IAAI,CAACxhB,KAAK,GAAG,IAAI,KAAK,CAAC,CAC1GuQ,IAAI,CAAC,EAAE,CAAC,GACX,mBAAmB;;;;;;;;EAUrB,OAAOxN,OAAO;AAChB;AAEA,MAAMmvB,aAAa,GAAGb,+CAAO,CAACsB,cAAc,EAAGzjC,EAAE,IAAKA,EAAE,CAAC;AAElD,MAAM+jC,cAAc,GAAGA,CAAA,KAAMf,aAAa,CAACgB,KAAK,CAACjrB,KAAM,EAAE;AAEhE,SAASkrB,GAAGA,CAACb,MAAc,EAAEtyB,KAAK,GAAG,GAAG,EAAEoM,MAAM,GAAG,GAAG;;EAEpD,MAAM7rB,CAAC,GAAuH,oHAAAyf,KAAK,aAAaoM,MAAM,KAAKkmB,MAAM,QAAQ;;EAEzK,OAAO/xC,CAAC;AACV;AAEA,SAAS+xC,MAAMA,CAACG,OAAe,EAAEW,aAAqB,EAAEC,cAAsB;;EAE5E,OAAO,0BAA0B,GAAGC,kBAAkB,CAACH,GAAG,CAACV,OAAO,EAAEW,aAAa,EAAEC,cAAc,CAAC,CAAC;AACrG;AAGA,MAAME,GAAG,GAAGA,CAAC9+C,UAAsB,EAAE;EAACya;AAAE,CAAmB,KAAKA,EAAE;AAClE,MAAMqiC,cAAc,GAAG,IAAIrnC,GAAG,CAA6B,CACzD,CAAC,SAAS,EAAEmnC,+CAAO,CAACpC,OAAO,EAAEsE,GAAG,CAAC,CAAC,EAClC,CAAC,qBAAqB,EAAElC,+CAAO,CAAClC,mBAAmB,EAAEoE,GAAG,CAAC,CAAC,EAC1D,CAAC,KAAK,EAAElC,+CAAO,CAACnC,GAAG,EAAEqE,GAAG,CAAC,CAAC,EAC1B,CAAC,MAAM,EAAElC,+CAAO,CAACnE,IAAI,EAAEqG,GAAG,CAAC,CAAC,EAC5B,CAAC,UAAU,EAAElC,+CAAO,CAACxC,QAAQ,EAAE0E,GAAG,CAAC,CAAC,EACpC,CAAC,SAAS,EAAElC,+CAAO,CAACjC,OAAO,EAAEmE,GAAG,CAAC,CAAC,EAClC,CAAC,WAAW,EAAElC,+CAAO,CAACnB,SAAS,EAAEqD,GAAG,CAAC,CAAC,EACtC,CAAC,MAAM,EAAElC,+CAAO,CAACX,IAAI,EAAE6C,GAAG,CAAC,CAAC,EAC5B,CAAC,aAAa,EAAElC,+CAAO,CAACT,kBAAkB,EAAE2C,GAAG,CAAC,CAAC,EACjD,CAAC,KAAK,EAAElC,+CAAO,CAACF,UAAU,EAAEoC,GAAG,CAAC,CAAC,EACjC,CAAC,YAAY,EAAElC,+CAAO,CAACP,iBAAiB,EAAEyC,GAAG,CAAC,CAAC,CAChD,CAAC;SAEcC,iBAAiBA,CAAA;EAC/B,KAAK,IAAIlvC,KAAK,IAAIitC,cAAc,CAAC9oC,MAAM,EAAE,EAAE;IACzCnE,KAAK,CAAC4uC,KAAK,CAACjrB,KAAM,EAAE;EACrB;EACDwrB,YAAY,CAACP,KAAK,CAACjrB,KAAM,EAAE;AAC7B;AAEA,SAASupB,SAASA,CAAsCkC,WAAgB,EAAEn/C,YAAe;EACvF,MAAMi9C,SAAS,GAAkB,EAAmB;;EAEpD,MAAM9c,IAAI,GAAG,IAAIvkB,GAAG,CAAI3H,MAAM,CAACksB,IAAI,CAACngC,YAAY,CAAC,CAAC;EAClDmgC,IAAI,CAACh+B,OAAO,CAACpC,GAAG,IAAIk9C,SAAS,CAACl9C,GAAG,CAAC,GAAGo/C,WAAW,CAACtsC,GAAG,CAACimC,CAAC,IAAIA,CAAC,CAAC/4C,GAAG,CAAC,IAAIC,YAAY,CAACD,GAAG,CAAC,CAAC,CAAC;EACvF,OAAOk9C,SAAS;AAClB;AAEA,MAAMO,EAAE,GAAGA,CAACt9C,UAAsB,EAAE;EAAC23B;AAAM,CAAmB,EAAEjgB,KAAW,KAAW;EACpF,MAAMkhC,CAAC,GAAGn5C,OAAO,CAACO,UAAU,CAAC64C,MAAM,CAACC,SAAS,CAAC;EAC9C,MAAMp1B,KAAK,GAAGhM,KAAK,KAAK,UAAU,GAChCjY,OAAO,CAACO,UAAU,CAAC64C,MAAM,CAACqG,SAAS,CAAC,GACpCz/C,OAAO,CAACO,UAAU,CAACo6C,QAAQ,CAACziC,IAAI,CAAC;EACnC,MAAM/I,CAAC,GAAG,CAAC8I,KAAK,KAAK,WAAW,GAAG,CAAC,GAAGjY,OAAO,CAACO,UAAU,CAACy7C,SAAS,CAACnS,MAAM,CAAC,IAAI,CAAC,GAAGsP,CAAC;EAEpF,OAAO;IACL,kBAAkB,EAAE;AACwB,gDAAAl1B,KAAK,gCAAgCA,KAAK;AACrF;IACD,uBAAuB,EAAE9U,CAAC;IAC1B,uBAAuB,EAAG+oB,MAAM,GAAG,CAAC,GAAG,EAAE,GAAI,IAAI;IACjD,kBAAkB,EAAE,EAAE;IACtB,mBAAmB,EAAE;GACtB;AAEH,CAAC;AAED,MAAM4lB,OAAO,GAAGA,CAACv9C,UAAsB,EAAE;EAAC23B,MAAM;EAAE+gB;AAAO,CAAmB,KAAW;EACrF,MAAME,CAAC,GAAGn5C,OAAO,CAACO,UAAU,CAAC64C,MAAM,CAACC,SAAS,CAAC;EAC9C,MAAMp1B,KAAK,GAAG,CAACg1B,OAAO,GACpBj5C,OAAO,CAACO,UAAU,CAAC64C,MAAM,CAACqG,SAAS,CAAC,GACpCz/C,OAAO,CAACO,UAAU,CAAC64C,MAAM,CAACW,gBAAgB,CAAC;EAE7C,IAAI5qC,CAAC,GAAG,CAAC,GAAGgqC,CAAC;EAEb,OAAO;IACL,kBAAkB,EAAE;AAC0B,kDAAAl1B,KAAK,gCAAgCA,KAAK;AACvF;IACD,uBAAuB,EAAE9U,CAAC;IAC1B,uBAAuB,EAAG+oB,MAAM,GAAG,CAAC,GAAG,EAAE,GAAI,IAAI;IACjD,kBAAkB,EAAE,EAAE;IACtB,mBAAmB,EAAE;GACtB;AAEH,CAAC;AAEM,MAAM6lB,KAAK,GAAGZ,+CAAO,CAAC,CAAC58C,UAAsB,EAAE;EAACurB,KAAK;EAAEoM;AAAM,CAAmB,KAAW;EAChG,MAAM7rB,CAAC,GAAGrM,OAAO,CAACO,UAAU,CAAC64C,MAAM,CAACyD,QAAQ,CAAC;EAC7C,MAAM1D,CAAC,GAAGn5C,OAAO,CAACO,UAAU,CAAC64C,MAAM,CAACC,SAAS,CAAC;EAC9C,OAAO;IACL,kBAAkB,EAAe,aAAAF,CAAU,SAAAA,CAAC,SAASrtB,KAAK,GAAGqtB,CAAC,SAASjhB,MAAM,GAAGihB,CAAoB,oBAAC,GAAGA,CAAC,oCAAoC9sC,CAAC,gBAAgB8sC,CAAU,SAAAjhB,MAAM,GAAGihB,CAAC,SAASrtB,KAAK,GAAGqtB,CAAC,SAASA,CAAoB,oBAAC,GAAGA,CAAC,oCAAoC9sC,CAAM;IAChR,0BAA0B,EAAE;GAC7B;AACH,CAAC,EAAE,CAACgO,CAAC,EAAE;EAACyR,KAAK;EAAEoM;AAAM,CAAC,KAAQ,GAAApM,KAAK,IAAIoM,MAAM,EAAE,CAAC;AAEzC,MAAMqnB,YAAY,GAAGpC,+CAAO,CAAE58C,UAAsB,IAAI;EAC7D,MAAM8L,CAAC,GAAGrM,OAAO,CAACO,UAAU,CAAC64C,MAAM,CAACsG,SAAS,CAAC;EAC9C,OAAOtB,MAAM,CAA4F,2FAAA/xC,CAA+F,8FAAAA,CAAM,OAAE,EAAE,EAAE,EAAE,CAAC;AACzN,CAAC,EAAGgO,CAAC,IAAK,EAAE,CAAC;SCrKGslC,WAAWA,CAACp/C,UAA6B,KAAE,EAAEq/C,GAAwB;EACnF,MAAMxG,MAAM,GAAyBn5C,WAAW,CAACM,UAAU,CAAC64C,MAAM,IAAI,EAAE,CAAC,CACtEj5C,UAAU,CAAC,WAAW,EAAE,CAAC,CAAC,CAC1BA,UAAU,CAAC,SAAS,EAAE,MAAMy/C,GAAG,CAACC,gBAAgB,CAAC,WAAW,CAAC,IAAI,SAAS,CAAC,CAC3E1/C,UAAU,CAAC,WAAW,EAAE,MAAMy/C,GAAG,CAACC,gBAAgB,CAAC,cAAc,CAAC,IAAI,SAAS,CAAC,CAChF1/C,UAAU,CAAC,SAAS,EAAE,MAAMy/C,GAAG,CAACC,gBAAgB,CAAC,WAAW,CAAC,IAAI,SAAS,CAAC,CAC3E1/C,UAAU,CAAC,WAAW,EAAE,MAAMy/C,GAAG,CAACC,gBAAgB,CAAC,cAAc,CAAC,IAAI,SAAS,CAAC,CAChF1/C,UAAU,CAAC,UAAU,EAAE,MAAMy/C,GAAG,CAACC,gBAAgB,CAAC,YAAY,CAAC,IAAI,SAAS,CAAC,CAC7E1/C,UAAU,CAAC,UAAU,EAAE,MAAMy/C,GAAG,CAACC,gBAAgB,CAAC,YAAY,CAAC,IAAI,SAAS,CAAC,CAC7E1/C,UAAU,CAAC,kBAAkB,EAAE,MAAMy/C,GAAG,CAACC,gBAAgB,CAAC,qBAAqB,CAAC,IAAI,SAAS,CAAC,CAC9F1/C,UAAU,CAAC,YAAY,EAAE,MAAMy/C,GAAG,CAACC,gBAAgB,CAAC,eAAe,CAAC,IAAI,SAAS,CAAC,CAClF1/C,UAAU,CAAC,YAAY,EAAE,MAAMy/C,GAAG,CAACC,gBAAgB,CAAC,eAAe,CAAC,IAAI,SAAS,CAAC,CAClF1/C,UAAU,CAAC,WAAW,EAAE,MAAMy/C,GAAG,CAACC,gBAAgB,CAAC,cAAc,CAAC,IAAI,SAAS,CAAC,CAChF1/C,UAAU,CAAC,WAAW,EAAE,MAAMy/C,GAAG,CAACC,gBAAgB,CAAC,cAAc,CAAC,IAAI,SAAS,CAAC,CAChF1/C,UAAU,CAAC,MAAM,EAAE,MAAMy/C,GAAG,CAACC,gBAAgB,CAAC,QAAQ,CAAC,IAAI,SAAS,CAAC;EAExE,MAAMC,WAAW,GAA8B7/C,WAAW,CAACM,UAAU,CAACu/C,WAAW,IAAI,EAAE,CAAC,CACrF3/C,UAAU,CAAC,SAAS,EAAE,MAAMopC,MAAM,CAACwW,UAAU,CAACH,GAAG,CAACC,gBAAgB,CAAC,WAAW,CAAC,CAAC,IAAI,IAAI,CAAC,CACzF1/C,UAAU,CAAC,MAAM,EAAE,MAAMy/C,GAAG,CAACC,gBAAgB,CAAC,eAAe,CAAC,IAAI,SAAS,CAAC;EAE/E,MAAMprC,MAAM,GAAyBxU,WAAW,CAACM,UAAU,CAACkU,MAAM,IAAI,EAAE,CAAC,CACtEtU,UAAU,CAAC,YAAY,EAAE,MAAMopC,MAAM,CAACwW,UAAU,CAACH,GAAG,CAACC,gBAAgB,CAAC,qBAAqB,CAAC,CAAC,IAAI,EAAE,CAAC,CACpG1/C,UAAU,CAAC,SAAS,EAAE,MAAMopC,MAAM,CAACwW,UAAU,CAACH,GAAG,CAACC,gBAAgB,CAAC,kBAAkB,CAAC,CAAC,IAAI,EAAE,CAAC,CAC9F1/C,UAAU,CAAC,UAAU,EAAE,MAAMopC,MAAM,CAACwW,UAAU,CAACH,GAAG,CAACC,gBAAgB,CAAC,oBAAoB,CAAC,CAAC,IAAI,EAAE,CAAC,CACjG1/C,UAAU,CAAC,aAAa,EAAE,MAAMopC,MAAM,CAACwW,UAAU,CAACH,GAAG,CAACC,gBAAgB,CAAC,uBAAuB,CAAC,CAAC,IAAI,EAAE,CAAC,CACvG1/C,UAAU,CAAC,SAAS,EAAE,MAAK;IAC1B,MAAMka,CAAC,GAAGulC,GAAG,CAACC,gBAAgB,CAAC,kBAAkB,CAAC;IAClD,OAAOxlC,CAAC,GAAG+mB,IAAI,CAACC,KAAK,CAAChnB,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;EAChD,CAAC,CAAC,CACDla,UAAU,CAAC,cAAc,EAAE,MAAK;IAC/B,MAAMka,CAAC,GAAGulC,GAAG,CAACC,gBAAgB,CAAC,wBAAwB,CAAC;IACxD,OAAOxlC,CAAC,GAAG+mB,IAAI,CAACC,KAAK,CAAChnB,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;EACjD,CAAC,CAAC;EAEJ,MAAM0gC,OAAO,GAA0B96C,WAAW,CAACM,UAAU,CAACw6C,OAAO,IAAI,EAAE,CAAC,CACzE56C,UAAU,CAAC,MAAM,EAAE,MAAMy/C,GAAG,CAACC,gBAAgB,CAAC,sBAAsB,CAAC,IAAI,SAAS,CAAC,CACnF1/C,UAAU,CAAC,MAAM,EAAE,MAAMy/C,GAAG,CAACC,gBAAgB,CAAC,mBAAmB,CAAC,IAAI,SAAS,CAAC,CAChF1/C,UAAU,CAAC,QAAQ,EAAE,CAAC,CAAC;EAG1B,MAAM86C,mBAAmB,GAAsCh7C,WAAW,CAACM,UAAU,CAAC06C,mBAAmB,IAAI,EAAE,CAAC,CAC7G96C,UAAU,CAAC,MAAM,EAAE,MAAMy/C,GAAG,CAACC,gBAAgB,CAAC,sBAAsB,CAAC,IAAI,SAAS,CAAC,CACnF1/C,UAAU,CAAC,MAAM,EAAE,MAAMy/C,GAAG,CAACC,gBAAgB,CAAC,mBAAmB,CAAC,IAAI,SAAS,CAAC,CAChF1/C,UAAU,CAAC,cAAc,EAAE,CAAC,CAAC,CAC7BA,UAAU,CAAC,WAAW,EAAE,EAAE,CAAC;EAE9B,MAAM66C,GAAG,GAAsB/6C,WAAW,CAACM,UAAU,CAACy6C,GAAG,IAAI,EAAE,CAAC,CAC7D76C,UAAU,CAAC,MAAM,EAAE,MAAMy/C,GAAG,CAACC,gBAAgB,CAAC,sBAAsB,CAAC,IAAI,SAAS,CAAC,CACnF1/C,UAAU,CAAC,MAAM,EAAE,MAAMy/C,GAAG,CAACC,gBAAgB,CAAC,mBAAmB,CAAC,IAAI,SAAS,CAAC,CAChF1/C,UAAU,CAAC,QAAQ,EAAE,CAAC,CAAC;EAE1B,MAAM64C,IAAI,GAAuB/4C,WAAW,CAACM,UAAU,CAACy4C,IAAI,IAAI,EAAE,CAAC,CAChE74C,UAAU,CAAC,kBAAkB,EAAE,EAAE,CAAC,CAClCA,UAAU,CAAC,sBAAsB,EAAE,EAAE,CAAC,CACtCA,UAAU,CAAC,eAAe,EAAE,EAAE,CAAC,CAC/BA,UAAU,CAAC,cAAc,EAAE,CAAC,CAAC,CAC7BA,UAAU,CAAC,aAAa,EAAE,CAAC,CAAC,CAC5BA,UAAU,CAAC,MAAM,EAAE,MAAMy/C,GAAG,CAACC,gBAAgB,CAAC,sBAAsB,CAAC,IAAI,SAAS,CAAC;EAEtF,MAAMlF,QAAQ,GAA2B16C,WAAW,CAACM,UAAU,CAACo6C,QAAQ,IAAI,EAAE,CAAC,CAC5Ex6C,UAAU,CAAC,MAAM,EAAE,MAAMH,OAAO,CAACo5C,MAAM,CAAC4G,OAAO,CAAC,CAAC,CACjD7/C,UAAU,CAAC,QAAQ,EAAE,MAAMH,OAAO,CAACo5C,MAAM,CAACsG,SAAS,CAAC,CAAC,CACrDv/C,UAAU,CAAC,MAAM,EAAE,MAAMy/C,GAAG,CAACC,gBAAgB,CAAC,mBAAmB,CAAC,IAAI,SAAS,CAAC;EAEnF,MAAM3E,OAAO,GAA0Bj7C,WAAW,CAACM,UAAU,CAAC26C,OAAO,IAAI,EAAE,CAAC,CACzE/6C,UAAU,CAAC,KAAK,EAAE,CAAC,CAAC,CACpBA,UAAU,CAAC,MAAM,EAAE,MAAMy/C,GAAG,CAACC,gBAAgB,CAAC,uBAAuB,CAAC,IAAI,SAAS,CAAC,CACpF1/C,UAAU,CAAC,QAAQ,EAAE,MAAMy/C,GAAG,CAACC,gBAAgB,CAAC,eAAe,CAAC,IAAI,SAAS,CAAC,CAC9E1/C,UAAU,CAAC,MAAM,EAAE,MAAMy/C,GAAG,CAACC,gBAAgB,CAAC,mBAAmB,CAAC,IAAI,SAAS,CAAC;EAEnF,MAAM7D,SAAS,GAA4B/7C,WAAW,CAACM,UAAU,CAACy7C,SAAS,IAAI,EAAE,CAAC,CAC/E77C,UAAU,CAAC,QAAQ,EAAE,CAAC,CAAC,CACvBA,UAAU,CAAC,MAAM,EAAE,MAAMy/C,GAAG,CAACC,gBAAgB,CAAC,uBAAuB,CAAC,IAAI,SAAS,CAAC,CACpF1/C,UAAU,CAAC,QAAQ,EAAE,MAAMy/C,GAAG,CAACC,gBAAgB,CAAC,eAAe,CAAC,IAAI,SAAS,CAAC,CAC9E1/C,UAAU,CAAC,MAAM,EAAE,MAAMy/C,GAAG,CAACC,gBAAgB,CAAC,mBAAmB,CAAC,IAAI,SAAS,CAAC;EAEnF,MAAMrD,IAAI,GAAuBv8C,WAAW,CAACM,UAAU,CAACi8C,IAAI,IAAI,EAAE,CAAC,CAChEr8C,UAAU,CAAC,WAAW,EAAE,MAAMopC,MAAM,CAACwW,UAAU,CAACH,GAAG,CAACC,gBAAgB,CAAC,kBAAkB,CAAC,CAAC,IAAI,EAAE,CAAC,CAChG1/C,UAAU,CAAC,MAAM,EAAE,MAAMy/C,GAAG,CAACC,gBAAgB,CAAC,uBAAuB,CAAC,IAAI,SAAS,CAAC,CACpF1/C,UAAU,CAAC,QAAQ,EAAE,MAAMy/C,GAAG,CAACC,gBAAgB,CAAC,eAAe,CAAC,IAAI,SAAS,CAAC;EAEjF,MAAMpf,OAAO,GAA0BxgC,WAAW,CAACM,UAAU,CAACkgC,OAAO,IAAI,EAAE,CAAC,CACzEtgC,UAAU,CAAC,MAAM,EAAE,MAAMy/C,GAAG,CAACC,gBAAgB,CAAC,sBAAsB,CAAC,IAAI,SAAS,CAAC,CACnF1/C,UAAU,CAAC,QAAQ,EAAE,MAAMH,OAAO,CAACo5C,MAAM,CAACqG,SAAS,CAAC,CAAC;EAExD,MAAMQ,YAAY,GAA+BhgD,WAAW,CAACM,UAAU,CAAC0/C,YAAY,IAAI,EAAE,CAAC,CACxF9/C,UAAU,CAAC,MAAM,EAAE,MAAMy/C,GAAG,CAACC,gBAAgB,CAAC,sBAAsB,CAAC,IAAI,SAAS,CAAC;EAEtF,MAAMt1C,UAAU,GAA6BtK,WAAW,CAACM,UAAU,CAACgK,UAAU,IAAI,EAAE,CAAC,CAClFpK,UAAU,CAAC,MAAM,EAAE,MAAMy/C,GAAG,CAACC,gBAAgB,CAAC,mBAAmB,CAAC,IAAI,SAAS,CAAC,CAChF1/C,UAAU,CAAC,QAAQ,EAAE,MAAMy/C,GAAG,CAACC,gBAAgB,CAAC,qBAAqB,CAAC,IAAI,SAAS,CAAC,CACpF1/C,UAAU,CAAC,iBAAiB,EAAE,MAAMopC,MAAM,CAACwW,UAAU,CAACH,GAAG,CAACC,gBAAgB,CAAC,mBAAmB,CAAC,CAAC,IAAI,EAAE,CAAC;EAE1G,MAAMrV,OAAO,GAA0BvqC,WAAW,CAACM,UAAU,CAACiqC,OAAO,IAAI,EAAE,CAAC,CACzErqC,UAAU,CAAC,SAAS,EAAE,MAAK;IAC1B,MAAMka,CAAC,GAAGulC,GAAG,CAACC,gBAAgB,CAAC,mBAAmB,CAAC;IACnD,OAAOxlC,CAAC,GAAG+mB,IAAI,CAACC,KAAK,CAAChnB,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC;EACjD,CAAC,CAAC;EAEJ,MAAM6lC,SAAS,GAA4BjgD,WAAW,CAACM,UAAU,CAAC2/C,SAAS,IAAI,EAAE,CAAC,CAC/E//C,UAAU,CAAC,SAAS,EAAE,MAAK;IAC1B,MAAMka,CAAC,GAAGulC,GAAG,CAACC,gBAAgB,CAAC,qBAAqB,CAAC;IACrD,OAAOxlC,CAAC,GAAG+mB,IAAI,CAACC,KAAK,CAAChnB,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;EACnD,CAAC,CAAC;EAEJ,MAAM8lC,IAAI,GAAuBlgD,WAAW,CAACM,UAAU,CAAC4/C,IAAI,IAAI,EAAE,CAAC,CAChEhgD,UAAU,CAAC,MAAM,EAAE,EAAE,CAAC;EAEzB,MAAM0I,QAAQ,GAA2B5I,WAAW,CAACM,UAAU,CAACsI,QAAQ,IAAI,EAAE,CAAC,CAC5E1I,UAAU,CAAC,KAAK,EAAEopC,MAAM,CAACwW,UAAU,CAACH,GAAG,CAACC,gBAAgB,CAAC,gBAAgB,CAAC,CAAC,IAAI,CAAC,CAAC,CACjF1/C,UAAU,CAAC,KAAK,EAAEopC,MAAM,CAACwW,UAAU,CAACH,GAAG,CAACC,gBAAgB,CAAC,gBAAgB,CAAC,CAAC,IAAI,CAAC,CAAC,CACjF1/C,UAAU,CAAC,UAAU,EAAE,MAAMy/C,GAAG,CAACC,gBAAgB,CAAC,sBAAsB,CAAC,IAAI7/C,OAAO,CAACo5C,MAAM,CAACsG,SAAS,CAAC,CAAC,CACvGv/C,UAAU,CAAC,uBAAuB,EAAE,MAAK;IACxC,MAAMka,CAAC,GAAGulC,GAAG,CAACC,gBAAgB,CAAC,wBAAwB,CAAC;IACxDlmC,OAAO,CAACqb,KAAK,CAAC3a,CAAC,EAAE,OAAOA,CAAC,CAAC;IAC1B,OAAOA,CAAC,GAAG+mB,IAAI,CAACC,KAAK,CAAChnB,CAAC,CAAC,GAAG,CACzB,CAAC,KAAK,EAAE,SAAS,CAAC,EAClB,CAAC,KAAK,EAAE,SAAS,CAAC,CACnB;EACH,CAAC,CAAC,CACDla,UAAU,CAAC,sBAAsB,EAAE,MAAK;IACvC,MAAMka,CAAC,GAAGulC,GAAG,CAACC,gBAAgB,CAAC,uBAAuB,CAAC;IACvDlmC,OAAO,CAACqb,KAAK,CAAC3a,CAAC,EAAE,OAAOA,CAAC,CAAC;IAE1B,OAAOA,CAAC,GAAG+mB,IAAI,CAACC,KAAK,CAAChnB,CAAC,CAAC,GAAG,CACzB,CAAC,KAAK,EAAE,SAAS,CAAC,EAClB,CAAC,KAAK,EAAE,SAAS,CAAC,EAClB,CAAC,KAAK,EAAE,SAAS,CAAC,CACnB;EACH,CAAC,CAAC;EAEJ,MAAM+lC,QAAQ,GAA2BngD,WAAW,CAACM,UAAU,CAAC6/C,QAAQ,IAAI,EAAE,CAAC,CAC5EjgD,UAAU,CAAC,MAAM,EAAE,KAAK,CAAC,CACzBA,UAAU,CAAC,SAAS,EAAE,IAAI,CAAC,CAC3BA,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC,CAC5BA,UAAU,CAAC,aAAa,EAAE,IAAI,CAAC;EAElC,OAAO;IACLi5C,MAAM;IACN0G,WAAW;IACXrrC,MAAM;IACNsmC,OAAO;IACPE,mBAAmB;IACnBD,GAAG;IACHhC,IAAI;IACJ2B,QAAQ;IACRO,OAAO;IACPc,SAAS;IACTQ,IAAI;IACJ/b,OAAO;IACPwf,YAAY;IACZ11C,UAAU;IACVigC,OAAO;IACP0V,SAAS;IACTC,IAAI;IACJt3C,QAAQ;IACRu3C;GACD;AACH;ICtQYhzC,kBAAA;AAAZ,WAAYA,kBAAkB;EAC5BA,kBAAA,6BAAyB;EACzBA,kBAAA,6BAAyB;EAEzBA,kBAAA,+BAA2B;EAC3BA,kBAAA,mCAA+B;EAE/BA,kBAAA,2BAAuB;EACvBA,kBAAA,6BAAyB;AAC3B,CAAC,EATWA,kBAAkB,KAAlBA,kBAAkB,GAS7B;AAEK,MAAOizC,aAAc,SAAQC,WAAgC;EACjEv+C,WAAYA,CAAA+N,IAAwB,EAAElB,MAA2B;IAC/D,KAAK,CAACkB,IAAI,EAAE;MAACC,MAAM,EAAEnB;IAAM,CAAC,CAAC;;AAGhC;ACjBDzB,iDAAS,CAAC+2B,GAAG,CAACqc,wDAAM,CAAC;MAGRC,aAAa;EAIxBz+C,WAAoBA,CAAA0J,EAAkB,EAAUlL,UAAsB;IAAlD,IAAE,CAAAkL,EAAA,GAAFA,EAAE;IAA0B,IAAU,CAAAlL,UAAA,GAAVA,UAAU;IAF1D,IAAQ,CAAAkgD,QAAA,GAAG,cAAc,IAAIzf,QAAQ,IAAI0f,SAAS,CAACC,cAAc,GAAG,CAAC;IAkBrE,IAAe,CAAAC,eAAA,GAAG,CAACC,MAA2C,EAAEC,QAAqB,KAAMC,YAAsC,IAAI;MACnI,IAAIv5C,KAAK,CAACs5C,QAAQ,CAAC,EAAE;MACrBt5C,KAAK,CAACs5C,QAAQ,CAAC,GAAG,IAAI;MACtBD,MAAM,CAAC,IAAI,CAACG,cAAc,CAACD,YAAY,CAAC,CAAC;MACzCv5C,KAAK,CAACs5C,QAAQ,CAAC,GAAG,KAAK;IACzB,CAAC;IAuSD,KAAAznC,MAAM,GAIF;MACF5E,MAAM,EAAEA,CAAA,KAAM1U,SAAS;MACvBg7C,OAAO,EAAEA,CAAA,KAAMh7C;KAChB;IAuED,IAAM,CAAAkhD,MAAA,GAAG,CAAC;IAzYRtnC,OAAO,CAACC,GAAG,CAAC,WAAW,EAAE,IAAI,CAAC6mC,QAAQ,CAAC;;IAEvCh1C,EAAE,CAACgG,QAAQ,EAAE,CAACyvC,SAAS,EAAE,CAACC,MAAM,EAAE;IAClC,IAAI,CAACC,SAAS,CAAC31C,EAAE,CAAC;IAClB,IAAI,CAAC41C,UAAU,CAAC51C,EAAE,CAAC;IACnB,IAAI,CAAC61C,SAAS,CAAC71C,EAAE,CAAC;IAClB,IAAI,CAAC81C,kBAAkB,CAAC91C,EAAE,CAAC;IAC3B,IAAI,CAAC+1C,qBAAqB,CAAC/1C,EAAE,CAAC;IAC9B,IAAI,CAACg2C,QAAQ,CAACh2C,EAAE,CAAC;;EAGnBu1C,cAAcA,CAACD,YAAsC;IACnD,OAAOA,YAAY,CAAChuC,cAAc,EAAE,CAACvB,GAAG,CAACuvC,YAAY,CAAC;;EAUxDK,SAASA,CAAC31C,EAAkB,EAAE/K,MAAA,GAAayO,CAAI,IAAKA,CAAC;IACnD,MAAMuyC,aAAa,GAAG,IAAI,CAACd,eAAe,CAACe,GAAG,IAAIA,GAAG,CAACnuC,QAAQ,CAAC,OAAO,CAAC,EAAE,UAAU,CAAC;IACpF,MAAMouC,eAAe,GAAG,IAAI,CAAChB,eAAe,CAACe,GAAG,IAAIA,GAAG,CAACjuC,WAAW,CAAC,OAAO,CAAC,EAAE,YAAY,CAAC;IAG3F,MAAMO,SAAS,GAAGxI,EAAE,CAACwI,SAAS,EAAG;IACjCxI,EAAE,CACCkK,EAAE,CAAC,WAAW,EAAE,qBAAqB,EAAE7E,CAAC,IAAImD,SAAS,CAAC4tC,aAAa,CAAC,IAAIxB,aAAa,CAACjzC,kBAAkB,CAACmG,KAAK,EAAE;MAC/GnC,OAAO,EAAEN,CAAC,CAAClC,MAAM;MACjBkB,IAAI,EAAE,gBAAgB;MACtBE,UAAU,EAAEc,CAAC,CAAClC,MAAM,CAACyC,IAAI,CAAC,YAAY,CAAC;MACvC5F;IACD,EAAC,CAAC,CAAC,CACHkK,EAAE,CAAC,WAAW,EAAE,cAAc,EAAE7E,CAAC,IAAImD,SAAS,CAAC4tC,aAAa,CAAC,IAAIxB,aAAa,CAACjzC,kBAAkB,CAACmG,KAAK,EAAE;MACxGnC,OAAO,EAAEN,CAAC,CAAClC,MAAM;MACjBkB,IAAI,EAAE,SAAS;MACfE,UAAU,EAAEc,CAAC,CAAClC,MAAM,CAACyC,IAAI,CAAC,YAAY,CAAC;MACvC5F;IACD,EAAC,CAAC,CAAC,CACHkK,EAAE,CAAC,WAAW,EAAE,eAAe,EAAE7E,CAAC,IAAImD,SAAS,CAAC4tC,aAAa,CAAC,IAAIxB,aAAa,CAACjzC,kBAAkB,CAACmG,KAAK,EAAE;MACzGnC,OAAO,EAAEN,CAAC,CAAClC,MAAM;MACjBkB,IAAI,EAAE,UAAU;MAChBE,UAAU,EAAEc,CAAC,CAAClC,MAAM,CAACyC,IAAI,CAAC,YAAY,CAAC;MACvC5F;IACD,EAAC,CAAC,CAAC,CACHkK,EAAE,CAAC,WAAW,EAAE,eAAe,EAAE7E,CAAC,IAAImD,SAAS,CAAC4tC,aAAa,CAAC,IAAIxB,aAAa,CAACjzC,kBAAkB,CAACmG,KAAK,EAAE;MACzGnC,OAAO,EAAEN,CAAC,CAAClC,MAAM,CAACyJ,cAAc,CAAC,WAAW,CAAC;MAC7CvI,IAAI,EAAE,UAAU;MAChBE,UAAU,EAAEc,CAAC,CAAClC,MAAM,CAACyC,IAAI,CAAC,YAAY,CAAC;MACvC5F;IACD,EAAC,CAAC,CAAC,CAEHkK,EAAE,CAAC,UAAU,EAAE,qBAAqB,EAAE7E,CAAC,IAAImD,SAAS,CAAC4tC,aAAa,CAAC,IAAIxB,aAAa,CAACjzC,kBAAkB,CAACqG,KAAK,EAAE;MAC9GrC,OAAO,EAAEN,CAAC,CAAClC,MAAM;MACjBkB,IAAI,EAAE,gBAAgB;MACtBE,UAAU,EAAEc,CAAC,CAAClC,MAAM,CAACyC,IAAI,CAAC,YAAY,CAAC;MACvC5F;IACD,EAAC,CAAC,CAAC,CACHkK,EAAE,CAAC,UAAU,EAAE,cAAc,EAAE7E,CAAC,IAAImD,SAAS,CAAC4tC,aAAa,CAAC,IAAIxB,aAAa,CAACjzC,kBAAkB,CAACqG,KAAK,EAAE;MACvGrC,OAAO,EAAEN,CAAC,CAAClC,MAAM;MACjBkB,IAAI,EAAE,SAAS;MACfE,UAAU,EAAEc,CAAC,CAAClC,MAAM,CAACyC,IAAI,CAAC,YAAY,CAAC;MACvC5F;IACD,EAAC,CAAC,CAAC,CACHkK,EAAE,CAAC,UAAU,EAAE,eAAe,EAAE7E,CAAC,IAAImD,SAAS,CAAC4tC,aAAa,CAAC,IAAIxB,aAAa,CAACjzC,kBAAkB,CAACqG,KAAK,EAAE;MACxGrC,OAAO,EAAEN,CAAC,CAAClC,MAAM;MACjBkB,IAAI,EAAE,UAAU;MAChBE,UAAU,EAAEc,CAAC,CAAClC,MAAM,CAACyC,IAAI,CAAC,YAAY,CAAC;MACvC5F;IACD,EAAC,CAAC,CAAC,CACHkK,EAAE,CAAC,UAAU,EAAE,eAAe,EAAE7E,CAAC,IAAImD,SAAS,CAAC4tC,aAAa,CAAC,IAAIxB,aAAa,CAACjzC,kBAAkB,CAACqG,KAAK,EAAE;MACxGrC,OAAO,EAAEN,CAAC,CAAClC,MAAM,CAACyJ,cAAc,CAAC,WAAW,CAAC;MAC7CvI,IAAI,EAAE,UAAU;MAChBE,UAAU,EAAEc,CAAC,CAAClC,MAAM,CAACyC,IAAI,CAAC,YAAY,CAAC;MACvC5F;IACD,EAAC,CAAC,CAAC,CAEHkK,EAAE,CAAC,WAAW,EAAE,MAAM,EAAE7E,CAAC,IAAIpQ,MAAM,CAACoQ,CAAC,CAAClC,MAAM,CAAC,CAAC4E,QAAQ,CAAC,OAAO,CAAC,CAAC,CAChEmC,EAAE,CAAC,UAAU,EAAE,MAAM,EAAE7E,CAAC,IAAIpQ,MAAM,CAACoQ,CAAC,CAAClC,MAAM,CAAC,CAAC8E,WAAW,CAAC,OAAO,CAAC,CAAC,CAElEiC,EAAE,CAAC,WAAW,EAAE,eAAe,EAAE7E,CAAC,IAAI4wC,aAAa,CAAChhD,MAAM,CAACoQ,CAAC,CAAClC,MAAM,CAAC,CAAC,CAAC,CACtE+G,EAAE,CAAC,UAAU,EAAE,eAAe,EAAE7E,CAAC,IAAI8wC,eAAe,CAAClhD,MAAM,CAACoQ,CAAC,CAAClC,MAAM,CAAC,CAAC,CAAC,CAEvE+G,EAAE,CAAC,WAAW,EAAE,MAAM,EAAE7E,CAAC,IAAG;MAC3B,MAAMgxC,MAAM,GAAGphD,MAAM,CAACoQ,CAAC,CAAClC,MAAM,CAAC;MAC/B,IAAIkzC,MAAM,KAAKhxC,CAAC,CAAClC,MAAM,EAAE+K,OAAO,CAACC,GAAG,CAACkoC,MAAM,EAAEA,MAAM,CAACzpC,cAAc,CAAC,WAAW,CAAC,CAAC;MAEhFqpC,aAAa,CAACI,MAAM,CAACzpC,cAAc,CAAC,WAAW,CAAC,CAAC;IACnD,CAAC,CAAC,CACD1C,EAAE,CAAC,UAAU,EAAE,MAAM,EAAE7E,CAAC,IAAI8wC,eAAe,CAAClhD,MAAM,CAACoQ,CAAC,CAAClC,MAAM,CAAC,CAACyJ,cAAc,CAAC,WAAW,CAAC,CAAC,CAAC,CAE1F1C,EAAE,CAAC,WAAW,EAAE,mBAAmB,EAAE7E,CAAC,IAAIpQ,MAAM,CAAC+K,EAAE,CAACyG,KAAK,CAAC,IAAIpB,CAAC,CAAClC,MAAM,CAACyC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAACmC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAC5GmC,EAAE,CAAC,UAAU,EAAE,mBAAmB,EAAE7E,CAAC,IAAIpQ,MAAM,CAAC+K,EAAE,CAACyG,KAAK,CAAC,IAAIpB,CAAC,CAAClC,MAAM,CAACyC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAACqC,WAAW,CAAC,OAAO,CAAC,CAAC,CAE9GiC,EAAE,CAAC,WAAW,EAAE,iBAAiB,EAAE7E,CAAC,IAAIpQ,MAAM,CAAC+K,EAAE,CAAC+J,KAAK,CAAC,IAAI1E,CAAC,CAAClC,MAAM,CAACyC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAACmC,QAAQ,CAAC,OAAO,CAAC,CAAC,CACtGmC,EAAE,CAAC,UAAU,EAAE,iBAAiB,EAAE7E,CAAC,IAAIpQ,MAAM,CAAC+K,EAAE,CAAC+J,KAAK,CAAC,IAAI1E,CAAC,CAAClC,MAAM,CAACyC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAACqC,WAAW,CAAC,OAAO,CAAC,CAAC;;EAG7G2tC,UAAUA,CAAC51C,EAAkB,EAAE/K,MAAA,GAAayO,CAAI,IAAKA,CAAC;IACpD,MAAM4yC,cAAc,GAAG,IAAI,CAACnB,eAAe,CAACe,GAAG,IAAIA,GAAG,CAAClxC,MAAM,EAAE,EAAE,WAAW,CAAC;IAC7E,MAAMwD,SAAS,GAAGxI,EAAE,CAACwI,SAAS,EAAG;IAEjCxI,EAAE,CACCkK,EAAE,CAAC,QAAQ,EAAE,qBAAqB,EAAE7E,CAAC,IAAImD,SAAS,CAAC4tC,aAAa,CAAC,IAAIxB,aAAa,CAACjzC,kBAAkB,CAACqD,MAAM,EAAE;MAC7GW,OAAO,EAAEN,CAAC,CAAClC,MAAM;MACjBkB,IAAI,EAAE,gBAAgB;MACtBE,UAAU,EAAEc,CAAC,CAAClC,MAAM,CAACyC,IAAI,CAAC,YAAY,CAAC;MACvC5F;IACD,EAAC,CAAC,CAAC,CACHkK,EAAE,CAAC,QAAQ,EAAE,cAAc,EAAE7E,CAAC,IAAImD,SAAS,CAAC4tC,aAAa,CAAC,IAAIxB,aAAa,CAACjzC,kBAAkB,CAACqD,MAAM,EAAE;MACtGW,OAAO,EAAEN,CAAC,CAAClC,MAAM;MACjBkB,IAAI,EAAE,SAAS;MACfE,UAAU,EAAEc,CAAC,CAAClC,MAAM,CAACyC,IAAI,CAAC,YAAY,CAAC;MACvC5F;IACD,EAAC,CAAC,CAAC,CACHkK,EAAE,CAAC,QAAQ,EAAE,eAAe,EAAE7E,CAAC,IAAImD,SAAS,CAAC4tC,aAAa,CAAC,IAAIxB,aAAa,CAACjzC,kBAAkB,CAACqD,MAAM,EAAE;MACvGW,OAAO,EAAEN,CAAC,CAAClC,MAAM;MACjBkB,IAAI,EAAE,UAAU;MAChBE,UAAU,EAAEc,CAAC,CAAClC,MAAM,CAACyC,IAAI,CAAC,YAAY,CAAC;MACvC5F;IACD,EAAC,CAAC,CAAC,CACHkK,EAAE,CAAC,QAAQ,EAAE,eAAe,EAAE7E,CAAC,IAAImD,SAAS,CAAC4tC,aAAa,CAAC,IAAIxB,aAAa,CAACjzC,kBAAkB,CAACqD,MAAM,EAAE;MACvGW,OAAO,EAAEN,CAAC,CAAClC,MAAM,CAACyJ,cAAc,CAAC,WAAW,CAAC;MAC7CvI,IAAI,EAAE,UAAU;MAChBE,UAAU,EAAEc,CAAC,CAAClC,MAAM,CAACyC,IAAI,CAAC,YAAY,CAAC;MACvC5F;IACD,EAAC,CAAC,CAAC,CAEHkK,EAAE,CAAC,UAAU,EAAE,qBAAqB,EAAE7E,CAAC,IAAImD,SAAS,CAAC4tC,aAAa,CAAC,IAAIxB,aAAa,CAACjzC,kBAAkB,CAACkG,QAAQ,EAAE;MACjHlC,OAAO,EAAEN,CAAC,CAAClC,MAAM;MACjBkB,IAAI,EAAE,gBAAgB;MACtBE,UAAU,EAAEc,CAAC,CAAClC,MAAM,CAACyC,IAAI,CAAC,YAAY,CAAC;MACvC5F;IACD,EAAC,CAAC,CAAC,CACHkK,EAAE,CAAC,UAAU,EAAE,cAAc,EAAE7E,CAAC,IAAImD,SAAS,CAAC4tC,aAAa,CAAC,IAAIxB,aAAa,CAACjzC,kBAAkB,CAACkG,QAAQ,EAAE;MAC1GlC,OAAO,EAAEN,CAAC,CAAClC,MAAM;MACjBkB,IAAI,EAAE,SAAS;MACfE,UAAU,EAAEc,CAAC,CAAClC,MAAM,CAACyC,IAAI,CAAC,YAAY,CAAC;MACvC5F;IACD,EAAC,CAAC,CAAC,CACHkK,EAAE,CAAC,UAAU,EAAE,eAAe,EAAE7E,CAAC,IAAImD,SAAS,CAAC4tC,aAAa,CAAC,IAAIxB,aAAa,CAACjzC,kBAAkB,CAACkG,QAAQ,EAAE;MAC3GlC,OAAO,EAAEN,CAAC,CAAClC,MAAM;MACjBkB,IAAI,EAAE,UAAU;MAChBE,UAAU,EAAEc,CAAC,CAAClC,MAAM,CAACyC,IAAI,CAAC,YAAY,CAAC;MACvC5F;IACD,EAAC,CAAC,CAAC,CACHkK,EAAE,CAAC,UAAU,EAAE,eAAe,EAAE7E,CAAC,IAAImD,SAAS,CAAC4tC,aAAa,CAAC,IAAIxB,aAAa,CAACjzC,kBAAkB,CAACkG,QAAQ,EAAE;MAC3GlC,OAAO,EAAEN,CAAC,CAAClC,MAAM,CAACyJ,cAAc,CAAC,WAAW,CAAC;MAC7CvI,IAAI,EAAE,UAAU;MAChBE,UAAU,EAAEc,CAAC,CAAClC,MAAM,CAACyC,IAAI,CAAC,YAAY,CAAC;MACvC5F;IACD,EAAC,CAAC,CAAC,CAEHkK,EAAE,CAAC,QAAQ,EAAE,MAAM,EAAE7E,CAAC,IAAIixC,cAAc,CAACrhD,MAAM,CAACoQ,CAAC,CAAClC,MAAM,CAAC,CAACyJ,cAAc,CAAC,WAAW,CAAC,CAAC,CAAC,CACvF1C,EAAE,CAAC,UAAU,EAAE,MAAM,EAAE,MAAMosC,cAAc,CAC1CrhD,MAAM,CAAC+K,EAAE,CAAC+J,KAAK,CAAC,WAAW,CAAC,CAAC6C,cAAc,CAAC,WAAW,CAAC,CACrD7G,GAAG,CAAC/F,EAAE,CAACyG,KAAK,CAAC,oBAAoB,CAAC,CAAC,CAAC,CACxC,CAAC;IAAA,CAEDyD,EAAE,CAAC,QAAQ,EAAE,eAAe,EAAE9N,KAAK,IAAIk6C,cAAc,CAACrhD,MAAM,CAACmH,KAAK,CAAC+G,MAAM,CAAC,CAAC,CAAC,CAC5E+G,EAAE,CAAC,QAAQ,EAAE,mBAAmB,EAAE7E,CAAC,IAAIpQ,MAAM,CAAC+K,EAAE,CAACyG,KAAK,CAAK,IAAApB,CAAC,CAAClC,MAAM,CAACyC,IAAI,CAAC,QAAQ,CAAG,GAAC,CAAC,CAACZ,MAAM,EAAE,CAAC;;EAIrG6wC,SAASA,CAAC71C,EAAkB;IAC1B,MAAMwI,SAAS,GAAGxI,EAAE,CAACwI,SAAS,EAAG;IAEjCxI,EAAE,CACCkK,EAAE,CAAC,KAAK,EAAE,4BAA4B,EAAE7E,CAAC,IAAG;MAC3C,MAAMkxC,SAAS,GAAG,QAAQ;MAC1B,IAAIC,SAAS,GAAG,CAACnxC,CAAC,CAAClC,MAAM,CAACywB,QAAQ,CAAC2iB,SAAS,CAAC,GAAG50C,kBAAkB,CAACwE,IAAI,GAAGxE,kBAAkB,CAACyE,KAAK;MAClGf,CAAC,CAAClC,MAAM,CAACszC,WAAW,CAACF,SAAS,CAAC;MAC/B/tC,SAAS,CAAC4tC,aAAa,CAAC,IAAIxB,aAAa,CAAC4B,SAAS,EAAE;QACnD7wC,OAAO,EAAEN,CAAC,CAAClC,MAAM;QACjBkB,IAAI,EAAE,YAAY;QAClBE,UAAU,EAAEc,CAAC,CAAClC,MAAM,CAACyC,IAAI,CAAC,YAAY,CAAC;QACvC5F;MACD,EAAC,CAAC;IACL,CAAC,CAAC,CAEDkK,EAAE,CAAC,KAAK,EAAE,aAAa,EAAE7E,CAAC,IAAG;MAC5B,MAAMyxB,IAAI,GAAGzxB,CAAC,CAAClC,MAAM,CAACuzC,MAAM,EAAE,GAAG,QAAQ,GAAG,cAAc;MAC1D,MAAM3yB,GAAG,GAAG1e,CAAC,CAAClC,MAAM,CAACyC,IAAI,CAACkxB,IAAI,CAAC;MAC/B,IAAI/S,GAAG,EAAEnI,MAAM,CAACzV,IAAI,CAAC4d,GAAG,CAAC;IAC3B,CAAC,CAAC,CACD7Z,EAAE,CAAC,KAAK,EAAE,oBAAoB,EAAE7E,CAAC,IAAG;MACnC,MAAMyxB,IAAI,GAAGzxB,CAAC,CAAClC,MAAM,CAACuzC,MAAM,EAAE,GAAG,QAAQ,GAAG,cAAc;MAC1D,MAAM3yB,GAAG,GAAG1e,CAAC,CAAClC,MAAM,CAACyC,IAAI,CAACkxB,IAAI,CAAC;MAC/B,IAAI/S,GAAG,EAAEnI,MAAM,CAACzV,IAAI,CAAC4d,GAAG,CAAC;IAC3B,CAAC,CAAC;;;;;;;;;;;;;;EAkBN+xB,kBAAkBA,CAAC91C,EAAkB;IAAA,IAAAs2B,KAAA;IACnC,MAAMqgB,YAAY,GAAiB3Y,wDAAM,CAACh+B,EAAE,CAAC;IAC7C,IAAI,CAAC42C,UAAU,GAAGD,YAAY,CAAC3wB,MAAM,CAAC,MAAM,CAAC;IAC7C,IAAI,IAAI,CAAC4wB,UAAU,EAAE,IAAI,CAACA,UAAU,CAAC9sC,IAAI,CAACzH,KAAK,CAACsL,OAAO,GAAG,GAAG;IAC7DgpC,YAAY,CAACE,aAAa,CACxB,IAAI,CAACD,UAAW,EACfE,IAAiB,IAAI;MACnBA,IAA8B,CAACC,MAAM,EAAE;IAC1C,CAAC,EACD;MACEC,IAAI,EAAEA,CAACF,IAA2B,EAAEhtC,IAA4B,KAAI;QAClE,MAAMnT,IAAI,GAAGmT,IAAI,CAAClE,IAAI,CAAC,aAAa,CAAC;QAErCkxC,IAAI,CAACG,SAAS,GAAGntC,IAAI,CAAClE,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE;QACxCkxC,IAAI,CAACz0C,KAAK,CAAC60C,OAAO,GAAG,MAAM;QAC3B,MAAMC,KAAK,GAAGL,IAAI,CAACj3B,QAAQ,CAAC,CAAC,CAAqB;QAElDi3B,IAAI,CAACC,MAAM,GAAGlhD,4CAAU,CAAC,MAAK;UAC1B,IAAIwhD,mBAAmB,CAACP,IAAI,CAAC,EAAE;;YAE7B,IAAI,IAAI,CAACF,UAAU,EAAE9sC,IAAI,CAACzH,KAAK,CAACsL,OAAO,KAAK,GAAG,IAAIwpC,KAAK,CAACG,UAAU,KAAKH,KAAK,CAACI,YAAY,IAAIJ,KAAK,CAACK,YAAY,KAAKL,KAAK,CAACM,YAAY,EAAE;cACvIN,KAAK,CAACv2B,SAAS,CAAC7a,GAAG,CAAC,SAAS,CAAC;cAC9BoxC,KAAK,CAACO,SAAS,GAAGryC,CAAC,IAAI8xC,KAAK,CAACv2B,SAAS,CAACnV,MAAM,CAAC,SAAS,CAAC;cACxD,IAAIksC,MAAM,GAAG,CAAC;cACd,MAAMC,OAAO,GAAGT,KAAK,CAAC33B,gBAAgB,CAAC,QAAQ,CAAE;cACjDo4B,OAAO,CAAC7gD,OAAO,CAACkM,MAAM,IAAIA,MAAM,CAAC8F,gBAAgB,CAAC,OAAO,EAAG1D,CAAC,IAAI;gBAC/DsyC,MAAM,EAAG;gBACT,IAAIA,MAAM,KAAKC,OAAO,CAAC/2C,MAAM,EAAE,IAAI,CAACg3C,kBAAkB,CAACV,KAAK,EAAErtC,IAAI,CAAC;eACpE,CAAC,CAAC;cAEHqtC,KAAK,CAACW,IAAI,EAAE;YACb;YACDhB,IAAI,CAACz0C,KAAK,CAACipC,UAAU,GAAGxhC,IAAI,CAAC4D,OAAO,EAAE,GAAG,SAAS,GAAG,QAAQ;UAC9D;SAEF,EAAE,GAAG,CACP;OACF;MACD00B,SAAS,EAAyB;MAClC9+B,QAAQ,EAAE,QAAQ;MAClBy0C,cAAc,EAAE,KAAK;MACrBC,WAAW,EAAE,KAAK;MAClBC,QAAQ,EAAE,UAAU;MACpBC,QAAQ,EAAE,QAAQ;MAClBC,aAAa,EAAE;IAChB,EACF;IAED,IAAI,CAACvB,UAAU,EAAE9sC,IAAI,CAAC8W,SAAS,CAAC7a,GAAG,CAAC,OAAO,CAAC;IAC5C,MAAMqyC,OAAO,GAAIhD,MAAyC;MAAA,IAAAhe,IAAA,GAAAC,yJAAA,CAAK,WAAOj7B,KAA4B,EAAI;QACpG,MAAMi8C,OAAO,GAAGj8C,KAAK,CAAC+G,MAAM,CAACoM,EAAE,EAAE;QACjC,MAAM+oC,YAAY,GAAGhiB,KAAI,CAACsgB,UAAU,EAAE9sC,IAAI,CAAC6V,aAAa,CAAC,UAAU04B,OAAO,EAAE,CAAqB;QACjG,IAAIC,YAAY,IAAIA,YAAY,CAAChB,UAAU,IAAIgB,YAAY,CAACC,gBAAgB,EAAE;UAC5EnD,MAAM,CAACkD,YAAY,CAAC;QACrB;MACH,CAAC;MAAA,iBAAAtgB,EAAA;QAAA,OAAAZ,IAAA,CAAA/iC,KAAA,OAAA4jC,SAAA;MAAA;IAAA;IACD,IAAI,IAAI,CAAC+c,QAAQ,EAAE;MACjB,IAAI,CAACh1C,EAAE,CACJkK,EAAE,CAAC,QAAQ,EAAE,cAAc,EAAEkuC,OAAO,CAAClhB,CAAC,IAAIA,CAAC,CAACshB,IAAI,EAAE,CAAC,CAAC,CACpDtuC,EAAE,CAAC,UAAU,EAAE,cAAc,EAAEkuC,OAAO,CAAClhB,CAAC,IAAIA,CAAC,CAACuhB,KAAK,EAAE,CAAC,CAAC;IAC3D;IACD,IAAI,CAACz4C,EAAE,CACJkK,EAAE,CAAC,WAAW,EAAE,cAAc,EAAEkuC,OAAO,CAAClhB,CAAC,IAAIA,CAAC,CAACshB,IAAI,EAAE,CAAC,CAAC,CACvDtuC,EAAE,CAAC,UAAU,EAAE,cAAc,EAAEkuC,OAAO,CAAClhB,CAAC,IAAIA,CAAC,CAACuhB,KAAK,EAAE,CAAC,CAAC;;EAG5DZ,kBAAkBA,CAACV,KAAuB,EAAErtC,IAA4B;IACtEqtC,KAAK,CAACv2B,SAAS,CAACnV,MAAM,CAAC,SAAS,CAAC;IACjC,IAAIitC,YAAY,GAAGnkD,OAAO,CAAC,IAAI,CAACO,UAAU,CAAC4/C,IAAI,CAAChZ,IAAI,CAAC;IACrD5xB,IAAI,CAACzH,KAAK,CAAC;MACT,WAAW,EAAEq2C,YAAY;MACzB,eAAe,EAAE,CAAC;MAClB,gBAAgB,EAAE;IACnB,EAAC;IACF,IAAI,CAACC,QAAQ,GAAG,IAAI,CAACA,QAAQ,CAACxxC,GAAG,CAAC2C,IAAI,CAAC;;EAKzCisC,qBAAqBA,CAAC/1C,EAAkB;;IAEtC,MAAMg+B,MAAM,GAAiBh+B,EAAE,CAACg+B,MAAM,EAAE;IAExC,IAAI,CAAC4a,aAAa,GAAG5a,MAAM,CAAChY,MAAM,CAAC,MAAM,CAAC;IAC1C,IAAI,CAAC4yB,aAAa,CAAC9uC,IAAI,CAAC8W,SAAS,CAAC7a,GAAG,CAAC,UAAU,CAAC;IAEjDi4B,MAAM,CAAC6Y,aAAa,CAClB,IAAI,CAAC+B,aAAa,EAClB,CAAC9B,IAAiB,EAAEhtC,IAA4B,KAAI;MAClDgtC,IAAI,CAACz0C,KAAK,CAACipC,UAAU,GAAGxhC,IAAI,CAAC4D,OAAO,EAAE,GAAG,SAAS,GAAG,QAAQ;IAC/D,CAAC,EACD;MACEspC,IAAI,EAAEA,CAACF,IAAiB,EAAEhtC,IAA4B,KAAI;QACxDgtC,IAAI,CAACG,SAAS,GAAGntC,IAAI,CAAClE,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE;QACxCkxC,IAAI,CAACz0C,KAAK,CAAC60C,OAAO,GAAG,MAAM;OAC5B;MACD9U,SAAS,EAA0B;MACnC9+B,QAAQ,EAAE,QAAQ;MAClBy0C,cAAc,EAAE,IAAI;MACpBC,WAAW,EAAE,KAAK;MAClBC,QAAQ,EAAE,WAAW;MACrBE,aAAa,EAAE;IAChB,EACF;;EAYHrxC,WAAWA,CAAA;IACT+B,MAAM,CAACC,MAAM,CAAC,IAAI,CAAC8E,MAAM,CAAC,CAAC7W,OAAO,CAAC6W,MAAM,IAAIA,MAAM,EAAE,CAAC;;EAKxD/G,cAAcA,CAAA;IACZ,IAAI,CAAC8xC,QAAQ,GAAG,IAAI,CAAC34C,EAAE,CAACyG,KAAK,CAAC,UAAU,CAAC,CACtCwF,EAAE,CAAC,WAAW,CAAC;;EAGpB+pC,QAAQA,CAACh2C,EAAkB;IACzB,MAAMy6B,OAAO,GAAGz6B,EAAE,CAAC+J,KAAK,CAAC,YAAY,CAAC;IACtC,MAAM8uC,YAAY,GAAG74C,EAAE,CAACyG,KAAK,CAAC,SAAS,CAAC;IACxC,MAAMs4B,OAAO,GAAG/+B,EAAE,CAACgG,QAAQ,CAAC,UAAU,CAAC;IACvC,IAAI,CAACa,cAAc,EAAE;IAErB7G,EAAE,CAACyJ,OAAO,CAACsiB,IAAI,CAACpc,GAAG,CAAC3P,EAAE,CAAC6D,IAAI,EAAE,EAAEtP,OAAO,CAAC,IAAI,CAACO,UAAU,CAACkU,MAAM,CAAC8vC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC;IACzF94C,EAAE,CAAC0L,OAAO,CAAC,EAAE,CAAC;IAEd,IAAIgtC,YAAY,GAAGnkD,OAAO,CAAC,IAAI,CAACO,UAAU,CAAC4/C,IAAI,CAAChZ,IAAI,CAAC;IACrD,MAAMqd,qBAAqB,GAAGxkD,OAAO,CAAC,IAAI,CAACO,UAAU,CAAC2/C,SAAS,CAAC9mC,OAAO,CAAC;IACxE,MAAMqrC,SAAS,GAAGD,qBAAqB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC7C,MAAME,OAAO,GAAGF,qBAAqB,CAACA,qBAAqB,CAACl4C,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IAG1E,IAAI,CAAC+M,MAAM,CAAC5E,MAAM,GAAG,MAAK;MACxB,MAAMkwC,SAAS,GAAGl5C,EAAE,CAAC6D,IAAI,EAAE;MAC3B,MAAMs1C,CAAC,GAAGD,SAAS,GAAG,GAAG;MACzB,MAAME,kBAAkB,GAAG,IAAI,CAACC,WAAW,CAACF,CAAC,EAAE5kD,OAAO,CAAC,IAAI,CAACO,UAAU,CAACkU,MAAM,CAAC8vC,YAAY,CAAC,CAACrxC,GAAG,CAACyvB,CAAC,IAAI,IAAI,CAACtoB,CAAC,CAAC,GAAGsoB,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG;MACzH,MAAMoiB,cAAc,GAAG,IAAI,CAACD,WAAW,CAACF,CAAC,EAAE5kD,OAAO,CAAC,IAAI,CAACO,UAAU,CAACiqC,OAAO,CAACpxB,OAAO,CAAC,CAAClG,GAAG,CAACyvB,CAAC,IAAI,IAAI,CAACtoB,CAAC,CAAC,GAAGsoB,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG;MACjH,MAAMqiB,aAAa,GAAG,IAAI,CAACF,WAAW,CAACF,CAAC,EAAE5kD,OAAO,CAAC,IAAI,CAACO,UAAU,CAACkU,MAAM,CAAC2E,OAAO,CAAC,CAAClG,GAAG,CAACyvB,CAAC,IAAI,IAAI,CAACtoB,CAAC,CAAC,GAAGsoB,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG;MAC/GuD,OAAO,CAACp4B,KAAK,CAAC;QACZ,kBAAkB,EAAEk3C;MACrB,EAAC;MACFV,YAAY,CAACx2C,KAAK,CAAC;QACjB,cAAc,EAAE+2C;MACjB,EAAC;MACFra,OAAO,CAAC18B,KAAK,CAAC;QACZ,SAAS,EAAEi3C,cAAc;QACzB,kBAAkB,EAAEvtB,IAAI,CAACpc,GAAG,CAAC4pC,aAAa,EAAED,cAAc;MAC3D,EAAC;IACJ,CAAC;IAED,IAAI,CAAC1rC,MAAM,CAAC0hC,OAAO,GAAG,MAAK;MACzB,MAAM4J,SAAS,GAAGl5C,EAAE,CAAC6D,IAAI,EAAE;MAC3B,MAAMs1C,CAAC,GAAGD,SAAS,GAAG,GAAG;MACzB,MAAMM,YAAY,GAAG,IAAI,CAACH,WAAW,CAACF,CAAC,EAAE5kD,OAAO,CAAC,IAAI,CAACO,UAAU,CAAC2/C,SAAS,CAAC9mC,OAAO,CAAC,CAAClG,GAAG,CAACyvB,CAAC,IAAI,IAAI,CAACtoB,CAAC,CAAC,GAAGsoB,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG;MAEjH,MAAMuiB,QAAQ,GAAG,IAAI,CAACJ,WAAW,CAACF,CAAC,EAAE,CAAC,IAAI,CAACvqC,CAAC,CAACoqC,SAAS,EAAE,GAAG,CAAC,EAAE,IAAI,CAACpqC,CAAC,CAACqqC,OAAO,EAAE,EAAE,CAAC,CAAC,CAAC;MACnF,IAAI,CAACzD,MAAM,GAAG,IAAI,CAAC6D,WAAW,CAACF,CAAC,EAAE,CAAC,IAAI,CAACvqC,CAAC,CAACoqC,SAAS,EAAE,CAAC,CAAC,EAAE,IAAI,CAACpqC,CAAC,CAACqqC,OAAO,EAAE,IAAI,CAAC,CAAC,CAAC;MAChF,MAAM5qC,QAAQ,GAAG,IAAI,CAACgrC,WAAW,CAACF,CAAC,EAAE,CAAC,IAAI,CAACvqC,CAAC,CAACoqC,SAAS,EAAEN,YAAY,CAAC,EAAE,IAAI,CAAC9pC,CAAC,CAACqqC,OAAO,EAAEP,YAAY,GAAG,CAAC,CAAC,CAAC,CAAC;MAC1G,IAAI,CAACC,QAAQ,CAACt2C,KAAK,CACjB;QACE,WAAW,EAAEgM,QAAQ;QACrB,eAAe,EAAGkgB,CAAyB,IAAK,IAAI,CAACinB,MAAM,GAAGjnB,CAAC,CAAC3oB,IAAI,CAAC,OAAO,CAAC;QAC7E,gBAAgB,EAAE6zC,QAAQ,GAAG;MAC9B,EAAC;MAEJ,IAAI,IAAI,CAAC7C,UAAU,EAAE,IAAI,CAACA,UAAU,CAAC9sC,IAAI,CAACzH,KAAK,CAACsL,OAAO,GAAG6rC,YAAY,GAAG,EAAE;MAC3E,IAAI,IAAI,CAACZ,aAAa,EAAE,IAAI,CAACA,aAAa,CAAC9uC,IAAI,CAACzH,KAAK,CAACsL,OAAO,GAAG6rC,YAAY,GAAG,EAAE;IACnF,CAAC;IAEDx5C,EAAE,CAACkK,EAAE,CAAC,MAAM,EAAE,IAAI,CAAC0D,MAAM,CAAC5E,MAAM,CAAC;IACjChJ,EAAE,CAACkK,EAAE,CAAC,MAAM,EAAE,IAAI,CAAC0D,MAAM,CAAC0hC,OAAO,CAAC;IAElC,IAAI,CAACxoC,WAAW,EAAE;;EAKpB8H,CAACA,CAAClL,CAAS,EAAEgpB,CAAS;IACpB,OAAO,IAAIgtB,CAAC,CAACh2C,CAAC,EAAEgpB,CAAC,CAAC;;EAGpB2sB,WAAWA,CAAC31C,CAAS,EAAE68B,MAAW;IAChC,IAAI78B,CAAC,GAAG68B,MAAM,CAACwB,EAAE,CAAC,CAAC,CAAE,CAACr+B,CAAC,EAAE,OAAO68B,MAAM,CAACwB,EAAE,CAAC,CAAC,CAAE,CAACrV,CAAC;IAC/C,IAAIhpB,CAAC,GAAG68B,MAAM,CAACwB,EAAE,CAAC,CAAC,CAAC,CAAE,CAACr+B,CAAC,EAAE,OAAO68B,MAAM,CAACwB,EAAE,CAAC,CAAC,CAAC,CAAE,CAACrV,CAAC;IACjD,KAAK,IAAIoI,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,GAAGyL,MAAM,CAAC1/B,MAAM,EAAEi0B,CAAC,EAAE,EAAE;MAC1C,IAAIpI,CAAC,GAAG,IAAI,CAACitB,IAAI,CAACj2C,CAAC,EAAE68B,MAAM,CAACzL,CAAC,CAAC,EAAEyL,MAAM,CAACzL,CAAC,GAAG,CAAC,CAAC,CAAC;MAC9C,IAAIpI,CAAC,EAAE,OAAOA,CAAC;IAChB;IACDxe,OAAO,CAACutB,MAAM,CAAC,KAAK,EAAE,wBAAwB,CAAC;IAC/C,OAAO,CAAC;;EAGV;;;;;AAKG;EACHke,IAAIA,CAACj2C,CAAS,EAAEk2C,EAAK,EAAE1W,EAAK;IAC1B,IAAIx/B,CAAC,GAAGk2C,EAAE,CAACl2C,CAAC,IAAIA,CAAC,GAAGw/B,EAAE,CAACx/B,CAAC,EAAE,OAAOpP,SAAS;IAC1C,OAAO,CAACslD,EAAE,CAACltB,CAAC,IAAIwW,EAAE,CAACx/B,CAAC,GAAGA,CAAC,CAAC,GAAGw/B,EAAE,CAACxW,CAAC,IAAIhpB,CAAC,GAAGk2C,EAAE,CAACl2C,CAAC,CAAC,KAAKw/B,EAAE,CAACx/B,CAAC,GAAGk2C,EAAE,CAACl2C,CAAC,CAAC;;AAEjE;AAMD,MAAM3H,KAAK,GAAU;EACnB+I,SAAS,EAAE,KAAK;EAChB+0C,QAAQ,EAAE,KAAK;EACfC,UAAU,EAAE;CACb;AAED,MAAMJ,CAAE,SAAQphB,KAAa;EAC3BhiC,WAAYA,CAAAoN,CAAS,EAAEgpB,CAAS;IAC9B,KAAK,CAAChpB,CAAC,EAAEgpB,CAAC,CAAC;;EAGb,IAAIhpB,CAACA,CAAA;IACH,OAAO,IAAI,CAAC,CAAC,CAAC;;EAGhB,IAAIgpB,CAACA,CAAA;IACH,OAAO,IAAI,CAAC,CAAC,CAAC;;AAEjB;AAGD,SAAS2qB,mBAAmBA,CAAC3vC,EAAe;EAC1C,IAAIm8B,IAAI,GAAGn8B,EAAE,CAACjE,qBAAqB,EAAE;EACrC,OACEogC,IAAI,CAACvG,GAAG,IAAI,CAAC,IACbuG,IAAI,CAACnkB,IAAI,IAAI,CAAC,IACdmkB,IAAI,CAACtG,MAAM,KAAK3hB,MAAM,CAACm+B,WAAW,IAAIxkB,QAAQ,CAACykB,eAAe,CAAC3nC,YAAY,CAAC,IAC5EwxB,IAAI,CAAC7jB,KAAK,KAAKpE,MAAM,CAACq+B,UAAU,IAAI1kB,QAAQ,CAACykB,eAAe,CAAC95B,WAAW,CAAC;AAE7E;MC9cate,KAAK;EAUhBtL,WAAYA,CAAAkS,SAAsB,EAAE1T,UAAA,GAA6B,EAAE;IACjE,IAAI,CAACq/C,GAAG,GAAG+F,gBAAgB,CAAC1xC,SAAS,CAAC;IACtC,IAAI,CAAC1T,UAAU,GAAGo/C,WAAW,CAACp/C,UAAU,EAAE,IAAI,CAACq/C,GAAG,CAAC;IACnD,IAAI,CAAC1C,YAAY,GAAGA,YAAY,CAAC,IAAI,CAAC38C,UAAU,EAAE,IAAI,CAAC;IACvD,IAAI,CAAC8Z,CAAC,GAAG/Z,iBAAiB,CAAC,IAAI,CAACC,UAAU,CAAC;IAC3C,IAAI,CAACqlD,EAAE,GAAGnlD,cAAc,CAAC,IAAI,CAACF,UAAU,CAAC;;EAG3CwU,eAAeA,CAACtJ,EAAkB;IAChC,IAAI,CAACA,EAAE,GAAGA,EAAE;IACZA,EAAE,CAAC4F,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC;IACzB,IAAI,CAACgB,aAAa,GAAG,IAAImuC,aAAa,CAAC/0C,EAAE,EAAE,IAAI,CAAClL,UAAU,CAAC;IAC3D,IAAI,CAACslD,oBAAoB,EAAE;;EAG7BA,oBAAoBA,CAAA;IAClB,MAAMC,WAAW,GAAG,IAAI,CAACr6C,EAAE,EAAEyG,KAAK,CAAC,SAAS,CAAC;IAC7C,IAAI,CAAC4zC,WAAW,EAAE;IAClB,MAAMC,EAAE,GAAG,GAAG,GAAGD,WAAW,CAACx5C,MAAM;IAEnCw5C,WAAW,CAACtjD,OAAO,CAAC,CAACy6C,UAAU,EAAE1c,CAAC,KAAI;MACpC,MAAM/qB,KAAK,GAAG,IAAI,CAAC/J,EAAG,CAAC+J,KAAK,CAAa,YAAAynC,UAAU,CAAC5rC,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC;MAC1E4rC,UAAU,CAAC5rC,IAAI,CAAC,OAAO,EAAEmE,KAAK,CAAC;MAE/B,MAAMyO,KAAK,GAAG+hC,0CAAU,CAACD,EAAE,GAAGxlB,CAAC,EAAE,CAAC,EAAEvgC,OAAO,CAAC,IAAI,CAACO,UAAU,CAACkU,MAAM,CAACyxC,UAAU,CAAC,GAAG,GAAG,CAAC;MACrF,MAAMpH,GAAG,GAAG76B,KAAK,CAAC66B,GAAG,EAAE;MACvB7B,UAAU,CAAC5rC,IAAI,CAAC,OAAO,EAAEytC,GAAG,CAAC;MAC7BtpC,KAAK,CAAChT,OAAO,CAACiT,IAAI,IAAG;QACnBA,IAAI,CAACpE,IAAI,CAAC,OAAO,EAAEytC,GAAG,CAAC;MACzB,CAAC,CAAC;IACJ,CAAC,CAAC;;EAIJlqC,aAAaA,CAAA;IACX,OAAO,CACL;MACE8uC,QAAQ,EAAE,GAAG;MACb51C,KAAK,EAAE;QACL,aAAa,EAAE,QAAQ;QACvB,aAAa,EAAE,GAAG;QAClB,SAAS,EAAE;MACZ;IACF,GACD;MACE41C,QAAQ,EAAE,kBAAkB;MAC5B51C,KAAK,EAAE;QACL,OAAO,EAAE,iBAAiB;QAC1B,OAAO,EAAE,aAAa;QACtB,QAAQ,EAAE,cAAc;QAExB,cAAc,EAAE,QAAQ;QAExB,SAAS,EAAE,CAAC;QACZ,kBAAkB,EAAE,QAAQ;QAC5B,iBAAiB,EAAE,CAAC;QAEpB,OAAO,EAAE,IAAI,CAACuM,CAAC,CAAC,aAAa,EAAE,MAAM,CAAC;QACtC,cAAc,EAAE,IAAI,CAACA,CAAC,CAAC,aAAa,EAAE,MAAM,CAAC;QAC7C,kBAAkB,EAAE,IAAI,CAACA,CAAC,CAAC,aAAa,EAAE,MAAM,CAAC;QACjD,oBAAoB,EAAE,IAAI,CAACA,CAAC,CAAC,aAAa,EAAE,SAAS,CAAC;QACtD,cAAc,EAAE,IAAI,CAACurC,EAAE,CAAC,QAAQ,EAAE,WAAW,EAAEzM,CAAC,IAAI,CAAC,GAAGA,CAAC;MAC1D;IACF,GACD;MACEuK,QAAQ,EAAE,gDAAgD;MAC1D51C,KAAK,EAAE;QACL,cAAc,EAAE,OAAO;QACvB,cAAc,EAAE,IAAI,CAACuM,CAAC,CAAC,QAAQ,EAAE,WAAW;MAC7C;IACF,GACD;MACEqpC,QAAQ,EAAE,wBAAwB;MAClC51C,KAAK,EAAE;QACL,OAAO,EAAE,mBAAmB;QAC5B,cAAc,EAAE,CAAC;QACjB,aAAa,EAAE,QAAQ;QACvB,aAAa,EAAE,OAAO;;QAEtB,eAAe,EAAE,aAAa;;QAE9B,eAAe,EAAE;MAClB;IACF,GACD;MACE41C,QAAQ,EAAE,eAAe;MACzB51C,KAAK,EAAE;;QAEL,eAAe,EAAE;MAClB;IACF,GACD;MACE41C,QAAQ,EAAE,aAAa;MACvB51C,KAAK,EAAE;QACL,OAAO,EAAE,mBAAmB;QAC5B,WAAW,EAAE,IAAI,CAACuM,CAAC,CAAC,QAAQ,EAAE,UAAU,CAAC;QACzC,oBAAoB,EAAE,CAAC;QACvB,OAAO,EAAE,WAAW;QACpB,aAAa,EAAE,QAAQ;QACvB,aAAa,EAAE,QAAQ;QACvB,oBAAoB,EAAE,IAAI,CAACA,CAAC,CAAC,QAAQ,EAAE,SAAS,CAAC;QACjD,oBAAoB,EAAE,IAAI,CAACA,CAAC,CAAC,QAAQ,EAAE,aAAa,CAAC;QACrD,WAAW,EAAE,MAAM;QACnB,gBAAgB,EAAE;MACnB;IACF,GACD;MACEqpC,QAAQ,EAAE,qBAAqB;MAC/B51C,KAAK,EAAE;QACL,OAAO,EAAE;MACV;IACF,GACD;MACE41C,QAAQ,EAAE,WAAW;MACrB51C,KAAK,EAAE;QACL,gBAAgB,EAAGyH,IAA4B,IAAMA,IAAI,CAACuW,KAAK,EAAE,GAAG,EAAE,GAAI,IAAI;QAC9E,eAAe,EAAE,CAAC;QAClB,YAAY,EAAE;MACf;KACF,EAAE;MACD43B,QAAQ,EAAE,uEAAuE;MACjF51C,KAAK,EAAE;QACL,WAAW,EAAE,IAAI,CAACuM,CAAC,CAAC,MAAM,EAAE,MAAM,CAAC;QACnC,eAAe,EAAE,CAAC;QAClB,OAAO,EAAE,mBAAmB;QAC5B,OAAO,EAAE,aAAa;QACtB,QAAQ,EAAE,cAAc;QACxB,gBAAgB,EAAE,MAAM;QACxB,aAAa,EAAE,QAAQ;QACvB,aAAa,EAAE,QAAQ;QACvB,WAAW,EAAE,MAAM;QACnB,gBAAgB,EAAG9E,IAA4B,IAAKA,IAAI,CAAClE,IAAI,CAAC,OAAO,CAAC,GAAG,IAAI;;QAE7E,4BAA4B,EAAE,yBAAyB;;QAGvD,kBAAkB,EAAEkE,IAAI,IAAI,IAAI,CAAC2nC,YAAY,CAAC3nC,IAAI,CAAC,CAAC,kBAAkB,CAAC;;QAEvE,uBAAuB,EAAEA,IAAI,IAAI,IAAI,CAAC2nC,YAAY,CAAC3nC,IAAI,CAAC,CAAC,uBAAuB,CAAC,IAAI,CAAC;;QAEtF,uBAAuB,EAAEA,IAAI,IAAI,IAAI,CAAC2nC,YAAY,CAAC3nC,IAAI,CAAC,CAAC,uBAAuB,CAAC,IAAI,CAAC;;QAEtF,mBAAmB,EAAEA,IAAI,IAAI,IAAI,CAAC2nC,YAAY,CAAC3nC,IAAI,CAAC,CAAC,mBAAmB,CAAC,IAAI,MAAM;;QAEnF,kBAAkB,EAAEA,IAAI,IAAI,IAAI,CAAC2nC,YAAY,CAAC3nC,IAAI,CAAC,CAAC,kBAAkB,CAAC,IAAI,MAAM;;QAEjF,iBAAiB,EAAEA,IAAI,IAAI,IAAI,CAAC2nC,YAAY,CAAC3nC,IAAI,CAAC,CAAC,iBAAiB,CAAC,IAAI,MAAM;;QAE/E,8BAA8B,EAAEA,IAAI,IAAI,IAAI,CAAC2nC,YAAY,CAAC3nC,IAAI,CAAC,CAAC,8BAA8B,CAAC,IAAI,QAAQ;;QAE3G,0BAA0B,EAAEA,IAAI,IAAI,IAAI,CAAC2nC,YAAY,CAAC3nC,IAAI,CAAC,CAAC,0BAA0B,CAAC,IAAI,CAAC;;QAE5F,kBAAkB,EAAEA,IAAI,IAAI,IAAI,CAAC2nC,YAAY,CAAC3nC,IAAI,CAAC,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;QAC/E,OAAO,EAAE,IAAI,CAAC8E,CAAC,CAAC,QAAQ,EAAE,WAAW;MACtC;IACF,GAED;MACEqpC,QAAQ,EAAE,4BAA4B;MACtC51C,KAAK,EAAE;QACL,OAAO,EAAE,mBAAmB;QAC5B,OAAO,EAAE,IAAI,CAACuM,CAAC,CAAC,QAAQ,EAAE,SAAS,CAAC;QACpC,OAAO,EAAE,SAAS;QAClB,aAAa,EAAE,QAAQ;QACvB,aAAa,EAAE,QAAQ;QACvB,WAAW,EAAE,MAAM;QACnB,kBAAkB,EAAE,IAAI,CAACA,CAAC,CAAC,YAAY,EAAE,MAAM;MAChD;IACF,GACD;MACEqpC,QAAQ,EAAE,oCAAoC;MAC9C51C,KAAK,EAAE;QACL,kBAAkB,EAAE,IAAI,CAACuM,CAAC,CAAC,QAAQ,EAAE,UAAU;MAChD;IACF,GACD;MACEqpC,QAAQ,EAAE,kCAAkC;MAC5C51C,KAAK,EAAE;QACL,cAAc,EAAE,IAAI,CAAC83C,EAAE,CAAC,QAAQ,EAAE,WAAW,EAAEzM,CAAC,IAAIA,CAAC,GAAG,CAAC,CAAC;QAC1D,cAAc,EAAE,IAAI,CAAC9+B,CAAC,CAAC,QAAQ,EAAE,WAAW;MAC7C;IACF,GACD;MACEqpC,QAAQ,EAAE,mCAAmC;MAC7C51C,KAAK,EAAE;QACL,cAAc,EAAE,IAAI,CAAC83C,EAAE,CAAC,QAAQ,EAAE,WAAW,EAAEzM,CAAC,IAAIA,CAAC,GAAG,CAAC,CAAC;QAC1D,cAAc,EAAE,IAAI,CAAC9+B,CAAC,CAAC,QAAQ,EAAE,YAAY;MAC9C;IACF,GACD;MACEqpC,QAAQ,EAAE,iBAAiB;MAC3B51C,KAAK,EAAE;QACL,OAAO,EAAE,mBAAmB;QAC5B,aAAa,EAAE,wBAAwB;;QAEvC,cAAc,EAAE,IAAI,CAACuM,CAAC,CAAC,QAAQ,EAAE,WAAW,CAAC;QAC7C,WAAW,EAAE,UAAU;QACvB,cAAc,EAAE,IAAI,CAACA,CAAC,CAAC,YAAY,EAAE,MAAM,CAAC;;QAE5C,iBAAiB,EAAE;MACpB;IACF,GAED;MACEqpC,QAAQ,EAAE,6BAA6B;MACvC51C,KAAK,EAAE;QACL,cAAc,EAAE,IAAI,CAACuM,CAAC,CAAC,QAAQ,EAAE,kBAAkB,CAAC;QACpD,OAAO,EAAE,IAAI,CAACA,CAAC,CAAC,QAAQ,EAAE,kBAAkB,CAAC;QAC7C,cAAc,EAAE,IAAI,CAACA,CAAC,CAAC,QAAQ,EAAE,WAAW;MAC7C;IACF,GAED;MACEqpC,QAAQ,EAAE,yBAAyB;MACnC51C,KAAK,EAAE;QACL,OAAO,EAAE,eAAe;QACxB,kBAAkB,EAAE,IAAI,CAACuM,CAAC,CAAC,QAAQ,EAAE,UAAU,CAAC;QAChD,oBAAoB,EAAE,CAAC;QACvB,cAAc,EAAE,CAAC;QACjB,aAAa,EAAE,wBAAwB;QACvC,OAAO,EAAE,IAAI,CAACA,CAAC,CAAC,QAAQ,EAAE,WAAW,CAAC;QACtC,WAAW,EAAE,UAAU;QACvB,gBAAgB,EAAG9E,IAA4B,IAAMA,IAAI,CAACuW,KAAK,EAAE,GAAG,EAAE,GAAI;MAC3E;IACF,GACD;MACE43B,QAAQ,EAAE,cAAc;MACxB51C,KAAK,EAAE;QACL,OAAO,EAAE,iBAAiB;QAC1B,kBAAkB,EAAE,IAAI,CAACuM,CAAC,CAAC,SAAS,EAAE,MAAM;MAC7C;KACF,EAAE;MACDqpC,QAAQ,EAAE,mBAAmB;MAC7B51C,KAAK,EAAE;QACL,kBAAkB,EAAE,IAAI,CAACuM,CAAC,CAAC,SAAS,EAAE,MAAM;MAC7C;KACF,EAAE;MACDqpC,QAAQ,EAAE,0BAA0B;MACpC51C,KAAK,EAAE;QACL,OAAO,EAAE,iBAAiB;QAC1B,oBAAoB,EAAE,CAAC;QACvB,kBAAkB,EAAE,IAAI,CAACuM,CAAC,CAAC,qBAAqB,EAAE,MAAM,CAAC;QACzD,eAAe,EAAE,IAAI,CAACurC,EAAE,CAAC,qBAAqB,EAAE,WAAW,EAAE/sB,CAAC,IAAIA,CAAC,GAAG,EAAE,CAAC;QACzE,cAAc,EAAE,CAAC;MAClB;KACF,EAAE;MACD6qB,QAAQ,EAAE,UAAU;MACpB51C,KAAK,EAAE;QACL,OAAO,EAAE,wBAAwB;QACjC,kBAAkB,EAAE,IAAI,CAACuM,CAAC,CAAC,KAAK,EAAE,MAAM;MACzC;KACF,EAAE;MACDqpC,QAAQ,EAAE,eAAe;MACzB51C,KAAK,EAAE;QACL,kBAAkB,EAAE,IAAI,CAACuM,CAAC,CAAC,KAAK,EAAE,MAAM;MACzC;KACF,EAAE;MACDqpC,QAAQ,EAAE,WAAW;MACrB51C,KAAK,EAAE;QACL,OAAO,EAAE,wBAAwB;QACjC,oBAAoB,EAAE,CAAC;QACvB,kBAAkB,EAAE,IAAI,CAACuM,CAAC,CAAC,MAAM,EAAE,MAAM,CAAC;QAC1C,kBAAkB,EAAE,IAAI,CAACA,CAAC,CAAC,MAAM,EAAE,sBAAsB,CAAC;QAC1D,eAAe,EAAE,IAAI,CAACurC,EAAE,CAAC,MAAM,EAAE,kBAAkB,EAAE9V,CAAC,IAAIA,CAAC,GAAG,CAAC,CAAC;QAChE,cAAc,EAAE,CAAC;MAClB;KACF,EAAE;MACD4T,QAAQ,EAAE,eAAe;MACzB51C,KAAK,EAAE;QACL,OAAO,EAAE,iBAAiB;QAC1B,OAAO,EAAE,IAAI,CAACuM,CAAC,CAAC,UAAU,EAAE,QAAQ,CAAC;QACrC,kBAAkB,EAAE,IAAI,CAACA,CAAC,CAAC,UAAU,EAAE,MAAM,CAAC;QAC9C,cAAc,EAAE,IAAI,CAACA,CAAC,CAAC,UAAU,EAAE,QAAQ,CAAC;QAC5C,cAAc,EAAE,IAAI,CAACA,CAAC,CAAC,QAAQ,EAAE,WAAW,CAAC;;QAE7C,eAAe,EAAG9E,IAA4B,IAAKiiB,IAAI,CAACpc,GAAG,CAAC7F,IAAI,CAAClE,IAAI,CAAC,OAAO,CAAC,EAAEkE,IAAI,CAAClE,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG;MACxG;KACF,EAAE;MACDqyC,QAAQ,EAAE,oBAAoB;MAC9B51C,KAAK,EAAE;QACL,OAAO,EAAE,IAAI,CAACuM,CAAC,CAAC,UAAU,EAAE,MAAM,CAAC;QACnC,cAAc,EAAE,IAAI,CAACA,CAAC,CAAC,UAAU,EAAE,MAAM;MAC1C;KACF,EAAE;MACDqpC,QAAQ,EAAE,0BAA0B;MACpC51C,KAAK,EAAE;QACL,cAAc,EAAE,IAAI,CAACuM,CAAC,CAAC,YAAY,EAAE,MAAM;MAC5C;KACF,EAAE;MACDqpC,QAAQ,EAAE,gBAAgB;MAC1B51C,KAAK,EAAE;QACL,oBAAoB,EAAE,CAAC;QACvB,OAAO,EAAE,iBAAiB;QAC1B,cAAc,EAAE,CAAC;QACjB,gBAAgB,EAAGyH,IAA4B,IAC7C,IAAI,CAACqwC,EAAE,CAAC,QAAQ,EAAE,WAAW,EAAEzM,CAAC,IAC9B,IAAI,CAACyM,EAAE,CAAC,WAAW,EAAE,QAAQ,EAAE/sB,CAAC,IAAI,GAAGtjB,IAAI,CAACuW,KAAK,EAAE,GAAG,CAAC,GAAG+M,CAAC,GAAG,CAAC,GAAGsgB,CAAK,KACtE;MAEN;KACF,EAAE;MACDuK,QAAQ,EAAE,qBAAqB;MAC/B51C,KAAK,EAAE;QACL,gBAAgB,EAAGyH,IAA4B,IAC7C,IAAI,CAACqwC,EAAE,CAAC,QAAQ,EAAE,WAAW,EAAEzM,CAAC,IAC9B,IAAI,CAACyM,EAAE,CAAC,WAAW,EAAE,QAAQ,EAAE/sB,CAAC,IAAO,GAAAtjB,IAAI,CAACuW,KAAK,EAAE,GAAG,CAAC,GAAG+M,CAAC,GAAG,CAAC,GAAGsgB,CAAC,GAAG,EAAM,KAC3E;MAEN;KACF,EAAE;MACDuK,QAAQ,EAAE,cAAc;MACxB51C,KAAK,EAAE;QACL,OAAO,EAAE,eAAe;QACxB,gBAAgB,EAAGyH,IAA4B,IAAK,IAAI,CAACqwC,EAAE,CAAC,QAAQ,EAAE,WAAW,EAAEzM,CAAC,IAAK5jC,IAAI,CAACuW,KAAK,EAAE,GAAGqtB,CAAC,GAAG,CAAC,GAAI,IAAI,CAAC;QACtH,oBAAoB,EAAE,CAAC;QACvB,cAAc,EAAE,CAAC;;;;;;;;;;;;;;;MAgBlB;KACF,EAAE;MACDuK,QAAQ,EAAE,mBAAmB;MAC7B51C,KAAK,EAAE;QACL,eAAe,EAAE,CAAC;QAClB,gBAAgB,EAAGyH,IAA4B,IAAK,IAAI,CAACqwC,EAAE,CAAC,QAAQ,EAAE,WAAW,EAAEzM,CAAC,IAAK5jC,IAAI,CAACuW,KAAK,EAAE,GAAGqtB,CAAC,GAAG,CAAC,GAAG,EAAE,GAAI,IAAI;MAC3H;KACF,EAAE;MACDuK,QAAQ,EAAE,WAAW;MACrB51C,KAAK,EAAE;QACL,oBAAoB,EAAE,CAAC;QACvB,OAAO,EAAE,iBAAiB;;QAE1B,eAAe,EAAE,MAAM;QACvB,cAAc,EAAE,CAAC;QAEjB,gBAAgB,EAAGyH,IAA4B,IAC7C,IAAI,CAACqwC,EAAE,CAAC,QAAQ,EAAE,WAAW,EAAEzM,CAAC,IAAI,IAAI,CAACyM,EAAE,CAAC,MAAM,EAAE,WAAW,EAAEO,EAAE,IAAK5wC,IAAI,CAACuW,KAAK,EAAE,GAAGqtB,CAAC,GAAG,CAAC,GAAGgN,EAAE,GAAG,CAAC,GAAI,IAAI,CAAC;MACjH;IACF,GACD;MACEzC,QAAQ,EAAE,cAAc;MACxB51C,KAAK,EAAE;QACL,kBAAkB,EAAE,IAAI,CAACuM,CAAC,CAAC,SAAS,EAAE,MAAM,CAAC;QAC7C,eAAe,EAAE,EAAE;QACnB,cAAc,EAAE,IAAI,CAACA,CAAC,CAAC,SAAS,EAAE,QAAQ,CAAC;;QAE3C,iBAAiB,EAAE,QAAQ;QAC3B,cAAc,EAAE,IAAI,CAACurC,EAAE,CAAC,QAAQ,EAAE,WAAW,EAAEzM,CAAC,IAAI,CAAC,GAAGA,CAAC;MAC1D;IACF,GACD;MACEuK,QAAQ,EAAE,0BAA0B;MACpC51C,KAAK,EAAE;QACL,OAAO,EAAE,WAAW;QACpB,gBAAgB,EAAGyH,IAA4B,IAC7C,IAAI,CAACqwC,EAAE,CAAC,QAAQ,EAAE,WAAW,EAAEzM,CAAC,IAAI,GAAG5jC,IAAI,CAACuW,KAAK,EAAE,GAAG,CAAC,CAAC,GAAGqtB,CAAC,GAAG,EAAE,IAAI,CAAC,IAAI;MAE7E;IACF,GACD;MACEuK,QAAQ,EAAE,kBAAkB;MAC5B51C,KAAK,EAAE;;QAEL,eAAe,EAAE,KAAK;QACtB,OAAO,EAAE,iBAAiB;QAC1B,gBAAgB,EAAGyH,IAA4B,IAC7C,IAAI,CAACqwC,EAAE,CAAC,QAAQ,EAAE,WAAW,EAAEzM,CAAC,IAAI,GAAG5jC,IAAI,CAACuW,KAAK,EAAE,GAAG,CAAC,CAAC,GAAGqtB,CAAC,GAAG,EAAE,IAAI,CAAC,IAAI;MAE7E;KACF,EAAE;MACDuK,QAAQ,EAAE,sBAAsB;MAChC51C,KAAK,EAAE;QACL,cAAc,EAAE,IAAI,CAACuM,CAAC,CAAC,QAAQ,EAAE,kBAAkB,CAAC;QACpD,OAAO,EAAE,IAAI,CAACA,CAAC,CAAC,QAAQ,EAAE,kBAAkB;MAC7C;KACF,EAAE;MACDqpC,QAAQ,EAAE,mBAAmB;MAC7B51C,KAAK,EAAE;QACL,kBAAkB,EAAE,IAAI,CAACuM,CAAC,CAAC,cAAc,EAAE,MAAM,CAAC;QAClD,OAAO,EAAE;MACV;IACF,GAGD;MACEqpC,QAAQ,EAAE,eAAe;MACzB51C,KAAK,EAAE;QACL,OAAO,EAAE,IAAI,CAAC83C,EAAE,CAAC,QAAQ,EAAE,WAAW,EAAEzM,CAAC,IAAIA,CAAC,GAAG,CAAC,CAAC;QACnD,QAAQ,EAAE,IAAI,CAACyM,EAAE,CAAC,QAAQ,EAAE,WAAW,EAAEzM,CAAC,IAAIA,CAAC,GAAG,CAAC,CAAC;QACpD,OAAO,EAAE,iBAAiB;QAC1B,aAAa,EAAE,QAAQ;QACvB,aAAa,EAAE,QAAQ;QACvB,cAAc,EAAE,IAAI,CAAC9+B,CAAC,CAAC,QAAQ,EAAE,WAAW,CAAC;QAC7C,cAAc,EAAE,IAAI,CAACA,CAAC,CAAC,QAAQ,EAAE,WAAW,CAAC;QAC7C,OAAO,EAAE,IAAI,CAACA,CAAC,CAAC,QAAQ,EAAE,WAAW,CAAC;QACtC,kBAAkB,EAAE,IAAI,CAACA,CAAC,CAAC,QAAQ,EAAE,SAAS;MAC/C;KACF,EAAE;MACDqpC,QAAQ,EAAE,6BAA6B;MACvC51C,KAAK,EAAE;QACL,OAAO,EAAE,mBAAmB;QAC5B,aAAa,EAAE,GAAG;QAClB,aAAa,EAAE,KAAK;QACpB,eAAe,EAAE,CAAC;MACnB;KACF,EAAE;MACD41C,QAAQ,EAAE,qBAAqB;MAC/B51C,KAAK,EAAE;QACL,cAAc,EAAE,IAAI,CAAC83C,EAAE,CAAC,QAAQ,EAAE,WAAW,EAAEzM,CAAC,IAAIA,CAAC,GAAG,CAAC,CAAC;QAC1D,cAAc,EAAE,IAAI,CAAC9+B,CAAC,CAAC,QAAQ,EAAE,WAAW;MAC7C;KACF,EAAE;MACDqpC,QAAQ,EAAE,wBAAwB;MAClC51C,KAAK,EAAE;QACL,cAAc,EAAE,IAAI,CAAC83C,EAAE,CAAC,QAAQ,EAAE,WAAW,EAAEzM,CAAC,IAAIA,CAAC,GAAG,GAAG,CAAC;QAC5D,cAAc,EAAE,IAAI,CAAC9+B,CAAC,CAAC,QAAQ,EAAE,YAAY;MAC9C;KACF,EAAE;MACDqpC,QAAQ,EAAE,oBAAoB;MAC9B51C,KAAK,EAAE;;QAEL,eAAe,EAAE,IAAI,CAAC83C,EAAE,CAAC,QAAQ,EAAE,WAAW,EAAEzM,CAAC,IAAIA,CAAC,GAAG,GAAG,CAAC;QAC7D,eAAe,EAAE,IAAI,CAAC9+B,CAAC,CAAC,QAAQ,EAAE,MAAM;MACzC;KACF,EAAE;MACDqpC,QAAQ,EAAE,kBAAkB;MAC5B51C,KAAK,EAAE;QACL,OAAO,EAAE,SAAS;QAClB,kBAAkB,EAAE,IAAI,CAACuM,CAAC,CAAC,QAAQ,EAAE,WAAW;MACjD;KACF,EAAE;MACDqpC,QAAQ,EAAE,mBAAmB;MAC7B51C,KAAK,EAAE;QACL,OAAO,EAAE,SAAS;QAClB,cAAc,EAAE,QAAQ;QACxB,cAAc,EAAE,IAAI,CAAC83C,EAAE,CAAC,QAAQ,EAAE,WAAW,EAAEzM,CAAC,IAAI,CAAC,GAAGA,CAAC;MAC1D;KACF,EAAE;MACDuK,QAAQ,EAAE,gBAAgB;MAC1B51C,KAAK,EAAE;QACL,OAAO,EAAE,GAAG;QACZ,aAAa,EAAE,QAAQ;QACvB,eAAe,EAAE,CAAC;QAClB,aAAa,EAAE;MAChB;KACF,EAAE;MACD41C,QAAQ,EAAE,cAAc;MACxB51C,KAAK,EAAE;QACL,kBAAkB,EAAEyxC,YAAY,CAAC,IAAI,CAACh/C,UAAU,CAAC;QACjD,gBAAgB,EAAE,OAAO;QACzB,mBAAmB,EAAE,MAAM;QAC3B,kBAAkB,EAAE;MACrB;KACF,EAAE;MACDmjD,QAAQ,EAAE,uBAAuB;MACjC51C,KAAK,EAAE;QACL,cAAc,EAAE,QAAQ;;QAExB,qBAAqB,EAAE,IAAI,CAAC83C,EAAE,CAAC,QAAQ,EAAE,WAAW,EAAEzM,CAAC,IAAI,CAACA,CAAC,EAAEA,CAAC,GAAG,CAAC,CAAC,CAAC;QACtE,YAAY,EAAE;MACf;IACF;;;;;;;;;;;;;;;;;;;;IAwBD;MACEuK,QAAQ,EAAE,MAAM;MAChB51C,KAAK,EAAE;QACL,aAAa,EAAE,UAAU;QACzB,UAAU,EAAE,OAAO;QACnB,iBAAiB,EAAE,iBAAiB;QACpC,aAAa,EAAE,GAAG;QAElB,OAAO,EAAE,IAAI,CAACuM,CAAC,CAAC,QAAQ,EAAE,WAAW,CAAC;QACtC,OAAO,EAAE,IAAI,CAACA,CAAC,CAAC,QAAQ,EAAE,WAAW,CAAC;QACtC,YAAY,EAAE,IAAI,CAACA,CAAC,CAAC,QAAQ,EAAE,WAAW,CAAC;QAC3C,oBAAoB,EAAE,IAAI,CAACA,CAAC,CAAC,QAAQ,EAAE,WAAW,CAAC;QACnD,wBAAwB,EAAE,IAAI,CAACA,CAAC,CAAC,QAAQ,EAAE,WAAW,CAAC;QACvD,wBAAwB,EAAE,IAAI,CAACA,CAAC,CAAC,QAAQ,EAAE,WAAW,CAAC;QACvD,oBAAoB,EAAE,IAAI,CAACA,CAAC,CAAC,QAAQ,EAAE,WAAW,CAAC;;QAEnD,oBAAoB,EAAE,MAAM;;QAE5B,oBAAoB,EAAE;MACvB;KACF,EAAE;MACDqpC,QAAQ,EAAE,cAAc;MACxB51C,KAAK,EAAE;QACL,OAAO,EAAE,IAAI,CAACuM,CAAC,CAAC,QAAQ,EAAE,UAAU,CAAC;QACrC,YAAY,EAAE,IAAI,CAACA,CAAC,CAAC,QAAQ,EAAE,UAAU,CAAC;QAC1C,cAAc,EAAE,IAAI,CAACA,CAAC,CAAC,QAAQ,EAAE,UAAU,CAAC;QAC5C,oBAAoB,EAAE,IAAI,CAACA,CAAC,CAAC,QAAQ,EAAE,UAAU,CAAC;QAClD,oBAAoB,EAAE,IAAI,CAACA,CAAC,CAAC,QAAQ,EAAE,UAAU;MAClD;KACF,EAAE;MACDqpC,QAAQ,EAAE,YAAY;MACtB51C,KAAK,EAAE;QACL,YAAY,EAAE,IAAI,CAACuM,CAAC,CAAC,QAAQ,EAAE,WAAW,CAAC;QAC3C,OAAO,EAAE,IAAI,CAACurC,EAAE,CAAC,QAAQ,EAAE,WAAW,EAAEzM,CAAC,IAAIA,CAAC,GAAG,GAAG,CAAC;QACrD,aAAa,EAAE,CAAC;QAChB,oBAAoB,EAAE,IAAI,CAAC9+B,CAAC,CAAC,QAAQ,EAAE,WAAW,CAAC;QACnD,oBAAoB,EAAE,IAAI,CAACA,CAAC,CAAC,QAAQ,EAAE,WAAW,CAAC;;QAEnD,oBAAoB,EAAE,KAAK;;QAE3B,oBAAoB,EAAE,KAAK;QAC3B,SAAS,EAAE;MACZ;KACF,EAAE;MACDqpC,QAAQ,EAAE,eAAe;MACzB51C,KAAK,EAAE;QACL,YAAY,EAAE,IAAI,CAACuM,CAAC,CAAC,QAAQ,EAAE,YAAY,CAAC;QAC5C,OAAO,EAAE,IAAI,CAACurC,EAAE,CAAC,QAAQ,EAAE,WAAW,EAAEzM,CAAC,IAAIA,CAAC,GAAG,CAAC,CAAC;QACnD,aAAa,EAAE,CAAC;QAChB,oBAAoB,EAAE,IAAI,CAAC9+B,CAAC,CAAC,QAAQ,EAAE,YAAY,CAAC;QACpD,oBAAoB,EAAE,IAAI,CAACA,CAAC,CAAC,QAAQ,EAAE,YAAY,CAAC;;QAEpD,oBAAoB,EAAE,KAAK;;QAE3B,oBAAoB,EAAE,KAAK;QAC3B,SAAS,EAAE;MACZ;IACF,GACD;MACEqpC,QAAQ,EAAE,kBAAkB;MAC5B51C,KAAK,EAAE;QAAC,iBAAiB,EAAE,gBAAgB;QAAE,iBAAiB,EAAE;MAAiB;IAClF,GACC;MACA41C,QAAQ,EAAE,iBAAiB;MAC3B51C,KAAK,EAAE;QAAC,oBAAoB,EAAE;MAAU;KACzC,EAAE;MACD41C,QAAQ,EAAE,gBAAgB;MAC1B51C,KAAK,EAAE;QACL,oBAAoB,EAAE,QAAQ;QAC9B,mBAAmB,EAAE,QAAQ;QAC7B,oBAAoB,EAAE,IAAI,CAACuM,CAAC,CAAC,QAAQ,EAAE,UAAU;MAClD;KACF,EAAE;MACDqpC,QAAQ,EAAE,0BAA0B;MACpC51C,KAAK,EAAE;QACL,oBAAoB,EAAE,UAAU;QAChC,mBAAmB,EAAE,QAAQ;QAC7B,oBAAoB,EAAE,IAAI,CAACuM,CAAC,CAAC,QAAQ,EAAE,UAAU;MAClD;KACF,EAAE;MACDqpC,QAAQ,EAAE,0BAA0B;MACpC51C,KAAK,EAAE;QACL,oBAAoB,EAAE,KAAK;QAC3B,UAAU,EAAE,MAAM;QAClB,iBAAiB,EAAE,gBAAgB;QACnC,oBAAoB,EAAE,IAAI,CAACuM,CAAC,CAAC,QAAQ,EAAE,UAAU;MAClD;KACF,EAAE;MACDqpC,QAAQ,EAAE,oBAAoB;MAC9B51C,KAAK,EAAE;QAAC,oBAAoB,EAAE,QAAQ;QAAE,YAAY,EAAE,QAAQ;QAAE,mBAAmB,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC;QAAE,SAAS,EAAE;MAAG;KAC7G,EAAE;MACD41C,QAAQ,EAAE,yBAAyB;MACnC51C,KAAK,EAAE;QACL,uBAAuB,EAAE,IAAI,CAACuM,CAAC,CAAC,QAAQ,EAAE,SAAS,CAAC;QACpD,yBAAyB,EAAE,CAAC;QAC5B,mBAAmB,EAAE,IAAI,CAACurC,EAAE,CAAC,QAAQ,EAAE,WAAW,EAAEzM,CAAC,IAAIA,CAAC,GAAG,CAAC,CAAC;QAC/D,qBAAqB,EAAE,CAAC;QACxB,mBAAmB,EAAE,IAAI,CAAC9+B,CAAC,CAAC,QAAQ,EAAE,WAAW,CAAC;QAClD,uBAAuB,EAAE,gBAAgB;QACzC,yBAAyB,EAAE,IAAI,CAACurC,EAAE,CAAC,QAAQ,EAAE,WAAW,EAAEzM,CAAC,IAAIA,CAAC,GAAG,IAAI;MACxE;KACF,EAAE;MACDuK,QAAQ,EAAE,kCAAkC;MAC5C51C,KAAK,EAAE;QACL,cAAc,EAAE,qBAAqB;QACrC,oBAAoB,EAAE;MACvB;KACF,EAAE;MACD41C,QAAQ,EAAE,kCAAkC;MAC5C51C,KAAK,EAAE;QACL,cAAc,EAAE,qBAAqB;QACrC,oBAAoB,EAAE;MACvB;KACF,EAAE;MACD41C,QAAQ,EAAE,qBAAqB;MAC/B51C,KAAK,EAAE;;QAEL,gBAAgB,EAAE,aAAa;QAC/B,kBAAkB,EAAE,IAAI,CAACuM,CAAC,CAAC,QAAQ,EAAE,SAAS,CAAC;QAC/C,kBAAkB,EAAE,IAAI,CAACurC,EAAE,CAAC,QAAQ,EAAE,SAAS,EAAEzW,CAAC,IAAIA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG;MACpE;KACF,EAAE;MACDuU,QAAQ,EAAE,WAAW;MACrB51C,KAAK,EAAE;;QAEL,gBAAgB,EAAE,IAAI,CAACuM,CAAC,CAAC,QAAQ,EAAE,MAAM,CAAC;QAC1C,kBAAkB,EAAE,EAAE;QACtB,kBAAkB,EAAE;MACrB;KACF,EAAE;MACDqpC,QAAQ,EAAE,gBAAgB;MAC1B51C,KAAK,EAAE;;QAEL,aAAa,EAAE,gBAAgB;QAC/B,mBAAmB,EAAE,iBAAiB;QACtC,iBAAiB,EAAE,eAAe;QAClC,gBAAgB,EAAE,EAAE;QACpB,aAAa,EAAE,kBAAkB;;QAEjC,gBAAgB,EAAE;MACnB;KACF,EAAE;MACD41C,QAAQ,EAAE,uBAAuB;MACjC51C,KAAK,EAAE;QACL,iBAAiB,EAAE;MACpB;KACF,EAAE;MACD41C,QAAQ,EAAE,uBAAuB;MACjC51C,KAAK,EAAE;QACL,iBAAiB,EAAE;MACpB;KACF,EAAE;MACD41C,QAAQ,EAAE,oBAAoB;MAC9B51C,KAAK,EAAE;QACL,cAAc,EAAE,mBAAmB;QACnC,sBAAsB,EAAE,CAAC,EAAE;QAC3B,aAAa,EAAE;MAChB;KACF,EAAE;MACD41C,QAAQ,EAAE,cAAc;MACxB51C,KAAK,EAAE;QACL,OAAO,EAAE,aAAa;QACtB,eAAe,EAAE,EAAE;QACnB,aAAa,EAAE;MAChB;IACF,GACD;MACE41C,QAAQ,EAAE,iBAAiB;MAC3B51C,KAAK,EAAE;QACL,YAAY,EAAE,IAAI,CAACuM,CAAC,CAAC,YAAY,EAAE,QAAQ,CAAC;QAC5C,YAAY,EAAE,QAAQ;QACtB,mBAAmB,EAAE,CAAC,CAAC,EAAE,CAAC;MAC3B;IACF,GACD;MACEqpC,QAAQ,EAAE,yBAAyB;MACnC51C,KAAK,EAAE;QACL,YAAY,EAAE,IAAI,CAACuM,CAAC,CAAC,QAAQ,EAAE,kBAAkB;MAClD;IACF,GACD;MACEqpC,QAAQ,EAAE,uBAAuB;MACjC51C,KAAK,EAAE;QACL,YAAY,EAAE,IAAI,CAACuM,CAAC,CAAC,QAAQ,EAAE,WAAW;MAC3C;IACF,GACD;MACEqpC,QAAQ,EAAE,qBAAqB;MAC/B51C,KAAK,EAAE;;QAEL,oBAAoB,EAAE;MACvB;IACF,GACD;MACE41C,QAAQ,EAAE,eAAe;MACzB51C,KAAK,EAAE;QACL,OAAO,EAAGgD,CAAyB,IAAK9Q,OAAO,CAAC,IAAI,CAACqa,CAAC,CAAC,QAAQ,EAAEvJ,CAAC,CAACO,IAAI,CAAC,YAAY,CAAC,CAAC;MACvF;KACF,EAAE;MACDqyC,QAAQ,EAAE,YAAY;MACtB51C,KAAK,EAAE;QACLm9B,KAAK,EAAE,UAAU;QACjB,oBAAoB,EAAE,CAAC;QACvB,oBAAoB,EAAE,OAAO;QAC7B,sBAAsB,EAAE,CAAC;QACzBhnB,KAAK,EAAE;MACR;IACF,GACD;MACEy/B,QAAQ,EAAE,QAAQ;MAClB51C,KAAK,EAAE;QACL,OAAO,EAAE,IAAI,CAACuM,CAAC,CAAC,QAAQ,EAAE,SAAS,CAAC;QACpC,oBAAoB,EAAE,CAAC;QACvB,oBAAoB,EAAE,IAAI,CAACA,CAAC,CAAC,QAAQ,EAAE,WAAW,CAAC;QACnD,sBAAsB,EAAE;MACzB;IACF,GACD;MACEqpC,QAAQ,EAAE,iBAAiB;MAC3B51C,KAAK,EAAE;QACL,kBAAkB,EAAE,IAAI,CAACuM,CAAC,CAAC,QAAQ,EAAE,WAAW;MACjD;IACF,GAED;MACEqpC,QAAQ,EAAE,mBAAmB;MAC7B51C,KAAK,EAAE;QACL,OAAO,EAAE,mBAAmB;QAC5B,aAAa,EAAE,QAAQ;QACvB,aAAa,EAAE,QAAQ;QACvB,WAAW,EAAE,EAAE;QACf,aAAa,EAAE,GAAG;QAClB,oBAAoB,EAAE,CAAC;QACvB,OAAO,EAAE,IAAI,CAACuM,CAAC,CAAC,QAAQ,EAAE,WAAW;MACtC;IACF,GACD;MACEqpC,QAAQ,EAAE,yBAAyB;MACnC51C,KAAK,EAAE;QACL,oBAAoB,EAAE,CAAC;QACvB,gBAAgB,EAAE,CAAC;QACnBge,KAAK,EAAE,EAAE;QACToM,MAAM,EAAE,EAAE;QACVgT,KAAK,EAAE;MACR;IACF,GACD;MACEwY,QAAQ,EAAE,uCAAuC;MACjD51C,KAAK,EAAE;QACL,OAAO,EAAE,mBAAmB;QAC5B,aAAa,EAAE;MAChB;IACF,GACD;MACE41C,QAAQ,EAAE,UAAU;MACpB51C,KAAK,EAAE;QACL,SAAS,EAAE;MACZ;IACF,EACF;;EAGH4H,UAAUA,CAAA;IACR,IAAI,CAACwnC,YAAY,CAAC8B,KAAK,CAACjrB,KAAM,EAAE;IAChCurB,iBAAiB,EAAE;;EAGrBljC,MAAMA,CAAC3Q,EAAkB;IACvB,IAAI,CAACiK,UAAU,EAAE;IACjBjK,EAAE,CAACqC,KAAK,CAAC,IAAI,CAAC8G,aAAa,EAAE,CAAC;IAC9B,IAAI,CAACixC,oBAAoB,EAAE;IAC3B,IAAI,CAACxzC,aAAa,CAACE,WAAW,EAAE;;EAGlC3B,YAAYA,CAACnF,EAAkB,EAAEzB,OAAc;IAC7C2P,OAAO,CAACC,GAAG,CAACnO,EAAE,EAAEzB,OAAO,CAAC;IAExB,IAAI,CAACi0C,cAAc,GAAGj0C,OAAO;IAE7B+0C,cAAc,EAAE;IAChB,IAAI,CAAC3iC,MAAM,CAAC3Q,EAAE,CAAC;;AAElB;;;;;AC9xBD;;AAEG;;ACFH;;AAEG","sources":["./projects/reactome-cytoscape-style/src/lib/properties-utils.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/details/details.component.ts","./src/app/details/details.component.html","./src/app/diagram-home/diagram-home.component.ts","./src/app/diagram-home/diagram-home.component.html","./src/app/diagram-iterator/diagram-iterator.component.ts","./src/app/diagram-iterator/diagram-iterator.component.html","./src/app/diagram/diagram.component.ts","./src/app/diagram/diagram.component.html","./src/app/event-hierarchy/event-hierarchy.component.ts","./src/app/event-hierarchy/event-hierarchy.component.html","./src/app/guard/legacy.guard.ts","./src/app/interactors/custom-interactor-dialog/custom-interactor-dialog.component.ts","./src/app/interactors/custom-interactor-dialog/custom-interactor-dialog.component.html","./src/app/interactors/interactors.component.ts","./src/app/interactors/interactors.component.html","./src/app/interactors/layout/interactors-layout.ts","./src/app/interactors/model/interactor.model.ts","./src/app/interactors/services/interactor.service.ts","./src/app/services/analysis.service.ts","./src/app/services/dark.service.ts","./src/app/services/diagram-state.service.ts","./src/app/services/diagram.service.ts","./src/app/services/event.service.ts","./src/app/services/species.service.ts","./src/app/services/utils.ts","./src/app/species/species.component.ts","./src/app/species/species.component.html","./src/app/utils/JSOGDeserializer.ts","./src/app/viewport/viewport.component.ts","./src/app/viewport/viewport.component.html","./src/environments/environment.development.ts","./src/main.ts","./projects/reactome-cytoscape-style/src/lib/drawer/shape/gene-shape.ts","./projects/reactome-cytoscape-style/src/lib/drawer/shape/molecule-shape.ts","./projects/reactome-cytoscape-style/src/lib/drawer/shape/protein-shape.ts","./projects/reactome-cytoscape-style/src/lib/drawer/shape/rna-shape.ts","./projects/reactome-cytoscape-style/src/lib/drawer/shape/gee-shape.ts","./projects/reactome-cytoscape-style/src/lib/drawer/shape/complex-shape.ts","./projects/reactome-cytoscape-style/src/lib/drawer/shape/entity-sets-shape.ts","./projects/reactome-cytoscape-style/src/lib/drawer/shape/cell-shape.ts","./projects/reactome-cytoscape-style/src/lib/drawer/shape/interacting-pathway-shape.ts","./projects/reactome-cytoscape-style/src/lib/drawer/shape/disease-interactor-shape.ts","./projects/reactome-cytoscape-style/src/lib/drawer/shape/sub-pathway-shape.ts","./projects/reactome-cytoscape-style/src/lib/drawer/image-builder.ts","./projects/reactome-cytoscape-style/src/lib/properties.ts","./projects/reactome-cytoscape-style/src/lib/model/reactome-event.model.ts","./projects/reactome-cytoscape-style/src/lib/interactivity.ts","./projects/reactome-cytoscape-style/src/lib/style.ts","./projects/reactome-cytoscape-style/src/public-api.ts","./projects/reactome-cytoscape-style/src/reactome-cytoscape-style.ts"],"sourcesContent":["import {Properties} from \"./properties\";\n\nexport type Provider<T> = () => T;\n\nexport type Property<T> = T | Provider<T>;\n\n/**\n * This is a guard function to check if a property is a Provider function, or a direct value\n *\n * @param property The value to check\n * @return true if is a Provider function\n */\nexport function isProvider<T>(property: Property<T>): property is Provider<T> {\n  return (property as Provider<T>).apply !== undefined;\n}\n\n/**\n * This function extracts the value from a property, and if the property is a Provider<T>, it calls the property function to get the actual value.\n *\n * @param property A value of type Property<T>.\n */\nexport function extract<T>(property: Property<T>): T {\n  return isProvider(property) ? property() : property;\n}\n\nexport type PropertiesType = {\n  [k: string]: Property<any>\n}\n\nexport type Defaultable<T, K extends keyof T = never> = T & {\n  setDefault<KA extends keyof T, VA extends T[KA]>(key: KA, defaultValue: VA): Defaultable<T, K | KA>;\n} & {\n  [P in K]-?: T[P];\n}\n\n\nexport function defaultable<T>(object: T): Defaultable<T> {\n  const defaultable = (object) as Defaultable<T>;\n\n  defaultable.setDefault = function <K extends keyof T, KA extends keyof T, VA extends T[KA]>(this: Defaultable<T, K>, key: KA, defaultValue: VA): Defaultable<T, K | KA> {\n    if (!object[key]) object[key] = defaultValue;\n    return defaultable as Defaultable<T, K | KA>;\n  };\n\n  return defaultable;\n}\n\nexport const propertyExtractor = (properties: Properties) => <G extends keyof Properties, K extends keyof Properties[G]>(group: G, key: K) => properties[group][key]\nexport const propertyMapper = (properties: Properties) => <G extends keyof Properties, K extends keyof Properties[G], T extends Properties[G][K] extends Property<infer X> ? X : never, M extends (t: T) => any>(group: G, key: K, mapper: M) => mapper(extract(properties[group][key]))\n\n\n","import {RouterModule, Routes} from \"@angular/router\";\nimport {NgModule} from \"@angular/core\";\nimport {DiagramComponent} from \"./diagram/diagram.component\";\nimport {DiagramIteratorComponent} from \"./diagram-iterator/diagram-iterator.component\";\nimport {legacyGuard} from \"./guard/legacy.guard\";\nimport {ViewportComponent} from \"./viewport/viewport.component\";\nimport {DiagramHomeComponent} from \"./diagram-home/diagram-home.component\";\n\nexport const routes: Routes = [\n  {path: 'iterate', component: DiagramIteratorComponent},\n  {path: 'iterate/:id', component: DiagramIteratorComponent},\n  {path: 'diagram/:id', component: DiagramHomeComponent},\n  {path: 'PathwayBrowser/:id', component: ViewportComponent},\n  {path: ':id', component: ViewportComponent},\n  {path: '**', component: ViewportComponent,  canActivate: [legacyGuard], runGuardsAndResolvers: 'always'}\n]\n\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, {bindToComponentInputs: true})],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import {Component} from '@angular/core';\nimport {DomSanitizer} from \"@angular/platform-browser\";\nimport {MatIconRegistry} from \"@angular/material/icon\";\n\n@Component({\n  selector: 'cr-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'PathwayBrowser'\n\n  icons = [\n    {name: 'species', route: 'species-icon'},\n    {name: 'overlay', route: 'overlay-icon'},\n    {name: 'arrow-down', route: 'arrow-down'},\n    {name: 'arrow-right', route: 'arrow-right'},\n    {name: 'pathway-ehld', route: 'pathway-ehld'},\n    {name: 'pathway', route: 'pathway'},\n    {name: 'reaction', route: 'reaction'},\n    {name: 'transition', route: 'transition'},\n    {name: 'home', route: 'home'}\n  ];\n\n  species = [\n    {name: '9913', route: 'bos-taurus'},\n    {name: '6239', route: 'caenorhabditis-elegans'},\n    {name: '9615', route: 'canis-familiaris'},\n    {name: '7955', route: 'danio-rerio'},\n    {name: '44689', route: 'dictyostelium-discoideum'},\n    {name: '7227', route: 'drosophila-melanogaster'},\n    {name: '9031', route: 'gallus-gallus'},\n    {name: '9606', route: 'homo-sapiens'},\n    {name: '10090', route: 'mus-musculus'},\n    {name: '1773', route: 'mycobacterium-tuberculosis'},\n    {name: '5833', route: 'plasmodium-falciparum'},\n    {name: '10116', route: 'rattus-norvegicus'},\n    {name: '4932', route: 'saccharomyces-cerevisiae'},\n    {name: '4896', route: 'schizosaccharomyces-pombe'},\n    {name: '9823', route: 'sus-scrofa'},\n    {name: '8364', route: 'xenopus-tropicalis'}\n  ]\n\n  constructor(private matIconRegistry: MatIconRegistry, private domSanitizer: DomSanitizer) {\n    this.loadIcons();\n  }\n\n  loadIcons(): void {\n    this.icons.forEach(icon => {\n      this.matIconRegistry.addSvgIcon(icon.name, this.domSanitizer.bypassSecurityTrustResourceUrl(`assets/icons/${icon.route}.svg`));\n    });\n\n    this.species.forEach(icon => {\n      this.matIconRegistry.addSvgIcon(icon.name, this.domSanitizer.bypassSecurityTrustResourceUrl(`assets/icons/species/${icon.route}.svg`));\n    });\n  }\n\n}\n","<router-outlet></router-outlet>\n","import {NgModule} from '@angular/core';\nimport {BrowserModule} from '@angular/platform-browser';\n\nimport {AppComponent} from './app.component';\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\nimport {CommonModule} from \"@angular/common\";\nimport {HttpClientModule} from \"@angular/common/http\";\nimport {DiagramComponent} from './diagram/diagram.component';\nimport {RouterOutlet} from \"@angular/router\";\nimport {AppRoutingModule} from \"./app-routing.module\";\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {MatButtonModule} from \"@angular/material/button\";\nimport {MatSlideToggleModule} from \"@angular/material/slide-toggle\";\nimport {CdkDrag, CdkDragHandle} from \"@angular/cdk/drag-drop\";\nimport {DiagramIteratorComponent} from './diagram-iterator/diagram-iterator.component';\nimport {MatInputModule} from \"@angular/material/input\";\nimport {MatSelectModule} from \"@angular/material/select\";\nimport {MatProgressSpinnerModule} from \"@angular/material/progress-spinner\";\nimport {\n  CustomInteractorDialogComponent\n} from './interactors/custom-interactor-dialog/custom-interactor-dialog.component';\nimport {MatDialogModule} from \"@angular/material/dialog\";\nimport {MatTabsModule} from \"@angular/material/tabs\";\nimport {MatCheckboxModule} from \"@angular/material/checkbox\";\nimport {MatRadioModule} from \"@angular/material/radio\";\nimport {NgxMatFileInputModule} from \"@angular-material-components/file-input\";\nimport {MatIconModule} from \"@angular/material/icon\";\nimport {MatListModule} from \"@angular/material/list\";\nimport {MatExpansionModule} from \"@angular/material/expansion\";\nimport {MatGridListModule} from \"@angular/material/grid-list\";\nimport {InteractorsComponent} from './interactors/interactors.component';\nimport {ViewportComponent} from './viewport/viewport.component';\nimport {AngularSplitModule} from \"angular-split\";\nimport {MatCardModule} from \"@angular/material/card\";\nimport {SpeciesComponent} from './species/species.component';\nimport {MatRippleModule} from \"@angular/material/core\";\nimport {EventHierarchyComponent} from './event-hierarchy/event-hierarchy.component';\nimport {MatTreeModule} from \"@angular/material/tree\";\nimport {MatTooltipModule} from \"@angular/material/tooltip\";\nimport { DetailsComponent } from './details/details.component';\nimport {MatMenuModule} from \"@angular/material/menu\";\nimport { DiagramHomeComponent } from './diagram-home/diagram-home.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    DiagramComponent,\n    DiagramIteratorComponent,\n    CustomInteractorDialogComponent,\n    InteractorsComponent,\n    ViewportComponent,\n    SpeciesComponent,\n    EventHierarchyComponent,\n    DetailsComponent,\n    DiagramHomeComponent\n  ],\n    imports: [\n        BrowserModule,\n        FormsModule,\n        CommonModule,\n        HttpClientModule,\n        RouterOutlet,\n        AppRoutingModule,\n        // NoopAnimationsModule,\n        MatButtonModule,\n        MatSlideToggleModule,\n        CdkDragHandle,\n        CdkDrag,\n        MatInputModule,\n        MatSelectModule,\n        ReactiveFormsModule,\n        MatProgressSpinnerModule,\n        BrowserAnimationsModule,\n        MatDialogModule,\n        MatTabsModule,\n        MatCheckboxModule,\n        MatRadioModule,\n        NgxMatFileInputModule,\n        MatIconModule,\n        MatListModule,\n        MatExpansionModule,\n        MatGridListModule,\n        AngularSplitModule,\n        MatCardModule,\n        MatIconModule,\n        MatRippleModule,\n        MatTreeModule,\n        MatTooltipModule,\n        MatMenuModule\n    ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","import {AfterViewInit, Component} from '@angular/core';\nimport {EventService} from \"../services/event.service\";\nimport {DiagramStateService} from \"../services/diagram-state.service\";\nimport {Event} from \"../model/event.model\";\nimport {UntilDestroy, untilDestroyed} from \"@ngneat/until-destroy\";\n\n@Component({\n  selector: 'cr-details',\n  templateUrl: './details.component.html',\n  styleUrls: ['./details.component.scss']\n})\n@UntilDestroy()\nexport class DetailsComponent implements AfterViewInit {\n\n  obj!: Event;\n\n  constructor(private eventService: EventService, private state: DiagramStateService) {\n  }\n\n  ngAfterViewInit(): void {\n    this.eventService.selectedObj$.pipe(untilDestroyed(this)).subscribe(event => {\n      this.obj = event;\n    });\n  }\n\n}\n","<div *ngIf=\"obj\">\n  <p>{{ obj.dbId }} {{ obj.displayName }}  {{ obj.schemaClass }} </p>\n\n  <p>Enhanced data testing： summation data</p>\n  <p style=\"color: #2d518d\" *ngIf=\"obj.summation\"> {{ obj.summation[0].displayName }}</p>\n\n  <p>Enhanced data testing： created data</p>\n  <p style=\"color: #0C9509\" *ngIf=\"obj.created\"> {{ obj.created.displayName }}</p>\n  <p style=\"color: #0C9509\" *ngIf=\"obj.created\"> {{ obj.created.dateTime }}</p>\n</div>\n","import {Component, Input} from '@angular/core';\nimport {AnalysisService} from \"../services/analysis.service\";\nimport {DarkService} from \"../services/dark.service\";\nimport {InteractorService} from \"../interactors/services/interactor.service\";\n\n@Component({\n  selector: 'cr-diagram-home',\n  templateUrl: './diagram-home.component.html',\n  styleUrls: ['./diagram-home.component.scss'],\n})\nexport class DiagramHomeComponent {\n\n  @Input('id') diagramId: string = '';\n\n\n  constructor(public analysis: AnalysisService, public dark: DarkService, public interactor: InteractorService) {\n  }\n\n  clearAnalysis() {\n    this.analysis.clearAnalysis()\n  }\n\n}\n","<div class=\"container\">\n  <div class=\"controls\">\n    <button mat-stroked-button [matMenuTriggerFor]=\"an\">Analysis</button>\n    <mat-menu #an=\"matMenu\">\n      <button mat-menu-item (click)=\"analysis.example('uniprot').subscribe()\">UniProt</button>\n      <button mat-menu-item (click)=\"analysis.example('microarray').subscribe()\">Expression</button>\n      <button mat-menu-item (click)=\"clearAnalysis()\" *ngIf=\"analysis.result\">Remove analysis</button>\n      <!--      <button mat-menu-item>GSA</button>-->\n    </mat-menu>\n    <button mat-stroked-button [matMenuTriggerFor]=\"overlay\">Overlay</button>\n    <mat-menu #overlay=\"matMenu\">\n      <cr-interactors [cy]=\"diagram.cy\" [cys]=\"diagram.cys\"></cr-interactors>\n    </mat-menu>\n\n    <mat-slide-toggle color=\"primary\" [(ngModel)]=\"dark.isDark\">Dark mode</mat-slide-toggle>\n\n\n\n\n\n    <ng-container *ngIf=\"analysis.result\">\n      <mat-form-field style=\"width: 200px\" appearance=\"outline\" [subscriptSizing]=\"'dynamic'\">\n        <mat-label>Palette</mat-label>\n        <mat-select [(value)]=\"analysis.palette\" (selectionChange)=\"diagram.changePalette()\"\n                    [hideSingleSelectionIndicator]=\"true\">\n          <mat-select-trigger>\n            <div class=\"palette\" [style.background]=\"analysis.palette.gradient\" style=\"vertical-align: center\">\n            </div>\n          </mat-select-trigger>\n          <ng-container *ngFor=\"let group of analysis.palettes \">\n            <mat-optgroup *ngIf=\"group.valid\" style=\"align-self: center\">\n              <mat-label align=\"center\">{{ group.name }}</mat-label>\n              <mat-option *ngFor=\"let palette of group.palettes\" [value]=\"analysis.paletteOptions.get(palette)\">\n                {{ palette }}\n                <div class=\"palette option-content\" [style.background]=\"analysis.paletteOptions.get(palette)?.gradient\">\n                </div>\n              </mat-option>\n            </mat-optgroup>\n          </ng-container>\n\n        </mat-select>\n      </mat-form-field>\n\n    </ng-container>\n\n\n  </div>\n  <div class=\"diagram-container\">\n    <cr-diagram [id]=\"diagramId\" #diagram></cr-diagram>\n  </div>\n\n</div>\n\n","import {AfterViewInit, Component, ViewChild} from '@angular/core';\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {DiagramComponent} from \"../diagram/diagram.component\";\nimport {combineLatest} from \"rxjs\";\n\n@Component({\n  selector: 'cr-diagram-iterator',\n  templateUrl: './diagram-iterator.component.html',\n  styleUrls: ['./diagram-iterator.component.scss']\n})\nexport class DiagramIteratorComponent implements AfterViewInit {\n\n  @ViewChild('diagram')\n  diagram!: DiagramComponent;\n\n  diagramId: string = '';\n\n  diagramIndex: number = 0;\n  diagramIds: string[] = [];\n\n  constructor(private route: ActivatedRoute, private client: HttpClient, private router: Router) {\n  }\n\n  ngAfterViewInit(): void {\n    combineLatest([\n      this.route.params,\n      this.client.get('/assets/data/diagrams-dev-no-ehld.txt', {responseType: \"text\"})\n    ]).subscribe(([params, diagrams]) => {\n      this.diagramIds = diagrams.split('\\n').filter(s => s.length !== 0);\n      this.diagramId = this.diagramIds[0];\n    })\n  }\n\n  next() {\n    this.diagramIndex++;\n    if (this.diagramIndex > this.diagramIds.length - 1) this.diagramIndex = 0;\n    this.diagramId = this.diagramIds[this.diagramIndex];\n  }\n  previous() {\n    this.diagramIndex--;\n    if (this.diagramIndex < 0) this.diagramIndex = this.diagramIds.length - 1;\n    this.diagramId = this.diagramIds[this.diagramIndex];\n  }\n\n}\n","<div class=\"diagram-container\">\n  <cr-diagram #diagram [id]=\"diagramId\"></cr-diagram>\n</div>\n\n<div (keydown.arrowLeft)=\"previous()\" (keydown.arrowRight)=\"next()\">\n\n  <button mat-raised-button (click)=\"previous()\">Previous</button>\n  <mat-form-field>\n    <mat-label>Diagram ID</mat-label>\n    <input matInput placeholder=\"R-HSA-XXXXXXXX\" [(ngModel)]=\"diagramId\">\n  </mat-form-field>\n  <button mat-raised-button (click)=\"next()\">Next</button>\n\n</div>\n\n\n","import {AfterViewInit, Component, ElementRef, Input, OnChanges, Output, SimpleChanges, ViewChild} from '@angular/core';\nimport {DiagramService} from \"../services/diagram.service\";\nimport cytoscape from \"cytoscape\";\nimport {ReactomeEvent, ReactomeEventTypes, Style} from \"reactome-cytoscape-style\";\nimport {DarkService} from \"../services/dark.service\";\nimport {InteractorService} from \"../interactors/services/interactor.service\";\nimport {delay, distinctUntilChanged, filter, forkJoin, Observable, share, Subject, take} from \"rxjs\";\nimport {DiagramStateService} from \"../services/diagram-state.service\";\nimport {UntilDestroy} from \"@ngneat/until-destroy\";\nimport {extract} from \"../../../projects/reactome-cytoscape-style/src/lib/properties-utils\";\nimport {AnalysisService, Examples, PaletteGroup} from \"../services/analysis.service\";\nimport {Graph} from \"../model/graph.model\";\nimport {isDefined} from \"../services/utils\";\nimport {Analysis} from \"../model/analysis.model\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {InteractorsComponent} from \"../interactors/interactors.component\";\nimport {EventService} from \"../services/event.service\";\n\n\nimport {brewer} from \"chroma-js\";\nimport {group, style} from \"@angular/animations\";\nimport {MatFormField} from \"@angular/material/form-field\";\n\n\n@UntilDestroy({checkProperties: true})\n@Component({\n  selector: 'cr-diagram',\n  templateUrl: './diagram.component.html',\n  styleUrls: ['./diagram.component.scss']\n})\nexport class DiagramComponent implements AfterViewInit, OnChanges {\n  title = 'pathway-browser';\n  @ViewChild('cytoscape') cytoscapeContainer?: ElementRef<HTMLDivElement>;\n  @ViewChild('cytoscapeCompare') compareContainer?: ElementRef<HTMLDivElement>;\n  @ViewChild('legend') legendContainer?: ElementRef<HTMLDivElement>;\n  @Input('interactor') interactorsComponent?: InteractorsComponent;\n\n  comparing: boolean = false;\n\n\n  constructor(private diagram: DiagramService,\n              public dark: DarkService,\n              private interactorsService: InteractorService,\n              private state: DiagramStateService,\n              private analysis: AnalysisService,\n              private event: EventService,\n              private router: Router,\n              private route: ActivatedRoute\n  ) {\n  }\n\n  cy!: cytoscape.Core;\n  reactomeStyle!: Style;\n  cyCompare!: cytoscape.Core;\n  reactomeStyleCompare!: Style;\n  legend!: cytoscape.Core;\n\n  cys: cytoscape.Core[] = [];\n\n\n  @Input('id') diagramId: string = '';\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes['diagramId']) this.loadDiagram();\n  }\n\n\n  ngAfterViewInit(): void {\n    this.dark.$dark.subscribe(this.updateStyle.bind(this))\n\n    const container = this.cytoscapeContainer!.nativeElement;\n    const compareContainer = this.compareContainer!.nativeElement;\n    const legendContainer = this.legendContainer!.nativeElement;\n\n    Object.values(ReactomeEventTypes).forEach((type) => {\n      container.addEventListener(type, (e) => this._reactomeEvents$.next(e as ReactomeEvent))\n      compareContainer.addEventListener(type, (e) => this._reactomeEvents$.next(e as ReactomeEvent))\n      legendContainer.addEventListener(type, (e) => this._reactomeEvents$.next(e as ReactomeEvent))\n    })\n\n    this.reactomeStyle = new Style(container);\n\n    this.underlayPadding = extract(this.reactomeStyle.properties.shadow.padding)\n\n    this.diagram.getLegend()\n      .subscribe(legend => {\n        this.legend = cytoscape({\n          container: legendContainer,\n          elements: legend,\n          style: this.reactomeStyle?.getStyleSheet(),\n          layout: {name: \"preset\"},\n          boxSelectionEnabled: false\n        });\n        this.reactomeStyle?.bindToCytoscape(this.legend);\n\n        this.legend.zoomingEnabled(false);\n        this.legend.panningEnabled(false);\n        this.legend.minZoom(0)\n        const bb = this.legend.elements().boundingBox();\n        // this.ratio = bb.w / bb.h;\n      });\n\n    this.loadDiagram();\n\n  }\n\n  loadDiagram() {\n    if (!this.cytoscapeContainer) return;\n\n    const container = this.cytoscapeContainer!.nativeElement;\n\n    this.diagram.getDiagram(this.diagramId)\n      .subscribe(elements => {\n        this.comparing = elements.nodes.some(node => node.data['isFadeOut']) || elements.edges.some(edge => edge.data['isFadeOut'])\n        this.cy = cytoscape({\n          container: container,\n          elements: elements,\n          style: this.reactomeStyle?.getStyleSheet(),\n          layout: {name: \"preset\"},\n        });\n        this.cys[0] = this.cy;\n        this.reactomeStyle.bindToCytoscape(this.cy);\n        this.reactomeStyle.clearCache();\n        this.cy.on('dblclick', '.Pathway', (e) => this.router.navigate([`../${e.target.data('graph.stId')}`], {queryParamsHandling: \"preserve\", relativeTo: this.route}))\n\n        this.event.setSubpathwaysColors(new Map(\n          this.cy?.nodes('.Shadow').map(node => [node.data('reactomeId'), node.data('color')])\n        ));\n\n        this.loadCompare(elements, container);\n\n        this.avoidSideEffect( () => this.stateToDiagram());\n      })\n  }\n\n  public initialiseReplaceElements() {\n    if (this.comparing)\n      this.cy.batch(() => {\n        this.cy.elements('[!isBackground]').style('visibility', 'hidden')\n        this.cy.edges('.shadow').style('underlay-padding', 0)\n        this.lastIndex = 0;\n        this.updateReplacementVisibility();\n        this.cy.elements('.Compartment').style('visibility', 'visible')\n      })\n  }\n\n  private loadCompare(elements: cytoscape.ElementsDefinition, container: HTMLDivElement) {\n\n    const getPosition = (e: cytoscape.SingularElementArgument) => e.is('.Shadow') ? e.data('triggerPosition') : e.boundingBox().x1;\n    if (this.comparing) {\n      this.cy.elements('[!isBackground]').style('visibility', 'hidden')\n      this.replacedElements = this.cy!\n        .elements('[?replacedBy]')\n        .add('[?isCrossed]')\n        .sort((a, b) => getPosition(a) - getPosition(b))\n        .style('visibility', 'hidden')\n        .toArray();\n\n      this.replacedElementsPosition = this.replacedElements.map(getPosition);\n\n\n      this.cy.on('add', e => {\n        const addedElement = e.target;\n        if (addedElement.data('replacedBy') || addedElement.data('isCrossed')) {\n          const x = getPosition(addedElement);\n          let index = this.replacedElementsPosition.findIndex(x1 => x1 >= x);\n          if (index === -1) index = this.replacedElements.length;\n\n          this.replacedElements.splice(index, 0, addedElement);\n          this.replacedElementsPosition.splice(index, 0, x);\n          addedElement.style('visibility', 'hidden');\n        }\n      })\n\n      this.cy.on('remove', e => {\n        const removedElement = e.target;\n        const index = this.replacedElements.indexOf(removedElement);\n        if (index > -1) {\n          this.replacedElements.splice(index, 1);\n          this.replacedElementsPosition.splice(index, 1);\n        }\n      })\n\n      const compareContainer = this.compareContainer!.nativeElement;\n      this.cyCompare = cytoscape({\n        container: compareContainer,\n        elements: elements,\n        style: this.reactomeStyle?.getStyleSheet(),\n        layout: {name: \"preset\"},\n      });\n      this.cys[1] = this.cyCompare;\n\n\n      this.cyCompare.elements('[?isFadeOut]').remove();\n      this.cyCompare.elements('.Compartment').remove();\n      this.cy!.nodes('.crossed').removeClass('crossed');\n\n      this.cyCompare!.on('viewport', () => this.syncViewports(this.cyCompare, compareContainer, this.cy, container))\n      this.cy!.on('viewport', () => this.syncViewports(this.cy, container, this.cyCompare, compareContainer))\n\n      this.reactomeStyleCompare = new Style(compareContainer);\n      this.reactomeStyleCompare?.bindToCytoscape(this.cyCompare);\n      this.cyCompare.minZoom(this.cy!.minZoom())\n      this.cyCompare.maxZoom(this.cy!.maxZoom())\n\n      setTimeout(() => {\n        this.syncViewports(this.cy!, container, this.cyCompare, compareContainer)\n        this.initialiseReplaceElements();\n      })\n    }\n  }\n\n  readonly classRegex = /class:(\\w+)([!.]drug)?/\n\n  getElements(tokens: (string | number)[], cy: cytoscape.Core): cytoscape.CollectionArgument {\n    let elements: cytoscape.Collection;\n\n    elements = cy.collection()\n    tokens.forEach(token => {\n      if (typeof token === 'string') {\n        if (token.startsWith('R-')) {\n          elements = elements.or(`[graph.stId=\"${token}\"]`)\n          // Consider it as a subpathway when there are no elements found and get all reactions\n          if (elements.length === 0) {\n            let allSubpathwaysElements = elements.or('[subpathways]');\n            allSubpathwaysElements.forEach(ele => {\n              let pathwayList = ele.data('subpathways');\n              if (pathwayList.includes(token)) {\n                elements.merge(ele);\n              }\n            });\n          }\n        } else {\n          const matchArray = token.match(this.classRegex);\n          if (matchArray) {\n            const [_, clazz, drug] = matchArray;\n            if (drug === '.drug') { // Drug physical entity\n              elements = elements.or(`.${clazz}`).and('.drug');\n            } else if (drug === '!drug') { // Non drug physical entity\n              elements = elements.or(`.${clazz}`).not('.drug');\n            } else { // Reactions\n              elements = elements.or(`.${clazz}`);\n              elements = elements.or(elements.nodes('.reaction').connectedEdges());\n            }\n          } else {\n            elements = elements.or(`[acc=\"${token}\"]`)\n          }\n        }\n      } else {\n        elements = elements.or(`[acc=\"${token}\"]`).or(`[reactomeId=\"${token}\"]`)\n      }\n    });\n    return elements;\n  }\n\n  select(tokens: (string | number), cy: cytoscape.Core): cytoscape.CollectionArgument {\n    cy.elements(':selected').unselect();\n    let selected = this.getElements([tokens], cy);\n    selected.select();\n    if (\"connectedNodes\" in selected) {\n      selected = selected.add(selected.connectedNodes());\n    }\n\n    if (this._ignore) {\n      cy.animate({\n        fit: {\n          eles: selected,\n          padding: 100\n        },\n        duration: 1000,\n        easing: \"ease-in-out\"\n      })\n    }\n\n    return selected;\n  }\n\n  flag(accs: (string | number)[], cy: cytoscape.Core): cytoscape.CollectionArgument {\n    return this.flagElements(this.getElements(accs, cy), cy)\n  }\n\n  flagElements(toFlag: cytoscape.CollectionArgument, cy: cytoscape.Core): cytoscape.CollectionArgument {\n    const shadowNodes = cy.nodes('.Shadow');\n    const shadowEdges = cy.edges('[?color]');\n    const trivials = cy.elements('.trivial');\n\n    if (toFlag.nonempty()) {\n      cy.batch(() => {\n        this.setSubPathwayVisibility(false, cy);\n        cy.elements().removeClass('flag')\n        toFlag.addClass('flag')\n          .edges().style({'underlay-opacity': 1})\n      })\n\n      return toFlag\n    } else {\n      cy.batch(() => {\n        this.setSubPathwayVisibility(true, cy);\n        cy.elements().removeClass('flag');\n      })\n\n      return cy.collection()\n    }\n  }\n\n  setSubPathwayVisibility(visible: boolean, cy: cytoscape.Core) {\n    const shadowNodes = cy.nodes('.Shadow');\n    const shadowEdges = cy.edges('[?color]');\n    const trivials = cy.elements('.trivial');\n\n    if (visible) {\n      shadowNodes.style({opacity: 1})\n      trivials.style({opacity: 1})\n      shadowEdges.addClass('shadow')\n      cy.on('zoom', cy.data('reactome').interactivity.onZoom.shadow)\n      cy.data('reactome').interactivity.onZoom.shadow()\n    } else {\n      shadowNodes.style({opacity: 0})\n      shadowEdges.removeClass('shadow')\n      cy.off('zoom', cy.data('reactome').interactivity.onZoom.shadow)\n      trivials.style({opacity: 1})\n      cy.edges().style({'underlay-opacity': 0})\n    }\n  }\n\n\n  applyEvent(event: ReactomeEvent, affectedElements: cytoscape.NodeCollection | cytoscape.EdgeCollection) {\n    switch (event.type) {\n      case ReactomeEventTypes.hover:\n        affectedElements.addClass('hover');\n        break;\n      case ReactomeEventTypes.leave:\n        affectedElements.removeClass('hover');\n        break;\n      case ReactomeEventTypes.select:\n        affectedElements.select();\n        break;\n      case ReactomeEventTypes.unselect:\n        affectedElements.unselect();\n        break;\n    }\n  }\n\n\n  ratio = 0.384;\n\n  replacedElements!: cytoscape.SingularElementArgument[];\n  replacedElementsPosition: number[] = [];\n\n  lastIndex = 0;\n  underlayPadding = 0;\n\n  private updateReplacementVisibility() {\n\n    // // Calculate the position of the element that is to the right of the separation\n\n    const extent = this.cyCompare!.extent();\n    let limitIndex = this.replacedElementsPosition.findIndex(x1 => x1 >= extent.x1);\n    if (limitIndex === -1) limitIndex = this.replacedElements.length;\n\n    /// Alternative calculation. In theory more optimised, but seems worse when console is opened for some reason\n\n    // const currentPos = this.cyCompare!.extent().x1;\n    // let limitIndex = this.lastIndex;\n    // let i = this.lastIndex;\n    // if (currentPos > this.lastPosition) { // Dragging to the right\n    //   while (i >= 0 && this.replacedElementsPosition[i] < currentPos) i++;\n    //   limitIndex = i;\n    // } else if (currentPos < this.lastPosition) { // Dragging to the left\n    //   do i--;\n    //   while (i < this.replacedElementsPosition.length  && this.replacedElementsPosition[i] >= currentPos)\n    //   limitIndex = i+1;\n    // }\n    //\n    // this.lastPosition = currentPos;\n    // ---------\n\n    if (this.lastIndex !== limitIndex) {\n      // If at least one element is switched from left to right\n      if (limitIndex < this.lastIndex) this.replacedElements.slice(limitIndex, this.lastIndex)\n        .map(e => e.style('visibility', 'hidden')) // Hide the range of elements\n        .filter(e => e.is('.Shadow')) // And if it is an shadow\n        .forEach(shadow => shadow.data('edges').style('underlay-padding', 0)) // Hide as well the associated reaction underlay\n      // If at least one element is switched from right to left\n      if (limitIndex > this.lastIndex) this.replacedElements.slice(this.lastIndex, limitIndex)\n        .map(e => e.style('visibility', 'visible')) // Show the range of elements\n        .filter(e => e.is('.Shadow')) // And if it is an shadow\n        .forEach(shadow => shadow.data('edges').style('underlay-padding', this.underlayPadding)) // Show as well the associated reaction underlay\n    }\n    this.lastIndex = limitIndex\n  }\n\n  syncing = false;\n  syncViewports = (source: cytoscape.Core, sourceContainer: HTMLElement, target: cytoscape.Core, targetContainer: HTMLElement) => {\n    if (this.syncing) return;\n    this.syncing = true;\n    this.updateReplacementVisibility();\n\n    const position = {...source.pan()};\n    const sourceX = sourceContainer.getBoundingClientRect().x;\n    const targetX = targetContainer.getBoundingClientRect().x;\n    position.x += sourceX - targetX;\n    target.viewport({\n      zoom: source.zoom(),\n      pan: position,\n    })\n    this.syncing = false;\n  };\n\n\n  private loadAnalysis(token: string | null) {\n    console.log(token, this.diagramId)\n    if (!token || !this.diagramId) {\n      this.cys.forEach(cy => {\n        cy.batch(() => {\n          cy.nodes().removeData('exp');\n          cy.edges('[?color]').style({\n            'underlay-padding': extract(this.reactomeStyle.properties.shadow.padding)\n          });\n          cy.nodes('.Shadow').style({\n            'font-size': extract(this.reactomeStyle.properties.shadow.fontSize),\n            'text-outline-width': extract(this.reactomeStyle.properties.shadow.fontPadding)\n          })\n        })\n      });\n      this.reactomeStyle?.loadAnalysis(this.cy, this.analysis.palette.scale);\n      return\n    }\n\n    forkJoin({\n      entities: this.analysis.foundEntities(this.diagramId, token),\n      pathways: this.analysis.pathwaysResults(this.cy.nodes('.Pathway').map(p => p.data('reactomeId')), token),\n      result: this.analysis.result$.pipe(filter(isDefined), take(1))\n    }).subscribe(({entities, result, pathways}) => {\n      // TODO Make switching profile work without reloading whole data\n      const analysisProfile = this.state.get('analysisProfile');\n      let analysisIndex = analysisProfile ? entities.expNames.indexOf(analysisProfile) : 0;\n      if (analysisIndex === -1) analysisIndex = 0;\n\n      let analysisEntityMap = new Map<string, number>(entities.entities.flatMap(entity =>\n        entity.mapsTo\n          .flatMap(diagramEntity => diagramEntity.ids)\n          .map(id => [id, entity.exp[analysisIndex] || 1]))\n      )\n      console.log(analysisEntityMap)\n\n      let analysisPathwayMap = new Map<number, Analysis.Pathway['entities']>(pathways.map(p => [p.dbId, p.entities]));\n\n      console.log(analysisPathwayMap)\n\n      const normalize = (x: number, min: number, max: number) => (x - min) / (max - min)\n\n      this.cys.forEach(cy => {\n        cy.batch(() => {\n          const style: Style = cy.data('reactome');\n          const min = style.properties.analysis.min = result.expression.min || 0;\n          const max = style.properties.analysis.max = result.expression.max || 1;\n\n          const hasExpression = result.summary.type !== 'OVERREPRESENTATION';\n\n\n          cy.nodes('.PhysicalEntity').forEach(node => {\n            const leaves: Graph.Node[] = node.data('graph.leaves');\n            const exp = leaves\n              .map(leaf => analysisEntityMap.get(leaf.identifier))\n              .sort((a, b) => a !== undefined ? (b !== undefined ? a - b : -1) : 1);\n\n            // console.log(node.data('reactomeId'), leaves, exp)\n\n            // if (hasExpression) exp = exp.map(e => e !== undefined ? 1 - e : undefined);\n            node.data('exp', exp);\n          })\n          cy.nodes('.Pathway').forEach(node => {\n            const dbId: number = node.data('reactomeId');\n            const pathwayData = analysisPathwayMap.get(dbId);\n            if (!pathwayData) {\n              node.data('exp', [undefined]);\n            } else {\n              console.log(dbId, normalize(pathwayData.exp[analysisIndex] || 1 - pathwayData.pValue, min, max))\n              node.data('exp', [\n                [pathwayData.exp[analysisIndex] || 1 - pathwayData.pValue, pathwayData.found],\n                [undefined, pathwayData.total - pathwayData.found]\n              ])\n            }\n          })\n\n          cy.edges('[?color]').style({'underlay-padding': 8});\n          cy.nodes('.Shadow').style({\n            'font-size': extract(style.properties.shadow.fontSize) / 2,\n            'text-outline-width': extract(style.properties.shadow.fontPadding) / 2\n          })\n\n          const validGroups: Set<PaletteGroup> = new Set();\n          if (result.summary.type === 'GSA_REGULATION') {\n            validGroups.add('diverging')\n          } else if (result.summary.type === 'EXPRESSION') {\n            validGroups.add('diverging')\n            validGroups.add('sequential')\n            validGroups.add('continuous')\n          } else if (result.summary.type === 'OVERREPRESENTATION') {\n            validGroups.add('sequential')\n          }\n\n          for (let summary of this.analysis.paletteOptions.values()) {\n            summary.scale.padding(0.1)\n            summary.classes(result.summary.type === 'GSA_REGULATION' ? 5 : 0);\n            summary.domain(min, max);\n          }\n\n          this.analysis.palettes.forEach(group => group.valid = validGroups.has(group.name))\n          this.analysis.palette = this.analysis.paletteOptions.get(hasExpression ? 'RdBu' : 'GnBu')!;\n          this.reactomeStyle.loadAnalysis(cy, this.analysis.palette.scale);\n        })\n      })\n\n    })\n  }\n\n  changePalette() {\n    console.log(this.analysis.palette)\n    if (this.analysis.palette) this.reactomeStyle.loadAnalysis(this.cy, this.analysis.palette.scale);\n  }\n\n  updateStyle() {\n    this.cy ? setTimeout(() => this.reactomeStyle?.update(this.cy), 5) : null;\n    this.cyCompare ? setTimeout(() => this.reactomeStyle?.update(this.cyCompare), 5) : null;\n    this.legend ? setTimeout(() => this.reactomeStyle?.update(this.legend), 5) : null;\n  }\n\n  compareDragging = false;\n\n  dragStart() {\n    this.compareDragging = true;\n  }\n\n  dragEnd() {\n    this.compareDragging = false;\n  }\n\n  dragMove($event: MouseEvent, compareContainer: HTMLDivElement, container: HTMLDivElement) {\n    if (!this.compareDragging) return;\n    compareContainer.style['left'] = $event.x - container.getBoundingClientRect().x + 'px';\n    this.cyCompare.resize()\n    this.syncViewports(this.cy!, this.cytoscapeContainer!.nativeElement, this.cyCompare!, this.compareContainer!.nativeElement);\n  }\n\n  updateLegend() {\n    this.legend.resize()\n    this.legend.panningEnabled(true)\n    this.legend.zoomingEnabled(true)\n    this.legend.fit(this.legend.elements(), 2)\n    this.legend.panningEnabled(false)\n    this.legend.zoomingEnabled(false)\n  }\n\n  // ----- Event Syncing -----\n  private _reactomeEvents$: Subject<ReactomeEvent> = new Subject<ReactomeEvent>();\n\n  private _ignore = false;\n\n  avoidSideEffect(m: () => any) {\n    this._ignore = true;\n    m();\n    this._ignore = false;\n  }\n\n  @Output()\n  public reactomeEvents$: Observable<ReactomeEvent> = this._reactomeEvents$.asObservable().pipe(\n    distinctUntilChanged((prev, current) => prev.type === current.type && prev.detail.reactomeId === current.detail.reactomeId),\n    // tap(e => console.log(e.type, e.detail, e.detail.element.data(), e.detail.cy.container()?.id)),\n    filter(() => !this._ignore),\n    share()\n  );\n\n  flagging = this.state.onChange.flag$.subscribe((value) => this.avoidSideEffect(() => this.cys.forEach(cy => this.flag(value, cy))));\n  selecting = this.state.onChange.select$.subscribe((value) => this.avoidSideEffect(() => this.cys.forEach(cy => this.select(value, cy))));\n  //interactoring = this.state.onChange.overlay$.subscribe((value) => this.interactorsComponent?.getInteractors(value));\n  analysing = this.state.onChange.analysis$.subscribe((value) => this.avoidSideEffect(() => this.loadAnalysis(value)));\n\n\n  // stateToDiagramSub = this.state.state$.subscribe(() => this.stateToDiagram());\n\n  private stateToDiagram() {\n    for (let cy of this.cys) {\n      this.flag(this.state.get('flag'), cy);\n      this.select(this.state.get(\"select\"), cy);\n    }\n\n    const resource = this.state.get('overlay');\n    if (resource) {\n      this.interactorsComponent?.getInteractors(resource)\n    }\n\n    this.loadAnalysis(this.state.get('analysis'))\n  }\n\n  compareBackgroundSync = this.reactomeEvents$.pipe(\n    filter(() => this.comparing),\n    filter((e) => e.detail.cy !== this.legend)\n  ).subscribe(event => {\n    const src = event.detail.cy;\n    const tgt = src === this.cy ? this.cyCompare : this.cy;\n\n    let replacedBy = event.detail.element.data('replacedBy');\n    replacedBy = replacedBy || event.detail.element.data('replacement');\n    replacedBy = replacedBy || (event.detail.element.data('isBackground') && !event.detail.element.data('isFadeOut') && event.detail.element.data('id'));\n\n    if (!replacedBy) return;\n\n    let replacements = tgt.getElementById(replacedBy);\n    if (event.detail.type === 'reaction') {\n      replacements = replacements.add(tgt.elements(`[reactionId=${replacedBy}]`))\n    }\n\n    this.applyEvent(event, replacements)\n  });\n\n\n  interactorOpeningHandling = this.reactomeEvents$\n    .pipe(\n      filter((e) => e.detail.cy !== this.legend),\n      filter(e => [ReactomeEventTypes.open, ReactomeEventTypes.close].includes(e.type as ReactomeEventTypes)),\n      filter(e => e.detail.type === 'Interactor'),\n    ).subscribe(e => {\n        [this.reactomeStyle, this.reactomeStyleCompare]\n          .filter(s => s !== undefined && e.detail.cy === s.cy)\n          .forEach(style => {\n              const occurrenceNode = e.detail.element.nodes()[0];\n\n              if (e.type === ReactomeEventTypes.open)\n                this.interactorsService.addInteractorNodes(occurrenceNode, style.cy!);\n              else\n                this.interactorsService.removeInteractorNodes(occurrenceNode);\n\n              style.interactivity.updateProteins();\n              style.interactivity.triggerZoom();\n            }\n          )\n\n        if (this.comparing) {\n          this.initialiseReplaceElements();\n        }\n      }\n    );\n\n  diagram2legend = this.reactomeEvents$.pipe(\n    filter((e) => e.detail.cy !== this.legend),\n  ).subscribe(event => {\n    const classes = event.detail.element.classes();\n    let matchingElement: cytoscape.NodeCollection | cytoscape.EdgeCollection = this.legend.elements(`.${classes[0]}`);\n\n    if (event.detail.type === 'PhysicalEntity') {\n      if (classes.includes('drug')) matchingElement = matchingElement.nodes('.drug')\n      else matchingElement = matchingElement.not('.drug')\n    } else if (event.detail.type === 'reaction') {\n      const reaction = event.detail.element.nodes('.reaction');\n      matchingElement = this.legend.nodes(`.${reaction.classes()[0]}`).first()\n      matchingElement = matchingElement.add(matchingElement.connectedEdges())\n    }\n\n    this._ignore = true;\n    this.applyEvent(event, matchingElement);\n    this._ignore = false;\n  });\n\n  diagramSelect2state = this.reactomeEvents$.pipe(\n    filter((e) => e.detail.cy !== this.legend),\n    delay(0)\n  ).subscribe(e => {\n      if (e.type !== ReactomeEventTypes.select) return;\n      let elements: cytoscape.NodeSingular = e.detail.element;\n      if (e.detail.type === 'reaction') {\n        elements = e.detail.cy.elements('node.reaction:selected')\n      }\n      const reactomeIds = elements.map(el => el.data('graph.stId'));\n      this.state.set('select', reactomeIds[0])\n    }\n  );\n\n  legend2state = this.reactomeEvents$.pipe(\n    filter((e) => e.detail.cy === this.legend),\n    filter(() => !this._ignore),\n  ).subscribe((e) => {\n    const event = e as ReactomeEvent;\n    const classes = event.detail.element.classes();\n    for (let cy of [this.cy, this.cyCompare].filter(isDefined)) {\n      let matchingElement: cytoscape.NodeCollection | cytoscape.EdgeCollection = cy.elements(`.${classes[0]}`);\n\n      // TODO move everything to use state\n\n      if (event.detail.type === 'PhysicalEntity' || event.detail.type === 'Pathway') {\n        if (classes.includes('drug')) matchingElement = matchingElement.nodes('.drug')\n        else matchingElement = matchingElement.not('.drug')\n      } else if (event.detail.type === 'reaction') {\n        const reaction = event.detail.element.nodes('.reaction');\n        matchingElement = this.cy.nodes(`.${reaction.classes()[0]}`)\n        matchingElement = matchingElement.add(matchingElement.connectedEdges())\n      }\n\n      switch (event.type) {\n        case ReactomeEventTypes.select:\n          this.state.set('flag', ['class:' + classes[0] + (event.detail.type === 'reaction' ? '' : ((classes.includes('drug') ? '.' : '!') + 'drug'))])\n          break;\n        case ReactomeEventTypes.unselect:\n          this.state.set('flag', []);\n          break;\n        case ReactomeEventTypes.hover:\n          matchingElement.addClass('hover')\n          break;\n        case ReactomeEventTypes.leave:\n          matchingElement.removeClass('hover')\n          break;\n      }\n    }\n  });\n\n  logProteins() {\n    console.debug(new Set(this.cy.nodes(\".Protein\").map(node => node.data(\"acc\") || node.data(\"iAcc\"))))\n  }\n\n  analyse(example: Examples) {\n    this.analysis.example(example).subscribe();\n  }\n\n  protected readonly style = style;\n  protected readonly brewer = brewer;\n  protected readonly MatFormField = MatFormField;\n  protected readonly group = group;\n}\n","<div class=\"variables\" [class.dark]=\"dark.isDark\" #container>\n\n  <div id=\"cytoscape\" #cytoscape></div>\n  <div id=\"disease-container\" class=\"drag-container\" #compareContainer [style.display]=\"comparing ? 'flex': 'none'\">\n    <div id=\"handle-limits\" (mouseup)=\"dragEnd()\" (mouseleave)=\"dragEnd()\"\n         (mousemove)=\"dragMove($event, compareContainer, container)\" [class.active]=\"compareDragging\">\n      <span id=\"disease-handle\" class=\"drag-handle\" (mousedown)=\"dragStart()\"></span>\n    </div>\n\n    <div id=\"cytoscape-compare\" #cytoscapeCompare class=\"drag-content\"></div>\n  </div>\n\n  <div id=\"legend-boundary\" [style.--legend-width.px]=\"ratio  * container.clientHeight\">\n    <div cdkDrag cdkDragLockAxis=\"x\" cdkDragBoundary=\"#legend-boundary\" id=\"legend-container\"\n         (cdkDragMoved)=\"updateLegend()\"\n         [style.height]=\"container.clientHeight + 'px'\">\n      <button id=\"legend-handle\" cdkDragHandle>LEGEND</button>\n      <div id=\"legend\" #legend></div>\n    </div>\n  </div>\n\n  <!--  <form id=\"controls\">-->\n  <!--    <button mat-raised-button (click)=\"updateStyle()\">Update Style</button>-->\n  <!--    <button mat-raised-button (click)=\"logProteins()\">Log Proteins</button>-->\n  <!--    <button mat-raised-button (click)=\"analyse('uniprot')\">Uniprot</button>-->\n  <!--    <button mat-raised-button (click)=\"analyse('microarray')\">Microarray</button>-->\n  <!--    <mat-slide-toggle [(ngModel)]=\"dark.isDark\" name=\"dark\">Dark mode</mat-slide-toggle>-->\n  <!--    <span>{{ (reactomeEvents$ | async)?.detail?.reactomeId }}</span>-->\n  <!--  </form>-->\n\n</div>\n","import {AfterViewInit, Component, ElementRef, Input, OnDestroy, ViewChild} from '@angular/core';\nimport {Event} from \"../model/event.model\";\nimport {EventService} from \"../services/event.service\";\nimport {SpeciesService} from \"../services/species.service\";\nimport {filter, fromEvent, switchMap, take, tap} from \"rxjs\";\nimport {NestedTreeControl} from \"@angular/cdk/tree\";\nimport {MatTreeNestedDataSource} from \"@angular/material/tree\";\nimport {DiagramStateService} from \"../services/diagram-state.service\";\nimport {SplitComponent} from \"angular-split\";\nimport {UntilDestroy, untilDestroyed} from \"@ngneat/until-destroy\";\nimport {NavigationEnd, Router} from \"@angular/router\";\n\n\n@Component({\n  selector: 'cr-event-hierarchy',\n  templateUrl: './event-hierarchy.component.html',\n  styleUrls: ['./event-hierarchy.component.scss']\n})\n@UntilDestroy()\nexport class EventHierarchyComponent implements AfterViewInit, OnDestroy {\n\n  @Input('id') diagramId: string = '';\n  @Input('eventSplit') split!: SplitComponent;\n  @ViewChild('treeControlButton', {read: ElementRef}) treeControlButton!: ElementRef;\n  @ViewChild('eventIcon', {read: ElementRef}) eventIcon!: ElementRef;\n\n\n  private _SCROLL_SPEED = 50; // pixels per second\n  private _ICON_PADDING = 16;\n  private _GRADIENT_WIDTH = 10;\n  private _ignore = false; // ignore the changes from the tree\n  private _isInitialLoad = true; // skip the first load\n\n  treeControl = new NestedTreeControl<Event, string>(event => event.hasEvent, {trackBy: event => event.stId});\n  treeDataSource = new MatTreeNestedDataSource<Event>();\n\n  breadcrumbs: Event[] = [];\n  scrollTimeout: undefined | ReturnType<typeof setTimeout>;\n  selectedIdFromUrl = '';\n  selectedTreeEvent!: Event;\n  selectedObj!: Event;\n  subpathwayColors: Map<number, string> = new Map<number, string>();\n  ancestors: Event[] = [];\n\n\n  constructor(protected eventService: EventService, private speciesService: SpeciesService, private state: DiagramStateService, private el: ElementRef, private router: Router) {\n  }\n\n  selecting = this.state.onChange.select$.pipe(\n    tap(value => this.selectedIdFromUrl = value),\n    filter(value => !this._ignore && !this._isInitialLoad && !this.speciesService.getIgnore()),// Ignore the changes from Tree itself , first load and species changes\n    switchMap(id => {\n      const idToUse = id ? id : this.diagramId;\n      return this.eventService.fetchEnhancedEventData(idToUse)\n    }),\n    switchMap((enhancedEvent) => {\n      return this.eventService.adjustTreeFromDiagramSelection(enhancedEvent, this.diagramId, this.subpathwayColors, this.treeControl, this.treeDataSource.data);\n    }),\n    untilDestroyed(this),\n  ).subscribe();\n\n  ngAfterViewInit(): void {\n\n    setTimeout(() => {\n      this._isInitialLoad = false; // Allow future changes to be processed after first load\n    }, 100);\n\n    this.speciesService.currentSpecies$.pipe(untilDestroyed(this)).subscribe(species => {\n      const taxId = species ? species.taxId : '9606';\n      this.getTopLevelPathways(taxId);\n    });\n\n    this.eventService.treeData$.pipe(untilDestroyed(this)).subscribe(events => {\n      // @ts-ignore\n      // Mat tree has a bug causing children to not be rendered in the UI without first setting the data to null\n      // This is a workaround to add child data to tree and update the view. see details: https://github.com/angular/components/issues/11381\n      this.treeDataSource.data = null; //todo: check performance issue\n      this.treeDataSource.data = events;\n      this.adjustWidths();\n    });\n\n    this.eventService.selectedTreeEvent$.pipe(untilDestroyed(this)).subscribe(event => {\n      this.selectedTreeEvent = event;\n    });\n\n    this.eventService.selectedObj$.pipe(untilDestroyed(this)).subscribe(event => {\n      this.selectedObj = event;\n    });\n\n    this.eventService.breadcrumbs$.pipe(untilDestroyed(this)).subscribe(events => {\n      this.breadcrumbs = events;\n    });\n\n    this.split.dragProgress$.pipe(untilDestroyed(this)).subscribe(data => {\n      this.adjustWidths();\n    });\n\n    fromEvent(window, 'resize').pipe(untilDestroyed(this)).subscribe(() => {\n      this.adjustWidths();\n    });\n\n    this.eventService.subpathwaysColors$.pipe(untilDestroyed(this)).subscribe(colors => {\n      this.subpathwayColors = colors;\n    })\n\n    this.eventService.loadTreeEvent$.pipe(\n      switchMap(treeEvent => {\n        this.collapseSiblingEvent(treeEvent);\n        return this.eventService.fetchChildrenEvents(treeEvent, this.treeDataSource.data);\n      }),\n      untilDestroyed(this)\n    ).subscribe(([event, enhancedResult, colors]) => {\n      this.eventService.setCurrentEventAndObj(event, enhancedResult);\n      this.eventService.setSubpathwayColors(event, colors);\n    });\n\n  }\n\n  getTopLevelPathways(taxId: string): void {\n    this.eventService.fetchTlpBySpecies(taxId).pipe(\n      tap(results => this.eventService.setTreeData(results)),\n      switchMap(() => {\n        const idToUse = this.selectedIdFromUrl ? this.selectedIdFromUrl : this.diagramId;\n        return this.eventService.fetchEnhancedEventData(idToUse);\n      }),\n      switchMap(event => this.eventService.buildTree(event, this.diagramId, this.treeControl, this.subpathwayColors))\n    ).subscribe();\n  }\n\n  // if a leaf node has sibling which is a root node\n  hasRootSiblingForLeafNode(event: Event): boolean {\n    if (!event.ancestors || event.ancestors.length === 0) {\n      return false;\n    }\n    const parent = event.parent;\n    return !!parent.hasEvent && parent.hasEvent.some(sibling => sibling !== event && this.eventService.eventHasChild(sibling));\n  }\n\n\n  loadChildrenTreeEvents(treeEvent: Event) {\n    this.eventService.loadTreeEvent(treeEvent);\n  }\n\n  ngOnDestroy(): void {\n    clearTimeout(this.scrollTimeout);\n  }\n\n  onTreeEventSelect(treeEvent: Event) {\n    const isTLP = treeEvent.schemaClass === 'TopLevelPathway';\n    const hasChild = this.eventService.eventHasChild(treeEvent);\n    // Toggle isSelected property if it has children for pathway\n    //event.isSelected = hasChild && !isTLP ? !event.isSelected : true;\n    const isSelected = !treeEvent.isSelected;\n    this.handleTreeEventSelection(treeEvent, isSelected);\n  }\n\n  private handleTreeEventSelection(event: Event, isSelected: boolean) {\n    if (isSelected) {\n      this.handleSelectionFromTree(event);\n    } else {\n      this.handleDeselectionFromTree(event);\n    }\n  }\n\n  onBreadcrumbSelect(navEvent: Event) {\n    this.clearAllSelectedEvents(this.treeDataSource.data);\n    this.selectAllParents(navEvent, this.treeDataSource.data);\n    navEvent.isSelected = true;\n    // Collapse all descendant nodes except the selected path if it has child events\n    this.treeControl.collapseDescendants(navEvent);\n    // Expand the path to the selected event\n    this.treeControl.expand(navEvent);\n    this.updateBreadcrumbs(navEvent);\n\n    this.setDiagramId(navEvent);\n    const selectedEventId = this.eventService.eventHasChild(navEvent) && navEvent.hasDiagram ? '' : navEvent.stId;\n    this._ignore = true;\n    this.state.set('select', selectedEventId);\n    this._ignore = false;\n\n    const ancestors = navEvent.ancestors ? navEvent.ancestors : [];\n    this.eventService.setPath(this.diagramId, ancestors);\n\n    this.eventService.fetchEnhancedEventData(navEvent.stId).pipe(untilDestroyed(this)).subscribe(result => {\n      this.eventService.setCurrentEventAndObj(navEvent, result);\n    })\n\n  }\n\n\n  private handleSelectionFromTree(event: Event) {\n    // First click\n    this.clearAllSelectedEvents(this.treeDataSource.data);\n    this.selectAllParents(event, this.treeDataSource.data);\n    this.toggleEventExpansion(event, true);\n    this.updateBreadcrumbs(event);\n    this.setDiagramId(event);\n    this.navigateToPathway(event);\n  }\n\n\n  private handleDeselectionFromTree(event: Event) {\n    // Second click (deselect)\n\n    // Disable unselected status for TLP for having a selected obj in details panel\n    if (event.schemaClass === 'TopLevelPathway') return;\n\n    this.selectAllParents(event, this.treeDataSource.data);\n    this.toggleEventExpansion(event, false);\n    this.updateBreadcrumbsForEventDeselection(event);\n    this.handlePathwayNavigationOnDeselection(event);\n  }\n\n  private toggleEventExpansion(event: Event, isSelected: boolean) {\n    // Collapse all events when selecting any tlps\n    if (event.schemaClass === 'TopLevelPathway') {\n      this.treeControl.collapseAll();\n    }\n\n    if (isSelected) {\n      event.isSelected = true;\n      this.loadChildrenTreeEvents(event);\n      this.treeControl.toggle(event);\n    } else {\n      event.isSelected = false;\n      this.treeControl.toggle(event);\n      this.treeControl.collapseDescendants(event);\n      this.eventService.fetchEnhancedEventData(event.parent.stId).pipe(untilDestroyed(this)).subscribe(result => {\n        this.eventService.setCurrentObj(result);\n      })\n    }\n\n    this.collapseSiblingEvent(event);\n  }\n\n\n  private collapseSiblingEvent(event: Event) {\n    if (event.ancestors) {\n      // Get 1st parent\n      let eventParent = event.parent;\n      // Loop through the parent's children to collapse any expanded siblings\n      eventParent.hasEvent?.forEach(childEvent => {\n        if (childEvent !== event && this.treeControl.isExpanded(childEvent)) {\n          this.treeControl.collapse(childEvent);\n          this.treeControl.collapseDescendants(childEvent);\n          childEvent.isSelected = false;\n        }\n      })\n    }\n  }\n\n  private selectAllParents(selectedEvent: Event, events: Event[]) {\n    events.forEach(event => {\n      event.isSelected = selectedEvent.ancestors?.some(parent => parent.stId === event.stId) || false;\n      if (event.hasEvent) {\n        this.selectAllParents(selectedEvent, event.hasEvent);\n      }\n    });\n  }\n\n  private clearAllSelectedEvents(events: Event[]) {\n    events.forEach(event => {\n      event.isSelected = false;\n      if (event.hasEvent) {\n        this.clearAllSelectedEvents(event.hasEvent);\n      }\n    });\n  }\n\n  private updateBreadcrumbs(event: Event) {\n    if (event.schemaClass === 'TopLevelPathway') {\n      // If the event is a 'TopLevelPathway', set breadcrumbs to an empty array\n      this.eventService.setBreadcrumbs([event]);\n    } else if (event.ancestors) {\n      // Set breadcrumbs including the event and its parents\n      this.eventService.setBreadcrumbs([...(event.ancestors), event]);\n    }\n  }\n\n  private updateBreadcrumbsForEventDeselection(event: Event) {\n    if (event.schemaClass === \"TopLevelPathway\") {\n      this.eventService.setBreadcrumbs([]);\n    } else if (event.ancestors?.length) {\n      // Update breadcrumb based on the last parent in the parents\n      this.updateBreadcrumbs(event.ancestors[event.ancestors.length - 1]);\n    }\n  }\n\n  private handlePathwayNavigationOnDeselection(event: Event) {\n    // pathway and subpathway\n    if (this.eventService.eventHasChild(event)) {\n      if (event.schemaClass !== 'TopLevelPathway') {\n        const eventParent = event.parent;\n        const parentWithDiagram = this.getPathwayWithDiagram(event);\n        this.diagramId = parentWithDiagram!.stId;\n        this.navigateToPathway(eventParent);\n      } else {\n        this.diagramId = event.stId;\n        this.navigateToPathway(event);\n      }\n    }\n  }\n\n  private setDiagramId(event: Event): void {\n    // Pathway\n    if (this.eventService.eventHasChild(event) && event.hasDiagram) {\n      this.diagramId = event.stId;\n    } else {\n      // Subpathway and reaction\n      const parentWithDiagram = this.getPathwayWithDiagram(event);\n      this.diagramId = parentWithDiagram!.stId;\n    }\n  }\n\n  private getPathwayWithDiagram(event: Event): Event | undefined {\n    const parents = [...event.ancestors].reverse();\n    return parents.find(p => p.hasDiagram);\n  }\n\n\n  private navigateToPathway(treeEvent: Event): void {\n\n    const ancestors = treeEvent.ancestors ? treeEvent.ancestors : [];\n    this.eventService.setPath(this.diagramId, ancestors);\n\n    // Determine if we should include the selectedEventId in the URL\n    const selectedEventId = this.eventService.eventHasChild(treeEvent) && treeEvent.hasDiagram ? '' : treeEvent.stId;\n    this._ignore = true;\n    this.router.navigate(['PathwayBrowser', this.diagramId], {\n      queryParamsHandling: \"preserve\" // Keep existing query params\n    }).then(() => {\n      this.state.set('select', selectedEventId);\n      this.eventService.setCurrentTreeEvent(treeEvent);\n      // Listen for NavigationEnd event to reset _ignore\n      this.router.events.pipe(\n        filter(routerEvent => routerEvent instanceof NavigationEnd),\n        take(1) // Take the first NavigationEnd event and unsubscribe automatically\n      ).subscribe(() => {\n        this._ignore = false;\n      });\n\n    }).catch(err => {\n      throw new Error('Navigation error:', err);\n    });\n  }\n\n  trackById(index: number, event: Event): string {\n    return event.stId;\n  }\n\n  /**\n   * Adjust widths when loading mat tree data at the initialization.\n   */\n  adjustWidths() {\n    const treeNodes = this.el.nativeElement.querySelectorAll('.mat-tree-node');\n    treeNodes.forEach((node: HTMLElement) => {\n      this.adjustWidth(node);\n    });\n  }\n\n  adjustWidth(node: HTMLElement) {\n    const left = node.querySelector('.left') as HTMLElement;\n    const hasEvents = left.children.length > 1;\n    this.calculateAndSetWidth(node, hasEvents)\n\n  }\n\n  getLeftDivElWidth(node: HTMLElement, event: Event) {\n    const hasEvents = this.eventService.eventHasChild(event);\n    return this.calculateAndSetWidth(node, hasEvents);\n  }\n\n\n  private calculateAndSetWidth(node: HTMLElement, hasEvents: boolean): number {\n    const left = node.querySelector('.left') as HTMLElement;\n    const right = node.querySelector('.right') as HTMLElement;\n    const parentWidth = node.clientWidth; // inner width of mat tree node in pixels\n    const rightWidth = hasEvents ? right.offsetWidth : right.offsetWidth + this._GRADIENT_WIDTH; // 10 is the width of the gradient\n    left.style.width = `calc(${parentWidth}px - ${rightWidth}px)`;\n    return parentWidth - rightWidth;\n  }\n\n\n  onTagHover(event: Event) {\n    if (event.isSelected || (this.treeControl.isExpanded(event) && event.hasEvent)) return;\n    event.isHovered = true\n  }\n\n  onTagHoverLeave(event: Event) {\n    event.isHovered = false;\n  }\n\n\n  onNameHover($event: MouseEvent, event: Event) {\n    const targetParentNode = ($event.target as HTMLElement).closest('.mat-tree-node') as HTMLElement;\n    const leftDivWidth = this.getLeftDivElWidth(targetParentNode, event);\n    const nameElement = $event.target as HTMLElement;\n    const contentWidth = this.calculateContentWidth(nameElement, event);\n    // Allow animation if this element has been scrolling before\n    nameElement.classList.remove('no-transition');\n    // Check if there is space between the left and content span\n    if (contentWidth > leftDivWidth) {\n      let distanceToScroll = contentWidth - leftDivWidth;\n      this.setScrollStyles(nameElement, distanceToScroll);\n    }\n  }\n\n  private calculateContentWidth(targetElement: HTMLElement, event: Event): number {\n    const iconWidth = this.eventIcon.nativeElement.getBoundingClientRect().width + this._ICON_PADDING; // width and padding\n    const treeControlButtonWidth = this.treeControlButton.nativeElement.getBoundingClientRect().width;\n    const baseWidth = targetElement.offsetWidth + iconWidth;\n    return this.eventService.eventHasChild(event) ? baseWidth + treeControlButtonWidth : baseWidth;\n  }\n\n  private setScrollStyles(targetElement: HTMLElement, distanceToScroll: number): void {\n    // Calculate the transition duration based on the distance and the constant speed\n    const duration = distanceToScroll / this._SCROLL_SPEED;\n    targetElement.style.transition = `left ${duration}s linear`;\n    // Set the distance to scroll\n    targetElement.style.left = `-${distanceToScroll}px`;\n  }\n\n  onNameHoverLeave($event: MouseEvent, event: Event) {\n    const nameElement = $event.target as HTMLElement;\n    nameElement.style.left = '0'; // Reset position\n  }\n\n\n  onScroll($event: WheelEvent, node: Event) {\n    const nameElement = $event.target as HTMLElement;\n    this.onScrollStart(nameElement);\n\n    clearTimeout(this.scrollTimeout);\n\n    this.scrollTimeout = setTimeout(() => {\n      this.onScrollStop(nameElement);\n    }, 500); // Debounce time\n  }\n\n\n  /**\n   * Not working with mat tree node\n   */\n  // private initializeScrollEvent(): void {\n  //   this.scrollSubscription = fromEvent(this.displayNameDiv.nativeElement, 'scroll').pipe(\n  //     tap(() => this.onScrollStart(this.displayNameDiv.nativeElement)),\n  //     debounceTime(200)\n  //   ).subscribe(() => {\n  //     this.onScrollStop(this.displayNameDiv.nativeElement)\n  //   });\n  // }\n\n  private onScrollStart(el: HTMLElement): void {\n    // Need to make it scrollable to enable the scrolling\n    const labelSpan = el.closest('.mdc-button__label') as HTMLElement;\n    labelSpan.classList.add('add-overflowX');\n    el.classList.add('no-transition');\n  }\n\n  private onScrollStop(el: HTMLElement): void {\n    const labelSpan = el.closest('.mdc-button__label') as HTMLElement;\n    labelSpan.classList.remove('add-overflowX');\n    el.classList.remove('no-transition');\n  }\n}\n","<div id=\"hierarchy-container\">\n  <div id=\"breadcrumb-container\" *ngIf=\"this.breadcrumbs.length > 0\">\n    <ng-container class=\"icon-container\">\n      <mat-icon class='home-icon' svgIcon=\"home\"></mat-icon>\n    </ng-container>\n    <div class=\"gradient-holder-left\"></div>\n    <nav class=\"breadcrumb\">\n      <ng-container *ngFor=\"let breadcrumb of breadcrumbs; let last = last\">\n        <!--        <span class=\"gutter\">></span>-->\n        <ng-container *ngIf=\"!last\">\n          <a class=\"breadcrumb-item\" queryParamsHandling=\"preserve\" [routerLink]=\"['/PathwayBrowser', this.diagramId]\"\n             (click)=\"onBreadcrumbSelect(breadcrumb)\">\n            <span>{{ breadcrumb.displayName }}</span>\n          </a>\n        </ng-container>\n        <ng-container *ngIf=\"last\">\n          <!--          <span class=\"gutter\">></span>-->\n          <span class=\"breadcrumb-item\"> {{ breadcrumb.displayName }}</span>\n        </ng-container>\n      </ng-container>\n    </nav>\n    <div class=\"gradient-holder-right\"></div>\n  </div>\n\n  <div id=\"events-container\">\n    <mat-tree [dataSource]=\"treeDataSource\" [treeControl]=\"treeControl\" [trackBy]=\"trackById\" class=\"example-tree\">\n      <!-- This is the tree node template for leaf nodes -->\n      <mat-tree-node *matTreeNodeDef=\"let node\" class=\"leaf-node\"\n                     [ngClass]=\"{'has-sibling': hasRootSiblingForLeafNode(node)}\">\n        <!-- use a disabled button to provide padding for table leaf -->\n        <!--    <button mat-icon-button disabled class=\"button-size\"></button>-->\n        <div class=\"left\">\n          <button mat-button (click)=\"onTreeEventSelect(node)\"\n                  [ngClass]=\"{'highlight': node.isSelected, 'hovered': node.isHovered}\" class=\"button\">\n            <mat-icon class='custom-icon'\n                      [matTooltip]=\"node.schemaClass === 'Reaction' ? 'Reaction' : 'Black Box Event'\"\n                      [svgIcon]=\"node.schemaClass === 'Reaction' ? 'reaction' : 'transition'\"></mat-icon>\n            <div class=\"name-container\">\n              <div class=\"font name\"\n                   (mouseover)=\"onNameHover($event ,node)\"\n                   (mouseleave)=\"onNameHoverLeave($event, node)\"\n                   (wheel)=\"onScroll($event, node)\">\n                {{ node.displayName }}\n              </div>\n            </div>\n          </button>\n        </div>\n\n        <div class=\"right\">\n          <div class=\"tag-container\">\n            <div class=\"tag\" *ngIf=\"node.releaseStatus === 'UPDATED'\" (mouseover)=\"onTagHover(node)\"\n                 (mouseleave)=\"onTagHoverLeave(node)\">\n              <span class='initial'>U</span>\n              <span class=\"body\">PDATED</span>\n            </div>\n            <div class=\"tag\" *ngIf=\"node.releaseStatus === 'NEW'\" (mouseover)=\"onTagHover(node)\"\n                 (mouseleave)=\"onTagHoverLeave(node)\">\n              <span class='initial'>N</span>\n              <span class=\"body\">EW</span>\n            </div>\n\n            <div class=\"tag\" *ngIf=\"node.isInDisease\" [class.disease]=\"node.isInDisease\" (mouseover)=\"onTagHover(node)\"\n                 (mouseleave)=\"onTagHoverLeave(node)\">\n              <span class='initial'>D</span>\n              <span class=\"body\">ISEASE</span>\n            </div>\n\n            <div class=\"tag\" *ngIf=\"node.isInferred\" (mouseover)=\"onTagHover(node)\"\n                 (mouseleave)=\"onTagHoverLeave(node)\">\n              <span class='initial'>I</span>\n              <span class=\"body\">NFERRED</span>\n            </div>\n\n          </div>\n        </div>\n      </mat-tree-node>\n\n      <!-- This is the tree node template for expandable nodes -->\n      <mat-nested-tree-node *matTreeNodeDef=\"let node; when: eventService.hasChild\">\n        <div class=\"mat-tree-node\">\n          <div class=\"left\">\n            <button #treeControlButton mat-icon-button class=\"button-size no-hover-effect\"\n                    [attr.aria-label]=\"'Toggle ' + node.name\" (click)=\"onTreeEventSelect(node)\">\n              <mat-icon class=\"mat-icon-rtl-mirror\"\n                        [svgIcon]=\"treeControl.isExpanded(node) ? 'arrow-down' : 'arrow-right'\"></mat-icon>\n            </button>\n\n            <button mat-button (click)=\"onTreeEventSelect(node)\" class=\"button\"\n                    [ngClass]=\"{'highlight': node.isSelected, 'hovered': node.isHovered}\">\n              <mat-icon #eventIcon class='custom-icon'\n                        [matTooltip]=\"node.hasEHLD? 'Pathway with an enhanced diagram ' : 'Pathway'\"\n                        [svgIcon]=\"node.hasEHLD  ? 'pathway-ehld' : 'pathway'\"></mat-icon>\n              <div class=\"name-container\">\n                <div class=\"font name\" (mouseover)=\"onNameHover($event, node)\"\n                     (mouseleave)=\"onNameHoverLeave($event, node)\"\n                     (wheel)=\"onScroll($event, node)\">\n                  {{ node.displayName }}\n                </div>\n              </div>\n            </button>\n          </div>\n\n          <div class=\"right\">\n            <div class=\"tag-container\">\n              <div class=\"tag\" *ngIf=\"node.releaseStatus === 'UPDATED'\" (mouseover)=\"onTagHover(node)\"\n                   (mouseleave)=\"onTagHoverLeave(node)\">\n                <span class='initial'>U</span>\n                <span class=\"body\">PDATED</span>\n              </div>\n              <div class=\"tag\" *ngIf=\"node.releaseStatus === 'NEW'\" (mouseover)=\"onTagHover(node)\"\n                   (mouseleave)=\"onTagHoverLeave(node)\">\n                <span class='initial'>N</span>\n                <span class=\"body\">EW</span>\n              </div>\n\n              <div class=\"tag\" *ngIf=\"node.isInDisease\" [class.disease]=\"node.isInDisease\"\n                   (mouseover)=\"onTagHover(node)\" (mouseleave)=\"onTagHoverLeave(node)\">\n                <span class='initial'>D</span>\n                <span class=\"body\">ISEASE</span>\n              </div>\n\n              <div class=\"tag\" *ngIf=\"node.isInferred\" (mouseover)=\"onTagHover(node)\"\n                   (mouseleave)=\"onTagHoverLeave(node)\">\n                <span class='initial'>I</span>\n                <span class=\"body\">NFERRED</span>\n              </div>\n              <!--Only provide this subpathway tag for the first layer, ignore the nested subpathways-->\n              <div class=\"subpathway\" *ngIf=\"!node.hasDiagram && node.parent.stId === this.diagramId\"\n                   [style.background]=\"node.color\" (mouseover)=\"onTagHover(node)\"\n                   (mouseleave)=\"onTagHoverLeave(node)\">\n              </div>\n\n            </div>\n          </div>\n        </div>\n        <!-- There is inline padding applied to this div using styles.\n            This padding value depends on the mat-icon-button width.  -->\n        <ul>\n          <div [class.example-tree-invisible]=\"!treeControl.isExpanded(node)\" role=\"group\" class=\"group\">\n            <ng-container matTreeNodeOutlet></ng-container>\n          </div>\n        </ul>\n      </mat-nested-tree-node>\n    </mat-tree>\n  </div>\n</div>\n","import {CanActivateFn, Params, Router} from '@angular/router';\nimport {inject} from \"@angular/core\";\n\nconst URL_PATTERN = /\\/?(?<id>R-[A-Z]{3}-\\d+)&?(?<params>.*)/;\n\n\nexport const legacyGuard: CanActivateFn = (route, state) => {\n  const router: Router = inject(Router);\n  const {fragment, queryParams} = route;\n  let params = {...queryParams} as Params;\n  let id = 'R-HSA-453279'; // Default routing\n\n  if (fragment) {\n    const match = fragment.match(URL_PATTERN);\n    if (match && match.groups && match.groups['id']) {\n      if (match.groups['id']) {\n        id = match.groups['id'];\n      }\n      if (match.groups['params']) {\n        match.groups['params']\n          .split(\"&\")\n          .map(param => param.split(\"=\"))\n          .forEach(([key, value]) => {\n            params[key] = value || true;\n          })\n      }\n    }\n    return router.navigate([`PathwayBrowser`, id], {fragment: undefined, queryParams: params})\n  }\n\n  return router.navigate([`PathwayBrowser`, id]); // Default routing\n};\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {\n  AbstractControl,\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  ValidationErrors,\n  ValidatorFn,\n  Validators\n} from \"@angular/forms\";\nimport {merge} from \"rxjs\";\nimport {takeUntilDestroyed} from \"@angular/core/rxjs-interop\";\nimport {MatTabChangeEvent} from \"@angular/material/tabs\";\nimport {MatRadioChange} from \"@angular/material/radio\";\nimport {InteractorService} from \"../services/interactor.service\";\nimport cytoscape from \"cytoscape\";\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material/dialog\";\nimport {InputCategory, InteractorToken} from \"../model/interactor.model\";\n\n\n@Component({\n  selector: 'cr-custom-interactor-dialog',\n  templateUrl: './custom-interactor-dialog.component.html',\n  styleUrls: ['./custom-interactor-dialog.component.scss']\n})\nexport class CustomInteractorDialogComponent implements OnInit {\n\n  cy!: cytoscape.Core;\n  name = new FormControl('', [Validators.required, Validators.pattern(/^[a-zA-Z_]+[a-zA-Z0-9_]*$/)]);\n  resourceForm!: FormGroup;\n  errorMessage = '';\n  tabId = 'data'; // Default value\n  selectedValue = 'form'; // Default value\n  isDataLoading: boolean = false;\n  token? : InteractorToken;\n  items = [\n    {'name': 'form', 'content': 'File'},\n    {'name': 'content', 'content': 'Copy & Paste'},\n    {'name': 'url', 'content': 'URL'}]\n\n  constructor(private interactorService: InteractorService, private dialogRef: MatDialogRef<CustomInteractorDialogComponent>, private fb: FormBuilder, @Inject(MAT_DIALOG_DATA) public data: {\n    cy: cytoscape.Core\n  }) {\n    this.resourceForm = this.fb.group({\n      selectedValue: [''],\n      form: [''], // file uploader\n      content: [''],\n      url: [''],\n      psicquicUrl: ['']\n    }, {validators: this.formGroupValidator});\n\n    merge(this.name.statusChanges, this.name.valueChanges)\n      .pipe(takeUntilDestroyed())\n      .subscribe(() => this.updateErrorMessage());\n  }\n\n\n  ngOnInit() {\n    this.cy = this.data.cy;\n  }\n\n  formGroupValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n    const fileValue = control.value.form;\n    const contentValue = control.value.content;\n    const urlValue = control.value.url;\n    const psicquicUrlValue = control.value.psicquicUrl;\n    if (fileValue || contentValue || urlValue || psicquicUrlValue) {\n      return null\n    } else {\n      return {invalid: true};\n    }\n  };\n\n  updateErrorMessage() {\n    if (this.name.hasError('required')) {\n      this.errorMessage = 'You must enter a name';\n    } else if (this.name.hasError('pattern')) {\n      this.errorMessage = 'Name can only contain letters'\n    } else {\n      this.errorMessage = '';\n    }\n  }\n\n  onTabChange($event: MatTabChangeEvent) {\n    this.tabId = $event.tab.ariaLabelledby;\n  }\n\n  onItemChange($event: MatRadioChange) {\n    this.selectedValue = $event.value;\n  }\n\n  onFileChange($event: Event) {\n    const inputElement = $event.target as HTMLInputElement;\n    if (inputElement.files && inputElement.files.length) {\n      const file = inputElement.files[0]; // Single file upload\n      this.resourceForm.patchValue({form: file});\n    }\n  }\n\n  submit() {\n    this.isDataLoading = true;\n    const userInput = this.getInputs();\n    if (userInput) {\n      this.interactorService.getInteractorsFromToken(this.name.value!, userInput.url!, userInput.content!, this.cy).subscribe((result) => {\n        this.interactorService.addInteractorOccurrenceNode(result.interactors, this.cy, result.interactors.resource);\n        this.token = result.token;\n        this.isDataLoading = false;\n        this.dialogRef.close();\n      })\n    }\n  }\n\n  private getInputs(): InputCategory {\n    const input = new InputCategory();\n    const formValue = this.resourceForm.value;\n\n    if (this.tabId === 'data') {\n      input.url = this.interactorService.UPLOAD_URL + this.selectedValue;\n      input.content = formValue[this.selectedValue];\n      if (this.selectedValue === this.items[0].name) { // Prepare formdata when file is uploaded\n        input.content = this.prepareFormData(formValue.form)\n      }\n    }\n\n    if (this.tabId === 'psicquic') {\n      input.url = this.interactorService.UPLOAD_PSICQUIC_URL;\n      input.content = formValue.psicquicUrl;\n    }\n    return input\n  }\n\n  private prepareFormData(formControl: string | Blob): FormData {\n    const formData = new FormData();\n    formData.append(\"file\", formControl);\n    return formData;\n  }\n\n}\n","<h2 mat-dialog-title>Add a new resource</h2>\n<mat-dialog-content>\n  <form [formGroup]=\"resourceForm\">\n    <div>\n      <mat-form-field>\n        <mat-label>Name</mat-label>\n        <input matInput [formControl]=\"name\" (blur)=\"updateErrorMessage()\" required>\n        <mat-error *ngIf=\"resourceForm.get('name')?.invalid\">{{ errorMessage }}</mat-error>\n      </mat-form-field>\n    </div>\n    <mat-tab-group (selectedTabChange)=\"onTabChange($event)\">\n      <mat-tab label=\"Add your data\" aria-labelledby=\"data\">\n        <section>\n          <mat-radio-group (change)=\"onItemChange($event)\">\n            <mat-radio-button class=\"margin\" *ngFor=\"let item of items; let i = index\" [value]=\"item.name\"\n                              [checked]='i===0'>{{ item.content }}\n            </mat-radio-button>\n          </mat-radio-group>\n        </section>\n\n        <mat-form-field *ngIf=\"selectedValue === 'form'\" class=\"full-width\">\n          <ngx-mat-file-input formControlName=\"form\" (change)=\"onFileChange($event)\"  [multiple]=false>\n            <mat-icon ngxMatFileInputIcon>folder</mat-icon>\n          </ngx-mat-file-input>\n          <mat-hint><strong>Upload a file stored locally on your computer.</strong></mat-hint>\n        </mat-form-field>\n\n        <!--        <span>Upload a file stored locally on your computer. Upload a file stored locally on your computer.</span>-->\n        <!--        <div *ngIf=\"label === 'File'\" class=\"full-width\">-->\n        <!--          <button type=\"button\" mat-raised-button (click)=\"fileInput.click()\">Choose File</button>-->\n        <!--          <input hidden (change)=\"onFileSelected($event)\" #fileInput type=\"file\">-->\n        <!--          <span class=\"file-name\">{{ selectedFile?.name }}</span>-->\n        <!--        </div>-->\n\n        <mat-form-field *ngIf=\"selectedValue === 'content'\" class=\"full-width\">\n          <mat-label>Copy & paste your data here</mat-label>\n          <textarea matInput formControlName=\"content\"></textarea>\n          <mat-hint><strong>Copy and paste your data in columns.</strong></mat-hint>\n        </mat-form-field>\n\n        <mat-form-field *ngIf=\"selectedValue === 'url'\" class=\"full-width\">\n          <mat-label>URL</mat-label>\n          <input matInput formControlName='url'>\n          <mat-hint><strong>Upload a publicly accessible data though its URL.</strong></mat-hint>\n        </mat-form-field>\n\n      </mat-tab>\n      <mat-tab label=\"Add your PSICQUIC service\" aria-labelledby=\"psicquic\">\n        <mat-form-field class=\"full-width\">\n          <mat-label>URL</mat-label>\n          <input matInput formControlName=\"psicquicUrl\">\n          <mat-hint><strong>Add your custom PSICQUIC service through its URL.</strong></mat-hint>\n        </mat-form-field>\n      </mat-tab>\n    </mat-tab-group>\n    <mat-dialog-actions align=\"end\">\n      <button mat-flat-button color=\"primary\" mat-dialog-close>Close</button>\n      <button mat-flat-button color=\"primary\"\n              [disabled]=\"resourceForm.invalid && !resourceForm.get('name')?.invalid\"\n              type=\"submit\" (click)=\"submit()\">\n        <div class=\"button-row\">\n          Submit\n          <mat-spinner class=\"spinner-color\" diameter=\"20\" *ngIf=\"isDataLoading\"></mat-spinner>\n        </div>\n      </button>\n    </mat-dialog-actions>\n  </form>\n</mat-dialog-content>\n","import {AfterViewInit, ChangeDetectorRef, Component, EventEmitter, Input, OnDestroy, Output} from '@angular/core';\nimport {InteractorToken, PsicquicResource, ResourceAndType, ResourceType} from \"./model/interactor.model\";\nimport cytoscape from \"cytoscape\";\nimport {DiagramService} from \"../services/diagram.service\";\nimport {DarkService} from \"../services/dark.service\";\nimport {InteractorService} from \"./services/interactor.service\";\nimport {DiagramStateService} from \"../services/diagram-state.service\";\nimport {MatDialog} from \"@angular/material/dialog\";\nimport {CustomInteractorDialogComponent} from \"./custom-interactor-dialog/custom-interactor-dialog.component\";\nimport {Subscription} from \"rxjs\";\n\n\n@Component({\n  selector: 'cr-interactors',\n  templateUrl: './interactors.component.html',\n  styleUrls: ['./interactors.component.scss']\n})\nexport class InteractorsComponent implements AfterViewInit, OnDestroy {\n\n  isDataFromPsicquicLoading: boolean = false;\n  resourceTokens: InteractorToken[] = [];\n  clear = false;\n  psicquicResources: PsicquicResource[] = [];\n  currentResource: ResourceAndType | undefined = {name: null, type: null};\n  currentResourceSubscription!: Subscription;\n\n  DISEASE_RESOURCE = 'DisGeNet';\n  INTACT_RESOURCE = 'IntAct';\n  protected readonly ResourceType = ResourceType;\n\n  @Input('cy') cy!: cytoscape.Core;\n  @Input('cys') cys: cytoscape.Core[] = [];\n  @Output('initialiseReplaceElements') initialiseReplaceElements: EventEmitter<any> = new EventEmitter();\n\n  constructor(private diagram: DiagramService, public dark: DarkService, private interactorsService: InteractorService, private state: DiagramStateService, public dialog: MatDialog, private cdr: ChangeDetectorRef) {\n\n  }\n\n  ngAfterViewInit(): void {\n    this.getPsicquicResources();\n    this.currentResourceSubscription = this.interactorsService.currentInteractorResource$.subscribe(resource => {\n      this.currentResource = resource;\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.currentResourceSubscription.unsubscribe()\n  }\n\n  getInteractors(resource: string | null | InteractorToken) {\n    if (!resource) return;\n\n    this.interactorsService.getResourceType(resource as string).subscribe({\n      next: (resourceType) => {\n        switch (resourceType) {\n          case ResourceType.STATIC:\n          case ResourceType.DISGENET:\n            this.getStaticInteractors(resource as string);\n            break;\n          case ResourceType.PSICQUIC:\n            this.getPsicquicResourceInteractors(resource as string);\n            break;\n          case ResourceType.CUSTOM:\n            this.getCustomResourceInteractors(resource as InteractorToken);\n            break;\n          default:\n            throw new Error(\"Unknown resource type encountered: \" + resourceType);\n        }\n      },\n\n      error: (error) => {\n        console.error(\"Error determining resource type:\", error);\n        throw new Error(\"Error determining resource type: \" + error);\n      },\n    })\n  }\n\n  getStaticInteractors(resource: string | null) {\n    if (resource) {\n      this.clear = false\n      let type = resource === ResourceType.STATIC ? ResourceType.STATIC : ResourceType.DISGENET;\n      this.updateCurrentResource(resource, type);\n    } else {\n      return;\n    }\n    this.cys.forEach(cy => {\n      this.interactorsService.getInteractorData(cy, resource).subscribe(interactors => {\n        this.interactorsService.addInteractorOccurrenceNode(interactors, cy, resource);\n        this.initialiseReplaceElements.emit();\n      });\n      this.state.set('overlay', resource)\n    })\n  }\n\n  getPsicquicResourceInteractors(selectedResource: string) {\n    this.isDataFromPsicquicLoading = true;\n    this.clear = false;\n    this.updateCurrentResource(selectedResource, ResourceType.PSICQUIC);\n    this.cys.forEach(cy => {\n      this.interactorsService.getInteractorData(cy, selectedResource).subscribe(interactors => {\n        this.interactorsService.addInteractorOccurrenceNode(interactors, cy, selectedResource);\n        this.isDataFromPsicquicLoading = false;\n        this.state.set('overlay', selectedResource);\n      });\n    });\n  }\n\n  openCustomInteractorDialog() {\n    this.cys.forEach(cy => {\n      // Avoid multiple opening dialogs\n      if (this.dialog.openDialogs.length === 1) {\n        return\n      }\n      const dialogRef = this.dialog.open(CustomInteractorDialogComponent, {\n        data: {cy: cy},\n        restoreFocus: false // Deselect button when closing\n      });\n\n      dialogRef.afterClosed().subscribe(result => {\n        const resource = dialogRef.componentInstance.token;\n        if (resource) {\n          this.resourceTokens!.push(resource);\n          this.clear = false;\n          this.updateCurrentResource(resource.summary.name, ResourceType.CUSTOM);\n          this.state.set('overlay', resource.summary.token);\n        }\n        this.cdr.detectChanges();\n      })\n    })\n  }\n\n  isSelected(resource: InteractorToken): boolean {\n    return this.resourceTokens!.includes(resource);\n  }\n\n  getCustomResourceInteractors(resource: InteractorToken) {\n\n    if (!resource.summary) return\n\n    this.cys.forEach(cy => {\n      this.interactorsService.fetchCustomInteractors(resource, cy).subscribe((result) => {\n        this.interactorsService.addInteractorOccurrenceNode(result.interactors, cy, result.interactors.resource);\n        this.clear = false;\n        this.updateCurrentResource(resource!.summary.name, ResourceType.CUSTOM);\n        this.state.set('overlay', resource.summary.token);\n      })\n    })\n  }\n\n  deleteCustomResource(resource: InteractorToken) {\n    const index = this.resourceTokens!.indexOf(resource);\n    if (index !== -1) {\n      this.resourceTokens!.splice(index, 1);\n      this.cys.forEach(cy => {\n        cy.elements(`[resource = '${resource}']`).remove();\n        this.state.set('overlay', null);\n      })\n    }\n  }\n\n  clearInteractors() {\n    this.cys.forEach(cy => {\n      this.interactorsService.clearAllInteractorNodes(cy);\n      this.clear = true;\n      this.updateCurrentResource(null, null);\n      this.state.set('overlay', null);\n    })\n  }\n\n  updateCurrentResource(name: string | null, type: ResourceType | null) {\n    if (name && type) {\n      const resource: ResourceAndType = {name, type};\n      this.interactorsService.setCurrentResource(resource);\n    } else {\n      this.interactorsService.setCurrentResource({name: null, type: null});\n    }\n  }\n\n  getPsicquicResources() {\n    this.interactorsService.getPsicquicResources().subscribe(resources => {\n      this.psicquicResources = resources;\n    })\n  }\n}\n","<ng-template #dividerTemplate let-text>\n  <div class=\"divider-container\">\n    <div class=\"line\">\n      <mat-divider class=\"divider\"></mat-divider>\n    </div>\n    <div class=\"text\">{{ text }}</div>\n    <div class=\"line\">\n      <mat-divider class=\"divider\"></mat-divider>\n    </div>\n  </div>\n</ng-template>\n\n<div id=\"interactor-container\" class=\"variables\">\n\n  <mat-card class=\"card\">\n    <mat-card-content>\n      <div class=\"button-container\">\n        <button mat-raised-button class=\"raised-full-width-button\" (click)=\"clearInteractors()\"\n                [ngClass]=\"{'active-button': clear}\">\n          <mat-icon [ngClass]=\"{'active-icon': clear}\" color=\"primary\">clear</mat-icon>\n          Clear overlays\n        </button>\n      </div>\n\n      <!--Using $implicit allows you to pass a value into a template without explicitly naming the context variable-->\n      <ng-container *ngTemplateOutlet=\"dividerTemplate; context: { $implicit: 'Main' }\"></ng-container>\n\n      <div class=\"main-resource\">\n        <button class=\"full-width\" mat-button (click)=\"getInteractors(INTACT_RESOURCE)\"\n                [ngClass]=\"{'active-button': currentResource?.type === ResourceType.STATIC}\">IntAct\n        </button>\n\n        <button class=\"full-width\" mat-button (click)=\"getInteractors(DISEASE_RESOURCE)\"\n                [ngClass]=\"{'active-button': currentResource?.type === ResourceType.DISGENET}\">DisGeNet\n        </button>\n      </div>\n\n      <ng-container *ngTemplateOutlet=\"dividerTemplate; context: { $implicit: 'PSICQUIC' }\"></ng-container>\n\n      <mat-grid-list cols=\"2\" rowHeight=\"28px\" [gutterSize]=\"'5px'\">\n        <mat-grid-tile *ngFor=\"let resource of psicquicResources\" class=\"rounded-corner\">\n          <button class=\"full-width psicquic-button\" mat-button\n                  (click)=\"getInteractors(resource.name)\"\n                  [ngClass]=\"{'active-button': currentResource?.name === resource.name}\">\n            <div class=\"resource-name\">\n              <span>{{ resource.name }}</span>\n              <mat-spinner class=\"spinner-color\" diameter=\"20\"\n                           *ngIf=\"isDataFromPsicquicLoading && currentResource?.name === resource.name\"></mat-spinner>\n            </div>\n          </button>\n        </mat-grid-tile>\n      </mat-grid-list>\n\n      <ng-container *ngTemplateOutlet=\"dividerTemplate; context: { $implicit: 'Custom' }\"></ng-container>\n\n      <mat-selection-list *ngIf=\"resourceTokens?.length != 0\" [multiple]=false hideSingleSelectionIndicator=true>\n        <mat-list-option *ngFor=\"let resourceToken of resourceTokens\" [value]=\"resourceToken\"\n                         [selected]=\"isSelected(resourceToken)\" (click)=\"getInteractors(resourceToken)\"\n                         [ngClass]=\"{'active-button': currentResource?.name === resourceToken.summary.name}\"\n                         class=\"full-width\">\n          <div class=\"resource-name surface-variant\">\n            <div>{{ resourceToken.summary.name }}</div>\n            <button mat-icon-button (click)=\"deleteCustomResource(resourceToken)\">\n              <mat-icon>delete</mat-icon>\n            </button>\n          </div>\n        </mat-list-option>\n      </mat-selection-list>\n\n      <div class=\"button-container\">\n        <button mat-raised-button class=\"raised-full-width-button\" (click)=\"openCustomInteractorDialog()\">\n          <mat-icon color=\"primary\">add</mat-icon>\n          Add overlay resource\n        </button>\n      </div>\n\n\n    </mat-card-content>\n  </mat-card>\n</div>\n","\nimport {NodeSingular} from \"cytoscape\";\nimport {Interactor} from \"../model/interactor.model\";\n\nexport interface Position {\n  x: number;\n  y: number;\n}\n\nexport interface Segment {\n  from: Position;\n  to: Position;\n}\n\n\nclass InteractorsLayout {\n\n  public static MAX_INTERACTORS = 18\n  public static BOX_WIDTH = 45;\n  public static BOX_HEIGHT = 20;\n  public static SEPARATION = Math.round(this.BOX_HEIGHT * 1.5);\n  public static MIN_HEIGHT = 2 * (2 * this.BOX_HEIGHT + this.SEPARATION);\n  public static MIN_WIDTH = 2 * (2 * this.BOX_WIDTH + this.SEPARATION);\n\n  constructor() {\n  }\n\n  public static getNumberOfInteractorsToDraw(interactors: Interactor[]) {\n    if (interactors == null) return 0;\n    return Math.min(interactors.length, InteractorsLayout.MAX_INTERACTORS);\n  }\n\n  public getSegmentOrigin(edgeIndex: number, center: Position, width: number, height: number): Position {\n    edgeIndex = edgeIndex % 4;\n    return {\n      x: center.x + (width / 2) * (edgeIndex === 1 || edgeIndex === 2 ? 1 : -1),\n      y: center.y + (height / 2) * (edgeIndex > 1 ? 1 : -1)\n    }\n  }\n\n  public getCentre(minX: number, maxX: number, minY: number, maxY: number): Position {\n    return {\n      x: minX + (maxX - minX) / 2.0,\n      y: minY + (maxY - minY) / 2.0\n    }\n  }\n\n  public interpolateInLayout(segment: Segment, pos: number, totalPositions: number): Position {\n    const r = pos / totalPositions;\n    return {\n      x: segment.from.x + r * (segment.to.x - segment.from.x),\n      y: segment.from.y + r * (segment.to.y - segment.from.y)\n    }\n  }\n\n  public getPosition(targetNode: NodeSingular, interactorIndex: number, numberToDraw: number) {\n\n    const centerPosition: { x: number, y: number } = targetNode.data('entity').position()\n    const lp = LayoutParameter.calculate(numberToDraw);\n\n    let edgeNodes = lp.nodeOnTop;\n    let nodeCount = 0;\n    let prevNodeCount = 0;\n    let edgeIndex;\n    const nodePerEdges = [lp.nodeOnTop, lp.nodeOnRight, lp.nodeOnBottom, lp.nodeOnLeft];\n\n    for (edgeIndex = 0; edgeIndex < nodePerEdges.length; edgeIndex++) {\n      edgeNodes = nodePerEdges[edgeIndex];\n      prevNodeCount = nodeCount;\n      nodeCount += edgeNodes - 1;\n      if (interactorIndex < nodeCount) {\n        break;\n      }\n    }\n\n    const edgePos = interactorIndex - prevNodeCount;\n    const pos = this.interpolateInLayout(\n      // new Segment(\n      {\n        from: this.getSegmentOrigin(edgeIndex, centerPosition, lp.width, lp.height),\n        to: this.getSegmentOrigin(edgeIndex + 1, centerPosition, lp.width, lp.height)\n      },\n      //  ),\n      edgePos,\n      edgeNodes - 1\n    );\n\n    const minX = pos.x - InteractorsLayout.BOX_WIDTH;\n    const maxX = pos.x + InteractorsLayout.BOX_WIDTH;\n    const minY = pos.y - InteractorsLayout.BOX_HEIGHT;\n    const maxY = pos.y + InteractorsLayout.BOX_HEIGHT;\n\n    return this.getCentre(minX, maxX, minY, maxY)\n  }\n}\n\nclass LayoutParameter {\n  constructor(\n    public nodeOnLeft: number,\n    public nodeOnRight: number,\n    public nodeOnTop: number,\n    public nodeOnBottom: number,\n    public width: number,\n    public height: number\n  ) {\n  }\n\n  static calculate(n: number): LayoutParameter {\n    const rationalNodePerEdge = n / 4 + 1;\n    const baseNodePerEdge = Math.floor(rationalNodePerEdge);\n    const remaining = Math.round((rationalNodePerEdge - baseNodePerEdge) * 4);\n\n    const nodeOnLeft = baseNodePerEdge + (remaining > 0 ? 1 : 0);\n    const nodeOnRight = baseNodePerEdge + (remaining > 1 ? 1 : 0);\n    const nodeOnTop = baseNodePerEdge + (remaining > 2 ? 1 : 0);\n    const nodeOnBottom = baseNodePerEdge;\n\n    const height = Math.max((2 * InteractorsLayout.BOX_HEIGHT + InteractorsLayout.SEPARATION) * (nodeOnLeft - 1), InteractorsLayout.MIN_HEIGHT);\n    const width = Math.max((2 * InteractorsLayout.BOX_WIDTH + InteractorsLayout.SEPARATION) * (nodeOnTop - 1), InteractorsLayout.MIN_WIDTH);\n\n    return new LayoutParameter(nodeOnLeft, nodeOnRight, nodeOnTop, nodeOnBottom, width, height);\n  }\n}\n\nexport default InteractorsLayout;\n","import cytoscape from \"cytoscape\";\n\nexport interface InteractorEntity {\n  acc: string;\n  count: number;\n  interactors: Interactor[] | null;\n}\n\nexport interface Interactor {\n  acc: string;\n  accURL: string;\n  alias: string;\n  evidences: number;\n  evidencesURL: string;\n  id: number;\n  score: number;\n  type: string;\n  existingNodes?: cytoscape.NodeCollection\n}\n\n\nexport interface Interactors {\n  entities: InteractorEntity[];\n  resource: string; //STATIC, DisGeNet PSICQUIC resource (e.g. IntAct, MINT, etc) or Custom resource\n}\n\nexport interface PsicquicResource{\n  name: string;\n  soapURL: string;\n  restURL: string;\n  active: boolean;\n}\n\n\nexport interface InteractorToken{\n  summary: Summary;\n  warningMessage: string;\n}\n\ninterface Summary {\n  token:string;\n  interactors: number;\n  interactions: number;\n  fileName: string;\n  name: string;\n}\n\nexport class InputCategory {\n  url: string | undefined;\n  content: string | FormData | undefined;\n}\n\nexport enum ResourceType {\n  STATIC = 'IntAct',\n  DISGENET = 'DisGeNet',\n  PSICQUIC = 'PSICQUIC',\n  CUSTOM = 'custom'\n}\n\nexport type ResourceAndType = { name: string | null, type: ResourceType | null }\n","import {Injectable} from \"@angular/core\";\nimport {HttpClient, HttpHeaders, HttpParams} from \"@angular/common/http\";\nimport cytoscape, {NodeCollection, NodeSingular} from \"cytoscape\";\nimport {catchError, map, Observable, of, Subject, switchMap} from \"rxjs\";\nimport {\n  Interactor,\n  Interactors,\n  InteractorToken,\n  PsicquicResource,\n  ResourceAndType,\n  ResourceType\n} from \"../model/interactor.model\";\n\n\nimport InteractorsLayout from \"../layout/interactors-layout\";\nimport {DiagramService} from \"../../services/diagram.service\";\nimport {environment} from \"../../../environments/environment\";\n\n@Injectable({\n  providedIn: 'root',\n})\n\nexport class InteractorService {\n\n  private readonly _PREFIX_INTERACTOR = `${environment.host}/ContentService/interactors/`;\n  private readonly _PREFIX_DISEASE = `${environment.host}/overlays/disgenet/`;\n\n  private readonly _STATIC_URL = this._PREFIX_INTERACTOR + 'static/molecules/details';\n  private readonly _PSICQUIC_RESOURCE_URL = this._PREFIX_INTERACTOR + 'psicquic/resources/'\n  private readonly _PSICQUIC_URL = this._PREFIX_INTERACTOR + 'psicquic/molecules/';\n  public readonly UPLOAD_URL = this._PREFIX_INTERACTOR + 'upload/tuple/';\n  public readonly UPLOAD_PSICQUIC_URL = this._PREFIX_INTERACTOR + 'upload/psicquic/url';\n  private readonly _TOKEN_URL = this._PREFIX_INTERACTOR + 'token/';\n\n  private readonly DISGENET_URL = this._PREFIX_DISEASE + 'findByGenes';\n\n  private readonly DEFAULT_INTERACTOR_WIDTH = 100;\n  private readonly DEFAULT_DISGENET_WIDTH = 250\n  private readonly INTERACTOR_PADDING = 20;\n  private readonly CHAR_WIDTH = 10;\n  private readonly CHAR_HEIGHT = 12;\n  private readonly GENE_DECORATION_HEIGHT = 20;\n\n\n  identifiers: string = '';\n  cyToSelectedResource = new Map<cytoscape.Core, string>();\n\n  private currentInteractorResourceSubject = new Subject<ResourceAndType>();\n  public currentInteractorResource$ = this.currentInteractorResourceSubject.asObservable();\n\n  constructor(private http: HttpClient, private diagramService: DiagramService) {\n  }\n\n  setCurrentResource(r: ResourceAndType) {\n    this.currentInteractorResourceSubject.next(r);\n  }\n\n  private getIdentifiers(cy: cytoscape.Core): void {\n    this.identifiers = this.getIdentifiersFromGraph(cy);\n  }\n\n  private updateIdentifiers(cy: cytoscape.Core): void {\n    const currentIdentifiers = this.getIdentifiersFromGraph(cy);\n\n    if (!this.identifiers || !this.areSame(this.identifiers, currentIdentifiers)) {\n      this.identifiers = currentIdentifiers;\n    } else {\n      this.getIdentifiers(cy);\n    }\n  }\n\n  areSame(idsA: string, idsB: string): boolean {\n    const normalize = (str: string): string => str.split(',').sort().join(',');\n    return normalize(idsA) === normalize(idsB);\n  }\n\n\n  public getIdentifiersFromGraph(cy: cytoscape.Core) {\n    const graphNodes = cy?.nodes(`[graph]`);\n    const result: string[] = [];\n\n    graphNodes?.forEach(entity => {\n      const schemaClass = entity.data(\"graph\").schemaClass;\n      if (schemaClass === \"EntityWithAccessionedSequence\" || schemaClass === \"SimpleEntity\") {\n        result.push(entity.data(\"acc\"));\n      }\n    });\n\n    // Concatenate elements from the set values into a single string\n    return [...new Set(result)].join(',')\n\n  }\n\n  public getInteractorData(cy: cytoscape.Core, resource: string): Observable<Interactors> {\n    this.updateIdentifiers(cy);\n    let url;\n    if (resource === ResourceType.STATIC) {\n      url = this._STATIC_URL;\n    } else if (resource === ResourceType.DISGENET) {\n      url = this.DISGENET_URL;\n    } else {\n      url = this._PSICQUIC_URL + resource.toLowerCase() + '/details'\n    }\n\n    return this.http.post<Interactors>(url, this.identifiers, {\n      headers: new HttpHeaders({'Content-Type': 'text/plain'})\n    });\n  }\n\n\n  public addInteractorOccurrenceNode(interactors: Interactors, cy: cytoscape.Core, resource: string) {\n    if (this.cyToSelectedResource.has(cy) && this.cyToSelectedResource.get(cy) !== resource) {\n      const previousResource = this.cyToSelectedResource.get(cy);\n      cy.elements(`[resource='${previousResource}']`).remove();\n      this.createInteractorOccurrenceNode(interactors, cy, resource);\n      this.cyToSelectedResource.set(cy, resource);\n    } else if (!this.cyToSelectedResource.has(cy)) {\n      this.createInteractorOccurrenceNode(interactors, cy, resource);\n      this.cyToSelectedResource.set(cy, resource);\n    }\n  }\n\n  public createInteractorOccurrenceNode(interactors: Interactors, cy: cytoscape.Core, resource: string) {\n    const classes = resource === ResourceType.DISGENET ? ['InteractorOccurrences', 'disease'] : ['InteractorOccurrences'];\n\n    if (interactors.entities === undefined) return;\n\n    interactors.entities\n      .filter(interactorEntity => interactorEntity.count > 0)\n      .forEach(interactorEntity => {\n\n        const entities = cy?.nodes(`[acc = '${interactorEntity.acc}']`);\n        entities?.forEach(entityNode => {\n\n          const pos = {...entityNode.position()};\n          pos.x += entityNode.width() / 2;\n          pos.y -= entityNode.height() / 2;\n\n          const id = entityNode.id() + '-occ' + '-' + resource.toLowerCase();\n\n          if (!entityNode.classes().includes('Modification')) {\n            const occurrenceNode = cy?.add({\n              data: {\n                ...entityNode.data(),\n                id: id,\n                displayName: interactorEntity.count,\n                entity: entityNode,\n                interactors: interactorEntity.interactors,\n                resource: resource\n              },\n              classes: classes,\n              pannable: true,\n              grabbable: false,\n              position: pos\n            });\n\n            entityNode.data('occurrence', occurrenceNode);\n          }\n\n        });\n      });\n  }\n\n\n  public addInteractorNodes(occurrenceNode: cytoscape.NodeSingular, cy: cytoscape.Core) {\n    const interactorsData = occurrenceNode.data('interactors');\n    const resource = occurrenceNode.data('resource')\n    InteractorsLayout.BOX_WIDTH = resource === ResourceType.DISGENET ? this.DEFAULT_DISGENET_WIDTH / 2 : this.DEFAULT_INTERACTOR_WIDTH / 2;\n    const numberToAdd = InteractorsLayout.getNumberOfInteractorsToDraw(interactorsData)\n    const [dynamicInteractors, existingInteractors] = this.getAllInteractors(interactorsData, cy, numberToAdd);\n    const allNodes: Interactor[] = [...dynamicInteractors, ...existingInteractors];\n    cy.batch(() => {\n\n      const nodes = this.createInteractorNodes(dynamicInteractors, occurrenceNode, cy, dynamicInteractors.length, resource);\n      this.createInteractorEdges(allNodes, occurrenceNode, cy, resource);\n\n      this.displayInteractors(nodes, cy);\n    })\n  }\n\n  public getAllInteractors(interactorsData: Interactor[], cy: cytoscape.Core, numberToAdd: number) {\n    const dynamicInteractors = [];\n    const existingInteractors = [];\n    // get interactors to draw with a provided a number, collect existing interactors for creating edge\n    for (let interactor of interactorsData) {\n      const diagramNodes = cy?.nodes(`.PhysicalEntity[acc = '${interactor.acc}']`);\n\n      if (!diagramNodes || diagramNodes.length === 0) {\n        dynamicInteractors.push(interactor);\n      } else {\n        interactor.existingNodes = diagramNodes;\n        existingInteractors.push(interactor);\n      }\n    }\n\n    return [dynamicInteractors.slice(0, numberToAdd), existingInteractors];\n  }\n\n  public createInteractorNodes(interactorsData: Interactor[], targetNode: NodeSingular, cy: cytoscape.Core, numberToAdd: number, resource: string) {\n    const interactorNodes: cytoscape.NodeDefinition[] = [];\n    const interactorLayout = new InteractorsLayout();\n\n    interactorsData.forEach((interactor: Interactor, index: number) => {\n      const position = interactorLayout.getPosition(targetNode, index, numberToAdd)\n      const displayName = interactor.alias ? interactor.alias : interactor.acc;\n      const defaultType = ['Protein', 'PhysicalEntity'] // Default interactor type for custom resource when there is no type data provided\n      const classes = resource === ResourceType.DISGENET ? ['PhysicalEntity', 'Interactor', 'disease'] : [...this.diagramService.nodeTypeMap.get(interactor.type) || defaultType, 'Interactor'];\n      let width = resource === ResourceType.DISGENET ? this.DEFAULT_DISGENET_WIDTH : this.DEFAULT_INTERACTOR_WIDTH;\n      let height = this.CHAR_HEIGHT + 2 * this.INTERACTOR_PADDING;\n      if (interactor.type === 'Gene') height += this.GENE_DECORATION_HEIGHT;\n\n      const id = 'interactor-' + interactor.acc;\n      interactorNodes.push({\n        data: {\n          ...targetNode.data(),\n          id: id,\n          displayName: displayName.replace(/([/,:;-])/g, \"$1\\u200b\"),\n          html: this.diagramService.getStructureVideoHtml({id, type: interactor.type || \"Protein\"}, width, height, interactor.acc),\n          width: width,\n          height: height,\n          accURL: interactor.accURL,\n          score: interactor.score,\n          evidences: interactor.evidences,\n          evidenceURLs: interactor.evidencesURL,\n          resource: resource\n        },\n        classes: classes,\n        position: position,\n        selectable: false\n      })\n    })\n    return cy?.add(interactorNodes)\n  }\n\n\n  public createInteractorEdges(interactorsData: Interactor[], occurrenceNode: NodeSingular, cy: cytoscape.Core | undefined, resource: string) {\n    if (!cy) return\n\n    const resourceClass = resource === ResourceType.DISGENET ? ['Interactor', 'disease'] : ['Interactor'];\n\n    const interactorEdges: cytoscape.EdgeDefinition[] = [];\n    interactorsData.forEach((interactor: Interactor) => {\n      const entity = occurrenceNode.data('entity');\n      const targetNodes = interactor.existingNodes ? interactor.existingNodes : [cy.getElementById('interactor-' + interactor.acc)];\n      targetNodes.forEach(targetNode => {\n        interactorEdges.push({\n          data: {\n            ...targetNode.data(),\n            id: interactor.acc + '-' + entity.id(),\n            source: entity.id(),\n            target: targetNode.id(),\n            edgeToTarget: occurrenceNode.id(),\n            evidenceURLs: interactor.evidencesURL,\n            resource: resource\n          },\n          classes: resourceClass,\n          selectable: false\n        })\n      })\n\n    })\n    cy?.add(interactorEdges)\n  }\n\n  public displayInteractors(interactorsToDisplay: NodeCollection, cy: cytoscape.Core) {\n\n    let layoutOptions: cytoscape.LayoutOptions = {\n      name: 'preset',\n      fit: false\n    }\n    interactorsToDisplay.layout(layoutOptions).run();\n  }\n\n  public removeInteractorNodes(occurrenceNode: cytoscape.NodeSingular) {\n    const entityNode = occurrenceNode.data('entity');\n    const interactors = entityNode.closedNeighborhood('node.Interactor');\n\n    entityNode.connectedEdges('.Interactor').remove();\n    interactors.forEach((interactor: cytoscape.NodeSingular) => {\n      if (interactor.connectedEdges().empty()) {\n        interactor.remove()\n      }\n    })\n  }\n\n  public clearAllInteractorNodes(cy: cytoscape.Core) {\n    this.cyToSelectedResource.clear();\n    const interactorOcc = cy.elements(`.InteractorOccurrences`).remove();\n    interactorOcc.forEach(node => {\n      if (node.hasClass('opened')) {\n        this.removeInteractorNodes(node)\n      }\n    })\n  }\n\n  public getPsicquicResources(): Observable<PsicquicResource[]> {\n    return this.http.get<PsicquicResource[]>(this._PSICQUIC_RESOURCE_URL, {\n      headers: new HttpHeaders({'Content-Type': 'application/json;charset=UTF-8'})\n    }).pipe(\n      map((psicquicResources) => {\n        return psicquicResources.filter(r => r.name !== ResourceType.STATIC && r.active)\n      })\n    )\n  }\n\n\n  public getInteractorsToken(name: string, url: string, body: string | FormData) {\n    return this.http.post<InteractorToken>(url, body, {\n      params: new HttpParams().set('name', name),\n    })\n  }\n\n\n  /**\n   * This method is used in custom dialog for retrieving interactors with a token , it first generates a token then\n   * get interactors data from that token. There are different API calls based on user's selection to generate tokens.\n   *\n   * @param name custom resource name\n   * @param url  different URLs, for instance, add data from a local file, the url will be UPLOAD_URL\n   * @param body content\n   * @param cy   cytoscape container\n   */\n  public getInteractorsFromToken(name: string, url: string, body: string | FormData, cy: cytoscape.Core): Observable<{\n    token: InteractorToken,\n    interactors: Interactors\n  }> {\n    this.updateIdentifiers(cy);\n    return this.getInteractorsToken(name, url, body).pipe(\n      switchMap(token => this.fetchCustomInteractors(token, cy))\n    );\n  }\n\n  public fetchCustomInteractors(token: InteractorToken, cy: cytoscape.Core): Observable<{\n    token: InteractorToken,\n    interactors: Interactors\n  }> {\n    this.updateIdentifiers(cy);\n    return this.http.post<Interactors>(this._TOKEN_URL + token.summary.token, this.identifiers, {\n      headers: new HttpHeaders({'Content-Type': 'text/plain'})\n    }).pipe(\n      map((interactors) => ({token: token, interactors: interactors}))\n    );\n  }\n\n\n  public getResourceTypeStatic(resource: string): ResourceType | null {\n\n    if (resource === ResourceType.STATIC) {\n      return ResourceType.STATIC;\n    }\n    if (resource === ResourceType.DISGENET) {\n      return ResourceType.DISGENET;\n    }\n\n    // isFromPSICQUIC will be a function with a static dictionary to map to result, not Observable\n    if (this.isFromPSICQUIC(resource)) {\n      return ResourceType.PSICQUIC;\n    }\n    // none of above then is custom\n    if (this.isCustomResource(resource)) {\n      return ResourceType.CUSTOM;\n    }\n\n    return null;\n  }\n\n\n  public getResourceType(resource: string): Observable<ResourceType | null> {\n    if (resource === ResourceType.STATIC) {\n      return of(ResourceType.STATIC);\n    }\n    if (resource === ResourceType.DISGENET) {\n      return of(ResourceType.DISGENET);\n    }\n\n    return this.isFromPSICQUIC(resource).pipe(\n      switchMap(isPsicquic => {\n        if (isPsicquic) {\n          return of(ResourceType.PSICQUIC);\n        }\n\n        return this.isCustomResource(resource).pipe(\n          map(isCustom => isCustom ? ResourceType.CUSTOM : null)\n        );\n      }),\n      catchError(() => of(null))\n    );\n  }\n\n  public isFromPSICQUIC(resource: string): Observable<boolean> {\n    if (!resource) {\n      return of(false);\n    }\n\n    return this.getPsicquicResources().pipe(\n      map(psicquicResources =>\n        psicquicResources.some(pr => pr.name === resource && pr.name !== ResourceType.STATIC)\n      )\n    );\n  }\n\n  public isCustomResource(resource: string): Observable<boolean> {\n    if (!resource) {\n      return of(false);\n    }\n\n    return this.getPsicquicResources().pipe(\n      map(psicquicResources => {\n        const isPsicquic = psicquicResources.some(pr => pr.name === resource && pr.name !== ResourceType.STATIC);\n        return resource !== ResourceType.STATIC &&\n          resource !== ResourceType.DISGENET &&\n          !isPsicquic;\n      })\n    );\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {catchError, distinctUntilChanged, map, Observable, of, switchMap, tap} from \"rxjs\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {environment} from \"../../environments/environment\";\nimport {Analysis} from \"../model/analysis.model\";\nimport {DiagramStateService} from \"./diagram-state.service\";\nimport {brewer, Scale, scale} from \"chroma-js\";\n\n\nexport type Palette = keyof typeof brewer;\n\nexport type PaletteGroup = 'sequential' | 'diverging' | 'continuous';\n\n// type PaletteSummary = { name: Palette, scale: Scale, gradient: string };\n\nexport class PaletteSummary {\n  private readonly _scale: Scale;\n  scale: Scale;\n  gradient: string;\n\n  constructor(private name: Palette) {\n    this._scale = scale(name).mode('oklab')\n    this.scale = this._scale\n    this.gradient = `linear-gradient(to right in oklab, ${brewer[this.name].join(', ')})`\n  }\n\n  classes(n: number) {\n    if (n > 0) {\n      this.scale = this._scale.classes(n)\n      this.gradient = `linear-gradient(to right in oklab, ${this.scale.colors(n).map((c, i) => `${c} ${i / n * 100}%, ${c} ${(i + 1) / n * 100}%`).join(', ')})`\n    } else {\n      this.scale = this._scale\n      this.gradient = `linear-gradient(to right in oklab, ${brewer[this.name].join(', ')})`\n    }\n  }\n\n  domain(min: number, max: number) {\n    this.scale = this.scale.domain([min, max])\n  }\n}\n\n\nexport type Examples = 'uniprot' | 'microarray';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AnalysisService {\n\n  paletteOptions: Map<Palette, PaletteSummary> = new Map(Object.keys(brewer)\n    .filter(name => name.toLowerCase() !== name)\n    .map(name => ([name as Palette, new PaletteSummary(name as Palette)])));\n\n  palette: PaletteSummary = this.paletteOptions.get('RdBu')!;\n  palettes: { name: PaletteGroup, palettes: Palette[], valid: boolean }[] = [\n    {\n      name: 'sequential', valid: false, palettes: [\n        'Greys', 'Purples', 'Blues', 'Greens', 'Oranges', 'Reds',\n        'BuPu', 'RdPu', 'PuRd',\n        'GnBu', 'YlGnBu', 'PuBu', 'PuBuGn',\n        'BuGn', 'YlGn',\n        'YlOrBr', 'OrRd', 'YlOrRd'\n      ]\n    },\n    {name: 'diverging', valid: true, palettes: ['RdYlGn', 'RdYlBu', 'RdGy', 'RdBu', 'PuOr', 'PRGn', 'PiYG', 'BrBG']},\n    {name: 'continuous', valid: false, palettes: ['Spectral', 'Viridis']},\n  ]\n\n  result?: Analysis.Result;\n\n  result$ = this.state.onChange.analysis$.pipe(\n    switchMap(token =>\n      token !== null ?\n        (\n          token === this.result?.summary.token ?\n            of(this.result) : // Same token as cache => use cache\n            this.loadAnalysis(token) // Different token than cache => load result\n        ) :\n        of(undefined) // No tokens => No results\n    )\n  )\n\n  constructor(private http: HttpClient, private state: DiagramStateService) {\n  }\n\n  clearAnalysis() {\n    this.result = undefined;\n    this.state.set('analysis', null);\n  }\n\n  analyse(data: string, params?: Partial<Analysis.Parameters>): Observable<Analysis.Result> {\n    return this.http.post<Analysis.Result>(`${environment.host}/AnalysisService/identifiers/projection`, data, {params}).pipe(\n      tap(result => this.result = result),\n      tap(result => this.state.set('analysis', result.summary.token)),\n    )\n  }\n\n  loadAnalysis(token?: string, params?: Partial<Analysis.Parameters>): Observable<Analysis.Result> {\n    console.log('load analysis')\n    return this.http.get<Analysis.Result>(`${environment.host}/AnalysisService/token/${token || this.state.get('analysis')}`, {params}).pipe(\n      tap(result => this.result = result)\n    )\n  }\n\n  foundEntities(pathway: string, token?: string, resource: Analysis.Resource = 'TOTAL'): Observable<Analysis.FoundEntities> {\n    return this.http.get<Analysis.FoundEntities>(`${environment.host}/AnalysisService/token/${token || this.state.get('analysis')}/found/all/${pathway}`, {\n      params: {\n        resource\n      }\n    }).pipe(\n      catchError(() => of({\n        pathway,\n        foundEntities: 0,\n        foundInteractors: 0,\n        expNames: [],\n        entities: [],\n        interactors: [],\n        resources: [resource]\n      }))\n    )\n  }\n\n  pathwaysResults(pathwayIds: number[], token?: string, resource: Analysis.Resource = 'TOTAL'): Observable<Analysis.Pathway[]> {\n    if (pathwayIds.length === 0) return of([]);\n    return this.http.post<Analysis.Pathway[]>(`${environment.host}/AnalysisService/token/${token || this.state.get('analysis')}/filter/pathways`, pathwayIds.join(','), {\n      params: {resource}\n    }).pipe(\n      catchError(() => of([]))\n    )\n  }\n\n  example(name: Examples): Observable<Analysis.Result> {\n    return this.http.get(`assets/data/analysis-examples/${name}.tsv`, {responseType: 'text'}).pipe(\n      switchMap(example => this.analyse(example))\n    )\n  }\n\n\n}\n","import {Injectable} from '@angular/core';\nimport {BehaviorSubject} from \"rxjs\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DarkService {\n\n  private _body: HTMLBodyElement | null;\n  private _isDark: boolean = false;\n\n  private readonly $_dark = new BehaviorSubject(this._isDark);\n  public readonly $dark = this.$_dark.asObservable();\n\n  constructor() {\n    this._body = document.querySelector('body');\n\n    // Update theme if other tabs are changing it\n    // window.addEventListener('storage', (e) => {\n    //   if (e.key === 'is-dark') this.isDark = JSON.parse(e.newValue || 'false');\n    // });\n\n    const localValue = localStorage.getItem('is-dark');\n    if (localValue) this.isDark = JSON.parse(localValue);\n    else if (window.matchMedia('(prefers-color-scheme)').media !== 'not all') {\n      this.isDark = window.matchMedia('(prefers-color-scheme: dark)').matches;\n    }\n  }\n\n  get isDark(): boolean {\n    return this._isDark;\n  }\n\n  set isDark(value: boolean) {\n    this._isDark = value;\n    localStorage.setItem('is-dark', JSON.stringify(value));\n    if (value) this._body?.classList.add('dark');\n    else this._body?.classList.remove('dark');\n    this.$_dark.next(this._isDark);\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {BehaviorSubject, distinctUntilChanged, firstValueFrom, map, Observable, tap} from \"rxjs\";\nimport {isArray, isBoolean, isNumber} from \"lodash\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {environment} from \"../../environments/environment\";\n\n\nexport interface UrlParam<T> {\n  value: T\n  otherTokens?: string[]\n}\n\nexport type State = {\n  [token: string]: UrlParam<any>\n  select: UrlParam<string>\n  flag: UrlParam<string[]>\n  path: UrlParam<string[]>\n  flagInteractors: UrlParam<boolean>\n  overlay: UrlParam<string | null>\n  analysis: UrlParam<string | null>\n  analysisProfile: UrlParam<string | null>\n};\n\ntype ObservableState = { [K in keyof State as `${K & string}$`]: Observable<State[K]['value']> };\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DiagramStateService {\n\n  private propagate = false;\n\n\n  private state: State = {\n    select: {otherTokens: ['SEL'], value: ''},\n    flag: {otherTokens: ['FLG'], value: []},\n    path: {otherTokens: ['PATH'], value: []},\n    flagInteractors: {otherTokens: ['FLGINT'], value: false},\n    overlay: {value: ''},\n    analysis: {value: null, otherTokens: ['ANALYSIS']},\n    analysisProfile: {value: null},\n  };\n\n  private _state$ = new BehaviorSubject<State>(this.state);\n  public state$ = this._state$.asObservable();\n  public onChange: ObservableState = Object.keys(this.state)\n    .reduce((properties, prop: keyof State) => {\n      properties[`${prop}$`] = this.state$.pipe(\n        map(state => state[prop].value),\n        distinctUntilChanged((v1, v2) => v1?.toString() === v2?.toString()),\n        tap(v => console.log(`${prop} has been updated to ${v}`)),\n        // share()\n      )\n      return properties;\n    }, {} as ObservableState);\n\n  constructor(route: ActivatedRoute, private router: Router, private http: HttpClient) {\n    route.queryParamMap.subscribe(async params => {\n      for (const mainToken in this.state) {\n        const param = this.state[mainToken];\n        const tokens: string[] = [mainToken, ...param.otherTokens || []];\n        const token = tokens.find(token => params.has(token));\n        if (token) {\n          const formerValue = param.value;\n          let value = params.get(token)!;\n          if (isArray(param.value)) {\n            const rawValue = value!;\n            param.value = rawValue.split(',').map(v => v.charAt(0).match(/\\d/) ? parseInt(v) : v);\n            const hasDbIds = param.value.some(isNumber);\n            if (hasDbIds) {\n              param.value = await Promise.all(param.value.map((v: string | number) => this.ensureStId(v)));\n              this.set(mainToken, param.value);\n            }\n          } else if (isBoolean(param.value)) {\n            param.value = value === 'true';\n          } else if (value.charAt(0).match(/\\d/)) {\n            this.set(mainToken, await this.dbIdToStId(parseInt(value)))\n          } else {\n            param.value = value\n          }\n        }\n      }\n      if (this.propagate) this._state$.next(this.state);\n    })\n  }\n\n  async ensureStId(id: string | number): Promise<string> {\n    return isNumber(id) ? this.dbIdToStId(id) : id;\n  }\n\n  async dbIdToStId(dbId: number): Promise<string> {\n    return firstValueFrom(this.http.get(`${environment.host}/ContentService/data/query/${dbId}/stId`, {responseType: \"text\"}))\n  }\n\n  get<T extends keyof State>(token: T): State[T]['value'] {\n    return this.state[token].value\n  }\n\n  set<T extends keyof State>(token: T, value: State[T][\"value\"], propagate = true): void {\n    this.state[token].value = value;\n    this.propagate = propagate;\n    this.onPropertyModified();\n  }\n\n  // TODO make unselect remove select from state\n  onPropertyModified() {\n    return this.router.navigate([], {\n      queryParams: {\n        ...Object.entries(this.state)\n          .filter(([token, param]) => param.value && param.value.length !== 0)\n          .reduce((acc, [token, param]) => ({\n            ...acc,\n            [token]: Array.isArray(param.value) ? param.value.join(',') : param.value\n          }), {})\n      }\n    })\n  }\n\n\n}\n","import {Injectable} from '@angular/core';\nimport {catchError, forkJoin, map, Observable, of, switchMap, tap} from \"rxjs\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {Diagram, Edge, Node, NodeConnector, Position, Prop, Rectangle} from \"../model/diagram.model\";\nimport {Graph} from \"../model/graph.model\";\nimport Reactome, {Style} from \"reactome-cytoscape-style\";\nimport legend from \"../../assets/json/legend.json\"\nimport {array} from \"vectorious\";\n\nimport cytoscape from \"cytoscape\";\nimport cytoscapeFcose, {FcoseLayoutOptions} from \"cytoscape-fcose\";\nimport NodeDefinition = Reactome.Types.NodeDefinition;\nimport ReactionDefinition = Reactome.Types.ReactionDefinition;\nimport EdgeTypeDefinition = Reactome.Types.EdgeTypeDefinition;\nimport {environment} from \"../../environments/environment\";\n\ncytoscape.use(cytoscapeFcose)\n\n\ntype RelativePosition = { distances: number[], weights: number[] };\n\nconst posToStr = (edge: Edge, pos: Position) => `${edge.id}-${pos.x},${pos.y}`\n\nconst pointToStr = (point: Position) => `${point.x};${point.y}`;\n\nconst scale = <T extends Position | number>(pos: T, scale = 2): T => {\n  if (typeof pos === 'number') return pos * scale as T\n  return {\n    x: pos.x * scale,\n    y: pos.y * scale\n  } as T\n}\n\nconst equal = (pos1: Position, pos2: Position) => pos1.x === pos2.x && pos1.y === pos2.y;\n\nconst avg = (positions: Position[]): Position => {\n  const sum = {x: 0, y: 0};\n  positions.forEach(pos => {\n    sum.x += pos.x;\n    sum.y += pos.y;\n  });\n  sum.x /= positions.length;\n  sum.y /= positions.length;\n  return sum;\n}\nconst squaredDist = (pos1: Position, pos2: Position) => {\n  return Math.pow(pos2.x - pos1.x, 2) + Math.pow(pos2.y - pos1.y, 2)\n}\n\nconst dist = (pos1: Position, pos2: Position) => Math.sqrt(squaredDist(pos1, pos2))\n\nconst closestToAverage = (positions: Position[]): Position => {\n  const average = avg(positions);\n  let closest = positions[0];\n  let min = squaredDist(closest, average);\n  for (let i = 1; i < positions.length; i++) {\n    const pos = positions[i];\n    const dist = squaredDist(pos, average);\n    if (dist < min) {\n      min = dist;\n      closest = pos\n    }\n  }\n  return closest;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DiagramService {\n\n  extraLine: Map<string, Position> = new Map<string, Position>();\n  reverseExtraLine: Map<string, Position> = new Map<string, Position>();\n\n  constructor(private http: HttpClient) {\n  }\n\n  nodeTypeMap = new Map<string, NodeDefinition>([\n      ['Gene', ['Gene', 'PhysicalEntity']],\n      ['RNA', ['RNA', 'PhysicalEntity']],\n      ['Protein', ['Protein', 'PhysicalEntity']],\n      ['Entity', ['GenomeEncodedEntity', 'PhysicalEntity']],\n      ['Complex', ['Complex', 'PhysicalEntity']],\n      ['EntitySet', ['EntitySet', 'PhysicalEntity']],\n      ['Chemical', ['Molecule', 'PhysicalEntity']],\n      ['Cell', ['Cell', 'PhysicalEntity']],\n\n      ['ProteinDrug', ['Protein', 'PhysicalEntity', 'drug']],\n      ['ComplexDrug', ['Complex', 'PhysicalEntity', 'drug']],\n      ['ChemicalDrug', ['Molecule', 'PhysicalEntity', 'drug']],\n      ['EntitySetDrug', ['EntitySet', 'PhysicalEntity', 'drug']],\n\n      ['ProcessNode', ['SUB', 'Pathway']],\n      ['EncapsulatedNode', ['Interacting', 'Pathway']]\n    ]\n  )\n\n  reactionTypeMap = new Map<string | undefined, ReactionDefinition>([\n      [undefined, ['transition', 'reaction']],\n      ['transition', ['transition', 'reaction']],\n      ['Transition', ['transition', 'reaction']],\n      ['Process', ['transition', 'reaction']],\n\n      ['binding', ['association', 'reaction']],\n      ['Association', ['association', 'reaction']],\n\n      ['dissociation', ['dissociation', 'reaction']],\n      ['Dissociation', ['dissociation', 'reaction']],\n\n      ['omitted', ['omitted', 'reaction']],\n      ['Omitted Process', ['omitted', 'reaction']],\n\n      ['uncertain', ['uncertain', 'reaction']],\n      ['Uncertain Process', ['uncertain', 'reaction']],\n    ]\n  )\n\n  edgeTypeMap = new Map<string, EdgeTypeDefinition>([\n      ['INPUT', ['consumption', 'incoming', 'reaction']],\n      ['ACTIVATOR', ['positive-regulation', 'incoming', 'reaction']],\n      ['REQUIRED', ['positive-regulation', 'incoming', 'reaction']],\n      ['INHIBITOR', ['negative-regulation', 'incoming', 'reaction']],\n      ['CATALYST', ['catalysis', 'incoming', 'reaction']],\n      ['OUTPUT', ['production', 'outgoing', 'reaction']],\n    ]\n  )\n\n  edgeTypeToStr = new Map<string, string>([\n      ['INPUT', '-'],\n      ['ACTIVATOR', '+'],\n      ['REQUIRED', '+>'],\n      ['INHIBITOR', '|'],\n      ['CATALYST', 'o'],\n      ['OUTPUT', '>'],\n    ]\n  )\n\n\n  linkClassMap = new Map<string, EdgeTypeDefinition>([\n    ['EntitySetAndMemberLink', ['set-to-member', 'incoming']],\n    ['EntitySetAndEntitySetLink', ['set-to-member', 'incoming']],\n    ['Interaction', ['production', 'outgoing']],\n    ['FlowLine', ['production', 'outgoing']]\n  ])\n\n\n  random(min: number, max: number) {\n    return Math.floor((Math.random()) * (max - min + 1)) + min;\n  }\n\n  pick<T>(values: T[]): T {\n    return values[this.random(0, values.length - 1)];\n  }\n\n  private readonly COMPARTMENT_SHIFT = 35;\n\n  public getLegend(): Observable<cytoscape.ElementsDefinition> {\n    return of(legend)\n  }\n\n  public getNormalPathway(id: string): Observable<string> {\n    return this.http.get(`https://dev.reactome.org/ContentService/data/query/${id}/normalPathway`, {responseType: \"text\"}).pipe(\n      map(data => data.split('\\t')[0])\n    )\n  }\n\n  public getDiagram(id: number | string): Observable<cytoscape.ElementsDefinition> {\n    return forkJoin({\n      diagram: this.http.get<Diagram>(`${environment.host}/download/current/diagram/${id}.json`),\n      graph: this.http.get<Graph.Data>(`${environment.host}/download/current/diagram/${id}.graph.json`)\n    }).pipe(\n      tap(({diagram, graph}) => console.log('Normal diagram:', diagram, 'Normal graph', graph)),\n      switchMap(({diagram, graph}) => {\n        if (diagram.forNormalDraw !== undefined && !diagram.forNormalDraw) {\n          return this.getNormalPathway(diagram.stableId).pipe(\n            switchMap(normalPathwayId => forkJoin({\n              normalDiagram: this.http.get<Diagram>(`${environment.host}/download/current/diagram/${normalPathwayId}.json`),\n              normalGraph: this.http.get<Graph.Data>(`${environment.host}/download/current/diagram/${normalPathwayId}.graph.json`)\n            })),\n            tap(({\n                   normalGraph,\n                   normalDiagram\n                 }) => console.log('Normal diagram:', normalGraph, 'Normal graph', normalDiagram)),\n            map(({normalGraph, normalDiagram}) => {\n              graph.nodes.push(...normalGraph.nodes);\n              graph.edges.push(...normalGraph.edges);\n              if (normalDiagram.shadows) {\n                normalDiagram.shadows.forEach(shadow => shadow.isFadeOut = true);\n                diagram.shadows = diagram.shadows || [];\n                diagram.shadows.push(...normalDiagram.shadows);\n\n                graph.subpathways = graph.subpathways || [];\n                graph.subpathways.push(...normalGraph.subpathways);\n              }\n              return {diagram, graph};\n            }),\n            catchError(err => of({diagram, graph}))\n          )\n        } else {\n          return of({diagram, graph});\n        }\n      }),\n      tap((mergedResponse) => console.log('All responses:', mergedResponse)),\n      map(({diagram, graph}) => {\n\n        console.log(\"edge.reactionType\", new Set(diagram.edges.flatMap(edge => edge.reactionType)))\n        console.log(\"node.connectors.types\", new Set(diagram.nodes.flatMap(node => node.connectors.flatMap(con => con.type))))\n        console.log(\"node.renderableClass\", new Set(diagram.nodes.flatMap(node => node.renderableClass)))\n        console.log(\"links.renderableClass\", new Set(diagram.links.flatMap(link => link.renderableClass)))\n        console.log(\"shadow.renderableClass\", new Set(diagram.shadows.flatMap(shadow => shadow.renderableClass)))\n\n        const idToEdges = new Map<number, Edge>(diagram.edges.map(edge => [edge.id, edge]));\n        const idToNodes = new Map<number, Node>(diagram.nodes.map(node => [node.id, node]));\n        const reactomeIdToEdge = new Map<number, Edge>(\n          [\n            // ...diagram.nodes.map(node => [node.reactomeId, node]),\n            ...diagram.edges.map(edge => [edge.reactomeId, edge])\n          ] as [number, Edge][]\n        );\n\n        const edgeIds = new Map<string, number>();\n        const forwardArray = diagram.edges.flatMap(edge => edge.segments.map(segment => [posToStr(edge, scale(segment.from)), scale(segment.to)])) as [string, Position][];\n        this.extraLine = new Map<string, Position>(forwardArray);\n        console.assert(forwardArray.length === this.extraLine.size, \"Some edge diagram have been lost because 2 segments are starting from the same point\")\n\n        const backwardArray = diagram.edges.flatMap(edge => edge.segments.map(segment => [posToStr(edge, scale(segment.to)), scale(segment.from)])) as [string, Position][];\n        this.reverseExtraLine = new Map<string, Position>(backwardArray);\n        console.assert(backwardArray.length == this.reverseExtraLine.size, \"Some edge diagram have been lost because 2 segments are ending at the same point\")\n\n\n        const subpathwayIds = new Set<number>(diagram.shadows.map((shadow) => shadow.reactomeId))\n\n        const eventIdToSubPathwayId = new Map<number, number>(graph.subpathways?.flatMap(subpathway => subpathway.events\n          .map(event => [event, subpathway.dbId])\n          .filter(entry => subpathwayIds.has(entry[1]))) as [number, number][] || [])\n\n        const subpathwayIdToEventIds = new Map<number, number[]>(graph.subpathways?.map(subpathway => [subpathway.dbId, subpathway.events]));\n        const subpathwayStIdToEventIds = new Map<string, number[]>(graph.subpathways?.map(subpathway => [subpathway.stId, subpathway.events]));\n        // create a node id - graph node mapping\n        const dbIdToGraphNode = new Map<number, Graph.Node>(graph.nodes.map(node => ([node.dbId, node]) || []))\n        const mappingList: [number, Graph.Node][] = graph.nodes.flatMap(node => {\n          if (node.children && node.children.length === 1) { // Consider homomer complex like their constituents for interactors\n            return node.diagramIds?.map(id => [id, dbIdToGraphNode.get(node.children[0])])\n              .filter(entry => entry[1] !== undefined) as [number, Graph.Node][]\n          } else {\n            return node.diagramIds?.map(id => [id, node]) as [number, Graph.Node][]\n          }\n        }).filter(entry => entry !== undefined);\n\n        const idToGraphNodes = new Map([...mappingList]);\n        const idToGraphEdges = new Map(graph.edges.map(edge => [edge.dbId, edge]));\n\n        const getLeaves = (node: Graph.Node, leaves: Set<Graph.Node>) => {\n          if (node.leaves && node.leaves.length > 0) {\n            node.leaves.forEach(leave => leaves.add(leave));\n          } else {\n            if (node.children && node.children.length > 0)\n              node.children.forEach(child => getLeaves(dbIdToGraphNode.get(child)!, leaves))\n            else\n              leaves.add(node);\n          }\n        }\n\n        idToGraphNodes.forEach(node => {\n          let leaves = new Set<Graph.Node>();\n          getLeaves(node, leaves);\n          node.leaves = [...leaves];\n        })\n\n        const dbIdToGraphEdge = new Map<number, Graph.Edge>(graph.edges.map(edge => ([edge.dbId, edge]) || []))\n\n        const hasFadeOut = diagram.nodes.some(node => node.isFadeOut);\n        const normalNodes = diagram.nodes.filter(node => node.isFadeOut);\n        const specialNodes = diagram.nodes.filter(node => !node.isFadeOut);\n        const posToNormalNode = new Map(normalNodes.map(node => [pointToStr(node.position), node]));\n        const posToSpecialNode = new Map(specialNodes.map(node => [pointToStr(node.position), node]));\n\n        const normalEdges = diagram.edges.filter(edge => edge.isFadeOut);\n        const specialEdges = diagram.edges.filter(edge => !edge.isFadeOut);\n        const posToNormalEdge = new Map(normalEdges.map(edge => [pointToStr(edge.position), edge]));\n        const posToSpecialEdge = new Map(specialEdges.map(edge => [pointToStr(edge.position), edge]));\n\n        //compartment nodes\n        const compartmentNodes: cytoscape.NodeDefinition[] = diagram?.compartments.flatMap(item => {\n          const propToRects = (prop: Prop): { [p: string]: number } => ({\n            left: scale(prop.x),\n            top: scale(prop.y),\n            right: scale(prop.x + prop.width),\n            bottom: scale(prop.x + prop.height),\n          })\n\n          let innerCR = 10;\n          let outerCR\n          if (item.insets) {\n            const rects = [propToRects(item.prop), propToRects(item.insets)]\n            outerCR = Object.keys(rects[0]).reduce((smallest, key) => Math.min(smallest, Math.abs(rects[0][key] - rects[1][key])), Number.MAX_SAFE_INTEGER);\n            outerCR = innerCR + Math.min(outerCR, 100)\n          }\n\n          const layers: cytoscape.NodeDefinition[] = [\n            {\n              data: {\n                id: item.id + '-outer',\n                displayName: item.displayName,\n                textX: scale(item.textPosition.x - (item.prop.x + item.prop.width)) + this.COMPARTMENT_SHIFT,\n                textY: scale(item.textPosition.y - (item.prop.y + item.prop.height)) + this.COMPARTMENT_SHIFT,\n                width: scale(item.prop.width),\n                height: scale(item.prop.height),\n                radius: outerCR\n              },\n              classes: ['Compartment', 'outer'],\n              position: scale(item.position),\n              selectable: false,\n            }\n          ];\n\n          if (item.insets) {\n            layers.push({\n              data: {\n                id: item.id + '-inner',\n                width: scale(item.insets.width),\n                height: scale(item.insets.height),\n                radius: innerCR\n              },\n              classes: ['Compartment', 'inner'],\n              position: scale({x: item.insets.x + item.insets.width / 2, y: item.insets.y + item.insets.height / 2}),\n              selectable: false,\n            })\n          }\n          return layers;\n        });\n\n        const replacementMap = new Map<string, string>();\n\n        //reaction nodes\n        const reactionNodes: cytoscape.NodeDefinition[] = diagram?.edges.map(item => {\n          let replacement, replacedBy;\n          if (item.isFadeOut) {\n            replacedBy = posToSpecialEdge.get(pointToStr(item.position))?.id.toString() || specialEdges.find(edge => squaredDist(scale(edge.position), scale(item.position)) < 5 ** 2)?.id.toString();\n            if (replacedBy) {\n              replacementMap.set(item.id.toString(), replacedBy)\n              replacementMap.set(replacedBy, item.id.toString())\n            }\n          }\n          if (!item.isFadeOut) {\n            replacement = posToNormalEdge.get(pointToStr(item.position))?.id.toString() || normalEdges.find(edge => squaredDist(scale(edge.position), scale(item.position)) < 5 ** 2)?.id.toString();\n          }\n          let subpathways = [...subpathwayStIdToEventIds.entries()].flatMap(([subpathwayId, events]) => events.includes(item.reactomeId) ? [subpathwayId] : []);\n\n          return ({\n            data: {\n              id: item.id + '',\n              // displayName: item.displayName,\n              inputs: item.inputs,\n              output: item.outputs,\n              isFadeOut: item.isFadeOut,\n              isBackground: item.isFadeOut,\n              reactomeId: item.reactomeId,\n              reactionId: item.id,\n              graph: idToGraphEdges.get(item.reactomeId),\n              subpathways: subpathways,\n              replacement, replacedBy\n            },\n            classes: this.reactionTypeMap.get(item.reactionType),\n            position: scale(item.position)\n          });\n        });\n\n\n        //entity nodes\n        const entityNodes: cytoscape.NodeDefinition[] = diagram?.nodes.flatMap(item => {\n          const classes = [...this.nodeTypeMap.get(item.renderableClass)!] || [item.renderableClass.toLowerCase()];\n          let replacedBy: string | undefined;\n          let replacement: string | undefined;\n          if (item.isDisease) classes.push('disease');\n          if (item.isCrossed) classes.push('crossed');\n          if (item.trivial) classes.push('trivial');\n          if (item.needDashedBorder) classes.push('loss-of-function');\n          if (item.isFadeOut) {\n            replacedBy = posToSpecialNode.get(pointToStr(item.position))?.id.toString()\n            if (!replacedBy) {\n              replacedBy = specialNodes.find(node => overlapLimited(item, node, 0.8))?.id.toString();\n            }\n            if (replacedBy) {\n              replacementMap.set(item.id.toString(), replacedBy)\n              replacementMap.set(replacedBy, item.id.toString())\n            }\n          }\n          if (!item.isFadeOut) replacement = posToNormalNode.get(pointToStr(item.position))?.id.toString() //|| normalNodes.find(node => overlap(item, node))?.id.toString();\n          if (classes.some(clazz => clazz === 'RNA')) item.prop.height -= 10;\n          if (classes.some(clazz => clazz === 'Cell')) item.prop.height /= 2;\n\n          const isBackground = item.isFadeOut || classes.some(clazz => clazz === 'Pathway') || item.connectors.some(connector => connector.isFadeOut);\n          item.isBackground = isBackground;\n          let html = undefined;\n          let width = scale(item.prop.width);\n          let height = scale(item.prop.height);\n          let preferredId = idToGraphNodes.get(item.id)?.identifier;\n          if (classes.some(clazz => clazz === 'Protein')) {\n            html = this.getStructureVideoHtml({...item, type: 'Protein'}, width, height, preferredId);\n          } else if (classes.some(clazz => clazz === 'Molecule')) {\n            html = `<img src=\"https://www.ebi.ac.uk/chebi/displayImage.do?defaultImage=true&chebiId=${preferredId}&dimensions=1080&transbg=true\" style=\"max-width: ${width / 2 - 4}px; max-height:${height}px\" alt=\"\">`;\n          }\n          if (isBackground && !item.isFadeOut) {\n            replacementMap.set(item.id.toString(), item.id.toString())\n          }\n          const isFadeOut = !item.isCrossed && item.isFadeOut;\n          const nodes: cytoscape.NodeDefinition[] = [\n            {\n              data: {\n                id: item.id + '',\n                reactomeId: item.reactomeId,\n                displayName: item.displayName.replace(/([/,:;-])/g, \"$1\\u200b\"),\n                height: height,\n                width: width,\n                graph: idToGraphNodes.get(item.id),\n                acc: preferredId,\n                html,\n                isFadeOut,\n                isBackground,\n                replacement,\n                replacedBy\n              },\n              classes: classes,\n              position: scale(item.position)\n            }\n          ];\n          if (item.nodeAttachments) {\n            nodes.push(...item.nodeAttachments.map(ptm => ({\n              data: {\n                id: item.id + '-' + ptm.reactomeId,\n                reactomeId: ptm.reactomeId,\n                nodeId: item.id,\n                nodeReactomeId: item.reactomeId,\n                displayName: ptm.label,\n                height: scale(ptm.shape.b.y - ptm.shape.a.y),\n                width: scale(ptm.shape.b.x - ptm.shape.a.x),\n                isFadeOut,\n                isBackground,\n                replacement,\n                replacedBy\n              },\n              classes: \"Modification\",\n              position: scale(ptm.shape.centre)\n            })))\n          }\n          return nodes\n        });\n\n        //sub pathways\n        const shadowNodes: cytoscape.NodeDefinition[] = diagram?.shadows.map(item => {\n          return {\n            data: {\n              id: item.id + '',\n              displayName: item.displayName,\n              height: scale(item.prop.height),\n              width: scale(item.prop.width),\n              reactomeId: item.reactomeId,\n              isFadeOut: item.isFadeOut,\n              replacedBy: item.isFadeOut,\n              triggerPosition: scale(item.maxX)\n            },\n            classes: ['Shadow'],\n            position: closestToAverage(subpathwayIdToEventIds.get(item.reactomeId)!.map(reactionId => reactomeIdToEdge.get(reactionId)!).map(edge => scale(edge!.position)))\n          }\n        });\n\n        avoidOverlap(shadowNodes);\n\n        const T = 4;\n        const ARROW_MULT = 1.5;\n        const EDGE_MARGIN = 6;\n        const REACTION_RADIUS = 3 * T;\n        const MIN_DIST = EDGE_MARGIN;\n\n\n        /**\n         * iterate nodes connectors to get all edges information based on the connector type.\n         *\n         */\n        const edges: cytoscape.EdgeDefinition[] =\n          diagram.nodes.flatMap(node => {\n              return node.connectors.map(connector => {\n                const reaction = idToEdges.get(connector.edgeId)!;\n\n                const reactionP = scale(reaction.position);\n                const nodeP = scale(node.position);\n\n                const [source, target] = connector.type !== 'OUTPUT' ?\n                  [node, reaction] :\n                  [reaction, node];\n\n                const sourceP = scale(source.position);\n                const targetP = scale(target.position);\n\n                let points = connector.segments\n                  .flatMap((segment, i) => i === 0 ? [segment.from, segment.to] : [segment.to])\n                  .map(pos => scale(pos));\n                if (connector.type === 'OUTPUT') points.reverse();\n                if (points.length === 0) points.push(reactionP);\n\n                this.addEdgeInfo(reaction, points, 'backward', sourceP);\n                this.addEdgeInfo(reaction, points, 'forward', targetP);\n\n                let [from, to] = [points.shift()!, points.pop()!]\n                from = from ?? nodeP; // Quick fix to avoid problem with reaction without visible outputs like R-HSA-2424252 in R-HSA-1474244\n                to = to ?? reactionP; // Quick fix to avoid problem with reaction without visible outputs like R-HSA-2424252 in R-HSA-1474244\n                if (connector.type === 'CATALYST') {\n                  to = scale(connector.endShape.centre);\n                }\n\n                // points = addRoundness(from, to, points);\n                const relatives = this.absoluteToRelative(from, to, points);\n\n                const classes = [...this.edgeTypeMap.get(connector.type)!];\n                if (reaction.isDisease) classes.push('disease');\n                if (node.trivial) classes.push('trivial');\n                if (eventIdToSubPathwayId.has(reaction.reactomeId)) classes.push('shadow');\n\n                let d = dist(from, to);\n                if (equal(from, reactionP) || equal(to, reactionP)) d -= REACTION_RADIUS;\n                if (classes.includes('positive-regulation') || classes.includes('catalysis') || classes.includes('production')) d -= ARROW_MULT * T;\n                // console.assert(d > MIN_DIST, `The edge between reaction: R-HSA-${reaction.reactomeId} and entity: R-HSA-${node.reactomeId} in pathway ${id} has a visible length of ${d} which is shorter than ${MIN_DIST}`)\n                console.assert(d > MIN_DIST, `${id}\\t${diagram.displayName}\\t${hasFadeOut}\\tR-HSA-${reaction.reactomeId}\\tR-HSA-${node.reactomeId}\\thttps://release.reactome.org/PathwayBrowser/#/${id}&SEL=R-HSA-${reaction.reactomeId}&FLG=R-HSA-${node.reactomeId}\\thttps://reactome-pwp.github.io/PathwayBrowser/${id}?select=${reaction.reactomeId}&flag=${node.reactomeId}`)\n\n                let replacement, replacedBy;\n                if (connector.isFadeOut) {\n                  // First case: same node is used both special and normal context\n                  // replacedBy = node.connectors.find(otherConnector => otherConnector !== connector && !otherConnector.isFadeOut && samePoint(idToEdges.get(otherConnector.edgeId)!.position, reaction.position))?.edgeId;\n                  // Second case: different nodes are used between special and normal context\n                  // replacedBy = replacedBy || (posToSpecialNode.get(pointToStr(node.position)) && posToSpecialEdge.get(pointToStr(reaction.position)))?.id;\n\n                  replacedBy = replacementMap.get(node.id.toString()) && replacementMap.get(reaction.id.toString())\n                }\n                if (!connector.isFadeOut) {\n                  // First case: same node is used both special and normal context\n                  replacement = node.connectors.find(otherConnector => otherConnector !== connector && otherConnector.isFadeOut && samePoint(idToEdges.get(otherConnector.edgeId)!.position, reaction.position))?.edgeId;\n                  // console.log(\"Reaction edge\", replacement)\n\n                  // Second case: different nodes are used between special and normal context\n                  replacement = replacement || (posToNormalNode.get(pointToStr(node.position)) && posToNormalEdge.get(pointToStr(reaction.position)))?.id;\n                  // console.log(\"Reaction edge\", replacement)\n\n                }\n                const edge: cytoscape.EdgeDefinition = {\n                  data: {\n                    id: this.getEdgeId(source, connector, target, edgeIds),\n                    graph: dbIdToGraphEdge.get(reaction.reactomeId),\n                    source: source.id + '',\n                    target: target.id + '',\n                    stoichiometry: connector.stoichiometry.value,\n                    weights: relatives.weights.join(\" \"),\n                    distances: relatives.distances.join(\" \"),\n                    sourceEndpoint: this.endpoint(sourceP, from),\n                    targetEndpoint: this.endpoint(targetP, to),\n                    pathway: eventIdToSubPathwayId.get(reaction.reactomeId),\n                    reactomeId: reaction.reactomeId,\n                    reactionId: reaction.id,\n                    isFadeOut: reaction.isFadeOut,\n                    isBackground: reaction.isFadeOut,\n                    replacedBy, replacement\n                  },\n                  classes: classes\n                };\n                return edge\n              });\n            }\n          );\n\n        const linkEdges: cytoscape.EdgeDefinition[] = diagram.links\n          ?.filter(link => !link.renderableClass.includes('EntitySet') || link.inputs[0].id !== link.outputs[0].id)\n          ?.map(link => {\n              const source = idToNodes.get(link.inputs[0].id)!;\n              const target = idToNodes.get(link.outputs[0].id)!;\n\n              const sourceP = scale(source.position);\n              const targetP = scale(target.position);\n\n              let points = link.segments\n                .flatMap((segment, i) => i === 0 ? [segment.from, segment.to] : [segment.to])\n                .map(pos => scale(pos));\n\n              let [from, to] = [points.shift()!, points.pop()!]\n              from = from ?? sourceP; // Quick fix to avoid problem with reaction without visible outputs like R-HSA-2424252 in R-HSA-1474244\n              to = to ?? targetP; // Quick fix to avoid problem with reaction without visible outputs like R-HSA-2424252 in R-HSA-1474244\n\n              // points = addRoundness(from, to, points);\n              const relatives = this.absoluteToRelative(from, to, points);\n\n              const classes = [...this.linkClassMap.get(link.renderableClass)!];\n              if (link.isDisease) classes.push('disease');\n              const isBackground = link.isFadeOut ||\n                idToNodes.get(link.inputs[0].id)?.isBackground &&\n                idToNodes.get(link.outputs[0].id)?.isBackground;\n\n              return {\n                data: {\n                  id: link.id + '',\n                  source: link.inputs[0].id + '',\n                  target: link.outputs[0].id + '',\n                  weights: relatives.weights.join(\" \"),\n                  distances: relatives.distances.join(\" \"),\n                  sourceEndpoint: this.endpoint(sourceP, from),\n                  targetEndpoint: this.endpoint(targetP, to),\n                  isFadeOut: link.isFadeOut,\n                  isBackground: isBackground\n                },\n                classes: classes,\n                selectable: false\n              }\n            }\n          )\n\n        return {\n          nodes: [...compartmentNodes, ...reactionNodes, ...entityNodes, ...shadowNodes],\n          edges: [...edges, ...linkEdges]\n        };\n      }),\n      tap((output) => console.log('Output:', output)),\n    )\n\n  }\n\n  getStructureVideoHtml(item: {\n    id: string | number,\n    type: string\n  }, width: number, height: number, uniprotId: string | undefined) {\n    if (item.type === 'Protein')\n      return `<video loop id=\"video-${item.id}\" width=\"${width + 10}\" height=\"${height + 10}\"  preload=\"none\">\n                <source src=\"${environment.s3}/structures/${uniprotId}.mov\" type=\"video/quicktime\">\n                <source src=\"${environment.s3}/structures/${uniprotId}.webm\" type=\"video/webm\">\n              </video>`;\n    return undefined;\n  }\n\n  private getEdgeId(source: Edge | Node, connector: NodeConnector, target: Edge | Node, edgeIds: Map<string, number>) {\n    let edgeId = `${source.id} --${this.edgeTypeToStr.get(connector.type)} ${target.id}`;\n\n    if (edgeIds.has(edgeId)) {\n      let count = edgeIds.get(edgeId)!;\n      edgeIds.set(edgeId, count++);\n      edgeId += ` (${count})`;\n      console.warn('Conflicting edge id: ', edgeId)\n    } else {\n      edgeIds.set(edgeId, 0)\n    }\n    return edgeId;\n  }\n\n  private addEdgeInfo(edge: Edge, points: Position[], direction: 'forward' | 'backward', stop: Position) {\n    const stopPos = posToStr(edge, stop);\n    if (direction === 'forward') {\n      const map = this.extraLine;\n      let pos = posToStr(edge, points.at(-1)!)\n      while (map.has(pos) && pos !== stopPos) {\n        points.push(map.get(pos)!)\n        pos = posToStr(edge, points.at(-1)!)\n      }\n    } else {\n      const map = this.reverseExtraLine;\n      let pos = posToStr(edge, points.at(0)!)\n      while (map.has(pos) && pos !== stopPos) {\n        points.unshift(map.get(pos)!)\n        pos = posToStr(edge, points.at(0)!)\n      }\n    }\n  }\n\n  private endpoint(source: Position, point: Position): string {\n    return `${point.x - source.x} ${point.y - source.y}`\n  }\n\n\n  /**\n   * Use Matrix power to convert points from an absolute coordinate system to an edge relative system\n   *\n   * Visually explained by https://youtu.be/kYB8IZa5AuE?si=vJKi-MUv2dCRQ5oA<br>\n   * Short version ==> https://math.stackexchange.com/q/1855051/683621\n   * @param source Position position of the edge source:  {x:number, y:number}\n   * @param target Position position of the edge target:  {x:number, y:number}\n   * @param toConvert Array of Position to convert to the edge-relative system\n   * @return The points converted to relative coordinates {distances: number[], weights: number[]}\n   */\n  private absoluteToRelative(source: Position, target: Position, toConvert: Position[]): RelativePosition {\n    const relatives: RelativePosition = {distances: [], weights: []};\n    if (toConvert.length === 0) return relatives;\n\n    const mainVector = array([target.x - source.x, target.y - source.y]); // Edge vector\n    const orthoVector = array([-mainVector.y, mainVector.x]) // Perpendicular vector\n      .normalize(); //Normalized to have the distance expressed in pixels https://math.stackexchange.com/a/413235/683621\n    let transform = array([\n      [mainVector.x, mainVector.y],\n      [orthoVector.x, orthoVector.y],\n    ]).inv(); // Should always be invertible if the ortho vector is indeed perpendicular\n\n    for (let coord of toConvert) {\n      const absolute = array([[coord.x - source.x, coord.y - source.y]]);\n      const relative = absolute.multiply(transform);\n      relatives.weights.push(relative.get(0, 0))\n      relatives.distances.push(relative.get(0, 1))\n    }\n    return relatives;\n  }\n\n  public randomNetwork(): Observable<cytoscape.ElementsDefinition> {\n    const amount = 100;\n    const peTypes = ['Protein', 'EntitySet', 'GenomeEncodedEntity', 'RNA', 'Gene', 'Complex', 'Molecule'];\n    // const peTypes = ['Gene'];\n    const reactionTypes = ['association', 'dissociation', 'transition', 'uncertain', 'omitted'];\n\n    const physicalEntities: cytoscape.NodeDefinition[] = Array.from({length: amount}, (x, i) => {\n      const clazz = this.pick(peTypes);\n      return {\n        group: 'nodes',\n        data: {\n          id: i.toString(),\n          width: this.random(150, 300),\n          height: this.random(50, 150),\n          displayName: clazz,\n          parent: 'Compartment'\n        },\n        classes: [clazz, \"PhysicalEntity\", this.pick([\"drug\", \"\", \"\"])]\n      };\n    });\n\n    const reactions: cytoscape.NodeDefinition[] = physicalEntities.map((node, i) =>\n      ({\n        group: 'nodes',\n        data: {\n          id: `${i}-react`,\n          parent: 'Compartment'\n        },\n        classes: [this.pick(reactionTypes), 'reaction']\n      })\n    );\n\n    const nodes: cytoscape.NodeDefinition[] = physicalEntities.flatMap((node, i) =>\n      [node, reactions[i]]\n    );\n\n\n    const inOut: cytoscape.EdgeDefinition[] = physicalEntities.flatMap((node, i) => [\n      {\n        group: 'edges',\n        data: {\n          source: `${i}`,\n          target: `${i}-react`,\n          stoichiometry: this.pick([undefined, -1, 0, 1, 2])\n        },\n        classes: ['consumption']\n      },\n      {\n        group: 'edges',\n        data: {\n          source: `${i}-react`,\n          target: `${(i + 1) % amount}`,\n          stoichiometry: this.pick([undefined, -1, 0, 1, 2])\n        },\n\n        classes: ['production']\n      },\n    ])\n\n    const additionalIn: cytoscape.EdgeDefinition[] = Array.from({length: amount / 4}).map(() => ({\n      group: 'edges',\n      data: {\n        source: this.pick(physicalEntities).data.id!,\n        target: this.pick(reactions).data.id!,\n      },\n      classes: this.pick(['catalysis', 'positive-regulation', 'negative-regulation', 'set-to-member'])\n    }));\n\n\n    const edges: cytoscape.EdgeDefinition[] = [...inOut, ...additionalIn];\n\n    return of({ // list of graph elements to start with\n      nodes: [\n        {\n          data: {id: 'Compartment'},\n          classes: ['Compartment'],\n          pannable: true,\n          grabbable: false,\n          selectable: false\n        },\n        ...nodes\n      ]\n      , edges\n    })\n  }\n}\n\nfunction samePoint(p1: Position, p2: Position) {\n  return p1.x === p2.x && p1.y === p2.y\n}\n\nfunction overlapLimited(nodeA: Node, nodeB: Node, limit: number = 0.8): boolean {\n  if (nodeA.position.x === nodeB.position.x && nodeA.position.y === nodeB.position.y) return true;\n  const rectA = getRect(nodeA), rectB = getRect(nodeB);\n  const o: Rectangle = {\n    left: Math.max(rectA.left, rectB.left),\n    right: Math.min(rectA.right, rectB.right),\n    top: Math.max(rectA.top, rectB.top),\n    bottom: Math.min(rectA.bottom, rectB.bottom)\n  }\n  return (o.left < o.right && o.top < o.bottom) && ((area(o) / area(rectA)) > limit);\n}\n\nfunction overlap(nodeA: Node, nodeB: Node): boolean {\n  if (nodeA.position.x === nodeB.position.x && nodeA.position.y === nodeB.position.y) return true;\n  const rectA = getRect(nodeA), rectB = getRect(nodeB);\n  return Math.max(rectA.left, rectB.left) < Math.min(rectA.right, rectB.right)\n    && Math.max(rectA.top, rectB.top) < Math.min(rectA.bottom, rectB.bottom);\n}\n\nfunction area(rect: Rectangle) {\n  return (rect.right - rect.left) * (rect.bottom - rect.top)\n}\n\nfunction getRect(node: Node): Rectangle {\n  if (node.rect) return node.rect\n  const halfWidth = node.prop.width / 2;\n  const halfHeight = node.prop.height / 2;\n  node.rect = {\n    left: node.position.x - halfWidth,\n    right: node.position.x + halfWidth,\n    top: node.position.y - halfHeight,\n    bottom: node.position.y + halfHeight,\n  }\n  return node.rect;\n}\n\n/**\n * Create a temporary cytoscape session to apply a layout to the nodes in order to avoid them to overlap each others\n */\nfunction avoidOverlap(definitions: cytoscape.NodeDefinition[]) {\n  const container = document.createElement(\"div\");\n\n  const style = new Style(container, {});\n  const cy = cytoscape({\n    container: container,\n    style: style.getStyleSheet(),\n    elements: definitions,\n    layout: {name: 'preset'}\n  });\n\n  const nodes = cy.nodes();\n  nodes.forEach(node => {\n    const bb = node.boundingBox({includeLabels: true, includeNodes: false});\n    node.style({width: bb.w, height: bb.h})\n  })\n\n  const layout = nodes.layout({\n    name: 'fcose',\n    nodeRepulsion: 15,\n    animate: false,\n    fit: true,\n    packComponents: false,\n    randomize: false,\n    tile: false,\n  } as FcoseLayoutOptions);\n  layout.run()\n\n  definitions.forEach(def => def.position = cy.getElementById(def.data.id!).position());\n\n  cy.destroy()\n  container.remove()\n}\n","import {Injectable} from '@angular/core';\nimport {environment} from \"../../environments/environment\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {Event} from \"../model/event.model\";\nimport {BehaviorSubject, combineLatest, forkJoin, map, mergeMap, Observable, of, Subject, switchMap} from \"rxjs\";\nimport {JSOGDeserializer} from \"../utils/JSOGDeserializer\";\nimport {DiagramStateService} from \"./diagram-state.service\";\nimport {NestedTreeControl} from \"@angular/cdk/tree\";\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EventService {\n\n  private readonly _TOP_LEVEL_PATHWAYS = `${environment.host}/ContentService/data/pathways/top/`;\n  private readonly _ENHANCED_QUERY = `${environment.host}/ContentService/data/query/enhanced/`;\n  private readonly _DATA_QUERY = `${environment.host}/ContentService/data/query/`;\n  private readonly _ANCESTORS = `${environment.host}/ContentService/data/event/`;\n\n  treeData$: BehaviorSubject<Event[]> = new BehaviorSubject<Event[]>([]);\n\n  private _selectedTreeEvent: Subject<Event> = new Subject<Event>();\n  public selectedTreeEvent$ = this._selectedTreeEvent.asObservable();\n\n  private _selectedObj: Subject<Event> = new Subject<Event>();\n  public selectedObj$ = this._selectedObj.asObservable();\n\n  private _breadcrumbsSubject = new Subject<Event[]>();\n  breadcrumbs$ = this._breadcrumbsSubject.asObservable();\n\n\n  private _subpathwaysColors = new BehaviorSubject<Map<number, string>>(new Map<number, string>());\n  subpathwaysColors$ = this._subpathwaysColors.asObservable();\n\n  private _loadTreeEvent = new Subject<Event>();\n  loadTreeEvent$ = this._loadTreeEvent.asObservable();\n\n  constructor(private http: HttpClient, private state: DiagramStateService) {\n  }\n\n  setTreeData(events: Event[]) {\n    this.treeData$.next(events);\n  }\n\n  setCurrentTreeEvent(event: Event) {\n    this._selectedTreeEvent.next(event);\n  }\n\n  setCurrentObj(event: Event) {\n    this._selectedObj.next(event);\n  }\n\n  setCurrentEventAndObj(event: Event, obj: Event) {\n    this.setCurrentTreeEvent(event);\n    this.setCurrentObj(obj);\n  }\n\n  setBreadcrumbs(events: Event[]) {\n    this._breadcrumbsSubject.next(events);\n  }\n\n  setSubpathwaysColors(colorMap: Map<number, string>) {\n    this._subpathwaysColors.next(colorMap);\n  }\n\n  loadTreeEvent(event: Event) {\n    this._loadTreeEvent.next(event);\n  }\n\n  fetchTlpBySpecies(taxId: string): Observable<Event[]> {\n    let url = `${this._TOP_LEVEL_PATHWAYS}${taxId}`;\n    return this.http.get<Event[]>(url);\n  }\n\n\n  fetchEventAncestors(stId: string): Observable<Event[][]> {\n    let url = `${this._ANCESTORS}${stId}/ancestors`;\n    return this.http.get<Event[][]>(url)\n  }\n\n\n  fetchEnhancedEventData(stId: string): Observable<Event> {\n    let url = `${this._ENHANCED_QUERY}${stId}?includeRef=true`;\n    return this.http.get<Event>(url).pipe(\n      map((response: Event) => {\n        const deserializer = new JSOGDeserializer();\n        const resolvedResponse = deserializer.deserialize(response);\n        return resolvedResponse as unknown as Event;\n      })\n    )\n  }\n\n  fetchEventData(stId: string): Observable<Event> {\n    let url = `${this._DATA_QUERY}${stId}`;\n    return this.http.get<Event>(url).pipe(\n      map((response: Event) => {\n        const deserializer = new JSOGDeserializer();\n        const resolvedResponse = deserializer.deserialize(response);\n        return resolvedResponse as unknown as Event;\n      })\n    )\n  }\n\n  fetchChildrenEvents(event: Event, treeNodes: Event[]): Observable<[Event, Event, Map<number, string>]> {\n    return this.fetchEnhancedEventData(event.stId).pipe(\n      switchMap(result => {\n        if (result.hasEvent) {\n          event.hasEvent = result.hasEvent.map(child => {\n            child.ancestors = [...(event.ancestors || []), event];\n            child.parent = event;\n            return child;\n          });\n          this.setTreeData(treeNodes); // Update tree data\n          return this.subpathwaysColors$.pipe(\n            map(colors => [event, result, colors || new Map<number, string>()] as [Event, Event, Map<number, string>])\n          );\n        } else {\n          return of([event, result, new Map<number, string>()] as [Event, Event, Map<number, string>]);\n        }\n      })\n    );\n  }\n\n  /** Adjust tree structure based on selection from diagram\n   *\n   *  Entity\n   *  - No need to rebuild the tree, but requires to update the currentTreeEvent(diagram tree event) and currentObj (entity), selection and expandedTree status\n   *\n   *  Reaction\n   *  - No need to rebuild the tree it is viable, if not we have to rebuild the tree to include it, update currentTreeEvent(Reaction) and currentObj (Reaction). selection and expandedTree status\n   *\n   *  Pathway\n   *  - Subpathway, no need to build the tree, update currentTreeEvent(subpathway) and currentObj(subpathway)\n   *  - Interacting pathway, rebuild the tree, clear previous selection, update currentTreeEvent(interacting pathway) and currentObj(interacting pathway), selection and expandedTree status\n   *\n   */\n  adjustTreeFromDiagramSelection(enhancedEvent: Event, diagramId: string, subpathwayColors: Map<number, string>, treeControl: NestedTreeControl<Event, string>, treeNodes: Event[]): Observable<Event[]> {\n    // All visible tree nodes\n    const allVisibleTreeNodes = this.getAllVisibleTreeNodes(treeControl, treeNodes);\n    if (this.isEntity(enhancedEvent)) {\n      return this.handleEntitySelectionFromDiagram(enhancedEvent, diagramId, allVisibleTreeNodes, treeControl);\n    } else if (this.isReaction(enhancedEvent)) {\n      return this.handleReactionSelectionFromDiagram(enhancedEvent, diagramId, allVisibleTreeNodes, treeControl, subpathwayColors);\n    } else if (this.isPathwayWithDiagram(enhancedEvent)) {\n      // treeControl.collapseAll(); //todo: should we collapse all?\n      return this.handlePathwaySelectionFromDiagram(enhancedEvent, diagramId, allVisibleTreeNodes, treeControl, subpathwayColors, allVisibleTreeNodes);\n    } else {\n      return of(this.treeData$.value)\n    }\n  }\n\n\n  private handleEntitySelectionFromDiagram(event: Event, diagramId: string, allVisibleTreeNodes: Event[], treeControl: NestedTreeControl<Event, string>): Observable<Event[]> {\n    const diagramTreeEvent = allVisibleTreeNodes.find(node => node.stId === diagramId);\n    if (diagramTreeEvent) {\n      return this.handleExistingEventSelection(diagramTreeEvent, treeControl, allVisibleTreeNodes).pipe(\n        map(([treeData, treeEvent]) => {\n          this.setCurrentEventAndObj(diagramTreeEvent, event);\n          return treeData;\n        })\n      );\n    } else {\n      return of(this.treeData$.value);\n    }\n  }\n\n  private handleReactionSelectionFromDiagram(event: Event, diagramId: string, allVisibleTreeNodes: Event[], treeControl: NestedTreeControl<Event, string>, subpathwayColors: Map<number, string>): Observable<Event[]> {\n    if (!this.isEventVisible(event, allVisibleTreeNodes)) {\n      return this.buildTreeWithSelectedEvent(event, diagramId, true, treeControl, subpathwayColors).pipe(\n        map((treeData) => {\n          this.setCurrentEventAndObj(event, event);\n          return treeData;\n        })\n      );\n    } else {\n      return this.handleExistingEventSelection(event, treeControl, allVisibleTreeNodes).pipe(\n        map(([treeData, event]) => {\n          this.setCurrentEventAndObj(event, event);  //todo: this.setCurrentEventAndObj(treeEvent, event)?\n          return treeData;\n        })\n      );\n    }\n  }\n\n\n  private handlePathwaySelectionFromDiagram(event: Event, diagramId: string, allVisibleTreeNodes: Event[], treeControl: NestedTreeControl<Event, string>, subpathwayColors: Map<number, string>, treeNodes: Event[]): Observable<Event[]> {\n    // Interacting pathway, not visible in the tree view\n    if (!this.isEventVisible(event, allVisibleTreeNodes)) {\n      this.clearAllSelectedEvents(treeNodes);\n      return this.buildTreeWithSelectedEvent(event, diagramId, true, treeControl, subpathwayColors).pipe(\n        map(treeData => {\n          return treeData;\n        })\n      );\n    } else {\n      // Subpathway, already in the tree view\n      return this.handleExistingEventSelection(event, treeControl, allVisibleTreeNodes).pipe(\n        map(([treeData, event]) => {\n          this.setCurrentEventAndObj(event, event); //todo: this.setCurrentEventAndObj(treeEvent, event)?\n          return treeData;\n        })\n      );\n    }\n  }\n\n  private isEventVisible(event: Event, allVisibleTreeNodes: Event[]): boolean {\n    return allVisibleTreeNodes.map(e => e.stId).includes(event.stId);\n  }\n\n  private isPathwayWithDiagram(event: Event): boolean {\n    return this.eventHasChild(event) && event.hasDiagram;\n  }\n\n  clearAllSelectedEvents(events: Event[]) {\n    events.forEach(event => {\n      event.isSelected = false;\n      if (event.hasEvent) {\n        this.clearAllSelectedEvents(event.hasEvent);\n      }\n    });\n  }\n\n  buildTree(event: Event, diagramId: string, treeControl: NestedTreeControl<Event, string>, subpathwayColors: Map<number, string>): Observable<Event[]> {\n    if (this.isEntity(event)) {\n      return this.buildTreeWithSelectedEntity(event, diagramId, treeControl, subpathwayColors);\n    } else {\n      return this.buildTreeWithSelectedEvent(event, diagramId, false, treeControl, subpathwayColors);\n    }\n  }\n\n  // Build tree with diagram event ancestors\n  private buildTreeWithSelectedEntity(event: Event, diagramId: string, treeControl: NestedTreeControl<Event, string>, subpathwayColors: Map<number, string>): Observable<Event[]> {\n    this.setCurrentObj(event);\n    return  this.fetchEnhancedEventData(diagramId).pipe(\n      switchMap(() => this.fetchEventAncestors(diagramId)),\n      map(ancestors => this.getAndExpandAncestors(ancestors, treeControl)),\n      switchMap(ancestors => this.buildTreeWithAncestors(ancestors, diagramId, event.stId, subpathwayColors)),\n      map(([colors, tree]) => {\n        this.setTreeData(tree);\n        return tree\n      })\n    )\n  }\n\n\n  /**?\n   * Build tree with event ancestors\n   * @param event\n   * @param diagramId\n   * @param isFromDiagram  Behaves differently based on the calling method, avoid the check for isPathwayWithDiagram(event) when calling it from handlePathwaySelectionFromDiagram,\n   *                       we want to open the ancestors in the tree view when select an interacting pathway in diagram, but not when first load for an interacting pathway from URL.\n   */\n  private buildTreeWithSelectedEvent(event: Event, diagramId: string, isFromDiagram: boolean, treeControl: NestedTreeControl<Event, string>, subpathwayColors: Map<number, string>): Observable<Event[]> {\n    // When selected event is a subpathway or interacting pathway\n    const idToBuild = isFromDiagram ? event.stId : (this.isPathwayWithDiagram(event) ? diagramId : event.stId);\n    this.setCurrentObj(event);\n    return this.fetchEventAncestors(idToBuild).pipe(\n      map(ancestors => this.getAndExpandAncestors(ancestors, treeControl)),\n      switchMap(ancestors => this.buildTreeWithAncestors(ancestors, diagramId, event.stId, subpathwayColors)),\n      map(([colors, tree]) => {\n        this.setTreeData(tree);\n        return tree\n      })\n    );\n  }\n\n  // Select any reaction, subpathway and interacting pathway from diagram\n  private handleExistingEventSelection(event: Event, treeControl: NestedTreeControl<Event, string>, flatTreeNodes: Event[]): Observable<[Event[], Event]> {\n    return this.fetchEventAncestors(event.stId).pipe(\n      map(ancestors => {\n        console.log('ancestors in handleExisting Event selection', ancestors);\n        const finalAncestor = this.getAndExpandAncestors(ancestors, treeControl);\n        // Create a Set to store the stIds from ancestors for quick lookup\n        const ancestorStIds = new Set(finalAncestor.map(ancestor => ancestor.stId));\n        console.log('ancestorStIds ', ancestorStIds);\n        // Loop through the treeNodes and check if the stId exists in the Set\n        flatTreeNodes.forEach(treeNode => {\n          treeNode.isSelected = ancestorStIds.has(treeNode.stId);\n        });\n        event.ancestors = finalAncestor;\n        event.parent = finalAncestor[finalAncestor.length - 2];\n        this.setTreeData(this.treeData$.value);\n        this.setBreadcrumbs(finalAncestor);\n\n        return [this.treeData$.value, event];\n      })\n    )\n  }\n\n  private buildTreeWithAncestors(ancestors: Event[], diagramId: string, selectedIdFromUrl: string, subpathwayColors: Map<number, string>) {\n    return combineLatest([\n      this.subpathwaysColors$,\n      this.buildNestedTree(this.treeData$.value, ancestors, diagramId, selectedIdFromUrl, subpathwayColors)\n    ]);\n  }\n\n  /**\n   * This method is building a nested tree dynamically by giving the roots and ancestors,\n   * the currentLevel will always be the TLPs at very beginning,and we find the matched event in ancestors,\n   * build the hierarchy structure from parent to child. At the same time, it sends another API call to get children for each item in\n   * ancestors.\n   * @param roots  TLPs\n   * @param ancestors A list of lists of Events, it only contains one list, so we take [0].\n   *                  The ancestors is a list of events from child to parent in the API calls,\n   *                  But here is from parent to child,no need to use reverse() with ancestors[0]\n   * @param diagramId The diagramId which is used for adding subpathway colors\n   * @param selectedIdFromUrl The selected event id\n   * @param subpathwayColors colors maps, dbId as key, colors as value, `{69481 => \"#cc0000\"}`\n   *\n   */\n  buildNestedTree(roots: Event[], ancestors: Event[], diagramId: string, selectedIdFromUrl: string, subpathwayColors: Map<number, string>) {\n    console.log('BuildNestedTree with data ', roots, 'and ancestors ', ancestors);\n    const tree = [...roots];\n    const nestedTree = ancestors.reduce((acc, event, index, array) => {\n      const isLast = index === array.length - 1;\n      return acc.pipe(\n        mergeMap(currentLevel => {\n          const existingEvent = currentLevel.find(e => e.dbId === event.dbId);\n          if (existingEvent) {\n            return this.fetchEnhancedEventData(event.stId).pipe(\n              map(children => {\n                existingEvent.hasEvent = children.hasEvent?.map(child => {\n                  child.ancestors = [...(existingEvent.ancestors || []), existingEvent];\n                  child.parent = existingEvent;\n                  this.setBreadcrumbs([...child.ancestors])\n                  return child;\n                });\n                // Highlight selected event\n                if (selectedIdFromUrl) {\n                  existingEvent.hasEvent?.forEach(child => {\n                    if (selectedIdFromUrl === child.stId) {\n                      child.isSelected = true;\n                      this.setBreadcrumbs([...(child!.ancestors), child]);\n                    }\n                  })\n                }\n                // Highlight selected event's parent when loading from URL\n                existingEvent.isSelected = true;\n\n                if (existingEvent.stId === diagramId) {\n                  this.setSubpathwayColors(existingEvent, subpathwayColors);\n                }\n\n                if (isLast) {\n                  this.setCurrentTreeEvent(existingEvent);\n                }\n\n                return existingEvent.hasEvent!;\n              })\n            );\n          } else {\n            return of([]);\n          }\n        })\n      );\n    }, of(tree))\n\n    return forkJoin([nestedTree]).pipe(\n      map(() => {\n        return tree;\n      })\n    );\n  }\n\n\n  setSubpathwayColors(event: Event, colors: Map<number, string> | null) {\n    if (colors && event.hasEvent) {\n      event.hasEvent.forEach(e => {\n        if (e.schemaClass === 'Pathway' && !e.hasDiagram) {\n          e.color = colors.get(e.dbId);\n        }\n      });\n    }\n  }\n\n  private getAndExpandAncestors(ancestors: Event[][], treeControl: NestedTreeControl<Event, string>) {\n    const pathIds = this.state.get('path');\n    let finalAncestor: Event[];\n    // When path is given through URL, this link is from Location in PWB on detail page\n    if (pathIds && ancestors.length > 1) {\n      finalAncestor = this.findMatchingAncestor(ancestors, pathIds)\n      if (finalAncestor) {\n        this.expandAllAncestors(finalAncestor, treeControl);\n      }\n    } else {\n      // take the first ancestor if no path is given\n      finalAncestor = ancestors[0];\n      this.expandAllAncestors(ancestors[0], treeControl);\n    }\n    return finalAncestor;\n  }\n\n\n  findMatchingAncestor(ancestors: Event[][], pathIds: string[]): Event[] {\n    for (const ancestorArray of ancestors) {\n      const allIdsFromAncestor = ancestorArray.map(event => event.stId);\n      // Check if pathIds are in the current ancestor array\n      const containsAll = pathIds.every(id => allIdsFromAncestor.includes(id));\n      if (containsAll) {\n        return ancestorArray;\n      }\n    }\n    // Use first ancestor if returns null\n    return ancestors[0];\n  }\n\n\n  expandAllAncestors(ancestors: Event[], treeControl: NestedTreeControl<Event, string>) {\n    ancestors.reverse().forEach(ancestor => treeControl.expand(ancestor));\n  }\n\n\n  getPathIds(diagramId: string, ancestors: Event[]) {\n    const stIds: string[] = [];\n    for (const a of ancestors) {\n      if (a.stId === diagramId) {\n        break; // Stop before adding the target event to the result\n      }\n      stIds.push(a.stId);\n    }\n    return stIds;\n  }\n\n  setPath(diagramId: string, ancestors: Event[]) {\n    const ids = this.getPathIds(diagramId, ancestors);\n    this.state.set('path', ids);\n  }\n\n\n  // Flatten tree and return all visible tree nodes\n  getAllVisibleTreeNodes(treeControl: NestedTreeControl<Event, string>, treeNodes: Event[]): Event[] {\n    const visibleTreeNodes: Event[] = [];\n    const addVisibleNodes = (node: Event) => {\n      // Add the current node to the visible nodes\n      visibleTreeNodes.push(node);\n      // If the node is expanded, recursively check its children\n      if (treeControl.isExpanded(node) && node.hasEvent) {\n        node.hasEvent.forEach(child => addVisibleNodes(child));\n      }\n    };\n    // Start from the root nodes\n    treeNodes.forEach(rootNode => addVisibleNodes(rootNode));\n\n    return visibleTreeNodes;\n  }\n\n  // A collection of all expanded tree node and its children\n  getExpandedTreeWithChildrenNodes(treeControl: NestedTreeControl<Event, string>, treeNodes: Event[]) {\n    const expandedTreeNodes: Event[] = [];\n    const tlpStId = treeControl.expansionModel.selected[0];\n    const addVisibleNodes = (node: Event) => {\n      expandedTreeNodes.push(node);\n      if (treeControl.isExpanded(node) && node.hasEvent) {\n        node.hasEvent.forEach(child => addVisibleNodes(child));\n      }\n    };\n    const rootTree = treeNodes.find(node => node.stId === tlpStId);\n    if (rootTree) {\n      addVisibleNodes(rootTree);\n    }\n    return expandedTreeNodes;\n  }\n\n  private flattenTree(data: Event[]): Event[] {\n    const flatTreeData: Event[] = [];\n    const flatten = (nodes: Event[]) => {\n      nodes.forEach(node => {\n        flatTreeData.push(node);\n        if (node.hasEvent) {\n          flatten(node.hasEvent);\n        }\n      });\n    };\n    flatten(data);\n    return flatTreeData;\n  }\n\n  findEvent(stId: string, events: Event[]): Event | undefined {\n    const flatData = this.flattenTree(events);\n    return flatData.find(node => node.stId === stId);\n  }\n\n  hasChild = (_: number, event: Event) => !!event.hasEvent && event.hasEvent.length > 0 || ['TopLevelPathway', 'Pathway', 'CellLineagePath'].includes(event.schemaClass);\n\n  //todo : rename it\n  eventHasChild(event: Event): boolean {\n    return this.hasChild(0, event);\n  }\n\n\n  isEntity(event: Event) {\n    return (!this.eventHasChild(event) && !this.isReaction(event));\n  }\n\n  isReaction(event: Event) {\n    return (['Reaction', 'BlackBoxEvent', 'CellDevelopmentStep'].includes(event.schemaClass));\n  }\n\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\nimport {BehaviorSubject, map, Observable, tap} from \"rxjs\";\nimport {environment} from \"../../environments/environment\";\nimport {OrthologousMap, Species} from \"../model/species.model\";\nimport {Event} from \"../model/event.model\";\nimport {DiagramStateService} from \"./diagram-state.service\";\nimport {ActivatedRoute} from \"@angular/router\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SpeciesService {\n\n  private readonly _MAIN_SPECIES = `${environment.host}/ContentService/data/species/main`;\n  private readonly _ORTHOLOGIES = `${environment.host}/ContentService/data/orthologies/ids/species/`\n\n  defaultSpecies = {displayName: 'Homo sapiens', taxId: '9606', dbId: 48887, shortName: 'H.sapiens'};\n  private _currentSpeciesSubject = new BehaviorSubject<Species>(this.defaultSpecies);\n  public currentSpecies$ = this._currentSpeciesSubject.asObservable();\n\n  orthologousMap: OrthologousMap = {};\n\n  private _ignore = false; // ignore the changes from species\n  /**\n   * This map is to help get current species value from the diagramId string when loading data. For instance:\n   *  diagramId = R-HSA-4090294 then current species is H.sapiens, and then it will be selected in the species list\n   */\n  readonly abbreviationToSpecies: Map<string, Species> = new Map<string, Species>([\n    ['HSA', {displayName: 'Homo sapiens', taxId: '9606', dbId: 48887, shortName: 'H.sapiens'}],\n    ['BTA', {displayName: 'Bos taurus', taxId: '9913', dbId: 48898, shortName: 'B.taurus'}],\n    ['CEL', {displayName: 'Caenorhabditis elegans', taxId: '6239', dbId: 68320, shortName: 'C.elegans'}],\n    ['CFA', {displayName: 'Canis familiaris', taxId: '9615', dbId: 49646, shortName: 'C.familiaris'}],\n    ['DRE', {displayName: 'Danio rerio', taxId: '7955', dbId: 68323, shortName: 'D.rerio'}],\n    ['DDI', {displayName: 'Dictyostelium discoideum', taxId: '44689', dbId: 170941, shortName: 'D.discoideum'}],\n    ['DME', {displayName: 'Drosophila melanogaster', taxId: '7227', dbId: 56210, shortName: 'D.melanogaster'}],\n    ['GGA', {displayName: 'Gallus gallus', taxId: '9031', dbId: 49591, shortName: 'G.gallus'}],\n    ['MMU', {displayName: 'Mus musculus', taxId: '10090', dbId: 48892, shortName: 'M.musculus'}],\n    ['MTU', {displayName: 'Mycobacterium tuberculosis', taxId: '1773', dbId: 176806, shortName: 'M.tuberculosis'}],\n    ['PFA', {displayName: 'Plasmodium falciparum', taxId: '5833', dbId: 170928, shortName: 'P.falciparum'}],\n    ['RNO', {displayName: 'Rattus norvegicus', taxId: '10116', dbId: 48895, shortName: 'R.Rorvegicus'}],\n    ['SCE', {displayName: 'Saccharomyces cerevisiae', taxId: '4932', dbId: 68322, shortName: 'S.cerevisiae'}],\n    ['SPO', {displayName: 'Schizosaccharomyces pombe', taxId: '4896', dbId: 68324, shortName: 'S.pombe'}],\n    ['SSC', {displayName: 'Sus scrofa', taxId: '99823', dbId: 49633, shortName: 'S.scrofa'}],\n    ['XTR', {displayName: 'Xenopus tropicalis', taxId: '8364', dbId: 205621, shortName: 'X.tropicalis'}]\n  ]);\n\n\n  constructor(private http: HttpClient, private state: DiagramStateService) {\n  }\n\n  setIgnore(value: boolean) {\n    this._ignore = value;\n  }\n\n  getIgnore(): boolean {\n    return this._ignore;\n  }\n\n  getSpecies(): Observable<Species[]> {\n    return this.http.get<Species[]>(this._MAIN_SPECIES, {\n      headers: new HttpHeaders({'Content-Type': 'application/json;charset=UTF-8'})\n    });\n  }\n\n  getOrthologousMap(identifiers: string, speciesDbId: number): Observable<OrthologousMap> {\n    const url = `${this._ORTHOLOGIES}${speciesDbId}`;\n    return this.http.post<OrthologousMap>(url, identifiers, {headers: new HttpHeaders({'Content-Type': 'text/plain'})});\n  }\n\n\n  setShortName(s: Species) {\n    const parts = s.displayName.split(' ');\n    // If there are not exactly two parts, return the original string\n    if (parts.length !== 2) {\n      throw new Error('Invalid species name format. Expected \"Genus species\".');\n    }\n    const genus = parts[0];\n    const species = parts[1];\n    s.shortName = `${genus.charAt(0)}.${species}`;\n  }\n\n  setCurrentSpecies(species: Species) {\n    this._currentSpeciesSubject.next(species);\n  }\n\n  public setSpeciesFromDiagramId(diagramId: string) {\n    // Find the value between the hyphens\n    const speciesTerm = diagramId.match(/-(.*?)-/);\n    let species;\n    if (speciesTerm) {\n      // speciesTerm[0] = -HSA-, speciesTerm[0] = HSA\n      species = this.abbreviationToSpecies.get(`${speciesTerm[1]}`)\n      if (species) {\n        this.setCurrentSpecies(species);\n      }\n    }\n  }\n\n\n  getOrthologyEventStId(species: Species, selectedId: number, ancestors: Event[], ids: string[]): Observable<string> {\n    // Only need to post all ids from URL, however the API call requires dbId as content, that's why ancestors is here\n    const idsToPost: number[] = [];\n    ancestors.forEach(a => {\n      if (ids.includes(a.stId)) {\n        idsToPost.push(a.dbId);\n      }\n    });\n\n    const speciesDbId = species.dbId;\n    let newSelectedId: string = '';\n    return this.getOrthologousMap(idsToPost.join(','), speciesDbId).pipe( // can't send array to API call\n      tap(response => {\n        this.orthologousMap = response;\n        if (this.orthologousMap[selectedId]) {\n          newSelectedId = this.orthologousMap[selectedId].stId;\n        } else {\n          newSelectedId = '';\n        }\n      }),\n      map(() => newSelectedId)\n    );\n  }\n\n  getIdsFromURL(diagramId: string) {\n    let ids: string[] = []\n    ids.push(diagramId);\n    if (this.state.get('select')) {\n      ids.push(this.state.get('select'));\n    }\n    if (this.state.get('path')) {\n      ids = ids.concat(this.state.get('path'));\n    }\n    return ids;\n  }\n\n\n  updateQueryParams(paramNames: string[], selectedId: string, abbreviation: string, route: ActivatedRoute) {\n    // Create a new params object from the current query parameters\n    const newParams = {...route.snapshot.queryParams};\n    paramNames.forEach(param => {\n      const value = newParams[param];\n      const updateValue = (str: string) => str.replace(/-(.*?)-/, `-${abbreviation}-`);\n      if (value) {\n        if (param === 'select') {\n          if (selectedId) {\n            newParams[param] = updateValue(value);\n          } else {\n            // Remove 'select' if selectedId is empty\n            // delete newParams[param];\n            newParams[param] = '';\n          }\n        } else if (param === 'path') {\n          newParams[param] = value\n            .split(',')\n            .map((s: string) => updateValue(s))\n            .join(',');\n        } else {\n          newParams[param] = updateValue(value);\n        }\n      }\n    });\n    return newParams;\n  }\n\n}\n","export function isDefined<T>(value: T | undefined | null): value is T {\n  return value !== undefined && value !== null\n}\n","import {AfterViewInit, Component, Input} from '@angular/core';\nimport {Species} from \"../model/species.model\";\nimport {SpeciesService} from \"../services/species.service\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {DiagramStateService} from \"../services/diagram-state.service\";\nimport {UntilDestroy, untilDestroyed} from \"@ngneat/until-destroy\";\nimport {EventService} from \"../services/event.service\";\nimport {Event} from \"../model/event.model\";\n\n\n@Component({\n  selector: 'cr-species',\n  templateUrl: './species.component.html',\n  styleUrls: ['./species.component.scss']\n})\n@UntilDestroy()\nexport class SpeciesComponent implements AfterViewInit {\n  allSpecies: Species[] = [];\n  currentSpecies!: Species;\n\n  @Input('id') diagramId: string = '';\n  @Input('visibility') visibility = {\n    species: false,\n    interactor: false\n  }\n\n  selectedTreeEvent!: Event;\n  selectedObj!: Event;\n\n  constructor(private speciesService: SpeciesService, private router: Router, private route: ActivatedRoute, private state: DiagramStateService, private eventService: EventService) {\n\n  }\n\n  ngAfterViewInit(): void {\n    this.getSpecies();\n\n    if (this.diagramId) {\n      this.speciesService.setSpeciesFromDiagramId(this.diagramId);\n    }\n\n    this.speciesService.currentSpecies$.pipe(untilDestroyed(this)).subscribe(species => {\n      this.currentSpecies = species;\n    });\n\n    this.eventService.selectedTreeEvent$.pipe(untilDestroyed(this)).subscribe(event => {\n      this.selectedTreeEvent = event;\n    });\n\n    this.eventService.selectedObj$.pipe(untilDestroyed(this)).subscribe(event => {\n      this.selectedObj = event;\n    });\n\n  }\n\n\n  getSpecies() {\n    this.speciesService.getSpecies().subscribe(species => {\n      // Alphabetical order\n      const sortedSpecies = [...species].sort((a, b) => a.displayName.localeCompare(b.displayName))\n      sortedSpecies.forEach(s => this.speciesService.setShortName(s))\n      this.allSpecies = sortedSpecies;\n    })\n  }\n\n  onSpeciesChange(species: Species) {\n    const ids = this.speciesService.getIdsFromURL(this.diagramId);\n\n    this.currentSpecies = species;\n    this.speciesService.setCurrentSpecies(species);\n\n    const abbreviation = species.abbreviation;\n    this.diagramId = this.diagramId.replace(/-(.*?)-/, `-${abbreviation}-`);\n\n    // Include entity to ancestors list when selecting entity in the URL\n    const ancestors = this.selectedTreeEvent.ancestors;\n    const stIdSet = new Set(ancestors.map(obj => obj.stId));\n    if (!stIdSet.has(this.selectedObj.stId)) {\n      ancestors.push(this.selectedObj);\n    }\n\n    this.speciesService.getOrthologyEventStId(species, this.selectedObj.dbId, ancestors, ids)\n      .subscribe((newSelectedStId) => {\n\n        const updatedParams = this.speciesService.updateQueryParams(['select', 'flag', 'path'], newSelectedStId, abbreviation!, this.route);\n        this.speciesService.setIgnore(true);\n        this.router.navigate(['PathwayBrowser', this.diagramId], {\n          queryParamsHandling: \"preserve\"\n        }).then(() => {\n          if (updatedParams['select']) {\n            this.state.set('select', updatedParams['select']);\n          } else {\n            this.state.set('select', '');\n          }\n          this.speciesService.setIgnore(true);\n          if (updatedParams['flag']) this.state.set('flag', updatedParams['flag']);\n          if (updatedParams['path']) this.state.set('path', updatedParams['path'].split(','));\n          // Close the species panel after navigating\n          setTimeout(() => this.visibility.species = false, 600);\n        });\n      });\n  }\n}\n","<div id=\"species-container\" class=\"variables\">\n  <mat-selection-list [multiple]=false hideSingleSelectionIndicator=true class=\"selection-list\">\n    <mat-list-option *ngFor=\"let s of allSpecies\" [value]=\"s\"\n                     (click)=\"onSpeciesChange(s)\" [selected]=\"s.taxId === currentSpecies.taxId\">\n      <div class=\"species\">\n        <mat-icon class=\"custom-icon\" svgIcon=\"{{ s.taxId }}\"></mat-icon>\n        <span>{{ s.displayName }}</span>\n      </div>\n    </mat-list-option>\n  </mat-selection-list>\n</div>\n","/**?\n *  JavaScript Object Graph\n *  [\n *  {\n *    \"@id\": \"1\",\n *    \"name\": \"Sally\",\n *    \"secretSanta\": {\n *      \"@id\": \"2\",\n *      \"name\": \"Bob\",\n *      \"secretSanta\": {\n *        \"@id\": \"3\",\n *        \"name\": \"Fred\",\n *        \"secretSanta\": { \"@ref\": \"1\" }\n *      }\n *    }\n *  },\n *  { \"@ref\": \"2\" },\n *  { \"@ref\": \"3\" }\n * ]\n * @id values are arbitrary strings.\n * @id definitions must come before @ref references.\n *\n * This class is to help deserialize JSOG object to Event.\n * Track the @id of every object deserialized. When a @ref is encountered, replace it with the object referenced.\n *\n */\n\nexport interface JSOGObject {\n  [key: string]: any;\n\n  '@id'?: string;\n  '@ref'?: string;\n}\n\n\nexport class JSOGDeserializer {\n  private objectMap: { [id: string]: JSOGObject } = {};\n\n  public deserialize(jsog: JSOGObject): Event {\n    // Build @id and object map\n    this.buildIdToObjectMap(jsog);\n    // Resolve all @ref\n    return this.resolveReferences(jsog) as Event;\n  }\n\n  private buildIdToObjectMap(jsogObject: JSOGObject) {\n    if (jsogObject['@id']) {\n      this.objectMap[jsogObject['@id']] = jsogObject;\n    }\n\n    for (const key in jsogObject) {\n      if (typeof jsogObject[key] === 'object' && jsogObject[key] !== null) {\n        this.buildIdToObjectMap(jsogObject[key]);\n      }\n    }\n  }\n\n  private resolveReferences(obj: JSOGObject): JSOGObject {\n    if (obj['@ref']) {\n      return this.objectMap[obj['@ref']];\n    }\n\n    for (const key in obj) {\n      if (typeof obj[key] === 'object' && obj[key] !== null) {\n        obj[key] = this.resolveReferences(obj[key]);\n      }\n    }\n    return obj;\n  }\n}\n","import {AfterViewInit, ChangeDetectorRef, Component, Input, OnDestroy, ViewChild} from '@angular/core';\nimport {DiagramComponent} from \"../diagram/diagram.component\";\nimport {ResourceAndType} from \"../interactors/model/interactor.model\";\nimport {InteractorsComponent} from \"../interactors/interactors.component\";\nimport {Species} from \"../model/species.model\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {SpeciesService} from \"../services/species.service\";\nimport {InteractorService} from \"../interactors/services/interactor.service\";\nimport {Subscription} from \"rxjs\";\nimport {AnalysisService} from \"../services/analysis.service\";\nimport {DarkService} from \"../services/dark.service\";\n\n\n@Component({\n  selector: 'cr-viewport',\n  templateUrl: './viewport.component.html',\n  styleUrls: ['./viewport.component.scss']\n})\nexport class ViewportComponent implements AfterViewInit, OnDestroy {\n\n\n  @ViewChild('diagram') diagram!: DiagramComponent;\n  @ViewChild('interactors') interactors!: InteractorsComponent;\n  @Input('id') diagramId: string = '';\n\n  currentInteractorResource: ResourceAndType | undefined = {name: null, type: null};\n  currentSpecies: Species | undefined = undefined;\n\n  currentResourceSubscription!: Subscription;\n  currentSpeciesSubscription!: Subscription;\n\n\n  visibility = {\n    species: false,\n    interactor: false\n  }\n\n  constructor(private router: Router, private route: ActivatedRoute,\n              private speciesService: SpeciesService, private interactorService: InteractorService,\n              private cdRef: ChangeDetectorRef, public analysis: AnalysisService,\n              public dark: DarkService) {\n  }\n\n  ngAfterViewInit(): void {\n\n    this.currentSpeciesSubscription = this.speciesService.currentSpecies$.subscribe(species => {\n      this.currentSpecies = species;\n      // Updated the content after ngAfterContentChecked to avoid ExpressionChangedAfterItHasBeenCheckedError\n      this.cdRef.detectChanges();\n    });\n\n    this.currentResourceSubscription = this.interactorService.currentInteractorResource$.subscribe(resource => {\n      this.currentInteractorResource = resource;\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.currentSpeciesSubscription.unsubscribe();\n    this.currentResourceSubscription.unsubscribe();\n  }\n\n  toggleVisibility(type: string) {\n    if (type === 'species') {\n      this.visibility.species = !this.visibility.species;\n      this.visibility.interactor = false;\n    } else if (type === 'interactor') {\n      this.visibility.interactor = !this.visibility.interactor;\n      this.visibility.species = false;\n    }\n  }\n\n\n  protected readonly console = console;\n}\n","<div id=\"container\" class=\"variables\">\n  <!--A third party library Angular split helps to build resize layout, more details are : https://angular-split.github.io/-->\n  <as-split direction=\"horizontal\" gutterSize=\"4\" #sideSplit>\n    <div *asSplitGutter=\"let isDragged = isDragged\" class=\"custom-left-gutter\" [class.dragged]=\"isDragged\"></div>\n    <as-split-area [size]=\"20\">\n      <div class=\"left-panel\">\n        <div class=\"search\"><p>search-box</p></div>\n<!--        <div class=\"sidebar\">-->\n\n          <div class=\"species-interactor-container\">\n            <div class=\"species\" (click)=\"toggleVisibility('species')\" [ngClass]=\"{'selected': visibility.species}\">\n              <mat-icon class=\"custom-icon\" svgIcon=\"species\"></mat-icon>\n              <div class=\"species-content\">\n                <span>Species</span>\n                <span>{{ currentSpecies?.shortName }}</span>\n              </div>\n              <mat-icon class=\"custom-icon\">arrow_drop_down</mat-icon>\n            </div>\n            <div class=\"interactor\" (click)=\"toggleVisibility('interactor')\"\n                 [ngClass]=\"{'selected': visibility.interactor}\">\n              <mat-icon class=\"custom-icon\" svgIcon=\"overlay\"></mat-icon>\n              <div class=\"overlay-content\">\n                <span>Overlay</span>\n                <!--todo: fix the space for long name-->\n                <span *ngIf=\"currentInteractorResource?.name\">{{ currentInteractorResource?.name }}</span>\n              </div>\n              <mat-icon class=\"custom-icon\">arrow_drop_down</mat-icon>\n            </div>\n          </div>\n\n          <div [style.display]=\"visibility.species ? 'block':'none'\">\n            <cr-species [id]=\"diagramId\" [visibility]=\"visibility\"></cr-species>\n          </div>\n          <div [style.display]=\"visibility.interactor ? 'block':'none'\">\n            <cr-interactors #interactors [cy]=\"diagram.cy\" [cys]=\"diagram.cys\"\n                            (initialiseReplaceElements)=\"diagram.initialiseReplaceElements()\"></cr-interactors>\n          </div>\n          <div class=\"event-hierarchy\">\n            <cr-event-hierarchy [id]=\"diagramId\" [eventSplit]=\"sideSplit\"></cr-event-hierarchy>\n          </div>\n        </div>\n<!--      </div>-->\n    </as-split-area>\n\n    <as-split-area [size]=\"80\">\n      <div class=\"right-panel\">\n        <div class=\"top\">\n          <button mat-button [matMenuTriggerFor]=\"an\">Analysis</button>\n          <mat-menu #an=\"matMenu\">\n            <button mat-menu-item (click)=\"analysis.example('uniprot').subscribe()\">UniProt</button>\n            <button mat-menu-item (click)=\"analysis.example('microarray').subscribe()\">Expression</button>\n            <button mat-menu-item>GSA</button>\n          </mat-menu>\n\n          <mat-slide-toggle color=\"primary\" [(ngModel)]=\" dark.isDark\">Dark mode</mat-slide-toggle>\n\n        </div>\n        <div class=\"content\">\n          <as-split direction=\"vertical\" gutterSize=\"4\">\n            <div *asSplitGutter=\"let isDragged = isDragged\" class=\"custom-gutter\" [class.dragged]=\"isDragged\"></div>\n            <as-split-area [size]=\"80\">\n              <cr-diagram #diagram [id]=\"diagramId\" [interactor]=\"interactors\"></cr-diagram>\n            </as-split-area>\n            <as-split-area [size]=\"20\">\n              <cr-details></cr-details>\n            </as-split-area>\n          </as-split>\n        </div>\n      </div>\n    </as-split-area>\n  </as-split>\n</div>\n","export const environment = {\n  production: false,\n  host: \"https://dev.reactome.org\",\n  s3: \"https://s3.amazonaws.com/download.reactome.org\"\n};\n","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\n\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","import {extract} from \"../../properties-utils\";\nimport {DrawerProvider} from \"../types\";\n\n\nexport const gene: DrawerProvider = (properties, {\n  width,\n  height,\n  drug,\n  interactor,\n  disease,\n  lossOfFunction\n}) => {\n  const t = extract(properties.global.thickness);\n  const dHeight = extract(properties.gene.decorationHeight);\n  const dWidth = extract(properties.gene.decorationExtraWidth);\n  const headSize = extract(properties.gene.arrowHeadSize);\n  const radius = extract(properties.gene.arrowRadius);\n  const fill = extract(properties.gene.fill);\n  const stroke = interactor ? extract(properties.interactor.fill) : disease ? extract(properties.global.negativeContrast) : null;\n  const select = extract(properties.global.selectNode);\n  const hover = extract(properties.global.hoverNode);\n  const flag = extract(properties.global.flag);\n  const hh = Math.sqrt(Math.pow(headSize, 2) * 3 / 4)\n\n  const halfWidth = width / 2;\n\n  const r = extract(properties.gene.borderRadius);\n  const oR = r + t;\n  const iR = r - t;\n  const t_2 = t / 2;\n  const t2 = t * 2;\n  return {\n    background: {\n      \"background-image\": `\n          <path fill=\"${fill}\" class=\"gradient\" stroke-linecap=\"round\" transform=\"translate(${t_2} ${t_2})\"\n      ${stroke ? `stroke=\"${stroke}\" stroke-width=\"${t}\"` : ''}\n      ${lossOfFunction ? `stroke-dasharray=\"${t} ${t2}\"` : ''}  d=\"\n            M ${0} ${dHeight}\n            H ${width}\n            v ${height - dHeight - radius}\n            a ${radius} ${radius} 0 0 1 -${radius} ${radius}\n            H ${radius}\n            a ${radius} ${radius} 0 0 1 -${radius} -${radius}\n            Z\n          \"/>`,\n      \"bounds-expansion\": t_2,\n      \"background-clip\": \"none\",\n      \"background-image-containment\": \"over\",\n      \"background-position-x\": -t / 2,\n      \"background-position-y\": -t / 2,\n      \"background-width\": width + t,\n      \"background-height\": height + t,\n      requireGradient: true\n    },\n    decorators: [\n      {\n        \"background-image\": `\n          <path fill=\"none\" stroke=\"${fill}\" stroke-width=\"${t}\"  d=\"\n            M ${halfWidth} ${dHeight + 2 * t}\n            v -${dHeight - radius - (headSize + t) / 2 + 2 * t}\n            a ${radius} ${radius} 0 0 1 ${radius} -${radius}\n            h ${halfWidth - t - radius + dWidth}\n          \"/>\n            <path fill=\"${fill}\" stroke=\"${fill}\" stroke-width=\"${t}\" stroke-linejoin=\"round\"  d=\"\n            M ${width - hh - t_2 + dWidth} ${headSize / 2 + t_2}\n            v -${headSize / 2}\n            l ${hh} ${headSize / 2}\n            l -${hh} ${headSize / 2}\n            v -${headSize / 2}\n            z\n          \"/>`,\n        \"background-position-y\": -t / 2,\n        \"bounds-expansion\": dHeight,\n        \"background-height\": dHeight + 1.5 * t,\n        \"background-width\": width + dWidth,\n        \"background-clip\": \"none\",\n        \"background-image-containment\": \"over\",\n      }\n    ],\n    hover: {\n      \"background-image\": `<rect x=\"0\" y=\"0\" width=\"${width}\" height=\"${2 * t}\" fill=\"${hover}\"/>`,\n      \"background-position-y\": dHeight - t,\n      \"bounds-expansion\": t,\n      \"background-clip\": \"none\",\n      \"background-image-containment\": \"over\",\n      \"background-height\": 2 * t,\n    },\n    select: {\n      \"background-image\": `\n          <path fill=\"${select}\" stroke-linejoin=\"round\" stroke-linecap=\"round\"  d=\"\n            M 0 0\n            a ${oR} ${oR} 0 0 0 ${oR} ${oR}\n            h ${width - 2 * oR}\n            a ${oR} ${oR} 0 0 0 ${oR} -${oR}\n            a ${oR} ${iR} 0 0 1 -${oR} ${iR}\n            h -${width - 2 * oR}\n            a ${oR} ${iR} 0 0 1 -${oR} -${iR}\n            Z\"/>\n`,\n      \"background-position-y\": height - r,\n      \"bounds-expansion\": t,\n      \"background-clip\": \"none\",\n      \"background-image-containment\": \"over\",\n      \"background-height\": oR,\n    },\n    flag: {\n      \"background-image\": `\n       <path fill=\"${flag}\" d=\"\n       M 0 0\n       H ${width + 4 * t}\n       V ${height - dHeight - r + t}\n       a ${oR + t} ${oR} 0 0 1 -${oR + t} ${oR}\n       H ${oR + t}\n       a ${oR + t} ${oR} 0 0 1 -${oR + t} -${oR}\n       Z\n       \"/>\n`,\n      \"background-position-x\": -2 * t,\n      \"background-position-y\": dHeight - t,\n      \"bounds-expansion\": 2 * t,\n      \"background-clip\": \"none\",\n      \"background-image-containment\": \"over\",\n      \"background-width\": width + 4 * t,\n      \"background-height\": height + 2 * t - dHeight,\n    },\n    // analysis: {\n    //   \"background-image\": `${gradient}\n    //       <path fill=\"url(#gradient)\" transform=\"translate(${t_2} ${t_2})\"\n    //       d=\"\n    //         M ${0} ${dHeight}\n    //         H ${width}\n    //         v ${height - dHeight - radius}\n    //         a ${radius} ${radius} 0 0 1 -${radius} ${radius}\n    //         H ${radius}\n    //         a ${radius} ${radius} 0 0 1 -${radius} -${radius}\n    //         Z\n    //       \"/>`,\n    //   \"bounds-expansion\": t_2,\n    //   \"background-clip\": \"none\",\n    //   \"background-image-containment\": \"over\",\n    //   \"background-position-x\": -t / 2,\n    //   \"background-position-y\": -t / 2,\n    //   \"background-width\": width + t,\n    //   \"background-height\": height + t,\n    // }\n  }\n}\n\n\n","import {extract} from \"../../properties-utils\";\nimport {DrawerProvider} from \"../types\";\n\nexport const molecule: DrawerProvider = (properties, {width, height, drug, interactor}) => {\n  const select = extract(properties.global.selectNode);\n  const hover = extract(properties.global.hoverNode);\n  const flag = extract(properties.global.flag);\n  const thick = extract(properties.global.thickness);\n  const stroke = !interactor ? (\n    !drug ?\n      extract(properties.molecule.stroke) :\n      extract(properties.molecule.drug)\n  ) : extract(properties.interactor.fill);\n  const fill = extract(properties.molecule.fill);\n\n  const ht = thick / 2;\n  const halfHeight = height / 2;\n  const oR = halfHeight + thick;\n  const iR = halfHeight - thick;\n  const oRx = Math.min(oR, width / 2)\n  return {\n    hover: {\n      \"background-image\": `\n          <path fill=\"${hover}\" stroke-linejoin=\"round\" stroke-linecap=\"round\"  d=\"\n            M 0 ${oR}\n            a ${oRx} ${oR} 0 0 1 ${oRx} -${oR}\n            h ${width - 2 * oRx + thick}\n            a ${oRx} ${oR} 0 0 1 ${oRx} ${oR}\n            a ${oRx} ${iR} 0 0 0 -${oRx} -${iR}\n            h -${width - 2 * oRx + thick}\n            a ${oRx} ${iR} 0 0 0 -${oRx} ${iR}\n            Z\"/>\n`,\n      \"background-position-y\": -thick,\n      \"background-position-x\": -thick / 2,\n      \"bounds-expansion\": thick,\n      \"background-clip\": \"none\",\n      \"background-image-containment\": \"over\",\n      \"background-height\": oR,\n      \"background-width\": width + thick,\n    },\n    select: {\n      \"background-image\": `\n          <path fill=\"${select}\" stroke-linejoin=\"round\" stroke-linecap=\"round\"  d=\"\n            M 0 0\n            a ${oRx} ${oR} 0 0 0 ${oRx} ${oR}\n            h ${width - 2 * oRx + thick}\n            a ${oRx} ${oR} 0 0 0 ${oRx} -${oR}\n            a ${oRx} ${iR} 0 0 1 -${oRx} ${iR}\n            h -${width - 2 * oRx + thick}\n            a ${oRx} ${iR} 0 0 1 -${oRx} -${iR}\n            Z\"/>\n`,\n      \"background-position-y\": halfHeight,\n      \"background-position-x\": -thick / 2,\n      \"bounds-expansion\": thick,\n      \"background-clip\": \"none\",\n      \"background-image-containment\": \"over\",\n      \"background-height\": oR,\n      \"background-width\": width + thick,\n    },\n    flag: {\n      \"background-image\": `\n<rect width=\"${width + 4 * thick}\" height=\"${height + 2 * thick}\" rx=\"${oR + 2 * thick}\" ry=\"${oR}\" fill=\"${flag}\"/>\n<rect x=\"${2 * thick}\" y=\"${thick}\" width=\"${width}\" height=\"${height}\" rx=\"${oR}\" fill=\"${fill}\" stroke=\"${stroke}\" stroke-width=\"${thick}\"/>\n`,\n      \"background-position-x\": -2 * thick,\n      \"background-position-y\": -thick,\n      \"bounds-expansion\": 2 * thick,\n      \"background-clip\": \"none\",\n      \"background-image-containment\": \"over\",\n      \"background-width\": width + 4 * thick,\n      \"background-height\": height + 2 * thick,\n    },\n    analysis: {\n      \"background-image\": `<rect fill=\"url(#gradient)\" width=\"${width}\" height=\"${height}\" rx=\"${halfHeight}\" stroke-width=\"${thick}\" stroke=\"${stroke}\"/>`,\n      requireGradient: true\n    }\n  }\n}\n\n\n","import {extract} from \"../../properties-utils\";\nimport {DrawerProvider} from \"../types\";\n\nexport const protein: DrawerProvider = (properties, {width, height, drug}) => {\n  const fill = extract(properties.protein.fill);\n  const select = extract(properties.global.selectNode);\n  const hover = extract(properties.global.hoverNode);\n  const flag = extract(properties.global.flag);\n  const thick = extract(properties.global.thickness);\n  const radius = extract(properties.protein.radius);\n\n  const oR = radius + thick;\n  const iR = radius - thick;\n\n  return {\n    hover: {\n      \"background-image\": `\n          <path fill=\"${hover}\" stroke-linejoin=\"round\" stroke-linecap=\"round\"  d=\"\n            M 0 ${oR}\n            a ${oR} ${oR} 0 0 1 ${oR} -${oR}\n            h ${width - 2 * oR}\n            a ${oR} ${oR} 0 0 1 ${oR} ${oR}\n            a ${oR} ${iR} 0 0 0 -${oR} -${iR}\n            h -${width - 2 * oR}\n            a ${oR} ${iR} 0 0 0 -${oR} ${iR}\n            Z\"/>\n`,\n      \"background-position-y\": -thick,\n      \"bounds-expansion\": thick,\n      \"background-clip\": \"none\",\n      \"background-image-containment\": \"over\",\n      \"background-height\": oR,\n    },\n    select: {\n      \"background-image\": `\n          <path fill=\"${select}\" stroke-linejoin=\"round\" stroke-linecap=\"round\"  d=\"\n            M 0 0\n            a ${oR} ${oR} 0 0 0 ${oR} ${oR}\n            h ${width - 2 * oR}\n            a ${oR} ${oR} 0 0 0 ${oR} -${oR}\n            a ${oR} ${iR} 0 0 1 -${oR} ${iR}\n            h -${width - 2 * oR}\n            a ${oR} ${iR} 0 0 1 -${oR} -${iR}\n            Z\"/>\n`,\n      \"background-position-y\": height - radius,\n      \"bounds-expansion\": thick,\n      \"background-clip\": \"none\",\n      \"background-image-containment\": \"over\",\n      \"background-height\": oR,\n    },\n    flag: {\n      \"background-image\": `\n<rect width=\"${width + 4 * thick}\" height=\"${height + 2 * thick}\" rx=\"${oR }\"  fill=\"${flag}\"/>\n<rect x=\"${2*thick}\" y=\"${thick}\" width=\"${width}\" height=\"${height}\" rx=\"${radius}\" fill=\"${fill}\"/>\n`,\n      \"background-position-x\": -2 * thick,\n      \"background-position-y\": -thick,\n      \"bounds-expansion\": 2 * thick,\n      \"background-clip\": \"none\",\n      \"background-image-containment\": \"over\",\n      \"background-width\": width + 4 * thick,\n      \"background-height\": height + 2 * thick,\n    },\n    analysis: {\n      \"background-image\": `<rect width=\"${width}\" height=\"${height}\" class=\"gradient\" rx=\"${radius}\"/>`,\n      requireGradient: true\n    }\n  }\n}\n\n\n","import {extract} from \"../../properties-utils\";\nimport {DrawerProvider} from \"../types\";\n\n\nexport const rna: DrawerProvider = (properties, {width, height}) => {\n  const thick = extract(properties.global.thickness);\n  const select = extract(properties.global.selectNode);\n  const hover = extract(properties.global.hoverNode);\n  const flag = extract(properties.global.flag);\n  const fill = extract(properties.rna.fill);\n\n  const r = extract(properties.rna.radius);\n  const oR = r + thick;\n  const iR = r - thick;\n  return {\n    hover: {\n      \"background-image\": `<rect x=\"0\" y=\"0\" width=\"${width}\" height=\"${2 * thick}\" fill=\"${hover}\"/>`,\n      \"background-position-y\": -thick,\n      \"bounds-expansion\": thick,\n      \"background-clip\": \"none\",\n      \"background-image-containment\": \"over\",\n      \"background-height\": 2 * thick,\n    },\n    select: {\n      \"background-image\": `\n          <path fill=\"${select}\" stroke-linejoin=\"round\" stroke-linecap=\"round\"  d=\"\n            M 0 0\n            a ${oR} ${oR} 0 0 0 ${oR} ${oR}\n            h ${width - 2 * oR}\n            a ${oR} ${oR} 0 0 0 ${oR} -${oR}\n            a ${oR} ${iR} 0 0 1 -${oR} ${iR}\n            h -${width - 2 * oR}\n            a ${oR} ${iR} 0 0 1 -${oR} -${iR}\n            Z\"/>\n`,\n      \"background-position-y\": height - r,\n      \"bounds-expansion\": thick,\n      \"background-clip\": \"none\",\n      \"background-image-containment\": \"over\",\n      \"background-height\": oR,\n    },\n    flag: {\n      \"background-image\": `\n       <path fill=\"${flag}\" d=\"\n       M 0 0\n       H ${width + 4 * thick}\n       V ${height - r + thick}\n       a ${oR + thick} ${oR} 0 0 1 -${oR + thick} ${oR}\n       H ${oR + thick}\n       a ${oR + thick} ${oR} 0 0 1 -${oR + thick} -${oR}\n       Z\n       \"/>\n       <path fill=\"${fill}\" d=\"\n       M ${2 * thick} ${thick}\n       H ${width + 2 * thick}\n       V ${height - r + thick}\n       a ${r} ${r} 0 0 1 -${r} ${r}\n       H ${r + 2 * thick}\n       a ${r} ${r} 0 0 1 -${r} -${r}\n       Z\"/>\n`,\n      \"background-position-x\": -2 * thick,\n      \"background-position-y\": -thick,\n      \"bounds-expansion\": 2 * thick,\n      \"background-clip\": \"none\",\n      \"background-image-containment\": \"over\",\n      \"background-width\": width + 4 * thick,\n      \"background-height\": height + 2 * thick,\n    },\n    analysis: {\n      \"background-image\": `\n       <path class=\"gradient\" d=\"\n       M 0 0\n       H ${width}\n       V ${height - r }\n       a ${r} ${r} 0 0 1 -${r} ${r}\n       H ${r}\n       a ${r} ${r} 0 0 1 -${r} -${r}\n       Z\"/>`,\n      requireGradient: true\n    }\n  }\n}\n\n\n","import {extract} from \"../../properties-utils\";\nimport {DrawerProvider} from \"../types\";\n\nexport const genomeEncodedEntity: DrawerProvider = (properties, {\n  width,\n  height,\n  drug,\n  disease,\n  interactor,\n  lossOfFunction\n}) => {\n  const fill = !drug ?\n    extract(properties.complex.fill) :\n    extract(properties.genomeEncodedEntity.drug);\n  const select = extract(properties.global.selectNode);\n  const hover = extract(properties.global.hoverNode);\n  const flag = extract(properties.global.flag);\n  const t = extract(properties.global.thickness);\n  const t_2 = t / 2;\n  const bottomR = extract(properties.genomeEncodedEntity.bottomRadius);\n  const stroke = !interactor ? !disease ? null : extract(properties.global.negativeContrast) : extract(properties.interactor.fill);\n\n  const topR = Math.min(extract(properties.genomeEncodedEntity.topRadius), height - bottomR, width / 2 - t);\n  const v = height - bottomR - topR;\n\n  const topOR = topR + t;\n  const topIR = topR - t;\n\n  const bottomOR = bottomR + t;\n  const bottomIR = bottomR - t;\n\n\n  return {\n    background: {\n      \"background-image\": `\n      <path fill=\"${fill}\" class=\"gradient\" stroke-linecap=\"round\" transform=\"translate(${t_2} ${t_2})\"\n      ${stroke ? `stroke=\"${stroke}\" stroke-width=\"${t}\"` : ''}\n      ${lossOfFunction ? `stroke-dasharray=\"${t} ${t * 2}\"` : ''}\n      d=\"\n      M ${topR} 0\n      H ${width - topR}\n      a ${topR} ${topR} 0 0 1 ${topR} ${topR}\n      v ${v}\n      a ${bottomR} ${bottomR} 0 0 1 -${bottomR} ${bottomR}\n      H ${bottomR}\n      a ${bottomR} ${bottomR} 0 0 1 -${bottomR} -${bottomR}\n      v -${v}\n      a ${topR} ${topR} 0 0 1 ${topR} -${topR}\n      Z\n      \"/>\n      `,\n      \"bounds-expansion\": t / 2,\n      \"background-clip\": \"none\",\n      \"background-image-containment\": \"over\",\n      \"background-position-x\": -t_2,\n      \"background-position-y\": -t_2,\n      \"background-width\": width + t,\n      \"background-height\": height + t,\n    requireGradient: true\n    },\n    hover: {\n      \"background-image\": `\n          <path fill=\"${hover}\" stroke-linejoin=\"round\" stroke-linecap=\"round\"  d=\"\n            M 0 ${topOR}\n            a ${topOR} ${topOR} 0 0 1 ${topOR} -${topOR}\n            h ${width - 2 * topOR}\n            a ${topOR} ${topOR} 0 0 1 ${topOR} ${topOR}\n            a ${topOR} ${topIR} 0 0 0 -${topOR} -${topIR}\n            h -${width - 2 * topOR}\n            a ${topOR} ${topIR} 0 0 0 -${topOR} ${topIR}\n            Z\"/>\n`,\n      \"background-position-y\": -t,\n      \"bounds-expansion\": t,\n      \"background-clip\": \"none\",\n      \"background-image-containment\": \"over\",\n      \"background-height\": topOR,\n    },\n    select: {\n      \"background-image\": `\n          <path fill=\"${select}\" stroke-linejoin=\"round\" stroke-linecap=\"round\"  d=\"\n            M 0 0\n            a ${bottomOR} ${bottomOR} 0 0 0 ${bottomOR} ${bottomOR}\n            h ${width - 2 * bottomOR}\n            a ${bottomOR} ${bottomOR} 0 0 0 ${bottomOR} -${bottomOR}\n            a ${bottomOR} ${bottomIR} 0 0 1 -${bottomOR} ${bottomIR}\n            h -${width - 2 * bottomOR}\n            a ${bottomOR} ${bottomIR} 0 0 1 -${bottomOR} -${bottomIR}\n            Z\"/>\n`,\n      \"background-position-y\": height - bottomR,\n      \"bounds-expansion\": t,\n      \"background-clip\": \"none\",\n      \"background-image-containment\": \"over\",\n      \"background-height\": bottomOR,\n    },\n    flag: {\n      \"background-image\": `\n      <path fill=\"${flag}\" d=\"\n      M ${topOR} 0\n      H ${width + 3 * t - topOR}\n      a ${topOR + t} ${topOR} 0 0 1 ${topOR + t} ${topOR}\n      v ${v}\n      a ${bottomOR + t} ${bottomOR} 0 0 1 -${bottomOR + t} ${bottomOR}\n      H ${bottomOR + t}\n      a ${bottomOR + t} ${bottomOR} 0 0 1 -${bottomOR + t} -${bottomOR}\n      v -${v}\n      a ${topOR + t} ${topOR} 0 0 1 ${topOR + t} -${topOR}\n      Z\n      \"/>\n`,\n      \"background-position-x\": -2 * t,\n      \"background-position-y\": -t,\n      \"bounds-expansion\": 2 * t,\n      \"background-clip\": \"none\",\n      \"background-image-containment\": \"over\",\n      \"background-width\": width + 4 * t,\n      \"background-height\": height + 2 * t,\n    }\n  }\n}\n\n\n","import {extract} from \"../../properties-utils\";\nimport {DrawerProvider} from \"../types\";\n\n\nexport const complex: DrawerProvider = (properties, {\n  width,\n  height,\n  drug,\n  disease,\n  interactor,\n  lossOfFunction\n}) => {\n  const select = extract(properties.global.selectNode);\n  const hover = extract(properties.global.hoverNode);\n  const flag = extract(properties.global.flag);\n\n  const t = extract(properties.global.thickness);\n  const cut = extract(properties.complex.cut);\n  const fill = !drug ?\n    interactor ? extract(properties.interactor.fill) : extract(properties.complex.fill) :\n    extract(properties.complex.drug);\n\n  const stroke = !disease ? extract(properties.complex.stroke) : extract(properties.global.negativeContrast);\n\n  const cut2 = cut * 2;\n  const t2 = t * 2;\n  const v = height - cut2 - 2 * t2; // Vertical\n\n  const delta = 0;\n  const stateHeight = height / 2 + t;\n\n  const defs = `<defs>\n  <path id=\"octogon\" d=\"\n      M ${cut + t2 + delta} ${t2}\n      H ${width - cut - t2 - delta}\n      l ${cut} ${cut}\n      v ${v}\n      l -${cut} ${cut}\n      H ${cut + t2 + delta}\n      l -${cut} -${cut}\n      v -${v}\n      l  ${cut} -${cut}\n      Z\n      \"/>\n  </defs>`;\n  return {\n    background: {\n      \"background-image\": `\n      ${defs}\n      <use href=\"#octogon\" fill=\"${fill}\" stroke=\"${fill}\" stroke-width=\"${2 * t2}\" stroke-linejoin=\"round\"/>\n`\n    },\n    hover: {\n      \"background-image\": `\n      <path stroke=\"${hover}\" fill=\"none\" stroke-width=\"${2 * t2}\" stroke-linejoin=\"round\" d=\"\n      M ${t2} ${stateHeight}\n      v -${v / 2}\n      l ${cut} -${cut + t}\n      H ${width - cut - t2}\n      l ${cut} ${cut + t}\n      v ${v / 2}\n      \" />\n      `,\n      \"background-position-y\": -t,\n      \"background-height\": stateHeight,\n      \"background-clip\": \"none\",\n      \"bounds-expansion\": t\n    },\n    select: {\n      \"background-image\": `\n      <path stroke=\"${select}\" fill=\"none\" stroke-width=\"${2 * t2}\" stroke-linejoin=\"round\" d=\"\n      M ${t2} ${0}\n      v ${v / 2}\n      l ${cut} ${cut + t}\n      H ${width - cut - t2}\n      l ${cut} -${cut + t}\n      v -${v / 2}\n      \" />\n      `,\n      \"background-position-y\": height / 2,\n      \"background-height\": stateHeight,\n      \"background-clip\": \"none\",\n      \"bounds-expansion\": t\n    },\n    flag: {\n      \"background-image\": `\n<path id=\"octogon\" d=\"\n      M ${width / 2} ${3 * t}\n      H ${width - cut - delta}\n      l ${cut + t} ${cut}\n      v ${v}\n      l -${cut + t} ${cut}\n      H ${cut + delta + 2 * t2}\n      l -${cut + t} -${cut}\n      v -${v}\n      l  ${cut + t} -${cut}\n      Z\n      \" stroke=\"${flag}\" stroke-width=\"${3 * t2}\" stroke-linejoin=\"round\"/>\n`,\n      \"background-position-x\": -2 * t,\n      \"background-position-y\": -t,\n      \"bounds-expansion\": 2 * t,\n      \"background-clip\": \"none\",\n      \"background-image-containment\": \"over\",\n      \"background-width\": width + 4 * t,\n      \"background-height\": height + 2 * t,\n    },\n    decorators: [\n      {\n        \"background-image\": `\n         ${defs}\n         <use href=\"#octogon\" fill=\"none\" stroke=\"${stroke}\" stroke-width=\"${t2}\" stroke-linejoin=\"round\" ${lossOfFunction ? `stroke-dasharray=\"${t2}\"` : ''} />\n         <use href=\"#octogon\" fill=\"${fill}\" class=\"gradient\"/>\n         `,\n        requireGradient: true\n      }\n    ],\n  }\n}\n\n","import {extract} from \"../../properties-utils\";\nimport {DrawerProvider} from \"../types\";\n\n\nexport const entitySet: DrawerProvider = (properties, {\n  width,\n  height,\n  drug,\n  disease,\n  lossOfFunction,\n  interactor\n}) => {\n  const select = extract(properties.global.selectNode);\n  const hover = extract(properties.global.hoverNode);\n  const flag = extract(properties.global.flag);\n\n  const t = extract(properties.global.thickness);\n  let r = extract(properties.entitySet.radius);\n\n  if (2 * r > height / 2 - t) {\n\n    r = height / 4 - (t / 2);\n  }\n\n  width += 2 * r;\n\n  const fill =\n    !interactor ?\n      !drug ?\n        extract(properties.entitySet.fill) :\n        extract(properties.entitySet.drug)\n      : extract(properties.interactor.fill);\n  const stroke = !disease ?\n    extract(properties.entitySet.stroke) :\n    extract(properties.global.negativeContrast);\n\n  const r2 = r * 2;\n  const t2 = t * 2;\n  const v = height / 2 - r2 - t; // Vertical\n  const stateHeight = height / 2 + t;\n  const bracesOffset = r2 + t2;\n\n  let realDashLength = width;\n\n  if (lossOfFunction) {\n    const hidingLength = width - 2 * bracesOffset;\n    const idealDashLength = t2;\n    const dashNumber = Math.round((hidingLength / idealDashLength + 1) / 2);\n    realDashLength = hidingLength / (2 * dashNumber - 1);\n  }\n\n\n  const defs = `<defs>\n   <path id=\"curly\" d=\"\n       M ${r2 + t} ${t}\n       H ${width - r2 - t}\n       a ${r} ${r} 0 0 1 ${r} ${r}\n\n       v ${v}\n       a ${r} ${r} 0 0 0 ${r} ${r}\n       a ${r} ${r} 0 0 0 -${r} ${r}\n       v ${v}\n\n       a ${r} ${r} 0 0 1 -${r} ${r}\n       H ${r2 + t}\n       a ${r} ${r} 0 0 1 -${r} -${r}\n\n       v -${v}\n       a ${r} ${r} 0 0 0 -${r} -${r}\n       a ${r} ${r} 0 0 0 ${r} -${r}\n       v -${v}\n\n       a ${r} ${r} 0 0 1 ${r} -${r}\n       Z\n       \"/>\n   <clipPath id=\"inside\">\n     <use href=\"#curly\"/>\n   </clipPath>\n </defs>`;\n\n  const t1_5 = t * 1.5;\n  return {\n    background: {\n      \"background-image\": `\n       ${defs}\n       <use href=\"#curly\" fill=\"${fill}\" stroke=\"${fill}\" stroke-width=\"${t2}\" stroke-linejoin=\"round\"/>\n       `,\n      \"background-position-x\": -r,\n      \"background-width\": width + 2 * r,\n      \"background-clip\": \"none\",\n      \"bounds-expansion\": 2 * t,\n    },\n    hover: {\n      \"background-image\": `\n       <path stroke=\"${hover}\" stroke-width=\"${t2}\" fill=\"none\" stroke-linejoin=\"round\" d=\"\n         M ${r + t} ${stateHeight + r}\n         a ${r} ${r} 0 0 0 -${r} -${r}\n         a ${r} ${r} 0 0 0 ${r} -${r}\n         v -${v}\n         a ${r} ${r + t} 0 0 1 ${r} -${r + t}\n         H ${width - r2 - t}\n         a ${r} ${r + t} 0 0 1 ${r} ${r + t}\n         v ${v}\n         a ${r} ${r} 0 0 0 ${r} ${r}\n         a ${r} ${r} 0 0 0 -${r} ${r}\n       \"/>`,\n      \"background-position-x\": -r,\n      \"background-width\": width + 2 * r,\n\n      \"background-clip\": \"none\",\n      \"bounds-expansion\": 2 * t,\n\n      \"background-position-y\": -t,\n      \"background-height\": stateHeight\n    },\n    select: {\n      \"background-image\": `\n       <path stroke=\"${select}\" stroke-width=\"${t2}\" fill=\"none\" stroke-linejoin=\"round\" d=\"\n         M ${r + t} ${-r}\n         a ${r} ${r} 0 0 1 -${r} ${r}\n         a ${r} ${r} 0 0 1 ${r} ${r}\n         v ${v}\n         a ${r} ${r + t} 0 0 0 ${r} ${r + t}\n         H ${width - r2 - t}\n         a ${r} ${r + t} 0 0 0 ${r} -${r + t}\n         v -${v}\n         a ${r} ${r} 0 0 1 ${r} -${r}\n         a ${r} ${r} 0 0 1 -${r} -${r}\n       \"/>`,\n      \"background-position-x\": -r,\n      \"background-width\": width + 2 * r,\n\n      \"background-clip\": \"none\",\n      \"bounds-expansion\": 2 * t,\n\n      \"background-position-y\": height / 2,\n      \"background-height\": stateHeight\n    },\n    flag: {\n      \"background-image\": `\n<rect width=\"${width}\" height=\"${height + 2 * t}\" rx=\"${r + 3 * t}\" ry=\"${r + t2}\" fill=\"${flag}\"/>\n`,\n      \"background-position-x\": -2 * t,\n      \"background-position-y\": -t,\n      \"bounds-expansion\": 2 * t,\n      \"background-clip\": \"none\",\n      \"background-image-containment\": \"over\",\n      \"background-width\": width,\n      \"background-height\": height + 2 * t,\n    },\n    decorators: [\n      {\n        \"background-image\": `\n       ${defs}\n       <mask id=\"myMask\">\n         <rect fill=\"white\" x=\"0\" y=\"0\" width=\"${width}\" height=\"${height}\"/>\n         <rect fill=\"black\" x=\"${bracesOffset}\" y=\"${0}\" width=\"${width - 2 * bracesOffset}\" height=\"${height}\"/>\n       </mask>\n       <use href=\"#curly\" fill=\"none\" stroke=\"${stroke}\" stroke-width=\"${t2}\" clip-path=\"url(#inside)\" mask=\"url(#myMask)\"/>\n`,\n        \"background-position-x\": -r,\n        \"bounds-expansion\": r,\n        \"background-clip\": \"none\",\n        \"background-width\": width + 2 * r,\n      },\n    ],\n    analysis: {\n      'background-image': `<rect x=\"${r * 1.5}\" y=\"${t}\" width=\"${width - 2 * r * 1.5}\" rx=\"${r}\" height=\"${height - t2}\" class=\"gradient\"/>`,\n      \"background-position-x\": -r,\n      \"background-width\": width + 2 * r,\n      \"background-clip\": \"none\",\n      \"bounds-expansion\": 2 * t,\n      requireGradient: true\n    }\n    // analysis: {\n    //   'background-image': `${defs}${gradient}\n    //   <use href=\"#curly\" fill=\"url(#gradient)\" clip-path=\"url(#inside)\"/>\n    //   <mask id=\"myMask\">\n    //      <rect fill=\"white\" x=\"0\" y=\"0\" width=\"${width}\" height=\"${height}\"/>\n    //      <rect fill=\"black\" x=\"${bracesOffset}\" y=\"${0}\" width=\"${width - 2 * bracesOffset}\" height=\"${height}\"/>\n    //    </mask>\n    //    <use href=\"#curly\" fill=\"none\" stroke=\"${stroke}\" stroke-width=\"${t2}\" clip-path=\"url(#inside)\" mask=\"url(#myMask)\"/>`,\n    //   \"background-position-x\": -r,\n    //   \"bounds-expansion\": r,\n    //   \"background-clip\": \"none\",\n    //   \"background-width\": width + 2 * r,\n    // }\n  }\n}\n","import {extract} from \"../../properties-utils\";\nimport {DrawerProvider} from \"../types\";\n\nexport const cell: DrawerProvider = (properties, {width, height}) => {\n  const select = extract(properties.global.selectNode);\n  const hover = extract(properties.global.hoverNode);\n  const flag = extract(properties.global.flag);\n  const thick = extract(properties.global.thickness);\n  const cellThick = extract(properties.cell.thickness);\n  const stroke = extract(properties.cell.stroke)\n  const fill = extract(properties.cell.fill);\n\n  const ht = thick / 2;\n  const halfHeight = height / 2;\n  const oR = halfHeight + thick;\n  const iR = halfHeight - thick;\n  const oRx = Math.min(oR, width / 2)\n  return {\n    background: {\n      \"background-image\": `\n      <rect x=\"${ht}\" y=\"${ht}\" width=\"${width - thick}\" height=\"${height - thick}\" rx=\"${halfHeight}\" stroke=\"${fill}\" fill=\"${stroke}\" stroke-width=\"${thick}\"/>\n      <rect x=\"${ht + cellThick}\" y=\"${2 * thick}\" width=\"${width - 2 * cellThick - thick}\" height=\"${height - 4 * thick}\" ry=\"${halfHeight}\" rx=\"${halfHeight - cellThick}\" fill=\"${fill}\" class=\"gradient\" stroke-width=\"0\"/>\n      `,\n      requireGradient: true\n    },\n    hover: {\n      \"background-image\": `\n          <path fill=\"${hover}\" stroke-linejoin=\"round\" stroke-linecap=\"round\"  d=\"\n            M 0 ${oR}\n            a ${oRx} ${oR} 0 0 1 ${oRx} -${oR}\n            h ${width - 2 * oRx}\n            a ${oRx} ${oR} 0 0 1 ${oRx} ${oR}\n            a ${oRx} ${iR} 0 0 0 -${oRx} -${iR}\n            h -${width - 2 * oRx}\n            a ${oRx} ${iR} 0 0 0 -${oRx} ${iR}\n            Z\"/>\n`,\n      \"background-position-y\": -thick,\n      \"bounds-expansion\": thick,\n      \"background-clip\": \"none\",\n      \"background-image-containment\": \"over\",\n      \"background-height\": oR,\n    },\n    select: {\n      \"background-image\": `\n          <path fill=\"${select}\" stroke-linejoin=\"round\" stroke-linecap=\"round\"  d=\"\n            M 0 0\n            a ${oRx} ${oR} 0 0 0 ${oRx} ${oR}\n            h ${width - 2 * oRx}\n            a ${oRx} ${oR} 0 0 0 ${oRx} -${oR}\n            a ${oRx} ${iR} 0 0 1 -${oRx} ${iR}\n            h -${width - 2 * oRx}\n            a ${oRx} ${iR} 0 0 1 -${oRx} -${iR}\n            Z\"/>\n`,\n      \"background-position-y\": halfHeight,\n      \"bounds-expansion\": thick,\n      \"background-clip\": \"none\",\n      \"background-image-containment\": \"over\",\n      \"background-height\": oR,\n    },\n    flag: {\n      \"background-image\": `\n<rect width=\"${width + 4 * thick}\" height=\"${height + 2 * thick}\" rx=\"${oR + 2 * thick}\" ry=\"${oR}\" fill=\"${flag}\"/>\n`,\n      \"background-position-x\": -2 * thick,\n      \"background-position-y\": -thick,\n      \"bounds-expansion\": 2 * thick,\n      \"background-clip\": \"none\",\n      \"background-image-containment\": \"over\",\n      \"background-width\": width + 4 * thick,\n      \"background-height\": height + 2 * thick,\n    },\n    // analysis: {\n    //   'background-image': `${gradient}<rect x=\"${ht + cellThick}\" y=\"${2 * thick}\" width=\"${width - 2 * cellThick - thick}\" height=\"${height - 4 * thick}\" ry=\"${halfHeight}\" rx=\"${halfHeight - cellThick}\" fill=\"url(#gradient)\" stroke-width=\"0\"/>`\n    // }\n  }\n}\n\n\n","import {DrawerProvider} from \"../types\";\nimport {extract} from \"../../properties-utils\";\n\n\nexport const interactingPathway: DrawerProvider = (properties, {width, height, drug}) => {\n  const select = extract(properties.global.selectNode);\n  const hover = extract(properties.global.hoverNode);\n  const flag = extract(properties.global.flag);\n  const thick = extract(properties.global.thickness);\n\n  let realWidth = width;\n  const t = 3 * thick;\n  return {\n    hover: {\n      \"background-image\": `<rect fill=\"${hover}\" width=\"${width}\" height=\"${t}\"/>`,\n      \"background-width\": width,\n      \"background-height\": t,\n    },\n    select: {\n      \"background-image\": `<rect fill=\"${select}\" width=\"${width}\" height=\"${t}\"/>`,\n      \"background-position-y\": height - t,\n      \"background-width\": width,\n      \"background-height\": t,\n    },\n    flag: {\n      \"background-image\": `\n<rect fill=\"${flag}\" width=\"${t}\" height=\"${height}\"/>\n<rect fill=\"${flag}\" width=\"${t}\" height=\"${height}\" x=\"${realWidth + t}\"/>\n`,\n      \"background-width\": realWidth + 4 * t,\n      \"background-position-x\": -t,\n      \"background-height\": height,\n      \"bounds-expansion\": 2 * t,\n      \"background-clip\": \"none\",\n      \"background-image-containment\": \"over\",\n    },\n    analysis: {\n      \"background-image\": `<rect class=\"gradient\" x=\"${t}\" y=\"${t}\" width=\"${width - 2 * t}\" height=\"${height - 2 * t}\"/>`,\n      requireGradient: true\n    }\n  }\n}\n\n","import {extract} from \"../../properties-utils\";\nimport {DrawerProvider} from \"../types\";\n\nexport const diseaseInteractor: DrawerProvider = (properties, {width, height, drug, disease, interactor}) => {\n\n  const hover = extract(properties.global.hoverNode);\n  const select = extract(properties.global.selectNode);\n  const fill = extract(properties.global.negative);\n  const t = extract(properties.global.thickness);\n  const decorationWidth = extract(properties.interactor.decorationWidth);\n  const t4 = t * 4\n  const t2 = t * 2;\n  const h = height / 2 + t2;\n  const midH = height / 2;\n\n  return {\n    decorators: [\n      {\n        \"background-image\": `\n      <path fill=\"${fill}\" stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-width=\"${t4}\" stroke=\"${fill}\"  d=\"\n      M ${t2} ${midH}\n      L ${decorationWidth + t2} ${t2}\n      H ${width - (decorationWidth + t2)}\n      L ${width - t2} ${midH}\n      L ${width - (decorationWidth + t2)} ${height - t2}\n      H ${decorationWidth + t2}\n      Z\n      \" />\n      `,\n      }\n    ],\n\n    hover: {\n      \"background-image\": `\n      <path stroke=\"${hover}\" stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-width=\"${t4}\" d=\"\n      M ${t2} ${midH + t2}\n      L ${decorationWidth + t2} ${t2}\n      H ${width - (decorationWidth + t2)}\n      L ${width - t2} ${midH + t2}\n      Z\n      \" />\n      `,\n      \"background-position-y\": -t2,\n      \"background-height\": h,\n      \"background-clip\": \"none\",\n      \"bounds-expansion\": t2,\n      \"background-image-containment\": \"over\",\n    },\n\n    select: {\n      \"background-image\": `\n      <path stroke=\"${select}\" stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-width=\"${t4}\" d=\"\n      M ${t2} 0\n      L ${decorationWidth + t2} ${midH}\n      H ${width - (decorationWidth + t2)}\n      L ${width - t2} 0\n      Z\n      \" />\n      `,\n      \"background-position-y\": midH,\n      \"background-height\": h,\n      \"background-clip\": \"none\",\n      \"bounds-expansion\": t2,\n      \"background-image-containment\": \"over\",\n    }\n\n  }\n}\n\n\n","import {extract} from \"../../properties-utils\";\nimport {DrawerProvider} from \"../types\";\n\nexport const subPathway: DrawerProvider = (properties, {width, height, disease}) => {\n  const select = extract(properties.global.selectNode);\n  const hover = extract(properties.global.hoverNode);\n  const flag = extract(properties.global.flag);\n  const thick = extract(properties.global.thickness) * 3;\n  const stroke = !disease ?\n    extract(properties.pathway.stroke) :\n    extract(properties.global.negativeContrast);\n\n  const halfHeight = height / 2;\n  const oR = halfHeight;\n  const iR = halfHeight - thick;\n  const oRx = Math.min(oR, width / 2)\n  return {\n    hover: {\n      \"background-image\": `\n          <path fill=\"${hover}\" stroke-linejoin=\"round\" stroke-linecap=\"round\"  d=\"\n            M 0 ${oR}\n            a ${oRx} ${oR} 0 0 1 ${oRx} -${oR}\n            h ${width - 2 * oRx}\n            a ${oRx} ${oR} 0 0 1 ${oRx} ${oR}\n            a ${oRx} ${iR} 0 0 0 -${oRx} -${iR}\n            h -${width - 2 * oRx}\n            a ${oRx} ${iR} 0 0 0 -${oRx} ${iR}\n            Z\"/>\n`,\n      \"background-clip\": \"none\",\n      \"background-image-containment\": \"over\",\n      \"background-height\": oR,\n    },\n    select: {\n      \"background-image\": `\n          <path fill=\"${select}\" stroke-linejoin=\"round\" stroke-linecap=\"round\"  d=\"\n            M 0 0\n            a ${oRx} ${oR} 0 0 0 ${oRx} ${oR}\n            h ${width - 2 * oRx}\n            a ${oRx} ${oR} 0 0 0 ${oRx} -${oR}\n            a ${oRx} ${iR} 0 0 1 -${oRx} ${iR}\n            h -${width - 2 * oRx}\n            a ${oRx} ${iR} 0 0 1 -${oRx} -${iR}\n            Z\"/>\n`,\n      \"background-position-y\": halfHeight,\n      \"background-clip\": \"none\",\n      \"background-image-containment\": \"over\",\n      \"background-height\": oR,\n    },\n    flag: {\n      \"background-image\": `\n<rect width=\"${width + 2 * thick}\" height=\"${height}\" rx=\"${oR + thick}\" ry=\"${oR}\" fill=\"${flag}\"/>\n`,\n      \"background-position-x\": -thick,\n      \"bounds-expansion\": 2 * thick,\n      \"background-clip\": \"none\",\n      \"background-image-containment\": \"over\",\n      \"background-width\": width + 2 * thick,\n    },\n    analysis: {\n      \"background-image\": `<rect class=\"gradient\" x=\"${thick}\" y=\"${thick}\" width=\"${width - 2 * thick}\" height=\"${height - 2 * thick}\" rx=\"${(height - 2 * thick) / 2}\"/>`,\n      requireGradient: true\n    }\n  }\n}\n\n\n","import cytoscape from \"cytoscape\";\nimport {gene} from \"./shape/gene-shape\";\nimport {isArray, isNumber, memoize} from \"lodash\";\nimport {molecule} from \"./shape/molecule-shape\";\nimport {protein} from \"./shape/protein-shape\";\nimport {rna} from \"./shape/rna-shape\";\nimport {genomeEncodedEntity} from \"./shape/gee-shape\";\nimport {complex} from \"./shape/complex-shape\";\nimport {entitySet} from \"./shape/entity-sets-shape\";\nimport {cell} from \"./shape/cell-shape\";\nimport {interactingPathway} from \"./shape/interacting-pathway-shape\";\nimport {diseaseInteractor} from \"./shape/disease-interactor-shape\";\n\nimport {subPathway} from \"./shape/sub-pathway-shape\";\nimport {extract} from \"../properties-utils\";\nimport {Node} from \"../types\";\nimport {Aggregated, DrawerParameters, DrawerProvider, Image, Memo} from \"./types\";\nimport {Properties} from \"../properties\";\nimport {Style} from \"../style\";\nimport chroma from \"chroma-js\";\n\n\nexport const imageBuilder = (properties: Properties, style: Style) => memoize(\n  (node: cytoscape.NodeSingular): Aggregated<Image> => {\n    console.time(`build-image-${node.id()}`)\n    let layers: Image[] = [];\n    const clazz = node.classes().find(clazz => classToDrawers.has(clazz as Node)) as Node\n    if (!clazz) return aggregate(layers, defaultBg);\n\n    const provider = classToDrawers.get(clazz)!;\n    const exps = node.data('exp');\n    const drawerParams: DrawerParameters = {\n      id: node.id(),\n      width: node.data(\"width\"),\n      height: node.data(\"height\"),\n      drug: node.hasClass('drug'),\n      disease: node.hasClass('disease'),\n      interactor: node.hasClass('Interactor'),\n      crossed: node.hasClass('crossed'),\n      lossOfFunction: node.hasClass('loss-of-function')\n    };\n\n\n    const drawer = provider(properties, drawerParams);\n\n    if (node.hasClass('flag') && drawer.flag) layers.push(drawer.flag);\n\n    if (drawer.background) layers.push(drawer.background);\n\n    if (exps && drawer.analysis) layers.push(drawer.analysis);\n\n    if (node.selected() && drawer.select) layers.push(drawer.select);\n\n    if (node.hasClass('hover') && drawer.hover) layers.push(drawer.hover);\n\n    if (drawer.decorators) layers.push(...drawer.decorators);\n\n    if (drawerParams.drug) {\n      layers.push(RX(properties, drawerParams, clazz));\n    }\n\n    if (node.classes().includes('Pathway')) {\n      layers.push(Pathway(properties, drawerParams));\n    }\n\n    if (drawerParams.crossed) layers.push(CROSS(properties, drawerParams));\n\n    const gradient = expToGradient(node.id(), exps, properties, style.currentPalette)\n\n    // Convert raw HTML to string encoded images\n    layers = layers\n      .map(l => {\n        if (l.requireGradient && gradient) l[\"background-image\"] = addGradient(l[\"background-image\"] as string, gradient);\n        return l;\n      })\n      .map(l => ({\n          ...l,\n          \"background-image\": svgStr(l[\"background-image\"] as string,\n            isNumber(l[\"background-width\"]) ? l[\"background-width\"] : drawerParams.width,\n            isNumber(l[\"background-height\"]) ? l[\"background-height\"] : drawerParams.height\n          )\n        })\n      );\n\n    const aggregated = aggregate(layers, defaultBg);\n    aggregated['bounds-expansion'] = [Math.max(...aggregated['bounds-expansion'] as number[], 0)]\n\n\n    console.timeEnd(`build-image-${node.id()}`)\n    return aggregated;\n  }, node => `${node.id()}-${node.classes().toString()}-s:${node.selected()}`\n)\n\nconst defaultBg: Image = {\n  \"background-image\": \"\",\n  \"background-position-x\": \"0\",\n  \"background-position-y\": \"0\",\n  \"background-offset-x\": \"0\",\n  \"background-offset-y\": \"0\",\n  \"background-width\": \"100%\",\n  \"background-height\": \"100%\",\n  \"background-fit\": \"none\",\n  \"background-clip\": \"none\",\n  \"background-image-opacity\": 1,\n  \"background-image-containment\": \"over\",\n  \"background-image-smoothing\": \"yes\",\n  \"background-height-relative-to\": \"inner\",\n  \"background-width-relative-to\": \"inner\",\n  \"background-repeat\": \"no-repeat\",\n  \"background-image-crossorigin\": \"anonymous\",\n  \"bounds-expansion\": 0\n}\n\nfunction addGradient(svgText: string, gradient: string, single: boolean = false): string {\n  // if (single) {\n  //   const s = `<style>.gradient{fill: ${gradient}!important;}</style>${svgText}`;\n  //   console.log(s)\n  //   return s;\n  // }\n  // else\n  // return gradient + svgText.replaceAll('class=\"gradient\"', 'fill=\"url(#gradient)\"');\n    return `<style>.gradient{fill: url(#gradient)};</style>${gradient}${svgText}`;\n}\n\nfunction _expToGradient(id: string, exps: (number | [number, number] | undefined)[], properties: Properties, palette: chroma.Scale): string | undefined {\n  if (!exps) return;\n  // console.time('exp-to-gradient')\n  const stops: { start: number, stop: number, color: string, exp: number | undefined, width: number }[] = [];\n  const size = exps.reduce((l: number, e) => e !== undefined && isArray(e) ? l + e[1] : l + 1, 0);\n  const delta = 1 / size;\n  const notFoundColor = extract(properties.analysis.notFound);\n  exps.forEach((exp, i) => {\n    const p = stops.length - 1;\n    if (stops.length !== 0 && stops[p].exp === exp) {\n      stops[p].stop += delta;\n      stops[p].width += delta;\n    } else {\n      if (isArray(exp)) {\n        stops.push({\n          start: stops[p]?.stop || 0,\n          stop: (stops[p]?.stop || 0) + delta * exp[1],\n          width: delta * exp[1],\n          color: exp[0] !== undefined ? palette(exp[0]).hex() : notFoundColor,\n          exp: exp[0]\n        })\n        // console.log(stops, exps)\n\n      } else {\n        stops.push({\n          start: stops[p]?.stop || 0,\n          stop: (stops[p]?.stop || 0) + delta,\n          color: exp !== undefined ? palette(exp).hex() : notFoundColor,\n          width: delta,\n          exp: exp\n        })\n      }\n    }\n  })\n  // if (stops.length === 1) {\n  //   console.log(stops)\n  //   return stops[0].color;\n  // }\n\n  const pattern = '<defs><pattern id=\"gradient\" patternUnits=\"objectBoundingBox\" width=\"1\" height=\"1\" viewBox=\"0 0 1 1\" preserveAspectRatio=\"none\">' +\n    stops\n      .map((stop, i) => `<rect fill=\"${stop.color}\" x=\"${stop.start}\" height=\"1\" width=\"${stop.width + 0.01}\"/>`)\n      .join('') +\n    '</pattern></defs>';\n\n  // const gradient = '<defs><linearGradient id=\"gradient\">' +\n  //     stops\n  //         .map(stop => `<stop stop-color=\"${stop.color}\" offset=\"${stop.start}\"/><stop stop-color=\"${stop.color}\" offset=\"${stop.stop}\"/>`)\n  //         .join('') +\n  //     '</linearGradient></defs>'\n  // console.timeEnd('exp-to-gradient')\n\n  // console.log(exps)\n  return pattern\n}\n\nconst expToGradient = memoize(_expToGradient, (id) => id)\n\nexport const resetGradients = () => expToGradient.cache.clear!()\n\nfunction svg(svgStr: string, width = 100, height = 100) {\n  // const cleanedStr = svgStr.replaceAll(/  {2,}|\\n/g, \" \"); // TODO examine performance impact\n  const s = `<?xml version=\"1.0\" encoding=\"UTF-8\"?><!DOCTYPE svg><svg xmlns='http://www.w3.org/2000/svg' version='1.1' width='${width}' height='${height}'>${svgStr}</svg>`;\n  // console.log(s)\n  return s;\n}\n\nfunction svgStr(svgText: string, viewPortWidth: number, viewPortHeight: number) {\n  // return svg(svgText, viewPortWidth, viewPortHeight);\n  return 'data:image/svg+xml;utf8,' + encodeURIComponent(svg(svgText, viewPortWidth, viewPortHeight));\n}\n\n\nconst dim = (properties: Properties, {id}: DrawerParameters) => id;\nconst classToDrawers = new Map<Node, Memo<DrawerProvider>>([\n  [\"Protein\", memoize(protein, dim)],\n  [\"GenomeEncodedEntity\", memoize(genomeEncodedEntity, dim)],\n  [\"RNA\", memoize(rna, dim)],\n  [\"Gene\", memoize(gene, dim)],\n  [\"Molecule\", memoize(molecule, dim)],\n  [\"Complex\", memoize(complex, dim)],\n  [\"EntitySet\", memoize(entitySet, dim)],\n  [\"Cell\", memoize(cell, dim)],\n  [\"Interacting\", memoize(interactingPathway, dim)],\n  [\"SUB\", memoize(subPathway, dim)],\n  [\"Interactor\", memoize(diseaseInteractor, dim)]\n]);\n\nexport function clearDrawersCache() {\n  for (let value of classToDrawers.values()) {\n    value.cache.clear!()\n  }\n  OMMITED_ICON.cache.clear!();\n}\n\nfunction aggregate<T extends Object, K extends keyof T>(toAggregate: T[], defaultValue: T): Aggregated<T> {\n  const aggregate: Aggregated<T> = {} as Aggregated<T>;\n  //@ts-ignore\n  const keys = new Set<K>(Object.keys(defaultValue));\n  keys.forEach(key => aggregate[key] = toAggregate.map(t => t[key] || defaultValue[key]));\n  return aggregate;\n}\n\nconst RX = (properties: Properties, {height}: DrawerParameters, clazz: Node): Image => {\n  const t = extract(properties.global.thickness);\n  const color = clazz !== 'Molecule' ?\n    extract(properties.global.onPrimary) :\n    extract(properties.molecule.drug);\n  const x = (clazz !== 'EntitySet' ? 0 : extract(properties.entitySet.radius)) + 3 * t;\n\n  return {\n    \"background-image\": `\n      <path style=\"transform: scale(2)\" fill=\"${color}\" stroke-width=\"0.4\" stroke=\"${color}\" d=\"M3.2 4C3.3 4 3.4 4 3.6 4L6.75 8.81L5.7 10.15C5.7 10.15 5.53985 10.3884 5.31824 10.6092C5.00434 10.922 4.6582 11.3 4.28711 11.3C4.19141 11.3 4.2 11.3 4.1 11.3V11.5H6.4V11.3C6.2 11.3 6 11.3 5.9 11.2C5.8 11.1 5.8 11 5.8 10.9C5.8 10.6301 5.9 10.5547 6.16055 10.226L7 9.2L7.65291 10.226C7.82889 10.5025 8 10.7344 8 10.9C8 11.0656 7.90095 11.3 7.65291 11.3C7.55291 11.3 7.6 11.3 7.4 11.3V11.5H10.2V11.3C9.9 11.3 9.7 11.2 9.5 11C9.24121 10.7412 9 10.5 8.6 10L7.6 8.5L8.48711 7.35309C8.55228 7.28792 8.61656 7.21558 8.68081 7.13924C9.09787 6.6437 9.64859 6 10.2 6.01309V5.81309H7.8V6.01309C8 6.01309 8.2 6.01309 8.3 6.01309C8.45586 6.01309 8.6 6.20329 8.6 6.31309C8.6 6.62136 8.43963 6.81922 8.2462 7.03337L7.3 8.1L4.5 3.9C5.1 3.8 5.4 3.61 5.7 3.31C6 3.01 6.2 2.6 6.2 2.2C6.2 1.8 6.08711 1.47 5.78711 1.17C5.52798 0.910875 5.3 0.8 5 0.7C4.6 0.6 4.1 0.5 3.4 0.5H1V0.7H1.2C1.82201 0.7 2 1.14292 2 1.7V6C2 6.59634 2 6.9 1.2 6.9H1V7.1H3.8V6.9H3.6C2.9041 6.9 2.9 6.61047 2.9 6V4H3H3.2ZM3 3.7C3 3.7 3 3.7 2.9 3.7L2.88711 1C3.18711 0.9 3.4 0.9 3.6 0.9C4.47782 0.9 5 1.42405 5 2.3C5 3.40743 4.15401 3.7 3.2 3.7H3Z\"/>\n    `,\n    \"background-position-x\": x,\n    \"background-position-y\": (height / 2 - 11) + 'px',\n    \"background-width\": 22,\n    \"background-height\": 24,\n  };\n\n}\n\nconst Pathway = (properties: Properties, {height, disease}: DrawerParameters): Image => {\n  const t = extract(properties.global.thickness);\n  const color = !disease ?\n    extract(properties.global.onPrimary) :\n    extract(properties.global.negativeContrast);\n\n  let x = 5 * t;\n\n  return {\n    \"background-image\": `\n      <path style=\"transform: scale(1.5)\" fill=\"${color}\" stroke-width=\"0.4\" stroke=\"${color}\" d=\"M19.6864 21.0381C19.0364 21.0381 18.4531 20.8508 17.9364 20.4761C17.4197 20.1008 17.0614 19.6214 16.8614 19.0381H11.6864C10.5864 19.0381 9.64473 18.6464 8.8614 17.8631C8.07807 17.0798 7.6864 16.1381 7.6864 15.0381C7.6864 13.9381 8.07807 12.9964 8.8614 12.2131C9.64473 11.4298 10.5864 11.0381 11.6864 11.0381H13.6864C14.2364 11.0381 14.7074 10.8421 15.0994 10.4501C15.4907 10.0588 15.6864 9.58809 15.6864 9.03809C15.6864 8.48809 15.4907 8.01709 15.0994 7.62509C14.7074 7.23375 14.2364 7.03809 13.6864 7.03809H8.5114C8.29473 7.62142 7.9324 8.10075 7.4244 8.47609C6.91573 8.85075 6.3364 9.03809 5.6864 9.03809C4.85307 9.03809 4.14473 8.74642 3.5614 8.16309C2.97807 7.57975 2.6864 6.87142 2.6864 6.03809C2.6864 5.20475 2.97807 4.49642 3.5614 3.91309C4.14473 3.32975 4.85307 3.03809 5.6864 3.03809C6.3364 3.03809 6.91573 3.22542 7.4244 3.60009C7.9324 3.97542 8.29473 4.45475 8.5114 5.03809H13.6864C14.7864 5.03809 15.7281 5.42975 16.5114 6.21309C17.2947 6.99642 17.6864 7.93809 17.6864 9.03809C17.6864 10.1381 17.2947 11.0798 16.5114 11.8631C15.7281 12.6464 14.7864 13.0381 13.6864 13.0381H11.6864C11.1364 13.0381 10.6657 13.2338 10.2744 13.6251C9.8824 14.0171 9.6864 14.4881 9.6864 15.0381C9.6864 15.5881 9.8824 16.0591 10.2744 16.4511C10.6657 16.8424 11.1364 17.0381 11.6864 17.0381H16.8614C17.0781 16.4548 17.4407 15.9754 17.9494 15.6001C18.4574 15.2254 19.0364 15.0381 19.6864 15.0381C20.5197 15.0381 21.2281 15.3298 21.8114 15.9131C22.3947 16.4964 22.6864 17.2048 22.6864 18.0381C22.6864 18.8714 22.3947 19.5798 21.8114 20.1631C21.2281 20.7464 20.5197 21.0381 19.6864 21.0381ZM5.6864 7.03809C5.96973 7.03809 6.2074 6.94242 6.3994 6.75109C6.59073 6.55909 6.6864 6.32142 6.6864 6.03809C6.6864 5.75475 6.59073 5.51709 6.3994 5.32509C6.2074 5.13375 5.96973 5.03809 5.6864 5.03809C5.40307 5.03809 5.1654 5.13375 4.9734 5.32509C4.78207 5.51709 4.6864 5.75475 4.6864 6.03809C4.6864 6.32142 4.78207 6.55909 4.9734 6.75109C5.1654 6.94242 5.40307 7.03809 5.6864 7.03809Z\" />\n    `,\n    \"background-position-x\": x,\n    \"background-position-y\": (height / 2 - 18) + 'px',\n    \"background-width\": 36,\n    \"background-height\": 36,\n  };\n\n}\n\nexport const CROSS = memoize((properties: Properties, {width, height}: DrawerParameters): Image => {\n  const s = extract(properties.global.negative);\n  const t = extract(properties.global.thickness);\n  return {\n    \"background-image\": `<line x1=\"${t}\" y1=\"${t}\" x2=\"${width - t}\" y2=\"${height - t}\" stroke-width=\"${2 * t}\" stroke-linecap=\"round\" stroke=\"${s}\"/><line x1=\"${t}\" y1=\"${height - t}\" x2=\"${width - t}\" y2=\"${t}\" stroke-width=\"${2 * t}\" stroke-linecap=\"round\" stroke=\"${s}\"/>`,\n    \"background-image-opacity\": 1\n  };\n}, (p, {width, height}) => `${width}x${height}`)\n\nexport const OMMITED_ICON = memoize((properties: Properties) => {\n  const s = extract(properties.global.onSurface);\n  return svgStr(`<line x1=\"2.5\" y1=\"3\" x2=\"4.5\" y2=\"7\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke=\"${s}\"/><line x1=\"5.5\" y1=\"3\" x2=\"7.5\" y2=\"7\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke=\"${s}\"/>`, 10, 10)\n}, (p) => '')\n\n","import {defaultable, extract, PropertiesType, Property} from \"./properties-utils\";\n\nexport interface Properties extends PropertiesType {\n  global: {\n    thickness: Property<number>\n    surface: Property<string>\n    onSurface: Property<string>\n    primary: Property<string>\n    onPrimary: Property<string>\n    positive: Property<string>\n    negative: Property<string>\n    negativeContrast: Property<string>\n    selectNode: Property<string>\n    selectEdge: Property<string>\n    hoverNode: Property<string>\n    hoverEdge: Property<string>\n    flag: Property<string>\n  },\n  compartment: {\n    fill: Property<string>\n    opacity: Property<number>\n  }\n  shadow: {\n    luminosity: Property<number>\n    opacity: Property<[number, number][]>\n    labelOpacity: Property<[number, number][]>\n    padding: Property<number>\n    fontSize: Property<number>\n    fontPadding: Property<number>\n  }\n  protein: {\n    fill: Property<string>\n    drug: Property<string>\n    radius: Property<number>\n  }\n  genomeEncodedEntity: {\n    fill: Property<string>\n    drug: Property<string>\n    bottomRadius: Property<number>\n    topRadius: Property<number>\n  }\n  rna: {\n    fill: Property<string>\n    drug: Property<string>\n    radius: Property<number>\n  }\n  gene: {\n    fill: Property<string>\n    decorationHeight: Property<number>\n    decorationExtraWidth: Property<number>\n    arrowHeadSize: Property<number>\n    borderRadius: Property<number>\n    arrowRadius: Property<number>\n  }\n  molecule: {\n    fill: Property<string>\n    stroke: Property<string>\n    drug: Property<string>\n  }\n  entitySet: {\n    fill: Property<string>\n    stroke: Property<string>\n    drug: Property<string>\n    radius: Property<number>\n  }\n  complex: {\n    fill: Property<string>\n    stroke: Property<string>\n    drug: Property<string>\n    cut: Property<number>\n  }\n  cell: {\n    thickness: Property<number>\n    fill: Property<string>\n    stroke: Property<string>\n  }\n  //interacting pathway and sub pathway\n  pathway: {\n    fill: Property<string>\n    stroke: Property<string>\n  }\n  modification: {\n    fill: Property<string>\n  }\n  interactor: {\n    fill: Property<string>\n    stroke: Property<string>\n    decorationWidth: Property<number>\n  }\n  trivial: {\n    opacity: Property<[number, number][]>\n  }\n  structure: {\n    opacity: Property<[number, number][]>\n  }\n  font: {\n    size: Property<number>\n  }\n  analysis: {\n    min: Property<number>\n    max: Property<number>\n    unidirectionalPalette: Property<[number, string][] | string>\n    bidirectionalPalette: Property<[number, string][] | string>\n    notFound: Property<string>\n  }\n  features: {\n    edit: Property<boolean>\n    compare: Property<boolean>\n    interactors: Property<boolean>\n    analysis: Property<boolean>\n  }\n}\n\nexport function setDefaults(properties: UserProperties = {}, css: CSSStyleDeclaration): Properties {\n  const global: Properties['global'] = defaultable(properties.global || {})\n    .setDefault('thickness', 4)\n    .setDefault('surface', () => css.getPropertyValue('--surface') || '#F6FEFF')\n    .setDefault('onSurface', () => css.getPropertyValue('--on-surface') || '#001F24')\n    .setDefault('primary', () => css.getPropertyValue('--primary') || '#006782')\n    .setDefault('onPrimary', () => css.getPropertyValue('--on-primary') || '#FFFFFF')\n    .setDefault('positive', () => css.getPropertyValue('--positive') || '#0C9509')\n    .setDefault('negative', () => css.getPropertyValue('--negative') || '#BA1A1A')\n    .setDefault('negativeContrast', () => css.getPropertyValue('--negative-contrast') || '#ea7d7d')\n    .setDefault('selectNode', () => css.getPropertyValue('--select-node') || '#6EB3E4')\n    .setDefault('selectEdge', () => css.getPropertyValue('--select-edge') || '#0561A6')\n    .setDefault('hoverNode', () => css.getPropertyValue('--hover-node') || '#78E076')\n    .setDefault('hoverEdge', () => css.getPropertyValue('--hover-edge') || '#04B601')\n    .setDefault('flag', () => css.getPropertyValue('--flag') || '#DE75B4')\n\n  const compartment: Properties['compartment'] = defaultable(properties.compartment || {})\n    .setDefault('opacity', () => Number.parseFloat(css.getPropertyValue('--opacity')) || 0.06)\n    .setDefault('fill', () => css.getPropertyValue('--compartment') || '#E5834A')\n\n  const shadow: Properties['shadow'] = defaultable(properties.shadow || {})\n    .setDefault('luminosity', () => Number.parseFloat(css.getPropertyValue('--shadow-luminosity')) || 40)\n    .setDefault('padding', () => Number.parseFloat(css.getPropertyValue('--shadow-padding')) || 20)\n    .setDefault('fontSize', () => Number.parseFloat(css.getPropertyValue('--shadow-font-size')) || 80)\n    .setDefault('fontPadding', () => Number.parseFloat(css.getPropertyValue('--shadow-font-padding')) || 15)\n    .setDefault('opacity', () => {\n      const p = css.getPropertyValue('--shadow-opacity');\n      return p ? JSON.parse(p) : [[20, 20], [40, 0]];\n    })\n    .setDefault('labelOpacity', () => {\n      const p = css.getPropertyValue('--shadow-label-opacity');\n      return p ? JSON.parse(p) : [[20, 100], [40, 0]];\n    })\n\n  const protein: Properties['protein'] = defaultable(properties.protein || {})\n    .setDefault('fill', () => css.getPropertyValue('--primary-contrast-1') || '#001F29')\n    .setDefault('drug', () => css.getPropertyValue('--drug-contrast-1') || '#3E001D')\n    .setDefault('radius', 8)\n\n\n  const genomeEncodedEntity: Properties['genomeEncodedEntity'] = defaultable(properties.genomeEncodedEntity || {})\n    .setDefault('fill', () => css.getPropertyValue('--primary-contrast-4') || '#006782')\n    .setDefault('drug', () => css.getPropertyValue('--drug-contrast-4') || '#BB557A')\n    .setDefault('bottomRadius', 6)\n    .setDefault('topRadius', 40)\n\n  const rna: Properties['rna'] = defaultable(properties.rna || {})\n    .setDefault('fill', () => css.getPropertyValue('--primary-contrast-2') || '#003545')\n    .setDefault('drug', () => css.getPropertyValue('--drug-contrast-2') || '#610B33')\n    .setDefault('radius', 8)\n\n  const gene: Properties['gene'] = defaultable(properties.gene || {})\n    .setDefault('decorationHeight', 20)\n    .setDefault('decorationExtraWidth', 17)\n    .setDefault(\"arrowHeadSize\", 10)\n    .setDefault(\"borderRadius\", 8)\n    .setDefault(\"arrowRadius\", 8)\n    .setDefault(\"fill\", () => css.getPropertyValue('--primary-contrast-3') || '#004D62')\n\n  const molecule: Properties['molecule'] = defaultable(properties.molecule || {})\n    .setDefault(\"fill\", () => extract(global.surface))\n    .setDefault(\"stroke\", () => extract(global.onSurface))\n    .setDefault('drug', () => css.getPropertyValue('--drug-contrast-3') || '#9C3D61')\n\n  const complex: Properties['complex'] = defaultable(properties.complex || {})\n    .setDefault(\"cut\", 8)\n    .setDefault(\"fill\", () => css.getPropertyValue('--tertiary-contrast-1') || '#00315C')\n    .setDefault(\"stroke\", () => css.getPropertyValue('--on-tertiary') || '#FFFFFF')\n    .setDefault('drug', () => css.getPropertyValue('--drug-contrast-3') || '#7E2549')\n\n  const entitySet: Properties['entitySet'] = defaultable(properties.entitySet || {})\n    .setDefault(\"radius\", 8)\n    .setDefault(\"fill\", () => css.getPropertyValue('--tertiary-contrast-3') || '#1660A5')\n    .setDefault(\"stroke\", () => css.getPropertyValue('--on-tertiary') || '#FFFFFF')\n    .setDefault('drug', () => css.getPropertyValue('--drug-contrast-4') || '#BB557A')\n\n  const cell: Properties['cell'] = defaultable(properties.cell || {})\n    .setDefault('thickness', () => Number.parseFloat(css.getPropertyValue('--cell-thickness')) || 16)\n    .setDefault(\"fill\", () => css.getPropertyValue('--tertiary-contrast-2') || '#004882')\n    .setDefault(\"stroke\", () => css.getPropertyValue('--on-tertiary') || '#FFFFFF')\n\n  const pathway: Properties['pathway'] = defaultable(properties.pathway || {})\n    .setDefault(\"fill\", () => css.getPropertyValue('--primary-contrast-4') || '#006782')\n    .setDefault(\"stroke\", () => extract(global.onPrimary))\n\n  const modification: Properties['modification'] = defaultable(properties.modification || {})\n    .setDefault(\"fill\", () => css.getPropertyValue('--primary-contrast-2') || '#003545')\n\n  const interactor: Properties['interactor'] = defaultable(properties.interactor || {})\n    .setDefault(\"fill\", () => css.getPropertyValue('--interactor-fill') || '#68297C')\n    .setDefault(\"stroke\", () => css.getPropertyValue('--interactor-stroke') || '#9f5cb5')\n    .setDefault('decorationWidth', () => Number.parseFloat(css.getPropertyValue('--decorationWidth')) || 20)\n\n  const trivial: Properties['trivial'] = defaultable(properties.trivial || {})\n    .setDefault('opacity', () => {\n      const p = css.getPropertyValue('--trivial-opacity');\n      return p ? JSON.parse(p) : [[40, 0], [60, 100]];\n    })\n\n  const structure: Properties['structure'] = defaultable(properties.structure || {})\n    .setDefault('opacity', () => {\n      const p = css.getPropertyValue('--structure-opacity');\n      return p ? JSON.parse(p) : [[130, 0], [150, 100]];\n    })\n\n  const font: Properties['font'] = defaultable(properties.font || {})\n    .setDefault('size', 12)\n\n  const analysis: Properties['analysis'] = defaultable(properties.analysis || {})\n    .setDefault(\"min\", Number.parseFloat(css.getPropertyValue('--analysis-min')) || 0)\n    .setDefault(\"max\", Number.parseFloat(css.getPropertyValue('--analysis-max')) || 1)\n    .setDefault(\"notFound\", () => css.getPropertyValue('--analysis-not-found') || extract(global.onSurface))\n    .setDefault(\"unidirectionalPalette\", () => {\n      const p = css.getPropertyValue('--analysis-uni-palette');\n      console.error(p, typeof p)\n      return p ? JSON.parse(p) : [\n        [0.000, '#FFFFE0'],\n        [1.000, '#00429D'],\n      ];\n    })\n    .setDefault(\"bidirectionalPalette\", () => {\n      const p = css.getPropertyValue('--analysis-bi-palette');\n      console.error(p, typeof p)\n\n      return p ? JSON.parse(p) : [\n        [0.000, '#93003A'],\n        [0.500, '#FFFFE0'],\n        [1.000, '#00429D'],\n      ];\n    })\n\n  const features: Properties['features'] = defaultable(properties.features || {})\n    .setDefault(\"edit\", false)\n    .setDefault(\"compare\", true)\n    .setDefault(\"analysis\", true)\n    .setDefault(\"interactors\", true);\n\n  return {\n    global,\n    compartment,\n    shadow,\n    protein,\n    genomeEncodedEntity,\n    rna,\n    gene,\n    molecule,\n    complex,\n    entitySet,\n    cell,\n    pathway,\n    modification,\n    interactor,\n    trivial,\n    structure,\n    font,\n    analysis,\n    features\n  }\n}\n\nexport type UserProperties = Partial<{\n  [k in keyof Properties]: Partial<Properties[k]>\n}>\n\n","import cytoscape from \"cytoscape\";\n\nexport interface ReactomeEventTarget {\n  reactomeId: string,\n  type: 'PhysicalEntity' | 'Pathway' | 'reaction' | 'Interactor' | 'Any',\n  element: cytoscape.NodeSingular,\n  cy: cytoscape.Core\n}\n\nexport enum ReactomeEventTypes {\n  hover = 'reactome::hover',\n  leave = 'reactome::leave',\n\n  select = 'reactome::select',\n  unselect = 'reactome::unselect',\n\n  open = 'reactome::open',\n  close = 'reactome::close',\n}\n\nexport class ReactomeEvent extends CustomEvent<ReactomeEventTarget> {\n  constructor(type: ReactomeEventTypes, target: ReactomeEventTarget) {\n    super(type, {detail: target});\n  }\n\n}\n","import cytoscape from \"cytoscape\";\nimport {extract} from \"./properties-utils\";\nimport {Properties} from \"./properties\";\nimport {ReactomeEvent, ReactomeEventTypes} from \"./model/reactome-event.model\";\nimport Layers, {IHTMLLayer, layers, LayersPlugin} from 'cytoscape-layers';\nimport * as _ from \"lodash\";\n\n\ncytoscape.use(Layers)\ntype RenderableHTMLElement = HTMLElement & { render: _.DebouncedFunc<() => void> };\n\nexport class Interactivity {\n\n  isMobile = 'ontouchstart' in document || navigator.maxTouchPoints > 0;\n\n  constructor(private cy: cytoscape.Core, private properties: Properties) {\n    console.log('is mobile', this.isMobile)\n    // @ts-ignore\n    cy.elements().ungrabify().panify();\n    this.initHover(cy);\n    this.initSelect(cy);\n    this.initClick(cy);\n    this.initStructureVideo(cy);\n    this.initStructureMolecule(cy);\n    this.initZoom(cy);\n  }\n\n  expandReaction(reactionNode: cytoscape.NodeCollection) {\n    return reactionNode.connectedEdges().add(reactionNode);\n  }\n\n  applyToReaction = (action: (col: cytoscape.Collection) => void, stateKey: keyof State) => (reactionNode: cytoscape.NodeCollection) => {\n    if (state[stateKey]) return;\n    state[stateKey] = true;\n    action(this.expandReaction(reactionNode));\n    state[stateKey] = false;\n  };\n\n  initHover(cy: cytoscape.Core, mapper = <X>(x: X) => x) {\n    const hoverReaction = this.applyToReaction(col => col.addClass('hover'), 'hovering')\n    const deHoverReaction = this.applyToReaction(col => col.removeClass('hover'), 'deHovering')\n\n\n    const container = cy.container()!;\n    cy\n      .on('mouseover', 'node.PhysicalEntity', e => container.dispatchEvent(new ReactomeEvent(ReactomeEventTypes.hover, {\n        element: e.target,\n        type: \"PhysicalEntity\",\n        reactomeId: e.target.data('reactomeId'),\n        cy\n      })))\n      .on('mouseover', 'node.Pathway', e => container.dispatchEvent(new ReactomeEvent(ReactomeEventTypes.hover, {\n        element: e.target,\n        type: \"Pathway\",\n        reactomeId: e.target.data('reactomeId'),\n        cy\n      })))\n      .on('mouseover', 'node.reaction', e => container.dispatchEvent(new ReactomeEvent(ReactomeEventTypes.hover, {\n        element: e.target,\n        type: \"reaction\",\n        reactomeId: e.target.data('reactomeId'),\n        cy\n      })))\n      .on('mouseover', 'edge.reaction', e => container.dispatchEvent(new ReactomeEvent(ReactomeEventTypes.hover, {\n        element: e.target.connectedNodes('.reaction'),\n        type: \"reaction\",\n        reactomeId: e.target.data('reactomeId'),\n        cy\n      })))\n\n      .on('mouseout', 'node.PhysicalEntity', e => container.dispatchEvent(new ReactomeEvent(ReactomeEventTypes.leave, {\n        element: e.target,\n        type: \"PhysicalEntity\",\n        reactomeId: e.target.data('reactomeId'),\n        cy\n      })))\n      .on('mouseout', 'node.Pathway', e => container.dispatchEvent(new ReactomeEvent(ReactomeEventTypes.leave, {\n        element: e.target,\n        type: \"Pathway\",\n        reactomeId: e.target.data('reactomeId'),\n        cy\n      })))\n      .on('mouseout', 'node.reaction', e => container.dispatchEvent(new ReactomeEvent(ReactomeEventTypes.leave, {\n        element: e.target,\n        type: \"reaction\",\n        reactomeId: e.target.data('reactomeId'),\n        cy\n      })))\n      .on('mouseout', 'edge.reaction', e => container.dispatchEvent(new ReactomeEvent(ReactomeEventTypes.leave, {\n        element: e.target.connectedNodes('.reaction'),\n        type: \"reaction\",\n        reactomeId: e.target.data('reactomeId'),\n        cy\n      })))\n\n      .on('mouseover', 'node', e => mapper(e.target).addClass('hover'))\n      .on('mouseout', 'node', e => mapper(e.target).removeClass('hover'))\n\n      .on('mouseover', 'node.reaction', e => hoverReaction(mapper(e.target)))\n      .on('mouseout', 'node.reaction', e => deHoverReaction(mapper(e.target)))\n\n      .on('mouseover', 'edge', e => {\n        const mapped = mapper(e.target);\n        if (mapped !== e.target) console.log(mapped, mapped.connectedNodes('.reaction'))\n\n        hoverReaction(mapped.connectedNodes('.reaction'))\n      })\n      .on('mouseout', 'edge', e => deHoverReaction(mapper(e.target).connectedNodes('.reaction')))\n\n      .on('mouseover', 'node.Modification', e => mapper(cy.nodes(`#${e.target.data('nodeId')}`)).addClass('hover'))\n      .on('mouseout', 'node.Modification', e => mapper(cy.nodes(`#${e.target.data('nodeId')}`)).removeClass('hover'))\n\n      .on('mouseover', 'edge.Interactor', e => mapper(cy.edges(`#${e.target.data('id')}`)).addClass('hover'))\n      .on('mouseout', 'edge.Interactor', e => mapper(cy.edges(`#${e.target.data('id')}`)).removeClass('hover'))\n  }\n\n  initSelect(cy: cytoscape.Core, mapper = <X>(x: X) => x) {\n    const selectReaction = this.applyToReaction(col => col.select(), 'selecting')\n    const container = cy.container()!;\n\n    cy\n      .on('select', 'node.PhysicalEntity', e => container.dispatchEvent(new ReactomeEvent(ReactomeEventTypes.select, {\n        element: e.target,\n        type: \"PhysicalEntity\",\n        reactomeId: e.target.data('reactomeId'),\n        cy\n      })))\n      .on('select', 'node.Pathway', e => container.dispatchEvent(new ReactomeEvent(ReactomeEventTypes.select, {\n        element: e.target,\n        type: \"Pathway\",\n        reactomeId: e.target.data('reactomeId'),\n        cy\n      })))\n      .on('select', 'node.reaction', e => container.dispatchEvent(new ReactomeEvent(ReactomeEventTypes.select, {\n        element: e.target,\n        type: \"reaction\",\n        reactomeId: e.target.data('reactomeId'),\n        cy\n      })))\n      .on('select', 'edge.reaction', e => container.dispatchEvent(new ReactomeEvent(ReactomeEventTypes.select, {\n        element: e.target.connectedNodes('.reaction'),\n        type: \"reaction\",\n        reactomeId: e.target.data('reactomeId'),\n        cy\n      })))\n\n      .on('unselect', 'node.PhysicalEntity', e => container.dispatchEvent(new ReactomeEvent(ReactomeEventTypes.unselect, {\n        element: e.target,\n        type: \"PhysicalEntity\",\n        reactomeId: e.target.data('reactomeId'),\n        cy\n      })))\n      .on('unselect', 'node.Pathway', e => container.dispatchEvent(new ReactomeEvent(ReactomeEventTypes.unselect, {\n        element: e.target,\n        type: \"Pathway\",\n        reactomeId: e.target.data('reactomeId'),\n        cy\n      })))\n      .on('unselect', 'node.reaction', e => container.dispatchEvent(new ReactomeEvent(ReactomeEventTypes.unselect, {\n        element: e.target,\n        type: \"reaction\",\n        reactomeId: e.target.data('reactomeId'),\n        cy\n      })))\n      .on('unselect', 'edge.reaction', e => container.dispatchEvent(new ReactomeEvent(ReactomeEventTypes.unselect, {\n        element: e.target.connectedNodes('.reaction'),\n        type: \"reaction\",\n        reactomeId: e.target.data('reactomeId'),\n        cy\n      })))\n\n      .on('select', 'edge', e => selectReaction(mapper(e.target).connectedNodes('.reaction')))\n      .on('unselect', 'edge', () => selectReaction(\n        mapper(cy.edges(':selected').connectedNodes('.reaction')\n          .add(cy.nodes('.reaction:selected')))\n      )) // Avoid single element selection when double-clicking\n\n      .on('select', 'node.reaction', event => selectReaction(mapper(event.target)))\n      .on('select', 'node.Modification', e => mapper(cy.nodes(`#${e.target.data('nodeId')}`)).select())\n\n  }\n\n  initClick(cy: cytoscape.Core) {\n    const container = cy.container()!;\n\n    cy\n      .on('tap', 'node.InteractorOccurrences', e => {\n        const openClass = 'opened';\n        let eventType = !e.target.hasClass(openClass) ? ReactomeEventTypes.open : ReactomeEventTypes.close;\n        e.target.toggleClass(openClass);\n        container.dispatchEvent(new ReactomeEvent(eventType, {\n          element: e.target,\n          type: \"Interactor\",\n          reactomeId: e.target.data('reactomeId'),\n          cy\n        }))\n      })\n\n      .on('tap', '.Interactor', e => {\n        const prop = e.target.isNode() ? 'accURL' : 'evidenceURLs';\n        const url = e.target.data(prop);\n        if (url) window.open(url);\n      })\n      .on('tap', '.DiseaseInteractor', e => {\n        const prop = e.target.isNode() ? 'accURL' : 'evidenceURLs';\n        const url = e.target.data(prop);\n        if (url) window.open(url);\n      })\n\n    // .on('tap', e => {\n    //   const openClass = 'opened';\n    //   let eventType = !e.target.hasClass(openClass) ? ReactomeEventTypes.open : ReactomeEventTypes.close;\n    //   e.target.toggleClass(openClass);\n    //   container.dispatchEvent(new ReactomeEvent(eventType, {\n    //     element: e.target,\n    //     type: \"Any\",\n    //     reactomeId: e.target.data('reactomeId'),\n    //     cy\n    //   }))\n    // });\n  }\n\n  private videoLayer?: IHTMLLayer;\n\n\n  initStructureVideo(cy: cytoscape.Core) {\n    const layersPlugin: LayersPlugin = layers(cy);\n    this.videoLayer = layersPlugin.append('html');\n    if (this.videoLayer) this.videoLayer.node.style.opacity = '0';\n    layersPlugin.renderPerNode(\n      this.videoLayer!,\n      (elem: HTMLElement) => {\n        (elem as RenderableHTMLElement).render()\n      },\n      {\n        init: (elem: RenderableHTMLElement, node: cytoscape.NodeSingular) => {\n          const name = node.data('displayName');\n\n          elem.innerHTML = node.data('html') || '';\n          elem.style.display = \"flex\";\n          const video = elem.children[0] as HTMLVideoElement;\n\n          elem.render = _.throttle(() => {\n              if (isElementInViewport(elem)) {\n                // console.log('rendering', name)\n                if (this.videoLayer?.node.style.opacity !== '0' && video.readyState === video.HAVE_NOTHING && video.networkState === video.NETWORK_IDLE) {\n                  video.classList.add('loading');\n                  video.oncanplay = e => video.classList.remove('loading')\n                  let errors = 0;\n                  const sources = video.querySelectorAll('source')!;\n                  sources.forEach(source => source.addEventListener('error', (e) => {\n                    errors ++;\n                    if (errors === sources.length) this.removeProteinVideo(video, node)\n                  }));\n\n                  video.load();\n                }\n                elem.style.visibility = node.visible() ? 'visible' : 'hidden';\n              }\n\n            }, 500\n          );\n        },\n        transform: `translate(-70%, -50%)`,\n        position: 'center',\n        uniqueElements: false,\n        checkBounds: false, // Need false otherwise destroy nodes when out of view\n        selector: '.Protein',\n        updateOn: \"render\", // Need render to call display whenever we move\n        queryEachTime: false,\n      }\n    );\n\n    this.videoLayer?.node.classList.add('video')\n    const handler = (action: (video: HTMLVideoElement) => void) => async (event: cytoscape.EventObject) => {\n      const videoId = event.target.id();\n      const videoElement = this.videoLayer?.node.querySelector(`#video-${videoId}`) as HTMLVideoElement;\n      if (videoElement && videoElement.readyState >= videoElement.HAVE_ENOUGH_DATA) {\n        action(videoElement)\n      }\n    };\n    if (this.isMobile) {\n      this.cy\n        .on('select', 'node.Protein', handler(v => v.play()))\n        .on('unselect', 'node.Protein', handler(v => v.pause()))\n    }\n    this.cy\n      .on('mouseover', 'node.Protein', handler(v => v.play()))\n      .on('mouseout', 'node.Protein', handler(v => v.pause()));\n  }\n\n  removeProteinVideo(video: HTMLVideoElement, node: cytoscape.NodeSingular) {\n    video.classList.remove('loading')\n    let baseFontSize = extract(this.properties.font.size);\n    node.style({\n      'font-size': baseFontSize,\n      'text-margin-x': 0,\n      'text-max-width': \"100%\",\n    })\n    this.proteins = this.proteins.not(node);\n  };\n\n  private moleculeLayer?: IHTMLLayer;\n\n  initStructureMolecule(cy: cytoscape.Core) {\n    // @ts-ignore\n    const layers: LayersPlugin = cy.layers();\n\n    this.moleculeLayer = layers.append('html');\n    this.moleculeLayer.node.classList.add('molecule')\n\n    layers.renderPerNode(\n      this.moleculeLayer,\n      (elem: HTMLElement, node: cytoscape.NodeSingular) => {\n        elem.style.visibility = node.visible() ? 'visible' : 'hidden';\n      },\n      {\n        init: (elem: HTMLElement, node: cytoscape.NodeSingular) => {\n          elem.innerHTML = node.data('html') || '';\n          elem.style.display = \"flex\"\n        },\n        transform: `translate(-100%, -50%)`,\n        position: 'center',\n        uniqueElements: true,\n        checkBounds: false,\n        selector: '.Molecule',\n        queryEachTime: false,\n      }\n    );\n  }\n\n  onZoom: {\n    [name: string]: (e?: cytoscape.EventObjectCore) => void\n    shadow: (e?: cytoscape.EventObjectCore) => void;\n    protein: (e?: cytoscape.EventObjectCore) => void;\n  } = {\n    shadow: () => undefined,\n    protein: () => undefined,\n  };\n\n  triggerZoom() {\n    Object.values(this.onZoom).forEach(onZoom => onZoom())\n  }\n\n  proteins!: cytoscape.NodeCollection;\n\n  updateProteins() {\n    this.proteins = this.cy.nodes('.Protein')\n      .or('.Molecule');\n  }\n\n  initZoom(cy: cytoscape.Core) {\n    const shadows = cy.edges('[?pathway]');\n    const shadowLabels = cy.nodes('.Shadow');\n    const trivial = cy.elements('.trivial');\n    this.updateProteins();\n\n    cy.minZoom(Math.min(cy.zoom(), extract(this.properties.shadow.labelOpacity)[0][0] / 100));\n    cy.maxZoom(15);\n\n    let baseFontSize = extract(this.properties.font.size);\n    const structureOpacityArray = extract(this.properties.structure.opacity)\n    const zoomStart = structureOpacityArray[0][0];\n    const zoomEnd = structureOpacityArray[structureOpacityArray.length - 1][0]\n\n\n    this.onZoom.shadow = () => {\n      const zoomLevel = cy.zoom();\n      const z = zoomLevel * 100;\n      const shadowLabelOpacity = this.interpolate(z, extract(this.properties.shadow.labelOpacity).map(v => this.p(...v))) / 100;\n      const trivialOpacity = this.interpolate(z, extract(this.properties.trivial.opacity).map(v => this.p(...v))) / 100;\n      const shadowOpacity = this.interpolate(z, extract(this.properties.shadow.opacity).map(v => this.p(...v))) / 100;\n      shadows.style({\n        'underlay-opacity': shadowOpacity\n      });\n      shadowLabels.style({\n        'text-opacity': shadowLabelOpacity\n      });\n      trivial.style({\n        'opacity': trivialOpacity,\n        'underlay-opacity': Math.min(shadowOpacity, trivialOpacity)\n      });\n    }\n\n    this.onZoom.protein = () => {\n      const zoomLevel = cy.zoom();\n      const z = zoomLevel * 100;\n      const videoOpacity = this.interpolate(z, extract(this.properties.structure.opacity).map(v => this.p(...v))) / 100;\n\n      const maxWidth = this.interpolate(z, [this.p(zoomStart, 100), this.p(zoomEnd, 50)]);\n      this.margin = this.interpolate(z, [this.p(zoomStart, 0), this.p(zoomEnd, 0.25)]);\n      const fontSize = this.interpolate(z, [this.p(zoomStart, baseFontSize), this.p(zoomEnd, baseFontSize / 2)]);\n      this.proteins.style(\n        {\n          'font-size': fontSize,\n          'text-margin-x': (n: cytoscape.NodeSingular) => this.margin * n.data(\"width\"),\n          'text-max-width': maxWidth + \"%\",\n        })\n\n      if (this.videoLayer) this.videoLayer.node.style.opacity = videoOpacity + '';\n      if (this.moleculeLayer) this.moleculeLayer.node.style.opacity = videoOpacity + '';\n    };\n\n    cy.on('zoom', this.onZoom.shadow);\n    cy.on('zoom', this.onZoom.protein);\n\n    this.triggerZoom()\n  }\n\n  margin = 0;\n\n  p(x: number, y: number): P {\n    return new P(x, y)\n  }\n\n  interpolate(x: number, points: P[]): number {\n    if (x < points.at(0)!.x) return points.at(0)!.y;\n    if (x > points.at(-1)!.x) return points.at(-1)!.y;\n    for (let i = 0; i + 1 < points.length; i++) {\n      let y = this.lerp(x, points[i], points[i + 1])\n      if (y) return y;\n    }\n    console.assert(false, \"Should not arrive here\")\n    return 0;\n  }\n\n  /**\n   * Linear interpolation as described in https://en.wikipedia.org/wiki/Linear_interpolation\n   * @param x : number number to determine corresponding value\n   * @param p0 : P lower bound point for the linear interpolation\n   * @param p1 : P upper bound point for the linear interpolation\n   */\n  lerp(x: number, p0: P, p1: P): number | undefined {\n    if (x < p0.x || x > p1.x) return undefined;\n    return (p0.y * (p1.x - x) + p1.y * (x - p0.x)) / (p1.x - p0.x);\n  }\n}\n\ninterface State {\n  [k: string]: boolean\n}\n\nconst state: State = {\n  selecting: false,\n  hovering: false,\n  deHovering: false\n}\n\nclass P extends Array<number> {\n  constructor(x: number, y: number) {\n    super(x, y);\n  }\n\n  get x() {\n    return this[0]\n  }\n\n  get y() {\n    return this[1]\n  }\n}\n\n\nfunction isElementInViewport(el: HTMLElement) {\n  let rect = el.getBoundingClientRect();\n  return (\n    rect.top >= 0 &&\n    rect.left >= 0 &&\n    rect.bottom <= (window.innerHeight || document.documentElement.clientHeight) &&\n    rect.right <= (window.innerWidth || document.documentElement.clientWidth)\n  );\n}\n\n\n","import cytoscape from \"cytoscape\";\nimport {clearDrawersCache, imageBuilder, OMMITED_ICON, resetGradients} from \"./drawer/image-builder\";\nimport {extract, propertyExtractor, propertyMapper} from \"./properties-utils\";\n\nimport {Properties, setDefaults, UserProperties} from \"./properties\";\nimport {Interactivity} from \"./interactivity\";\nimport chroma, {Scale} from \"chroma-js\";\n\n\nexport class Style {\n  public css: CSSStyleDeclaration;\n  public properties: Properties;\n  public currentPalette!: Scale;\n  public cy?: cytoscape.Core;\n  private readonly imageBuilder;\n  private readonly p;\n  private readonly pm;\n  public interactivity!: Interactivity;\n\n  constructor(container: HTMLElement, properties: UserProperties = {}) {\n    this.css = getComputedStyle(container);\n    this.properties = setDefaults(properties, this.css);\n    this.imageBuilder = imageBuilder(this.properties, this);\n    this.p = propertyExtractor(this.properties);\n    this.pm = propertyMapper(this.properties);\n  }\n\n  bindToCytoscape(cy: cytoscape.Core) {\n    this.cy = cy;\n    cy.data('reactome', this);\n    this.interactivity = new Interactivity(cy, this.properties);\n    this.initSubPathwayColors()\n  }\n\n  initSubPathwayColors() {\n    const subPathways = this.cy?.nodes('.Shadow');\n    if (!subPathways) return;\n    const dH = 360 / subPathways.length;\n\n    subPathways.forEach((subPathway, i) => {\n      const edges = this.cy!.edges(`[pathway=${subPathway.data('reactomeId')}]`);\n      subPathway.data('edges', edges);\n\n      const color = chroma.hsl(dH * i, 1, extract(this.properties.shadow.luminosity) / 100);\n      const hex = color.hex();\n      subPathway.data('color', hex);\n      edges.forEach(edge => {\n        edge.data('color', hex)\n      });\n    })\n  }\n\n\n  getStyleSheet(): cytoscape.Stylesheet[] {\n    return [\n      {\n        selector: \"*\",\n        style: {\n          \"font-family\": \"Roboto\",\n          \"font-weight\": 600,\n          \"z-index\": 1\n        }\n      },\n      {\n        selector: 'node.Compartment',\n        style: {\n          \"shape\": \"round-rectangle\",\n          \"width\": 'data(width)',\n          \"height\": 'data(height)',\n\n          \"border-style\": 'double',\n\n          \"z-index\": 0,\n          \"z-compound-depth\": \"bottom\",\n          \"overlay-opacity\": 0,\n\n          \"color\": this.p('compartment', 'fill'),\n          \"border-color\": this.p('compartment', 'fill'),\n          \"background-color\": this.p('compartment', 'fill'),\n          \"background-opacity\": this.p('compartment', 'opacity'),\n          \"border-width\": this.pm('global', 'thickness', t => 3 * t)\n        }\n      },\n      {\n        selector: 'node.Compartment.inner, node.Compartment.outer',\n        style: {\n          \"border-style\": 'solid',\n          \"border-width\": this.p('global', 'thickness')\n        }\n      },\n      {\n        selector: 'node.Compartment.outer',\n        style: {\n          'label': 'data(displayName)',\n          \"text-opacity\": 1,\n          \"text-valign\": \"bottom\",\n          \"text-halign\": \"right\",\n          // @ts-ignore\n          \"text-margin-x\": \"data(textX)\",\n          // @ts-ignore\n          \"text-margin-y\": \"data(textY)\",\n        }\n      },\n      {\n        selector: 'node[?radius]',\n        style: {\n          // @ts-ignore\n          'corner-radius': 'data(radius)'\n        }\n      },\n      {\n        selector: 'node.Shadow',\n        style: {\n          'label': 'data(displayName)',\n          \"font-size\": this.p('shadow', 'fontSize'),\n          \"background-opacity\": 0,\n          \"shape\": \"rectangle\",\n          \"text-valign\": \"center\",\n          \"text-halign\": \"center\",\n          \"text-outline-color\": this.p('global', 'surface'),\n          \"text-outline-width\": this.p('shadow', 'fontPadding'),\n          \"text-wrap\": 'wrap',\n          \"text-max-width\": \"data(width)\",\n        }\n      },\n      {\n        selector: 'node.Shadow[?color]',\n        style: {\n          \"color\": 'data(color)',\n        }\n      },\n      {\n        selector: 'node.drug',\n        style: {\n          \"text-max-width\": (node: cytoscape.NodeSingular) => (node.width() - 44) + 'px',\n          \"text-margin-x\": 4,\n          \"font-style\": \"italic\"\n        }\n      }, {\n        selector: 'node.PhysicalEntity, node.Pathway, node.Modification, node.Interactor',\n        style: {\n          'font-size': this.p('font', 'size'),\n          'text-margin-x': 0,\n          'label': 'data(displayName)',\n          'width': 'data(width)',\n          'height': 'data(height)',\n          \"background-fit\": \"none\",\n          \"text-halign\": 'center',\n          \"text-valign\": 'center',\n          \"text-wrap\": 'wrap',\n          \"text-max-width\": (node: cytoscape.NodeSingular) => node.data('width') + 'px',\n          // @ts-ignore\n          \"background-image-smoothing\": \"no no no no no no no no\",\n\n          // @ts-ignore\n          \"background-image\": node => this.imageBuilder(node)[\"background-image\"],\n          // @ts-ignore\n          \"background-position-y\": node => this.imageBuilder(node)[\"background-position-y\"] || 0,\n          // @ts-ignore\n          \"background-position-x\": node => this.imageBuilder(node)[\"background-position-x\"] || 0,\n          // @ts-ignore\n          \"background-height\": node => this.imageBuilder(node)[\"background-height\"] || '100%',\n          // @ts-ignore\n          \"background-width\": node => this.imageBuilder(node)[\"background-width\"] || '100%',\n          // @ts-ignore\n          \"background-clip\": node => this.imageBuilder(node)[\"background-clip\"] || 'node',\n          // @ts-ignore\n          \"background-image-containment\": node => this.imageBuilder(node)[\"background-image-containment\"] || 'inside',\n          // @ts-ignore\n          \"background-image-opacity\": node => this.imageBuilder(node)[\"background-image-opacity\"] || 1,\n          // @ts-ignore\n          \"bounds-expansion\": node => this.imageBuilder(node)[\"bounds-expansion\"][0] || 0,\n          'color': this.p('global', 'onPrimary'),\n        }\n      },\n\n      {\n        selector: 'node.InteractorOccurrences',\n        style: {\n          'label': 'data(displayName)',\n          'color': this.p('global', 'surface'),\n          \"shape\": \"ellipse\",\n          \"text-valign\": \"center\",\n          \"text-halign\": \"center\",\n          \"text-wrap\": 'wrap',\n          \"background-color\": this.p('interactor', 'fill')\n        }\n      },\n      {\n        selector: 'node.InteractorOccurrences.disease',\n        style: {\n          \"background-color\": this.p('global', 'negative')\n        }\n      },\n      {\n        selector: 'node.InteractorOccurrences.hover',\n        style: {\n          \"border-width\": this.pm('global', 'thickness', t => t * 1),\n          \"border-color\": this.p('global', 'hoverNode'),\n        }\n      },\n      {\n        selector: 'node.InteractorOccurrences.select',\n        style: {\n          \"border-width\": this.pm('global', 'thickness', t => t * 1),\n          \"border-color\": this.p('global', 'selectNode'),\n        }\n      },\n      {\n        selector: 'node.Interactor',\n        style: {\n          \"label\": \"data(displayName)\",\n          \"font-family\": \"Roboto Mono, monospace\",\n          // \"border-color\": this.p('interactor', 'stroke'),\n          \"border-width\": this.p('global', 'thickness'),\n          \"text-wrap\": \"ellipsis\",\n          \"border-color\": this.p('interactor', 'fill'),\n          //@ts-ignore\n          \"border-position\": 'inside'\n        }\n      },\n\n      {\n        selector: 'node.PhysicalEntity.disease',\n        style: {\n          \"border-color\": this.p('global', 'negativeContrast'),\n          \"color\": this.p('global', 'negativeContrast'),\n          \"border-width\": this.p('global', 'thickness'),\n        }\n      },\n\n      {\n        selector: 'node.Interactor.disease',\n        style: {\n          \"shape\": \"round-hexagon\",\n          \"background-color\": this.p('global', 'negative'),\n          \"background-opacity\": 0,\n          \"border-width\": 0,\n          \"font-family\": \"Roboto Mono, monospace\",\n          \"color\": this.p('global', 'onPrimary'),\n          \"text-wrap\": \"ellipsis\",\n          \"text-max-width\": (node: cytoscape.NodeSingular) => (node.width() - 40) + 'px',\n        }\n      },\n      {\n        selector: 'node.Protein',\n        style: {\n          \"shape\": \"round-rectangle\",\n          \"background-color\": this.p('protein', 'fill')\n        }\n      }, {\n        selector: 'node.Protein.drug',\n        style: {\n          \"background-color\": this.p('protein', 'drug')\n        }\n      }, {\n        selector: 'node.GenomeEncodedEntity',\n        style: {\n          \"shape\": \"round-rectangle\",\n          \"background-opacity\": 0,\n          \"background-color\": this.p('genomeEncodedEntity', 'fill'),\n          \"text-margin-y\": this.pm('genomeEncodedEntity', 'topRadius', r => r / 10),\n          \"border-width\": 0 // Avoid disease border\n        }\n      }, {\n        selector: 'node.RNA',\n        style: {\n          \"shape\": \"bottom-round-rectangle\",\n          \"background-color\": this.p('rna', 'fill'),\n        }\n      }, {\n        selector: 'node.RNA.drug',\n        style: {\n          \"background-color\": this.p('rna', 'drug'),\n        }\n      }, {\n        selector: 'node.Gene',\n        style: {\n          \"shape\": \"bottom-round-rectangle\",\n          \"background-opacity\": 0,\n          \"background-color\": this.p('gene', 'fill'),\n          \"bounds-expansion\": this.p('gene', 'decorationExtraWidth'),\n          \"text-margin-y\": this.pm('gene', 'decorationHeight', h => h / 2),\n          \"border-width\": 0 // Avoid disease border\n        }\n      }, {\n        selector: 'node.Molecule',\n        style: {\n          \"shape\": 'round-rectangle',\n          \"color\": this.p(\"molecule\", 'stroke'),\n          \"background-color\": this.p(\"molecule\", 'fill'),\n          \"border-color\": this.p(\"molecule\", 'stroke'),\n          \"border-width\": this.p(\"global\", 'thickness'),\n          // @ts-ignore\n          \"corner-radius\": (node: cytoscape.NodeSingular) => Math.min(node.data('width'), node.data('height')) / 2,\n        }\n      }, {\n        selector: 'node.Molecule.drug',\n        style: {\n          \"color\": this.p(\"molecule\", 'drug'),\n          \"border-color\": this.p(\"molecule\", 'drug'),\n        }\n      }, {\n        selector: 'node.Molecule.Interactor',\n        style: {\n          \"border-color\": this.p(\"interactor\", 'fill'),\n        }\n      }, {\n        selector: 'node.EntitySet',\n        style: {\n          \"background-opacity\": 0,\n          \"shape\": \"round-rectangle\",\n          \"border-width\": 0, // Avoid disease border\n          \"text-max-width\": (node: cytoscape.NodeSingular) =>\n            this.pm('global', 'thickness', t =>\n              this.pm('entitySet', 'radius', r => `${node.width() - 2 * r - 6 * t}px`\n              )\n            )\n        }\n      }, {\n        selector: 'node.EntitySet.drug',\n        style: {\n          \"text-max-width\": (node: cytoscape.NodeSingular) =>\n            this.pm('global', 'thickness', t =>\n              this.pm('entitySet', 'radius', r => `${node.width() - 2 * r - 6 * t - 44}px`\n              )\n            )\n        }\n      }, {\n        selector: 'node.Complex',\n        style: {\n          \"shape\": \"cut-rectangle\",\n          \"text-max-width\": (node: cytoscape.NodeSingular) => this.pm('global', 'thickness', t => (node.width() - t * 6) + 'px'),\n          \"background-opacity\": 0,\n          \"border-width\": 0, // Avoid disease border\n\n          // \"background-color\": this.p(\"complex\", 'fill'),\n          // \"width\": (node: cytoscape.NodeSingular) => this.pm('global', 'thickness', t => node.data('width') -  2 * t) ,\n          // \"height\": (node: cytoscape.NodeSingular) => this.pm('global', 'thickness', t => node.data('height') -  2 * t) ,\n          // // @ts-ignore\n          // \"corner-radius\": this.pm('complex', 'cut', c => c),\n          // \"outline-width\":  this.p('global', 'thickness'),\n          // \"outline-color\":  this.p('complex', 'fill'),\n          // \"outline-offset\":  this.pm('global', 'thickness', t => - t),\n          // \"outline-opacity\":  1,\n          //\n          // // \"border-position\": 'inside',\n          // \"border-join\": 'round',\n          // \"border-color\": this.p('complex', 'stroke'),\n          // \"border-width\": this.p('global', 'thickness'),\n        }\n      }, {\n        selector: 'node.Complex.drug',\n        style: {\n          \"text-margin-x\": 4,\n          \"text-max-width\": (node: cytoscape.NodeSingular) => this.pm('global', 'thickness', t => (node.width() - t * 6 - 44) + 'px')\n        }\n      }, {\n        selector: 'node.Cell',\n        style: {\n          \"background-opacity\": 0,\n          \"shape\": \"round-rectangle\",\n          // @ts-ignore\n          \"corner-radius\": 999999,\n          \"border-width\": 0, // Avoid disease border\n\n          \"text-max-width\": (node: cytoscape.NodeSingular) =>\n            this.pm('global', 'thickness', t => this.pm('cell', 'thickness', ct => (node.width() - t * 2 - ct * 2) + 'px'))\n        }\n      },\n      {\n        selector: 'node.Pathway',\n        style: {\n          \"background-color\": this.p('pathway', 'fill'),\n          \"text-margin-x\": 18,\n          \"border-color\": this.p('pathway', 'stroke'),\n          // @ts-ignore\n          \"border-position\": \"inside\",\n          \"border-width\": this.pm('global', 'thickness', t => 3 * t),\n        }\n      },\n      {\n        selector: 'node.Interacting.Pathway',\n        style: {\n          \"shape\": \"rectangle\",\n          \"text-max-width\": (node: cytoscape.NodeSingular) =>\n            this.pm('global', 'thickness', t => `${node.width() - (6 * t + 36) * 2}px`\n            ),\n        }\n      },\n      {\n        selector: 'node.SUB.Pathway',\n        style: {\n          //@ts-ignore\n          \"corner-radius\": 99999,\n          \"shape\": 'round-rectangle',\n          \"text-max-width\": (node: cytoscape.NodeSingular) =>\n            this.pm('global', 'thickness', t => `${node.width() - (6 * t + 36) * 2}px`\n            ),\n        }\n      }, {\n        selector: 'node.Pathway.disease',\n        style: {\n          \"border-color\": this.p('global', 'negativeContrast'),\n          \"color\": this.p('global', 'negativeContrast'),\n        }\n      }, {\n        selector: 'node.Modification',\n        style: {\n          \"background-color\": this.p('modification', 'fill'),\n          \"shape\": 'round-rectangle'\n        }\n      },\n\n\n      {\n        selector: 'node.reaction',\n        style: {\n          \"width\": this.pm('global', 'thickness', t => t * 6),\n          \"height\": this.pm('global', 'thickness', t => t * 6),\n          \"shape\": \"round-rectangle\",\n          \"text-halign\": \"center\",\n          \"text-valign\": \"center\",\n          \"border-width\": this.p('global', 'thickness'),\n          \"border-color\": this.p('global', 'onSurface'),\n          \"color\": this.p('global', 'onSurface'),\n          \"background-color\": this.p('global', 'surface'),\n        }\n      }, {\n        selector: 'node.reaction[?displayName]',\n        style: {\n          \"label\": \"data(displayName)\",\n          \"font-weight\": 400,\n          \"text-valign\": \"top\",\n          \"text-margin-y\": -5,\n        }\n      }, {\n        selector: 'node.reaction.hover',\n        style: {\n          \"border-width\": this.pm('global', 'thickness', t => t * 1),\n          \"border-color\": this.p('global', 'hoverEdge'),\n        }\n      }, {\n        selector: 'node.reaction:selected',\n        style: {\n          \"border-width\": this.pm('global', 'thickness', t => t * 1.5),\n          \"border-color\": this.p('global', 'selectEdge'),\n        }\n      }, {\n        selector: 'node.reaction.flag',\n        style: {\n          // @ts-ignore\n          \"outline-width\": this.pm('global', 'thickness', t => t * 1.5),\n          \"outline-color\": this.p('global', 'flag'),\n        }\n      }, {\n        selector: 'node.association',\n        style: {\n          \"shape\": \"ellipse\",\n          \"background-color\": this.p('global', 'onSurface'),\n        }\n      }, {\n        selector: 'node.dissociation',\n        style: {\n          \"shape\": \"ellipse\",\n          \"border-style\": \"double\",\n          \"border-width\": this.pm('global', 'thickness', t => 3 * t)\n        }\n      }, {\n        selector: 'node.uncertain',\n        style: {\n          \"label\": \"?\",\n          \"text-valign\": \"center\",\n          \"text-margin-y\": 0,\n          \"font-weight\": 600\n        }\n      }, {\n        selector: 'node.omitted',\n        style: {\n          \"background-image\": OMMITED_ICON(this.properties),\n          \"background-fit\": \"cover\",\n          \"background-height\": \"100%\",\n          \"background-width\": \"100%\",\n        }\n      }, {\n        selector: 'node.loss-of-function',\n        style: {\n          \"border-style\": 'dashed',\n          //@ts-ignore\n          \"border-dash-pattern\": this.pm('global', 'thickness', t => [t, t * 2]),\n          \"border-cap\": \"round\"\n        }\n      },\n\n\n      // {\n      //   selector: 'node.RNA.Interactor, node.Protein.Interactor',\n      //   style: {\n      //     \"border-color\": this.p('interactor', 'fill'),\n      //     \"border-width\": this.p('global', 'thickness'),\n      //\n      //   }\n      // },\n      // {\n      //   selector: 'node.Molecule.Interactor',\n      //   style: {\n      //     \"color\": this.p(\"molecule\", 'stroke'),\n      //     \"background-color\": this.p(\"molecule\", 'fill'),\n      //     \"border-color\": this.p(\"interactor\", 'stroke'),\n      //     \"border-width\": this.p(\"global\", 'thickness'),\n      //     // @ts-ignore\n      //     \"corner-radius\": (node: cytoscape.NodeSingular) => Math.min(node.data('width'), node.data('height')) / 2,\n      //   }\n      // },\n\n\n      {\n        selector: 'edge',\n        style: {\n          \"curve-style\": \"straight\",\n          \"line-cap\": \"round\",\n          \"source-endpoint\": \"outside-to-node\",\n          \"arrow-scale\": 1.5,\n\n          'width': this.p('global', 'thickness'),\n          'color': this.p('global', 'onSurface'),\n          'line-color': this.p('global', 'onSurface'),\n          'target-arrow-color': this.p('global', 'onSurface'),\n          'mid-source-arrow-color': this.p('global', 'onSurface'),\n          'mid-target-arrow-color': this.p('global', 'onSurface'),\n          'source-arrow-color': this.p('global', 'onSurface'),\n          // @ts-ignore\n          'source-arrow-width': '100%',\n          // @ts-ignore\n          'target-arrow-width': '100%',\n        }\n      }, {\n        selector: 'edge.disease',\n        style: {\n          \"color\": this.p('global', 'negative'),\n          \"line-color\": this.p('global', 'negative'),\n          \"border-color\": this.p('global', 'negative'),\n          'target-arrow-color': this.p('global', 'negative'),\n          'source-arrow-color': this.p('global', 'negative'),\n        }\n      }, {\n        selector: \"edge.hover\",\n        style: {\n          \"line-color\": this.p('global', 'hoverEdge'),\n          \"width\": this.pm('global', 'thickness', t => t * 1.5),\n          \"arrow-scale\": 1,\n          \"source-arrow-color\": this.p('global', 'hoverEdge'),\n          \"target-arrow-color\": this.p('global', 'hoverEdge'),\n          // @ts-ignore\n          'source-arrow-width': '50%',\n          // @ts-ignore\n          'target-arrow-width': '50%',\n          \"z-index\": 2\n        }\n      }, {\n        selector: \"edge:selected\",\n        style: {\n          \"line-color\": this.p('global', 'selectEdge'),\n          \"width\": this.pm('global', 'thickness', t => t * 2),\n          \"arrow-scale\": 1,\n          \"source-arrow-color\": this.p('global', 'selectEdge'),\n          \"target-arrow-color\": this.p('global', 'selectEdge'),\n          // @ts-ignore\n          'source-arrow-width': '50%',\n          // @ts-ignore\n          'target-arrow-width': '50%',\n          \"z-index\": 3\n        }\n      },\n      {\n        selector: 'edge.consumption',\n        style: {\"target-endpoint\": \"inside-to-node\", \"source-endpoint\": \"outside-to-node\"}\n      }\n      , {\n        selector: 'edge.production',\n        style: {'target-arrow-shape': 'triangle'}\n      }, {\n        selector: 'edge.catalysis',\n        style: {\n          'target-arrow-shape': 'circle',\n          \"target-arrow-fill\": \"hollow\",\n          \"target-arrow-color\": this.p('global', 'positive')\n        }\n      }, {\n        selector: 'edge.positive-regulation',\n        style: {\n          'target-arrow-shape': 'triangle',\n          \"target-arrow-fill\": \"hollow\",\n          \"target-arrow-color\": this.p('global', 'positive')\n        }\n      }, {\n        selector: 'edge.negative-regulation',\n        style: {\n          'target-arrow-shape': 'tee',\n          \"line-cap\": \"butt\",\n          \"source-endpoint\": \"inside-to-node\",\n          \"target-arrow-color\": this.p('global', 'negative')\n        }\n      }, {\n        selector: 'edge.set-to-member',\n        style: {'target-arrow-shape': 'circle', \"line-style\": \"dashed\", \"line-dash-pattern\": [6, 10], \"opacity\": 0.5}\n      }, {\n        selector: 'edge[stoichiometry > 1]',\n        style: {\n          \"text-background-color\": this.p('global', 'surface'),\n          \"text-background-opacity\": 1,\n          \"text-border-width\": this.pm('global', 'thickness', t => t / 2),\n          \"text-border-opacity\": 1,\n          \"text-border-color\": this.p('global', 'onSurface'),\n          \"text-background-shape\": 'roundrectangle',\n          \"text-background-padding\": this.pm('global', 'thickness', t => t + 'px'),\n        }\n      }, {\n        selector: 'edge[stoichiometry > 1].incoming',\n        style: {\n          \"source-label\": \"data(stoichiometry)\",\n          \"source-text-offset\": 30,\n        }\n      }, {\n        selector: 'edge[stoichiometry > 1].outgoing',\n        style: {\n          \"target-label\": \"data(stoichiometry)\",\n          \"target-text-offset\": 35,\n        }\n      }, {\n        selector: \"edge.shadow[?color]\",\n        style: {\n          // @ts-ignore\n          \"underlay-color\": \"data(color)\",\n          \"underlay-padding\": this.p('shadow', 'padding'),\n          \"underlay-opacity\": this.pm('shadow', 'opacity', o => o[0][1] / 100),\n        }\n      }, {\n        selector: \"edge.flag\",\n        style: {\n          // @ts-ignore\n          \"underlay-color\": this.p('global', 'flag'),\n          \"underlay-padding\": 10,\n          \"underlay-opacity\": 1,\n        }\n      }, {\n        selector: \"edge[?weights]\",\n        style: {\n          // @ts-ignore\n          \"curve-style\": \"round-segments\",\n          \"segment-distances\": \"data(distances)\",\n          \"segment-weights\": \"data(weights)\",\n          \"segment-radius\": 30,\n          \"radius-type\": 'influence-radius',\n          // @ts-ignore\n          \"edge-distances\": \"endpoints\",\n        }\n      }, {\n        selector: \"edge[?sourceEndpoint]\",\n        style: {\n          \"source-endpoint\": \"data(sourceEndpoint)\",\n        }\n      }, {\n        selector: \"edge[?targetEndpoint]\",\n        style: {\n          \"target-endpoint\": \"data(targetEndpoint)\",\n        }\n      }, {\n        selector: \"edge[?sourceLabel]\",\n        style: {\n          \"source-label\": \"data(sourceLabel)\",\n          \"source-text-margin-y\": -12,\n          \"font-weight\": 400\n        }\n      }, {\n        selector: \"edge[?label]\",\n        style: {\n          \"label\": \"data(label)\",\n          \"text-margin-y\": 12,\n          \"font-weight\": 400\n        }\n      },\n      {\n        selector: 'edge.Interactor',\n        style: {\n          'line-color': this.p('interactor', 'stroke'),\n          'line-style': 'dashed',\n          'line-dash-pattern': [1, 8]\n        }\n      },\n      {\n        selector: 'edge.Interactor.disease',\n        style: {\n          'line-color': this.p('global', 'negativeContrast'),\n        }\n      },\n      {\n        selector: 'edge.Interactor.hover',\n        style: {\n          \"line-color\": this.p('global', 'hoverEdge')\n        }\n      },\n      {\n        selector: \"edge[?sourceOffset]\",\n        style: {\n          // @ts-ignore\n          \"source-text-offset\": \"data(sourceOffset)\",\n        }\n      },\n      {\n        selector: \"[?labelColor]\",\n        style: {\n          \"color\": (e: cytoscape.EdgeSingular) => extract(this.p('global', e.data(\"labelColor\")))\n        }\n      }, {\n        selector: \"node.debug\",\n        style: {\n          label: \"data(id)\",\n          \"text-outline-width\": 4,\n          \"text-outline-color\": 'black',\n          \"text-outline-opacity\": 1,\n          color: 'white'\n        }\n      },\n      {\n        selector: \"[?exp]\",\n        style: {\n          \"color\": this.p('global', 'surface'),\n          \"text-outline-width\": 2,\n          \"text-outline-color\": this.p('global', 'onSurface'),\n          \"text-outline-opacity\": 1,\n        }\n      },\n      {\n        selector: \"[?exp].Molecule\",\n        style: {\n          \"background-color\": this.p('global', 'onSurface')\n        }\n      },\n\n      {\n        selector: \"node.Legend.Label\",\n        style: {\n          \"label\": \"data(displayName)\",\n          \"text-halign\": \"center\",\n          \"text-valign\": \"center\",\n          \"font-size\": 24,\n          \"font-weight\": 400,\n          \"background-opacity\": 0,\n          \"color\": this.p('global', 'onSurface')\n        }\n      },\n      {\n        selector: \"node.Legend.Placeholder\",\n        style: {\n          \"background-opacity\": 0,\n          \"border-opacity\": 0,\n          width: 20,\n          height: 20,\n          shape: \"rectangle\"\n        }\n      },\n      {\n        selector: \"node.Legend.Placeholder[?displayName]\",\n        style: {\n          \"label\": \"data(displayName)\",\n          \"font-weight\": 400,\n        }\n      },\n      {\n        selector: '.trivial',\n        style: {\n          'opacity': 0,\n        }\n      },\n    ]\n  }\n\n  clearCache() {\n    this.imageBuilder.cache.clear!()\n    clearDrawersCache();\n  }\n\n  update(cy: cytoscape.Core) {\n    this.clearCache();\n    cy.style(this.getStyleSheet());\n    this.initSubPathwayColors();\n    this.interactivity.triggerZoom();\n  }\n\n  loadAnalysis(cy: cytoscape.Core, palette: Scale) {\n    console.log(cy, palette)\n\n    this.currentPalette = palette;\n\n    resetGradients()\n    this.update(cy);\n  }\n}\n","/*\n * Public API Surface of reactome-cytoscape-style\n */\n\nexport {Style} from './lib/style';\nexport {UserProperties} from './lib/properties';\nexport {Interactivity} from './lib/interactivity';\nexport * as Types from './lib/types';\nexport {ReactomeEvent, ReactomeEventTarget, ReactomeEventTypes} from './lib/model/reactome-event.model';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["isProvider","property","apply","undefined","extract","defaultable","object","setDefault","key","defaultValue","propertyExtractor","properties","group","propertyMapper","mapper","RouterModule","DiagramIteratorComponent","legacyGuard","ViewportComponent","DiagramHomeComponent","routes","path","component","canActivate","runGuardsAndResolvers","AppRoutingModule","_","_2","_3","forRoot","bindToComponentInputs","imports","i1","exports","AppComponent","constructor","matIconRegistry","domSanitizer","title","icons","name","route","species","loadIcons","forEach","icon","addSvgIcon","bypassSecurityTrustResourceUrl","i0","ɵɵdirectiveInject","MatIconRegistry","i2","DomSanitizer","selectors","decls","vars","template","AppComponent_Template","rf","ctx","ɵɵelement","BrowserModule","FormsModule","ReactiveFormsModule","CommonModule","HttpClientModule","DiagramComponent","RouterOutlet","BrowserAnimationsModule","MatButtonModule","MatSlideToggleModule","CdkDrag","CdkDragHandle","MatInputModule","MatSelectModule","MatProgressSpinnerModule","CustomInteractorDialogComponent","MatDialogModule","MatTabsModule","MatCheckboxModule","MatRadioModule","NgxMatFileInputModule","MatIconModule","MatListModule","MatExpansionModule","MatGridListModule","InteractorsComponent","AngularSplitModule","MatCardModule","SpeciesComponent","MatRippleModule","EventHierarchyComponent","MatTreeModule","MatTooltipModule","DetailsComponent","MatMenuModule","AppModule","bootstrap","declarations","UntilDestroy","untilDestroyed","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","ctx_r1","obj","summation","displayName","ctx_r2","created","ctx_r3","dateTime","ɵɵtemplate","DetailsComponent_div_0_p_5_Template","DetailsComponent_div_0_p_8_Template","DetailsComponent_div_0_p_9_Template","ɵɵtextInterpolate3","ctx_r0","dbId","schemaClass","ɵɵproperty","eventService","state","ngAfterViewInit","selectedObj$","pipe","subscribe","event","EventService","DiagramStateService","consts","DetailsComponent_Template","DetailsComponent_div_0_Template","__decorate","ɵɵlistener","DiagramHomeComponent_button_10_Template_button_click_0_listener","ɵɵrestoreView","_r6","ctx_r5","ɵɵnextContext","ɵɵresetView","clearAnalysis","ctx_r10","analysis","paletteOptions","get","palette_r11","ɵɵstyleProp","tmp_2_0","gradient","DiagramHomeComponent_ng_container_18_ng_container_7_mat_optgroup_1_mat_option_3_Template","ɵɵtextInterpolate","group_r8","palettes","ɵɵelementContainerStart","DiagramHomeComponent_ng_container_18_ng_container_7_mat_optgroup_1_Template","ɵɵelementContainerEnd","valid","DiagramHomeComponent_ng_container_18_Template_mat_select_valueChange_4_listener","$event","_r14","ctx_r13","palette","DiagramHomeComponent_ng_container_18_Template_mat_select_selectionChange_4_listener","_r4","ɵɵreference","changePalette","DiagramHomeComponent_ng_container_18_ng_container_7_Template","dark","interactor","diagramId","AnalysisService","DarkService","i3","InteractorService","inputs","DiagramHomeComponent_Template","DiagramHomeComponent_Template_button_click_6_listener","example","DiagramHomeComponent_Template_button_click_8_listener","DiagramHomeComponent_button_10_Template","DiagramHomeComponent_Template_mat_slide_toggle_ngModelChange_16_listener","isDark","DiagramHomeComponent_ng_container_18_Template","_r0","result","_r2","cy","cys","combineLatest","client","router","diagramIndex","diagramIds","params","responseType","diagrams","split","filter","s","length","next","previous","ActivatedRoute","HttpClient","Router","viewQuery","DiagramIteratorComponent_Query","DiagramIteratorComponent_Template_div_keydown_arrowLeft_3_listener","DiagramIteratorComponent_Template_div_keydown_arrowRight_3_listener","DiagramIteratorComponent_Template_button_click_4_listener","DiagramIteratorComponent_Template_input_ngModelChange_9_listener","DiagramIteratorComponent_Template_button_click_10_listener","cytoscape","ReactomeEventTypes","Style","delay","distinctUntilChanged","forkJoin","share","Subject","take","isDefined","brewer","style","MatFormField","diagram","interactorsService","comparing","classRegex","ratio","replacedElementsPosition","lastIndex","underlayPadding","syncing","syncViewports","source","sourceContainer","target","targetContainer","updateReplacementVisibility","position","pan","sourceX","getBoundingClientRect","x","targetX","viewport","zoom","compareDragging","_reactomeEvents$","_ignore","reactomeEvents$","asObservable","prev","current","type","detail","reactomeId","flagging","onChange","flag$","value","avoidSideEffect","flag","selecting","select$","select","analysing","analysis$","loadAnalysis","compareBackgroundSync","e","legend","src","tgt","cyCompare","replacedBy","element","data","replacements","getElementById","add","elements","applyEvent","interactorOpeningHandling","open","close","includes","reactomeStyle","reactomeStyleCompare","occurrenceNode","nodes","addInteractorNodes","removeInteractorNodes","interactivity","updateProteins","triggerZoom","initialiseReplaceElements","diagram2legend","classes","matchingElement","not","reaction","first","connectedEdges","diagramSelect2state","reactomeIds","map","el","set","legend2state","unselect","hover","addClass","leave","removeClass","ngOnChanges","changes","loadDiagram","$dark","updateStyle","bind","container","cytoscapeContainer","nativeElement","compareContainer","legendContainer","Object","values","addEventListener","shadow","padding","getLegend","getStyleSheet","layout","boxSelectionEnabled","bindToCytoscape","zoomingEnabled","panningEnabled","minZoom","bb","boundingBox","getDiagram","some","node","edges","edge","clearCache","on","navigate","queryParamsHandling","relativeTo","setSubpathwaysColors","Map","loadCompare","stateToDiagram","batch","getPosition","is","x1","replacedElements","sort","a","b","toArray","addedElement","index","findIndex","splice","removedElement","indexOf","remove","maxZoom","setTimeout","getElements","tokens","collection","token","startsWith","or","allSubpathwaysElements","ele","pathwayList","merge","matchArray","match","clazz","drug","and","selected","connectedNodes","animate","fit","eles","duration","easing","accs","flagElements","toFlag","shadowNodes","shadowEdges","trivials","nonempty","setSubPathwayVisibility","visible","opacity","onZoom","off","affectedElements","extent","limitIndex","slice","console","log","removeData","fontSize","fontPadding","scale","entities","foundEntities","pathways","pathwaysResults","p","result$","analysisProfile","analysisIndex","expNames","analysisEntityMap","flatMap","entity","mapsTo","diagramEntity","ids","id","exp","analysisPathwayMap","normalize","min","max","expression","hasExpression","summary","leaves","leaf","identifier","pathwayData","pValue","found","total","validGroups","Set","domain","has","update","dragStart","dragEnd","dragMove","resize","updateLegend","m","resource","interactorsComponent","getInteractors","logProteins","debug","analyse","DiagramService","i4","i5","i6","i7","DiagramComponent_Query","DiagramComponent_Template_div_mouseup_6_listener","DiagramComponent_Template_div_mouseleave_6_listener","DiagramComponent_Template_div_mousemove_6_listener","_r5","DiagramComponent_Template_span_mousedown_7_listener","DiagramComponent_Template_div_cdkDragMoved_11_listener","ɵɵclassProp","clientHeight","checkProperties","ElementRef","fromEvent","switchMap","tap","NestedTreeControl","MatTreeNestedDataSource","NavigationEnd","EventHierarchyComponent_div_1_ng_container_5_ng_container_1_Template_a_click_1_listener","_r10","breadcrumb_r4","$implicit","ctx_r8","onBreadcrumbSelect","ɵɵpureFunction1","_c2","ctx_r6","EventHierarchyComponent_div_1_ng_container_5_ng_container_1_Template","EventHierarchyComponent_div_1_ng_container_5_ng_container_2_Template","last_r5","EventHierarchyComponent_div_1_ng_container_5_Template","breadcrumbs","EventHierarchyComponent_mat_tree_node_4_div_9_Template_div_mouseover_0_listener","_r20","node_r13","ctx_r18","onTagHover","EventHierarchyComponent_mat_tree_node_4_div_9_Template_div_mouseleave_0_listener","ctx_r21","onTagHoverLeave","EventHierarchyComponent_mat_tree_node_4_div_10_Template_div_mouseover_0_listener","_r25","ctx_r23","EventHierarchyComponent_mat_tree_node_4_div_10_Template_div_mouseleave_0_listener","ctx_r26","EventHierarchyComponent_mat_tree_node_4_div_11_Template_div_mouseover_0_listener","_r30","ctx_r28","EventHierarchyComponent_mat_tree_node_4_div_11_Template_div_mouseleave_0_listener","ctx_r31","isInDisease","EventHierarchyComponent_mat_tree_node_4_div_12_Template_div_mouseover_0_listener","_r36","ctx_r34","EventHierarchyComponent_mat_tree_node_4_div_12_Template_div_mouseleave_0_listener","ctx_r37","EventHierarchyComponent_mat_tree_node_4_Template_button_click_2_listener","restoredCtx","_r40","ctx_r39","onTreeEventSelect","EventHierarchyComponent_mat_tree_node_4_Template_div_mouseover_5_listener","ctx_r41","onNameHover","EventHierarchyComponent_mat_tree_node_4_Template_div_mouseleave_5_listener","ctx_r42","onNameHoverLeave","EventHierarchyComponent_mat_tree_node_4_Template_div_wheel_5_listener","ctx_r43","onScroll","EventHierarchyComponent_mat_tree_node_4_div_9_Template","EventHierarchyComponent_mat_tree_node_4_div_10_Template","EventHierarchyComponent_mat_tree_node_4_div_11_Template","EventHierarchyComponent_mat_tree_node_4_div_12_Template","_c3","hasRootSiblingForLeafNode","ɵɵpureFunction2","_c4","isSelected","isHovered","releaseStatus","isInferred","EventHierarchyComponent_mat_nested_tree_node_5_div_14_Template_div_mouseover_0_listener","_r54","node_r44","ctx_r52","EventHierarchyComponent_mat_nested_tree_node_5_div_14_Template_div_mouseleave_0_listener","ctx_r55","EventHierarchyComponent_mat_nested_tree_node_5_div_15_Template_div_mouseover_0_listener","_r59","ctx_r57","EventHierarchyComponent_mat_nested_tree_node_5_div_15_Template_div_mouseleave_0_listener","ctx_r60","EventHierarchyComponent_mat_nested_tree_node_5_div_16_Template_div_mouseover_0_listener","_r64","ctx_r62","EventHierarchyComponent_mat_nested_tree_node_5_div_16_Template_div_mouseleave_0_listener","ctx_r65","EventHierarchyComponent_mat_nested_tree_node_5_div_17_Template_div_mouseover_0_listener","_r70","ctx_r68","EventHierarchyComponent_mat_nested_tree_node_5_div_17_Template_div_mouseleave_0_listener","ctx_r71","EventHierarchyComponent_mat_nested_tree_node_5_div_18_Template_div_mouseover_0_listener","_r75","ctx_r73","EventHierarchyComponent_mat_nested_tree_node_5_div_18_Template_div_mouseleave_0_listener","ctx_r76","color","EventHierarchyComponent_mat_nested_tree_node_5_Template_button_click_3_listener","_r80","ctx_r79","EventHierarchyComponent_mat_nested_tree_node_5_Template_button_click_6_listener","ctx_r81","EventHierarchyComponent_mat_nested_tree_node_5_Template_div_mouseover_10_listener","ctx_r82","EventHierarchyComponent_mat_nested_tree_node_5_Template_div_mouseleave_10_listener","ctx_r83","EventHierarchyComponent_mat_nested_tree_node_5_Template_div_wheel_10_listener","ctx_r84","EventHierarchyComponent_mat_nested_tree_node_5_div_14_Template","EventHierarchyComponent_mat_nested_tree_node_5_div_15_Template","EventHierarchyComponent_mat_nested_tree_node_5_div_16_Template","EventHierarchyComponent_mat_nested_tree_node_5_div_17_Template","EventHierarchyComponent_mat_nested_tree_node_5_div_18_Template","ɵɵelementContainer","ɵɵattribute","treeControl","isExpanded","hasEHLD","hasDiagram","parent","stId","speciesService","_SCROLL_SPEED","_ICON_PADDING","_GRADIENT_WIDTH","_isInitialLoad","hasEvent","trackBy","treeDataSource","selectedIdFromUrl","subpathwayColors","ancestors","getIgnore","idToUse","fetchEnhancedEventData","enhancedEvent","adjustTreeFromDiagramSelection","currentSpecies$","taxId","getTopLevelPathways","treeData$","events","adjustWidths","selectedTreeEvent$","selectedTreeEvent","selectedObj","breadcrumbs$","dragProgress$","window","subpathwaysColors$","colors","loadTreeEvent$","treeEvent","collapseSiblingEvent","fetchChildrenEvents","enhancedResult","setCurrentEventAndObj","setSubpathwayColors","fetchTlpBySpecies","results","setTreeData","buildTree","sibling","eventHasChild","loadChildrenTreeEvents","loadTreeEvent","ngOnDestroy","clearTimeout","scrollTimeout","isTLP","hasChild","handleTreeEventSelection","handleSelectionFromTree","handleDeselectionFromTree","navEvent","clearAllSelectedEvents","selectAllParents","collapseDescendants","expand","updateBreadcrumbs","setDiagramId","selectedEventId","setPath","toggleEventExpansion","navigateToPathway","updateBreadcrumbsForEventDeselection","handlePathwayNavigationOnDeselection","collapseAll","toggle","setCurrentObj","eventParent","childEvent","collapse","selectedEvent","setBreadcrumbs","parentWithDiagram","getPathwayWithDiagram","parents","reverse","find","then","setCurrentTreeEvent","routerEvent","catch","err","Error","trackById","treeNodes","querySelectorAll","adjustWidth","left","querySelector","hasEvents","children","calculateAndSetWidth","getLeftDivElWidth","right","parentWidth","clientWidth","rightWidth","offsetWidth","width","targetParentNode","closest","leftDivWidth","nameElement","contentWidth","calculateContentWidth","classList","distanceToScroll","setScrollStyles","targetElement","iconWidth","eventIcon","treeControlButtonWidth","treeControlButton","baseWidth","transition","onScrollStart","onScrollStop","labelSpan","SpeciesService","EventHierarchyComponent_Query","EventHierarchyComponent_div_1_Template","EventHierarchyComponent_mat_tree_node_4_Template","EventHierarchyComponent_mat_nested_tree_node_5_Template","inject","URL_PATTERN","fragment","queryParams","groups","param","FormControl","Validators","takeUntilDestroyed","MAT_DIALOG_DATA","InputCategory","errorMessage","item_r6","i_r7","content","CustomInteractorDialogComponent_mat_form_field_15_Template_ngx_mat_file_input_change_1_listener","_r9","onFileChange","interactorService","dialogRef","fb","required","pattern","tabId","selectedValue","isDataLoading","items","formGroupValidator","control","fileValue","form","contentValue","urlValue","url","psicquicUrlValue","psicquicUrl","invalid","resourceForm","validators","statusChanges","valueChanges","updateErrorMessage","ngOnInit","hasError","onTabChange","tab","ariaLabelledby","onItemChange","inputElement","files","file","patchValue","submit","userInput","getInputs","getInteractorsFromToken","addInteractorOccurrenceNode","interactors","input","formValue","UPLOAD_URL","prepareFormData","UPLOAD_PSICQUIC_URL","formControl","formData","FormData","append","MatDialogRef","FormBuilder","CustomInteractorDialogComponent_Template","CustomInteractorDialogComponent_Template_input_blur_8_listener","CustomInteractorDialogComponent_mat_error_9_Template","CustomInteractorDialogComponent_Template_mat_tab_group_selectedTabChange_10_listener","CustomInteractorDialogComponent_Template_mat_radio_group_change_13_listener","CustomInteractorDialogComponent_mat_radio_button_14_Template","CustomInteractorDialogComponent_mat_form_field_15_Template","CustomInteractorDialogComponent_mat_form_field_16_Template","CustomInteractorDialogComponent_mat_form_field_17_Template","CustomInteractorDialogComponent_Template_button_click_29_listener","CustomInteractorDialogComponent_mat_spinner_32_Template","tmp_7_0","EventEmitter","ResourceType","text_r7","InteractorsComponent_mat_grid_tile_18_Template_button_click_1_listener","_r11","resource_r8","InteractorsComponent_mat_grid_tile_18_mat_spinner_5_Template","_c0","ctx_r4","currentResource","isDataFromPsicquicLoading","InteractorsComponent_mat_selection_list_20_mat_list_option_1_Template_mat_list_option_click_0_listener","_r15","resourceToken_r13","ctx_r14","InteractorsComponent_mat_selection_list_20_mat_list_option_1_Template_button_click_4_listener","ctx_r16","deleteCustomResource","ctx_r12","InteractorsComponent_mat_selection_list_20_mat_list_option_1_Template","resourceTokens","dialog","cdr","clear","psicquicResources","DISEASE_RESOURCE","INTACT_RESOURCE","getPsicquicResources","currentResourceSubscription","currentInteractorResource$","unsubscribe","getResourceType","resourceType","STATIC","DISGENET","getStaticInteractors","PSICQUIC","getPsicquicResourceInteractors","CUSTOM","getCustomResourceInteractors","error","updateCurrentResource","getInteractorData","emit","selectedResource","openCustomInteractorDialog","openDialogs","restoreFocus","afterClosed","componentInstance","push","detectChanges","fetchCustomInteractors","clearInteractors","clearAllInteractorNodes","setCurrentResource","resources","MatDialog","ChangeDetectorRef","outputs","InteractorsComponent_Template","InteractorsComponent_ng_template_0_Template","ɵɵtemplateRefExtractor","InteractorsComponent_Template_button_click_6_listener","InteractorsComponent_ng_container_10_Template","InteractorsComponent_Template_button_click_12_listener","InteractorsComponent_Template_button_click_14_listener","InteractorsComponent_ng_container_16_Template","InteractorsComponent_mat_grid_tile_18_Template","InteractorsComponent_ng_container_19_Template","InteractorsComponent_mat_selection_list_20_Template","InteractorsComponent_Template_button_click_22_listener","_c1","ɵɵpureFunction0","InteractorsLayout","MAX_INTERACTORS","BOX_WIDTH","BOX_HEIGHT","_4","SEPARATION","Math","round","_5","MIN_HEIGHT","_6","MIN_WIDTH","getNumberOfInteractorsToDraw","getSegmentOrigin","edgeIndex","center","height","y","getCentre","minX","maxX","minY","maxY","interpolateInLayout","segment","pos","totalPositions","r","from","to","targetNode","interactorIndex","numberToDraw","centerPosition","lp","LayoutParameter","calculate","edgeNodes","nodeOnTop","nodeCount","prevNodeCount","nodePerEdges","nodeOnRight","nodeOnBottom","nodeOnLeft","edgePos","n","rationalNodePerEdge","baseNodePerEdge","floor","remaining","HttpHeaders","HttpParams","catchError","of","environment","http","diagramService","_PREFIX_INTERACTOR","host","_PREFIX_DISEASE","_STATIC_URL","_PSICQUIC_RESOURCE_URL","_PSICQUIC_URL","_TOKEN_URL","DISGENET_URL","DEFAULT_INTERACTOR_WIDTH","DEFAULT_DISGENET_WIDTH","INTERACTOR_PADDING","CHAR_WIDTH","CHAR_HEIGHT","GENE_DECORATION_HEIGHT","identifiers","cyToSelectedResource","currentInteractorResourceSubject","getIdentifiers","getIdentifiersFromGraph","updateIdentifiers","currentIdentifiers","areSame","idsA","idsB","str","join","graphNodes","toLowerCase","post","headers","previousResource","createInteractorOccurrenceNode","interactorEntity","count","acc","entityNode","pannable","grabbable","interactorsData","numberToAdd","dynamicInteractors","existingInteractors","getAllInteractors","allNodes","createInteractorNodes","createInteractorEdges","displayInteractors","diagramNodes","existingNodes","interactorNodes","interactorLayout","alias","defaultType","nodeTypeMap","replace","html","getStructureVideoHtml","accURL","score","evidences","evidenceURLs","evidencesURL","selectable","resourceClass","interactorEdges","targetNodes","edgeToTarget","interactorsToDisplay","layoutOptions","run","closedNeighborhood","empty","interactorOcc","hasClass","active","getInteractorsToken","body","getResourceTypeStatic","isFromPSICQUIC","isCustomResource","isPsicquic","isCustom","pr","ɵɵinject","factory","ɵfac","providedIn","PaletteSummary","_scale","mode","c","i","keys","pathway","foundInteractors","pathwayIds","BehaviorSubject","_isDark","$_dark","_body","document","localValue","localStorage","getItem","JSON","parse","matchMedia","media","matches","setItem","stringify","firstValueFrom","isArray","isBoolean","isNumber","_this","propagate","otherTokens","flagInteractors","overlay","_state$","state$","reduce","prop","v1","v2","toString","v","queryParamMap","_ref","_asyncToGenerator","mainToken","formerValue","rawValue","charAt","parseInt","hasDbIds","Promise","all","ensureStId","dbIdToStId","_x","arguments","_this2","_this3","onPropertyModified","entries","Array","array","cytoscapeFcose","use","posToStr","pointToStr","point","equal","pos1","pos2","avg","positions","sum","squaredDist","pow","dist","sqrt","closestToAverage","average","extraLine","reverseExtraLine","reactionTypeMap","edgeTypeMap","edgeTypeToStr","linkClassMap","COMPARTMENT_SHIFT","random","pick","getNormalPathway","graph","forNormalDraw","stableId","normalPathwayId","normalDiagram","normalGraph","shadows","isFadeOut","subpathways","mergedResponse","reactionType","connectors","con","renderableClass","links","link","idToEdges","idToNodes","reactomeIdToEdge","edgeIds","forwardArray","segments","assert","size","backwardArray","subpathwayIds","eventIdToSubPathwayId","subpathway","entry","subpathwayIdToEventIds","subpathwayStIdToEventIds","dbIdToGraphNode","mappingList","idToGraphNodes","idToGraphEdges","getLeaves","child","dbIdToGraphEdge","hasFadeOut","normalNodes","specialNodes","posToNormalNode","posToSpecialNode","normalEdges","specialEdges","posToNormalEdge","posToSpecialEdge","compartmentNodes","compartments","item","propToRects","top","bottom","innerCR","outerCR","insets","rects","smallest","abs","Number","MAX_SAFE_INTEGER","layers","textX","textPosition","textY","radius","replacementMap","reactionNodes","replacement","subpathwayId","output","isBackground","reactionId","entityNodes","isDisease","isCrossed","trivial","needDashedBorder","overlapLimited","connector","preferredId","nodeAttachments","ptm","nodeId","nodeReactomeId","label","shape","centre","triggerPosition","avoidOverlap","T","ARROW_MULT","EDGE_MARGIN","REACTION_RADIUS","MIN_DIST","edgeId","reactionP","nodeP","sourceP","targetP","points","addEdgeInfo","shift","pop","endShape","relatives","absoluteToRelative","d","otherConnector","samePoint","getEdgeId","stoichiometry","weights","distances","sourceEndpoint","endpoint","targetEndpoint","linkEdges","uniprotId","s3","warn","direction","stop","stopPos","at","unshift","toConvert","mainVector","orthoVector","transform","inv","coord","absolute","relative","multiply","randomNetwork","amount","peTypes","reactionTypes","physicalEntities","reactions","inOut","additionalIn","p1","p2","nodeA","nodeB","limit","rectA","getRect","rectB","o","area","overlap","rect","halfWidth","halfHeight","definitions","createElement","includeLabels","includeNodes","w","h","nodeRepulsion","packComponents","randomize","tile","def","destroy","mergeMap","JSOGDeserializer","_TOP_LEVEL_PATHWAYS","_ENHANCED_QUERY","_DATA_QUERY","_ANCESTORS","_selectedTreeEvent","_selectedObj","_breadcrumbsSubject","_subpathwaysColors","_loadTreeEvent","colorMap","fetchEventAncestors","response","deserializer","resolvedResponse","deserialize","fetchEventData","allVisibleTreeNodes","getAllVisibleTreeNodes","isEntity","handleEntitySelectionFromDiagram","isReaction","handleReactionSelectionFromDiagram","isPathwayWithDiagram","handlePathwaySelectionFromDiagram","diagramTreeEvent","handleExistingEventSelection","treeData","isEventVisible","buildTreeWithSelectedEvent","buildTreeWithSelectedEntity","getAndExpandAncestors","buildTreeWithAncestors","tree","isFromDiagram","idToBuild","flatTreeNodes","finalAncestor","ancestorStIds","ancestor","treeNode","buildNestedTree","roots","nestedTree","isLast","currentLevel","existingEvent","pathIds","findMatchingAncestor","expandAllAncestors","ancestorArray","allIdsFromAncestor","containsAll","every","getPathIds","stIds","visibleTreeNodes","addVisibleNodes","rootNode","getExpandedTreeWithChildrenNodes","expandedTreeNodes","tlpStId","expansionModel","rootTree","flattenTree","flatTreeData","flatten","findEvent","flatData","_MAIN_SPECIES","_ORTHOLOGIES","defaultSpecies","shortName","_currentSpeciesSubject","orthologousMap","abbreviationToSpecies","setIgnore","getSpecies","getOrthologousMap","speciesDbId","setShortName","parts","genus","setCurrentSpecies","setSpeciesFromDiagramId","speciesTerm","getOrthologyEventStId","selectedId","idsToPost","newSelectedId","getIdsFromURL","concat","updateQueryParams","paramNames","abbreviation","newParams","snapshot","updateValue","SpeciesComponent_mat_list_option_2_Template_mat_list_option_click_0_listener","_r3","s_r1","onSpeciesChange","currentSpecies","ɵɵpropertyInterpolate","allSpecies","visibility","sortedSpecies","localeCompare","stIdSet","newSelectedStId","updatedParams","SpeciesComponent_Template","SpeciesComponent_mat_list_option_2_Template","objectMap","jsog","buildIdToObjectMap","resolveReferences","jsogObject","isDragged_r7","currentInteractorResource","isDragged_r8","cdRef","currentSpeciesSubscription","toggleVisibility","ViewportComponent_Query","ViewportComponent_div_3_Template","ViewportComponent_Template_div_click_10_listener","ViewportComponent_Template_div_click_19_listener","ViewportComponent_span_24_Template","ViewportComponent_Template_cr_interactors_initialiseReplaceElements_30_listener","ViewportComponent_Template_button_click_41_listener","ViewportComponent_Template_button_click_43_listener","ViewportComponent_Template_mat_slide_toggle_ngModelChange_47_listener","ViewportComponent_div_51_Template","production","__NgCli_bootstrap_1","platformBrowser","bootstrapModule","gene","disease","lossOfFunction","t","global","thickness","dHeight","decorationHeight","dWidth","decorationExtraWidth","headSize","arrowHeadSize","arrowRadius","fill","stroke","negativeContrast","selectNode","hoverNode","hh","borderRadius","oR","iR","t_2","t2","background","requireGradient","decorators","molecule","thick","ht","oRx","protein","rna","genomeEncodedEntity","complex","bottomR","bottomRadius","topR","topRadius","topOR","topIR","bottomOR","bottomIR","cut","cut2","delta","stateHeight","defs","entitySet","r2","bracesOffset","realDashLength","hidingLength","idealDashLength","dashNumber","t1_5","cell","cellThick","interactingPathway","realWidth","diseaseInteractor","negative","decorationWidth","t4","midH","subPathway","imageBuilder","memoize","time","classToDrawers","aggregate","defaultBg","provider","exps","drawerParams","crossed","drawer","RX","Pathway","CROSS","expToGradient","currentPalette","l","addGradient","svgStr","aggregated","timeEnd","svgText","single","_expToGradient","stops","notFoundColor","notFound","start","hex","resetGradients","cache","svg","viewPortWidth","viewPortHeight","encodeURIComponent","dim","clearDrawersCache","OMMITED_ICON","toAggregate","onPrimary","onSurface","setDefaults","css","getPropertyValue","compartment","parseFloat","surface","modification","structure","font","features","ReactomeEvent","CustomEvent","Layers","Interactivity","isMobile","navigator","maxTouchPoints","applyToReaction","action","stateKey","reactionNode","expandReaction","margin","ungrabify","panify","initHover","initSelect","initClick","initStructureVideo","initStructureMolecule","initZoom","hoverReaction","col","deHoverReaction","dispatchEvent","mapped","selectReaction","openClass","eventType","toggleClass","isNode","layersPlugin","videoLayer","renderPerNode","elem","render","init","innerHTML","display","video","throttle","isElementInViewport","readyState","HAVE_NOTHING","networkState","NETWORK_IDLE","oncanplay","errors","sources","removeProteinVideo","load","uniqueElements","checkBounds","selector","updateOn","queryEachTime","handler","videoId","videoElement","HAVE_ENOUGH_DATA","play","pause","baseFontSize","proteins","moleculeLayer","shadowLabels","labelOpacity","structureOpacityArray","zoomStart","zoomEnd","zoomLevel","z","shadowLabelOpacity","interpolate","trivialOpacity","shadowOpacity","videoOpacity","maxWidth","P","lerp","p0","hovering","deHovering","innerHeight","documentElement","innerWidth","getComputedStyle","pm","initSubPathwayColors","subPathways","dH","chroma","hsl","luminosity","ct"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}